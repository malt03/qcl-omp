Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 16.35      1.12     1.12  3669503     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  9.64      1.78     0.66  6291069     0.00     0.00  bitvec::bitvec(int, unsigned long)
  9.49      2.43     0.65  1048575     0.00     0.00  opMatrix::addterms(terminfo const&) const
  5.55      2.81     0.38 12582587     0.00     0.00  bitvec::~bitvec()
  4.31      3.11     0.30  2097150     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  3.94      3.38     0.27  6815255     0.00     0.00  bitvec::operator=(bitvec const&)
  3.65      3.63     0.25       46     0.01     0.01  termlist::clear()
  3.36      3.86     0.23  6291518     0.00     0.00  bitvec::bitvec(bitvec const&)
  3.07      4.07     0.21  2097173     0.00     0.00  quSubString::unmap(bitvec const&) const
  2.77      4.26     0.19  6815255     0.00     0.00  bitvec::setlen(int)
  2.48      4.43     0.17  2097173     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  2.34      4.59     0.16  3669503     0.00     0.00  term::setampl(std::complex<double> const&)
  2.26      4.74     0.16  4193825     0.00     0.00  std::complex<double>::complex(double, double)
  2.04      4.88     0.14  2097151     0.00     0.00  bitvec::operator|=(bitvec const&)
  1.90      5.01     0.13  5766652     0.00     0.00  term::ampl() const
  1.75      5.13     0.12  4188195     0.00     0.00  bitvec::hashfunct() const
  1.46      5.23     0.10 11528196     0.00     0.00  term::vect() const
  1.31      5.32     0.09  3145748     0.00     0.00  quSubString::mapoffs() const
  1.31      5.41     0.09  2097150     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  1.31      5.50     0.09       20     0.00     0.32  opElementary::apply(quState&) const
  1.17      5.58     0.08  2097173     0.00     0.00  bitvec::setbits(int, bitvec const&)
  1.02      5.65     0.07  3669526     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  1.02      5.72     0.07  3145242     0.00     0.00  term::~term()
  1.02      5.79     0.07  2097150     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  1.02      5.86     0.07  2097150     0.00     0.00  operator|(bitvec const&, bitvec const&)
  1.02      5.93     0.07  1048575     0.00     0.00  quSubString::map(bitvec const&) const
  0.88      5.99     0.06  3145948     0.00     0.00  quState::mapbits() const
  0.88      6.05     0.06  3145242     0.00     0.00  term::term()
  0.73      6.10     0.05  4718078     0.00     0.00  term::setvect(bitvec const&)
  0.73      6.15     0.05  1048575     0.00     0.00  quBaseState::baseterm(int) const
  0.66      6.20     0.05  2097150     0.00     0.00  std::complex<double>::real() const
  0.58      6.24     0.04  1048575     0.00     0.00  quBaseState::map(bitvec const&) const
  0.58      6.28     0.04  1048575     0.00     0.00  termlist::operator[](int) const
  0.58      6.32     0.04        1     0.04     0.04  _GLOBAL__sub_I_nbitvecs
  0.44      6.35     0.03  1048576     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.44      6.38     0.03  1048575     0.00     0.00  quSubState::baseterm(int) const
  0.44      6.41     0.03                             term::term(term const&)
  0.36      6.43     0.03  1048575     0.00     0.00  bitvec::getword() const
  0.29      6.45     0.02  3145728     0.00     0.00  bitvec::length() const
  0.29      6.47     0.02  2097151     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.29      6.49     0.02  2097150     0.00     0.00  std::complex<double>::imag() const
  0.29      6.51     0.02  1048577     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.29      6.53     0.02  1048575     0.00     0.00  term::operator=(term const&)
  0.29      6.55     0.02  1048575     0.00     0.00  bitvec::getbits(int, int) const
  0.29      6.57     0.02   518669     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.29      6.59     0.02       31     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.29      6.61     0.02        2     0.01     0.05  termlist::dellist()
  0.29      6.63     0.02                             bitvec::operator=(unsigned long)
  0.29      6.65     0.02                             term::nbits() const
  0.29      6.67     0.02                             bitvec::testless(bitvec const&) const
  0.22      6.69     0.02                             bitvec::getword(int, int) const
  0.22      6.70     0.02                             std::complex<double>::real()
  0.22      6.72     0.02                             std::pow(double, int)
  0.15      6.73     0.01  2097173     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.15      6.74     0.01  1572352     0.00     0.00  termlist::add(term const&)
  0.15      6.75     0.01   518669     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.15      6.76     0.01       44     0.00     0.00  operator~(bitvec const&)
  0.15      6.77     0.01       30     0.00     0.00  quSubString::newsubstring(int, int)
  0.15      6.78     0.01       21     0.00     0.01  quBaseState::opbegin()
  0.15      6.79     0.01       20     0.00     0.01  quSubState::opbegin()
  0.15      6.80     0.01       20     0.00     0.00  bitvec::operator[](int) const
  0.15      6.81     0.01        2     0.01     0.01  bitvec::testzero() const
  0.15      6.82     0.01                             bitvec::setbit(int, int)
  0.15      6.83     0.01                             termlist::nbits() const
  0.15      6.84     0.01                             std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.07      6.84     0.01        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.07      6.85     0.01                             tError::object() const
  0.07      6.85     0.01                             std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.00      6.85     0.00   518669     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.00      6.85     0.00    21427     0.00     0.00  sDef::id() const
  0.00      6.85     0.00     6456     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      6.85     0.00     4125     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      6.85     0.00     3876     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      6.85     0.00     2906     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      6.85     0.00     2338     0.00     0.00  yylex()
  0.00      6.85     0.00     1478     0.00     0.00  tType::tType(BaseType)
  0.00      6.85     0.00     1104     0.00     0.00  sArgDef::object() const
  0.00      6.85     0.00     1052     0.00     0.00  tType::ord() const
  0.00      6.85     0.00     1013     0.00     0.00  tType::basetype() const
  0.00      6.85     0.00      881     0.00     0.00  sObject::parent() const
  0.00      6.85     0.00      842     0.00     0.00  tType::operator=(tType const&)
  0.00      6.85     0.00      826     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      6.85     0.00      783     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      6.85     0.00      692     0.00     0.00  tValue::delpointer()
  0.00      6.85     0.00      692     0.00     0.00  tValue::ord() const
  0.00      6.85     0.00      692     0.00     0.00  tValue::basetype() const
  0.00      6.85     0.00      663     0.00     0.00  tValue::~tValue()
  0.00      6.85     0.00      554     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      6.85     0.00      531     0.00     0.00  tType::tType(tType const&)
  0.00      6.85     0.00      515     0.00     0.00  sObject::sObject(unsigned int)
  0.00      6.85     0.00      515     0.00     0.00  sObject::~sObject()
  0.00      6.85     0.00      455     0.00     0.00  sObject::setParent(sObject*)
  0.00      6.85     0.00      450     0.00     0.00  tType::operator=(BaseType)
  0.00      6.85     0.00      372     0.00     0.00  sDef::type() const
  0.00      6.85     0.00      370     0.00     0.00  sObject::isValueDef() const
  0.00      6.85     0.00      369     0.00     0.00  sQuOpDef::object() const
  0.00      6.85     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      6.85     0.00      365     0.00     0.00  sObject::isDef() const
  0.00      6.85     0.00      362     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      6.85     0.00      353     0.00     0.00  tValue::tValue()
  0.00      6.85     0.00      324     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      6.85     0.00      316     0.00     0.00  tValue::assign(tValue const&)
  0.00      6.85     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      6.85     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      6.85     0.00      294     0.00     0.00  sObject::isFunctDef() const
  0.00      6.85     0.00      287     0.00     0.00  tValue::tValue(tValue const&)
  0.00      6.85     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      6.85     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      6.85     0.00      264     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      6.85     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      6.85     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      6.85     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      6.85     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      6.85     0.00      253     0.00     0.00  sObject::isRoutDef() const
  0.00      6.85     0.00      176     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      6.85     0.00      167     0.00     0.00  sObject::def() const
  0.00      6.85     0.00      165     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      6.85     0.00      135     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      6.85     0.00      123     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      6.85     0.00      115     0.00     0.00  tType::isQuExpr() const
  0.00      6.85     0.00      109     0.00     0.00  sExpr::settype(tType const&)
  0.00      6.85     0.00       96     0.00     0.00  sExpr::type()
  0.00      6.85     0.00       95     0.00     0.00  sExpr::~sExpr()
  0.00      6.85     0.00       95     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      6.85     0.00       87     0.00     0.00  SymTable::SymTable()
  0.00      6.85     0.00       87     0.00     0.00  SymTable::~SymTable()
  0.00      6.85     0.00       86     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      6.85     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      6.85     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      6.85     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      6.85     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      6.85     0.00       82     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      6.85     0.00       82     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      6.85     0.00       82     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      6.85     0.00       82     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      6.85     0.00       79     0.00     0.00  sVarDef::object() const
  0.00      6.85     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      6.85     0.00       77     0.00     0.00  SymTab::SymTab(int)
  0.00      6.85     0.00       77     0.00     0.00  SymTab::~SymTab()
  0.00      6.85     0.00       74     0.00     0.00  sExpr::sExpr()
  0.00      6.85     0.00       73     0.00     0.00  sObject::isExtern() const
  0.00      6.85     0.00       63     0.00     0.00  tValue::type() const
  0.00      6.85     0.00       62     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      6.85     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      6.85     0.00       52     0.00     0.00  sVar::id() const
  0.00      6.85     0.00       48     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      6.85     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      6.85     0.00       46     0.00     0.00  bitvec::qnot()
  0.00      6.85     0.00       44     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       44     0.00     0.00  sVar::sVar(std::string*)
  0.00      6.85     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      6.85     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      6.85     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      6.85     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      6.85     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      6.85     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      6.85     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      6.85     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      6.85     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      6.85     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      6.85     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      6.85     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      6.85     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      6.85     0.00       42     0.00     0.00  operator new(unsigned long, void*)
  0.00      6.85     0.00       41     0.00     0.00  quState::newclone()
  0.00      6.85     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      6.85     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      6.85     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      6.85     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      6.85     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      6.85     0.00       41     0.00     0.00  sObject::isInclude() const
  0.00      6.85     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      6.85     0.00       41     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      6.85     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      6.85     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      6.85     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      6.85     0.00       37     0.00     0.00  sRoutDef::args()
  0.00      6.85     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      6.85     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      6.85     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      6.85     0.00       36     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      6.85     0.00       35     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      6.85     0.00       34     0.00     0.00  sDefList::object() const
  0.00      6.85     0.00       32     0.00     0.00  quState::quState(int)
  0.00      6.85     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      6.85     0.00       31     0.00     0.00  quSubState::quSubState(int)
  0.00      6.85     0.00       31     0.00     0.00  quState::~quState()
  0.00      6.85     0.00       30     0.00     0.00  quSubState::~quSubState()
  0.00      6.85     0.00       30     0.00     0.00  quSubString::~quSubString()
  0.00      6.85     0.00       30     0.00     0.00  quSubString::~quSubString()
  0.00      6.85     0.00       30     0.00     0.00  quBaseState::isbasestate() const
  0.00      6.85     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      6.85     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      6.85     0.00       29     0.00     0.00  tValue::operator=(tValue const&)
  0.00      6.85     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      6.85     0.00       28     0.00     0.00  sObject::isCondDef() const
  0.00      6.85     0.00       27     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      6.85     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      6.85     0.00       25     0.00     0.02  termlist::newlist()
  0.00      6.85     0.00       25     0.00     0.00  tType::isQuConst() const
  0.00      6.85     0.00       24     0.00     0.00  sStmt::sStmt(int)
  0.00      6.85     0.00       24     0.00     0.00  sStmt::~sStmt()
  0.00      6.85     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      6.85     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      6.85     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      6.85     0.00       23     0.00     0.00  quState::mapmask() const
  0.00      6.85     0.00       22     0.00     0.00  sList<sExpr>::sList()
  0.00      6.85     0.00       22     0.00     0.00  sList<sExpr>::~sList()
  0.00      6.85     0.00       22     0.00     0.00  sExprList::sExprList()
  0.00      6.85     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      6.85     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      6.85     0.00       22     0.00     0.00  sObject::isQuOpDef() const
  0.00      6.85     0.00       21     0.00     0.00  quBaseState::opend()
  0.00      6.85     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      6.85     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      6.85     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      6.85     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      6.85     0.00       21     0.00     0.00  sIf::object() const
  0.00      6.85     0.00       21     0.00     0.00  tType::isInt() const
  0.00      6.85     0.00       21     0.00     0.00  tType::isConv(tType const&) const
  0.00      6.85     0.00       20     0.00     0.00  quSubState::opend()
  0.00      6.85     0.00       20     0.00     0.00  terminfo::terminfo()
  0.00      6.85     0.00       20     0.00     0.00  terminfo::~terminfo()
  0.00      6.85     0.00       20     0.00     0.00  quSubState::baseterms() const
  0.00      6.85     0.00       20     0.00     0.00  quBaseState::baseterms() const
  0.00      6.85     0.00       20     0.00     0.00  termlist::nterms() const
  0.00      6.85     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      6.85     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      6.85     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      6.85     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      6.85     0.00       19     0.00     0.00  sObject::inFunctDef() const
  0.00      6.85     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      6.85     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      6.85     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      6.85     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      6.85     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      6.85     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      6.85     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      6.85     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      6.85     0.00       18     0.00     0.00  sObject::inQuDef() const
  0.00      6.85     0.00       18     0.00     0.00  sObject::isQuDef() const
  0.00      6.85     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      6.85     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      6.85     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      6.85     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      6.85     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      6.85     0.00       15     0.00     0.00  sFor::object() const
  0.00      6.85     0.00       15     0.00     0.00  sCall::id() const
  0.00      6.85     0.00       14     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       14     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      6.85     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      6.85     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      6.85     0.00       14     0.00     0.00  tType::isCond() const
  0.00      6.85     0.00       14     0.00     0.00  sObject::inQuFunDef() const
  0.00      6.85     0.00       14     0.00     0.00  sObject::isProcDef() const
  0.00      6.85     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00       13     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      6.85     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      6.85     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      6.85     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      6.85     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      6.85     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      6.85     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      6.85     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      6.85     0.00       10     0.00     0.00  quSubState::isbasestate() const
  0.00      6.85     0.00        9     0.00     0.00  sMult::object() const
  0.00      6.85     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      6.85     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      6.85     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        8     0.00     0.00  sCall::object() const
  0.00      6.85     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      6.85     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      6.85     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      6.85     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      6.85     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      6.85     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      6.85     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      6.85     0.00        7     0.00     0.00  tType::operator==(tType const&) const
  0.00      6.85     0.00        7     0.00     0.00  tValue::isQuExpr() const
  0.00      6.85     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      6.85     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      6.85     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      6.85     0.00        6     0.00     0.00  tType::isError() const
  0.00      6.85     0.00        6     0.00     0.00  tValue::isError() const
  0.00      6.85     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      6.85     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      6.85     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      6.85     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      6.85     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      6.85     0.00        5     0.00     0.00  tValue::qustate() const
  0.00      6.85     0.00        5     0.00     0.00  sObject::isGlobal() const
  0.00      6.85     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      6.85     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      6.85     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      6.85     0.00        4     0.00     0.00  yyparse()
  0.00      6.85     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      6.85     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      6.85     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      6.85     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      6.85     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      6.85     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      6.85     0.00        4     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      6.85     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      6.85     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      6.85     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      6.85     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      6.85     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      6.85     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      6.85     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      6.85     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      6.85     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      6.85     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      6.85     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      6.85     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      6.85     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      6.85     0.00        4     0.00     0.00  sLess::object() const
  0.00      6.85     0.00        4     0.00     0.00  sLength::object() const
  0.00      6.85     0.00        4     0.00     0.00  sObject::isConstDef() const
  0.00      6.85     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      6.85     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      6.85     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      6.85     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      6.85     0.00        4     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      6.85     0.00        4     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      6.85     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      6.85     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      6.85     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      6.85     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      6.85     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      6.85     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        3     0.00     0.00  sEqual::object() const
  0.00      6.85     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      6.85     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      6.85     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      6.85     0.00        2     0.00     0.01  zero(bitvec const&)
  0.00      6.85     0.00        2     0.00     0.00  irqOn()
  0.00      6.85     0.00        2     0.00     0.00  duallog(int)
  0.00      6.85     0.00        2     0.00     3.24  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      6.85     0.00        2     0.00     3.24  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      6.85     0.00        2     0.00     0.00  parseobj()
  0.00      6.85     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      6.85     0.00        2     0.00     0.00  yyCleanUp()
  0.00      6.85     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      6.85     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      6.85     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      6.85     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      6.85     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      6.85     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      6.85     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      6.85     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      6.85     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      6.85     0.00        2     0.00     0.00  objlist::objlist()
  0.00      6.85     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      6.85     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      6.85     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      6.85     0.00        2     0.00     0.03  termlist::termlist(int, int)
  0.00      6.85     0.00        2     0.00     0.05  termlist::~termlist()
  0.00      6.85     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      6.85     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      6.85     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      6.85     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      6.85     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      6.85     0.00        2     0.00     0.00  sSub::object() const
  0.00      6.85     0.00        2     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      6.85     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      6.85     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      6.85     0.00        2     0.00     0.00  sConcat::object() const
  0.00      6.85     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      6.85     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      6.85     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      6.85     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      6.85     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      6.85     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      6.85     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      6.85     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      6.85     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      6.85     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      6.85     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      6.85     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      6.85     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      6.85     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      6.85     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      6.85     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      6.85     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      6.85     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      6.85     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      6.85     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      6.85     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      6.85     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      6.85     0.00        1     0.00     0.00  initialize_readline()
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      6.85     0.00        1     0.00     6.44  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      6.85     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      6.85     0.00        1     0.00     0.00  qc_srand(long)
  0.00      6.85     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      6.85     0.00        1     0.00     0.00  opOperator::opOperator(int)
  0.00      6.85     0.00        1     0.00     0.00  opOperator::~opOperator()
  0.00      6.85     0.00        1     0.00     0.01  quBaseState::reset(bitvec const&)
  0.00      6.85     0.00        1     0.00     0.06  quBaseState::quBaseState(int, int)
  0.00      6.85     0.00        1     0.00     0.10  quBaseState::~quBaseState()
  0.00      6.85     0.00        1     0.00     0.10  quBaseState::~quBaseState()
  0.00      6.85     0.00        1     0.00     0.00  opElementary::opElementary(int)
  0.00      6.85     0.00        1     0.00     0.00  opElementary::~opElementary()
  0.00      6.85     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      6.85     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      6.85     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      6.85     0.00        1     0.00     0.00  sDef::basetype()
  0.00      6.85     0.00        1     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      6.85     0.00        1     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      6.85     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      6.85     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      6.85     0.00        1     0.00     6.45  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      6.85     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      6.85     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      6.85     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      6.85     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      6.85     0.00        1     0.00     6.44  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      6.85     0.00        1     0.00     0.00  QuHeap::init()
  0.00      6.85     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      6.85     0.00        1     0.00     0.01  QuHeap::qualloc(int, BaseType)
  0.00      6.85     0.00        1     0.00     6.44  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      6.85     0.00        1     0.00     0.06  QuHeap::QuHeap(int, int)
  0.00      6.85     0.00        1     0.00     0.10  QuHeap::~QuHeap()
  0.00      6.85     0.00        1     0.00     0.00  SymTab::~SymTab()
  0.00      6.85     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      6.85     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      6.85     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      6.85     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      6.85     0.00        1     0.00     0.01  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      6.85     0.00        1     0.00     0.00  opMatrix::opMatrix(int)
  0.00      6.85     0.00        1     0.00     0.00  opMatrix::~opMatrix()
  0.00      6.85     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      6.85     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      6.85     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      6.85     0.00        1     0.00     6.44  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      6.85     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      6.85     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      6.85     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      6.85     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      6.85     0.00        1     0.00     0.00  sOr::object() const
  0.00      6.85     0.00        1     0.00     0.00  sStmt::isInv() const
  0.00      6.85     0.00        1     0.00     0.00  tType::isExpr() const
  0.00      6.85     0.00        1     0.00     0.00  tType::isString() const
  0.00      6.85     0.00        1     0.00     0.00  QuHeap::cond() const
  0.00      6.85     0.00        1     0.00     0.00  QuHeap::cmask() const
  0.00      6.85     0.00        1     0.00     0.00  QuHeap::nBits() const
  0.00      6.85     0.00        1     0.00     0.00  QuHeap::ncond() const
  0.00      6.85     0.00        1     0.00     0.00  tValue::conv(tType const&) const
  0.00      6.85     0.00        1     0.00     0.00  tValue::isExpr() const
  0.00      6.85     0.00        1     0.00     0.00  sObject::isStmt() const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      6.85     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      6.85     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      6.85     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      6.85     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      6.85     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      6.85     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      6.85     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      6.85     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      6.85     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      6.85     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.15% of 6.85 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     96.9    0.00    6.64                 main [1]
                0.00    6.47       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.10       1/1           QuHeap::~QuHeap() [43]
                0.00    0.06       1/1           QuHeap::QuHeap(int, int) [56]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [95]
                0.00    0.00       2/77          SymTab::SymTab(int) [204]
                0.00    0.00       2/77          SymTab::~SymTab() [205]
                0.00    0.00       1/1           initialize_readline() [467]
                0.00    0.00       1/1           parseopt(int, char**) [491]
-----------------------------------------------
                0.00    6.47       2/2           main [1]
[2]     94.5    0.00    6.47       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    6.47       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       4/4           openqclfile(std::string) [98]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [107]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [359]
-----------------------------------------------
                0.00    6.47       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     94.5    0.00    6.47       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    6.45       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.01       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.01      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00       2/2           parseobj() [106]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [224]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [242]
                0.00    0.00      41/41          sObject::isInclude() const [235]
                0.00    0.00      41/365         sObject::isDef() const [166]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [245]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       1/14          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       1/1           sObject::isStmt() const [533]
                0.00    0.00       1/14          sCall::~sCall() [316]
-----------------------------------------------
                0.00    6.45       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     94.1    0.00    6.45       1         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    6.44       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.01       2/2           zero(bitvec const&) [84]
                0.00    0.00       2/23          quState::mapmask() const [94]
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       1/1           tValue::conv(tType const&) const [117]
                0.00    0.00       1/29          tValue::operator=(tValue const&) [102]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00       5/12582587     bitvec::~bitvec() [21]
                0.00    0.00       1/1           QuHeap::cmask() const [129]
                0.00    0.00       1/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00       1/1048576     operator&(bitvec const&, bitvec const&) [51]
                0.00    0.00       1/2097151     bitvec::operator|=(bitvec const&) [35]
                0.00    0.00       1/3145948     quState::mapbits() const [54]
                0.00    0.00       1/1           QuHeap::cond() const [131]
                0.00    0.00       3/663         tValue::~tValue() [155]
                0.00    0.00       3/5           tValue::qustate() const [356]
                0.00    0.00       2/37          sRoutDef::args() [247]
                0.00    0.00       1/1           QuHeap::nBits() const [531]
                0.00    0.00       1/353         tValue::tValue() [168]
                0.00    0.00       1/15          sCall::id() const [313]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00       1/14          sObject::isProcDef() const [320]
                0.00    0.00       1/18          sObject::isQuDef() const [306]
                0.00    0.00       1/77          SymTab::SymTab(int) [204]
                0.00    0.00       1/35          sList<sExpr>::first(void*&) const [251]
                0.00    0.00       1/95          sList<sDef>::first(void*&) const [190]
                0.00    0.00       1/372         sDef::type() const [162]
                0.00    0.00       1/6           tValue::isError() const [350]
                0.00    0.00       1/7           tValue::isQuExpr() const [345]
                0.00    0.00       1/36          sList<sExpr>::next(void*&) const [250]
                0.00    0.00       1/554         sList<sDef>::next(void*&) const [156]
                0.00    0.00       1/28          sObject::isCondDef() const [264]
                0.00    0.00       1/1           sStmt::isInv() const [528]
-----------------------------------------------
                0.00    6.44       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
[5]     94.0    0.00    6.44       1         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.09    6.33      20/20          opElementary::apply(quState&) const [9]
                0.02    0.00      20/31          quSubString::newsubstring(int, int) <cycle 5> [82]
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
                0.00    0.00      21/3145948     quState::mapbits() const [54]
                0.00    0.00       1/1           opBit::~opBit() [125]
                0.00    0.00       6/4193825     std::complex<double>::complex(double, double) [34]
                0.00    0.00      20/30          quSubString::~quSubString() [258]
                0.00    0.00       2/21427       sDef::id() const [139]
                0.00    0.00       1/264         SymTab::getRef(std::string const&, ObjType*) const [174]
                0.00    0.00       1/7           tValue::isQuExpr() const [345]
                0.00    0.00       1/5           tValue::qustate() const [356]
-----------------------------------------------
                0.00    6.44       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[6]     94.0    0.00    6.44       1         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    6.44       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.00       1/28          sObject::isCondDef() const [264]
-----------------------------------------------
                0.00    6.44       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
[7]     94.0    0.00    6.44       1         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    6.44       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/1           SymTab::~SymTab() [507]
-----------------------------------------------
                0.00    6.44       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[8]     94.0    0.00    6.44       1         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    6.44       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/353         tValue::tValue() [168]
                0.00    0.00       1/73          sObject::isExtern() const [207]
                0.00    0.00       1/663         tValue::~tValue() [155]
-----------------------------------------------
                0.09    6.33      20/20          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[9]     93.7    0.09    6.33      20         opElementary::apply(quState&) const [9]
                0.65    4.62 1048575/1048575     opMatrix::addterms(terminfo const&) const [10]
                0.07    0.29 1048575/1048575     quSubString::map(bitvec const&) const [23]
                0.01    0.12      20/20          quSubState::opbegin() [38]
                0.02    0.10 1048575/1048575     term::operator=(term const&) [40]
                0.03    0.09 1048575/1048575     quSubState::baseterm(int) const [42]
                0.03    0.06 1048575/1048576     operator&(bitvec const&, bitvec const&) [51]
                0.01    0.07 1048575/4718078     term::setvect(bitvec const&) [22]
                0.04    0.03 1048595/6815255     bitvec::operator=(bitvec const&) [19]
                0.06    0.00 2097210/12582587     bitvec::~bitvec() [21]
                0.02    0.00 2097150/11528196     term::vect() const [48]
                0.00    0.00      20/23          quState::mapmask() const [94]
                0.00    0.00      20/44          operator~(bitvec const&) [81]
                0.00    0.00      20/20          terminfo::terminfo() [120]
                0.00    0.00      20/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00      20/20          terminfo::~terminfo() [123]
                0.00    0.00      20/3145948     quState::mapbits() const [54]
                0.00    0.00      20/20          quSubState::baseterms() const [287]
                0.00    0.00      20/20          quSubState::opend() [286]
-----------------------------------------------
                0.65    4.62 1048575/1048575     opElementary::apply(quState&) const [9]
[10]    76.9    0.65    4.62 1048575         opMatrix::addterms(terminfo const&) const [10]
                0.07    2.54 2097150/2097150     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.21    0.72 2097150/2097173     quSubString::unmap(bitvec const&) const [15]
                0.09    0.36 2097150/2097150     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
                0.07    0.22 2097150/2097150     operator|(bitvec const&, bitvec const&) [25]
                0.13    0.00 4194300/12582587     bitvec::~bitvec() [21]
                0.07    0.00 3145725/5766652     term::ampl() const [37]
                0.05    0.00 6291450/11528196     term::vect() const [48]
                0.04    0.00 1048575/4193825     std::complex<double>::complex(double, double) [34]
                0.03    0.00 1048575/1048575     bitvec::getword() const [65]
                0.02    0.00 3145725/3145728     bitvec::length() const [67]
-----------------------------------------------
                0.07    2.54 2097150/2097150     opMatrix::addterms(terminfo const&) const [10]
[11]    38.2    0.07    2.54 2097150         quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.02    2.52 2097150/2097151     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
-----------------------------------------------
                0.00    0.00       1/2097151     quBaseState::reset(bitvec const&) [93]
                0.02    2.52 2097150/2097151     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
[12]    37.1    0.02    2.52 2097151         quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                1.13    1.39 2097151/2097151     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
[13]    36.8    1.13    1.39 2097151+3144704 <cycle 4 as a whole> [13]
                1.12    1.34 3669503+23          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.01    0.05 1572352             termlist::add(term const&) <cycle 4> [55]
-----------------------------------------------
                                  23             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                             1572352             termlist::add(term const&) <cycle 4> [55]
                1.13    1.39 2097151/2097151     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
[14]    36.0    1.12    1.34 3669503+23      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.47      23/25          termlist::newlist() [18]
                0.04    0.25 3669503/4718078     term::setvect(bitvec const&) [22]
                0.07    0.11 3669526/3669526     termlist::hashfunct1(bitvec const&) const [30]
                0.16    0.00 3669503/3669503     term::setampl(std::complex<double> const&) [33]
                0.13    0.00      23/46          termlist::clear() [27]
                0.03    0.05 1572352/3145242     term::~term() [32]
                0.01    0.01  518669/518669      termlist::hashfunct2(bitvec const&) const [66]
                0.00    0.02  518669/518669      operator==(bitvec const&, bitvec const&) [71]
                0.00    0.00  518669/11528196     term::vect() const [48]
                             1572352             termlist::add(term const&) <cycle 4> [55]
                                  23             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00      23/2097173     quState::mapmask() const [94]
                0.21    0.72 2097150/2097173     opMatrix::addterms(terminfo const&) const [10]
[15]    13.6    0.21    0.72 2097173         quSubString::unmap(bitvec const&) const [15]
                0.08    0.17 2097173/2097173     bitvec::setbits(int, bitvec const&) [26]
                0.22    0.00 2097173/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.01    0.08 2097173/2097173     quBaseState::unmap(bitvec const&) const [52]
                0.06    0.00 2097173/12582587     bitvec::~bitvec() [21]
                0.06    0.00 2097173/3145748     quSubString::mapoffs() const [49]
                0.04    0.00 2097173/3145948     quState::mapbits() const [54]
-----------------------------------------------
                0.00    0.00       1/6291069     QuHeap::cmask() const [129]
                0.00    0.00       1/6291069     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/6291069     quBaseState::reset(bitvec const&) [93]
                0.00    0.00       1/6291069     quBaseState::quBaseState(int, int) [57]
                0.00    0.00       4/6291069     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
                0.00    0.00       8/6291069     QuHeap::QuHeap(int, int) [56]
                0.00    0.00      20/6291069     opElementary::apply(quState&) const [9]
                0.00    0.00      20/6291069     terminfo::terminfo() [120]
                0.00    0.00      23/6291069     quState::mapmask() const [94]
                0.11    0.00 1048575/6291069     bitvec::getbits(int, int) const [36]
                0.22    0.00 2097173/6291069     quSubString::unmap(bitvec const&) const [15]
                0.33    0.00 3145242/6291069     term::term() [17]
[16]     9.6    0.66    0.00 6291069         bitvec::bitvec(int, unsigned long) [16]
-----------------------------------------------
                0.00    0.00       6/3145242     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
                0.00    0.00      20/3145242     terminfo::terminfo() [120]
                0.06    0.45 3145216/3145242     termlist::newlist() [18]
[17]     7.4    0.06    0.45 3145242         term::term() [17]
                0.33    0.00 3145242/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.12    0.00 3145242/4193825     std::complex<double>::complex(double, double) [34]
-----------------------------------------------
                0.00    0.04       2/25          termlist::termlist(int, int) [58]
                0.00    0.47      23/25          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[18]     7.4    0.00    0.51      25         termlist::newlist() [18]
                0.06    0.45 3145216/3145242     term::term() [17]
-----------------------------------------------
                0.00    0.00       3/6815255     QuHeap::QuHeap(int, int) [56]
                0.00    0.00       4/6815255     term::set(bitvec const&, std::complex<double> const&) [128]
                0.04    0.03 1048575/6815255     term::operator=(term const&) [40]
                0.04    0.03 1048595/6815255     opElementary::apply(quState&) const [9]
                0.19    0.13 4718078/6815255     term::setvect(bitvec const&) [22]
[19]     6.7    0.27    0.19 6815255         bitvec::operator=(bitvec const&) [19]
                0.19    0.00 6815255/6815255     bitvec::setlen(int) [29]
-----------------------------------------------
                0.09    0.36 2097150/2097150     opMatrix::addterms(terminfo const&) const [10]
[20]     6.6    0.09    0.36 2097150         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
                0.30    0.07 2097150/2097150     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
-----------------------------------------------
                0.00    0.00       1/12582587     quBaseState::reset(bitvec const&) [93]
                0.00    0.00       1/12582587     quBaseState::quBaseState(int, int) [57]
                0.00    0.00       2/12582587     QuHeap::qualloc(int, BaseType) [80]
                0.00    0.00       3/12582587     QuHeap::QuHeap(int, int) [56]
                0.00    0.00       4/12582587     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
                0.00    0.00       5/12582587     QuHeap::~QuHeap() [43]
                0.00    0.00       5/12582587     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      20/12582587     terminfo::~terminfo() [123]
                0.00    0.00      46/12582587     quState::mapmask() const [94]
                0.03    0.00 1048575/12582587     quSubString::map(bitvec const&) const [23]
                0.06    0.00 2097173/12582587     quSubString::unmap(bitvec const&) const [15]
                0.06    0.00 2097210/12582587     opElementary::apply(quState&) const [9]
                0.09    0.00 3145242/12582587     term::~term() [32]
                0.13    0.00 4194300/12582587     opMatrix::addterms(terminfo const&) const [10]
[21]     5.5    0.38    0.00 12582587         bitvec::~bitvec() [21]
-----------------------------------------------
                0.01    0.07 1048575/4718078     opElementary::apply(quState&) const [9]
                0.04    0.25 3669503/4718078     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[22]     5.4    0.05    0.32 4718078         term::setvect(bitvec const&) [22]
                0.19    0.13 4718078/6815255     bitvec::operator=(bitvec const&) [19]
-----------------------------------------------
                0.07    0.29 1048575/1048575     opElementary::apply(quState&) const [9]
[23]     5.3    0.07    0.29 1048575         quSubString::map(bitvec const&) const [23]
                0.02    0.11 1048575/1048575     bitvec::getbits(int, int) const [36]
                0.04    0.04 1048575/1048575     quBaseState::map(bitvec const&) const [53]
                0.03    0.00 1048575/12582587     bitvec::~bitvec() [21]
                0.03    0.00 1048575/3145748     quSubString::mapoffs() const [49]
                0.02    0.00 1048575/3145948     quState::mapbits() const [54]
-----------------------------------------------
                0.30    0.07 2097150/2097150     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
[24]     5.3    0.30    0.07 2097150         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
                0.05    0.00 2097150/2097150     std::complex<double>::real() const [59]
                0.02    0.00 2097150/2097150     std::complex<double>::imag() const [68]
-----------------------------------------------
                0.07    0.22 2097150/2097150     opMatrix::addterms(terminfo const&) const [10]
[25]     4.2    0.07    0.22 2097150         operator|(bitvec const&, bitvec const&) [25]
                0.14    0.00 2097150/2097151     bitvec::operator|=(bitvec const&) [35]
                0.08    0.00 2097150/6291518     bitvec::bitvec(bitvec const&) [28]
-----------------------------------------------
                0.08    0.17 2097173/2097173     quSubString::unmap(bitvec const&) const [15]
[26]     3.6    0.08    0.17 2097173         bitvec::setbits(int, bitvec const&) [26]
                0.17    0.00 2097173/2097173     bitvec::setbits(int, int, unsigned long) [31]
-----------------------------------------------
                0.01    0.00       2/46          termlist::termlist(int, int) [58]
                0.11    0.00      21/46          quBaseState::opbegin() [39]
                0.13    0.00      23/46          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[27]     3.6    0.25    0.00      46         termlist::clear() [27]
-----------------------------------------------
                0.00    0.00      44/6291518     operator~(bitvec const&) [81]
                0.04    0.00 1048575/6291518     quBaseState::map(bitvec const&) const [53]
                0.04    0.00 1048576/6291518     operator&(bitvec const&, bitvec const&) [51]
                0.08    0.00 2097150/6291518     operator|(bitvec const&, bitvec const&) [25]
                0.08    0.00 2097173/6291518     quBaseState::unmap(bitvec const&) const [52]
[28]     3.4    0.23    0.00 6291518         bitvec::bitvec(bitvec const&) [28]
-----------------------------------------------
                0.19    0.00 6815255/6815255     bitvec::operator=(bitvec const&) [19]
[29]     2.8    0.19    0.00 6815255         bitvec::setlen(int) [29]
-----------------------------------------------
                0.07    0.11 3669526/3669526     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[30]     2.6    0.07    0.11 3669526         termlist::hashfunct1(bitvec const&) const [30]
                0.11    0.00 3669526/4188195     bitvec::hashfunct() const [41]
-----------------------------------------------
                0.17    0.00 2097173/2097173     bitvec::setbits(int, bitvec const&) [26]
[31]     2.5    0.17    0.00 2097173         bitvec::setbits(int, int, unsigned long) [31]
-----------------------------------------------
                0.00    0.00       6/3145242     opMatrix::~opMatrix() [127]
                0.00    0.00      20/3145242     terminfo::~terminfo() [123]
                0.03    0.05 1572352/3145242     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.04    0.05 1572864/3145242     termlist::dellist() [44]
[32]     2.4    0.07    0.09 3145242         term::~term() [32]
                0.09    0.00 3145242/12582587     bitvec::~bitvec() [21]
-----------------------------------------------
                0.16    0.00 3669503/3669503     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[33]     2.3    0.16    0.00 3669503         term::setampl(std::complex<double> const&) [33]
-----------------------------------------------
                0.00    0.00       1/4193825     yylex() [104]
                0.00    0.00       1/4193825     quBaseState::reset(bitvec const&) [93]
                0.00    0.00       6/4193825     ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.04    0.00 1048575/4193825     opMatrix::addterms(terminfo const&) const [10]
                0.12    0.00 3145242/4193825     term::term() [17]
[34]     2.3    0.16    0.00 4193825         std::complex<double>::complex(double, double) [34]
-----------------------------------------------
                0.00    0.00       1/2097151     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.14    0.00 2097150/2097151     operator|(bitvec const&, bitvec const&) [25]
[35]     2.0    0.14    0.00 2097151         bitvec::operator|=(bitvec const&) [35]
-----------------------------------------------
                0.02    0.11 1048575/1048575     quSubString::map(bitvec const&) const [23]
[36]     1.9    0.02    0.11 1048575         bitvec::getbits(int, int) const [36]
                0.11    0.00 1048575/6291069     bitvec::bitvec(int, unsigned long) [16]
-----------------------------------------------
                0.02    0.00 1048575/5766652     term::operator=(term const&) [40]
                0.04    0.00 1572352/5766652     termlist::add(term const&) <cycle 4> [55]
                0.07    0.00 3145725/5766652     opMatrix::addterms(terminfo const&) const [10]
[37]     1.9    0.13    0.00 5766652         term::ampl() const [37]
-----------------------------------------------
                0.01    0.12      20/20          opElementary::apply(quState&) const [9]
[38]     1.9    0.01    0.12      20         quSubState::opbegin() [38]
                0.01    0.11      20/21          quBaseState::opbegin() [39]
-----------------------------------------------
                0.00    0.01       1/21          quBaseState::reset(bitvec const&) [93]
                0.01    0.11      20/21          quSubState::opbegin() [38]
[39]     1.8    0.01    0.11      21         quBaseState::opbegin() [39]
                0.11    0.00      21/46          termlist::clear() [27]
-----------------------------------------------
                0.02    0.10 1048575/1048575     opElementary::apply(quState&) const [9]
[40]     1.8    0.02    0.10 1048575         term::operator=(term const&) [40]
                0.04    0.03 1048575/6815255     bitvec::operator=(bitvec const&) [19]
                0.02    0.00 1048575/5766652     term::ampl() const [37]
                0.01    0.00 1048575/11528196     term::vect() const [48]
-----------------------------------------------
                0.01    0.00  518669/4188195     termlist::hashfunct2(bitvec const&) const [66]
                0.11    0.00 3669526/4188195     termlist::hashfunct1(bitvec const&) const [30]
[41]     1.8    0.12    0.00 4188195         bitvec::hashfunct() const [41]
-----------------------------------------------
                0.03    0.09 1048575/1048575     opElementary::apply(quState&) const [9]
[42]     1.8    0.03    0.09 1048575         quSubState::baseterm(int) const [42]
                0.05    0.04 1048575/1048575     quBaseState::baseterm(int) const [50]
-----------------------------------------------
                0.00    0.10       1/1           main [1]
[43]     1.5    0.00    0.10       1         QuHeap::~QuHeap() [43]
                0.00    0.10       1/1           quBaseState::~quBaseState() [46]
                0.00    0.00       5/12582587     bitvec::~bitvec() [21]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [429]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [540]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [537]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [568]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [570]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [574]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [572]
-----------------------------------------------
                0.02    0.08       2/2           termlist::~termlist() [45]
[44]     1.5    0.02    0.08       2         termlist::dellist() [44]
                0.04    0.05 1572864/3145242     term::~term() [32]
-----------------------------------------------
                0.00    0.10       2/2           quBaseState::~quBaseState() [47]
[45]     1.5    0.00    0.10       2         termlist::~termlist() [45]
                0.02    0.08       2/2           termlist::dellist() [44]
-----------------------------------------------
                0.00    0.10       1/1           QuHeap::~QuHeap() [43]
[46]     1.5    0.00    0.10       1         quBaseState::~quBaseState() [46]
                0.00    0.10       1/1           quBaseState::~quBaseState() [47]
-----------------------------------------------
                0.00    0.10       1/1           quBaseState::~quBaseState() [46]
[47]     1.5    0.00    0.10       1         quBaseState::~quBaseState() [47]
                0.00    0.10       2/2           termlist::~termlist() [45]
                0.00    0.00       1/31          quState::~quState() [256]
-----------------------------------------------
                0.00    0.00  518669/11528196     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.01    0.00 1048575/11528196     term::operator=(term const&) [40]
                0.01    0.00 1572352/11528196     termlist::add(term const&) <cycle 4> [55]
                0.02    0.00 2097150/11528196     opElementary::apply(quState&) const [9]
                0.05    0.00 6291450/11528196     opMatrix::addterms(terminfo const&) const [10]
[48]     1.5    0.10    0.00 11528196         term::vect() const [48]
-----------------------------------------------
                0.03    0.00 1048575/3145748     quSubString::map(bitvec const&) const [23]
                0.06    0.00 2097173/3145748     quSubString::unmap(bitvec const&) const [15]
[49]     1.3    0.09    0.00 3145748         quSubString::mapoffs() const [49]
-----------------------------------------------
                0.05    0.04 1048575/1048575     quSubState::baseterm(int) const [42]
[50]     1.3    0.05    0.04 1048575         quBaseState::baseterm(int) const [50]
                0.04    0.00 1048575/1048575     termlist::operator[](int) const [60]
-----------------------------------------------
                0.00    0.00       1/1048576     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.03    0.06 1048575/1048576     opElementary::apply(quState&) const [9]
[51]     1.3    0.03    0.06 1048576         operator&(bitvec const&, bitvec const&) [51]
                0.04    0.00 1048576/6291518     bitvec::bitvec(bitvec const&) [28]
                0.02    0.00 1048576/1048577     bitvec::operator&=(bitvec const&) [69]
-----------------------------------------------
                0.01    0.08 2097173/2097173     quSubString::unmap(bitvec const&) const [15]
[52]     1.3    0.01    0.08 2097173         quBaseState::unmap(bitvec const&) const [52]
                0.08    0.00 2097173/6291518     bitvec::bitvec(bitvec const&) [28]
-----------------------------------------------
                0.04    0.04 1048575/1048575     quSubString::map(bitvec const&) const [23]
[53]     1.1    0.04    0.04 1048575         quBaseState::map(bitvec const&) const [53]
                0.04    0.00 1048575/6291518     bitvec::bitvec(bitvec const&) [28]
-----------------------------------------------
                0.00    0.00       1/3145948     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/3145948     quBaseState::basebits() const [130]
                0.00    0.00      20/3145948     opElementary::apply(quState&) const [9]
                0.00    0.00      21/3145948     ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      23/3145948     quState::mapmask() const [94]
                0.00    0.00      41/3145948     quState::newclone() <cycle 5> [124]
                0.00    0.00      93/3145948     quBaseState::newsubstring(int, int) <cycle 5> [122]
                0.02    0.00 1048575/3145948     quSubString::map(bitvec const&) const [23]
                0.04    0.00 2097173/3145948     quSubString::unmap(bitvec const&) const [15]
[54]     0.9    0.06    0.00 3145948         quState::mapbits() const [54]
-----------------------------------------------
                             1572352             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[55]     0.9    0.01    0.05 1572352         termlist::add(term const&) <cycle 4> [55]
                0.04    0.00 1572352/5766652     term::ampl() const [37]
                0.01    0.00 1572352/11528196     term::vect() const [48]
                             1572352             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.06       1/1           main [1]
[56]     0.8    0.00    0.06       1         QuHeap::QuHeap(int, int) [56]
                0.00    0.06       1/1           quBaseState::quBaseState(int, int) [57]
                0.00    0.00       8/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00       3/6815255     bitvec::operator=(bitvec const&) [19]
                0.00    0.00       3/12582587     bitvec::~bitvec() [21]
                0.00    0.00       2/46          bitvec::qnot() [213]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [571]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [573]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [569]
                0.00    0.00       1/1           QuHeap::init() [506]
-----------------------------------------------
                0.00    0.06       1/1           QuHeap::QuHeap(int, int) [56]
[57]     0.8    0.00    0.06       1         quBaseState::quBaseState(int, int) [57]
                0.00    0.05       2/2           termlist::termlist(int, int) [58]
                0.00    0.01       1/1           quBaseState::reset(bitvec const&) [93]
                0.00    0.00       1/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00       1/12582587     bitvec::~bitvec() [21]
                0.00    0.00       1/32          quState::quState(int) [253]
-----------------------------------------------
                0.00    0.05       2/2           quBaseState::quBaseState(int, int) [57]
[58]     0.7    0.00    0.05       2         termlist::termlist(int, int) [58]
                0.00    0.04       2/25          termlist::newlist() [18]
                0.01    0.00       2/46          termlist::clear() [27]
                0.00    0.00       2/2           duallog(int) [400]
-----------------------------------------------
                0.05    0.00 2097150/2097150     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[59]     0.7    0.05    0.00 2097150         std::complex<double>::real() const [59]
-----------------------------------------------
                0.04    0.00 1048575/1048575     quBaseState::baseterm(int) const [50]
[60]     0.6    0.04    0.00 1048575         termlist::operator[](int) const [60]
-----------------------------------------------
                0.04    0.00       1/1           __libc_csu_init [62]
[61]     0.6    0.04    0.00       1         _GLOBAL__sub_I_nbitvecs [61]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                                                 <spontaneous>
[62]     0.6    0.00    0.04                 __libc_csu_init [62]
                0.04    0.00       1/1           _GLOBAL__sub_I_nbitvecs [61]
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [457]
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [458]
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [459]
                0.00    0.00       1/1           _GLOBAL__sub_I_main [455]
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [460]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [446]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [451]
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [462]
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [461]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [463]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [447]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [448]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [445]
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [454]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [452]
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [464]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [465]
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [453]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [449]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [450]
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [444]
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [456]
-----------------------------------------------
[63]     0.4    0.03    0.00      31+133     <cycle 5 as a whole> [63]
                0.02    0.00      31             quSubString::quSubString(int, int, quState&) <cycle 5> [72]
                0.01    0.00      30             quSubString::newsubstring(int, int) <cycle 5> [82]
                0.00    0.00      62             quBaseState::newsubstring(int, int) <cycle 5> [122]
                0.00    0.00      41             quState::newclone() <cycle 5> [124]
-----------------------------------------------
                                                 <spontaneous>
[64]     0.4    0.03    0.00                 term::term(term const&) [64]
-----------------------------------------------
                0.03    0.00 1048575/1048575     opMatrix::addterms(terminfo const&) const [10]
[65]     0.4    0.03    0.00 1048575         bitvec::getword() const [65]
-----------------------------------------------
                0.01    0.01  518669/518669      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[66]     0.4    0.01    0.01  518669         termlist::hashfunct2(bitvec const&) const [66]
                0.01    0.00  518669/4188195     bitvec::hashfunct() const [41]
-----------------------------------------------
                0.00    0.00       1/3145728     QuHeap::ncond() const [132]
                0.00    0.00       1/3145728     QuHeap::cmask() const [129]
                0.00    0.00       1/3145728     quBaseState::reset(bitvec const&) [93]
                0.02    0.00 3145725/3145728     opMatrix::addterms(terminfo const&) const [10]
[67]     0.3    0.02    0.00 3145728         bitvec::length() const [67]
-----------------------------------------------
                0.02    0.00 2097150/2097150     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[68]     0.3    0.02    0.00 2097150         std::complex<double>::imag() const [68]
-----------------------------------------------
                0.00    0.00       1/1048577     QuHeap::qualloc(int, BaseType) [80]
                0.02    0.00 1048576/1048577     operator&(bitvec const&, bitvec const&) [51]
[69]     0.3    0.02    0.00 1048577         bitvec::operator&=(bitvec const&) [69]
-----------------------------------------------
                0.02    0.00  518669/518669      operator==(bitvec const&, bitvec const&) [71]
[70]     0.3    0.02    0.00  518669         bitvec::testeq(bitvec const&) const [70]
-----------------------------------------------
                0.00    0.02  518669/518669      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[71]     0.3    0.00    0.02  518669         operator==(bitvec const&, bitvec const&) [71]
                0.02    0.00  518669/518669      bitvec::testeq(bitvec const&) const [70]
-----------------------------------------------
                                  31             quBaseState::newsubstring(int, int) <cycle 5> [122]
[72]     0.3    0.02    0.00      31         quSubString::quSubString(int, int, quState&) <cycle 5> [72]
                0.00    0.00      31/31          quSubState::quSubState(int) [255]
                                  31             quState::newclone() <cycle 5> [124]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.3    0.02    0.00                 bitvec::operator=(unsigned long) [73]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.3    0.02    0.00                 term::nbits() const [74]
-----------------------------------------------
                                                 <spontaneous>
[75]     0.3    0.02    0.00                 bitvec::testless(bitvec const&) const [75]
-----------------------------------------------
                                                 <spontaneous>
[76]     0.2    0.02    0.00                 bitvec::getword(int, int) const [76]
-----------------------------------------------
                                                 <spontaneous>
[77]     0.2    0.02    0.00                 std::complex<double>::real() [77]
-----------------------------------------------
                                                 <spontaneous>
[78]     0.2    0.02    0.00                 std::pow(double, int) [78]
-----------------------------------------------
                0.00    0.01       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[79]     0.2    0.00    0.01       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.01       1/1           QuHeap::qualloc(int, BaseType) [80]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [99]
                0.00    0.00       1/31          quState::newclone() <cycle 5> [124]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [102]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00       4/663         tValue::~tValue() [155]
                0.00    0.00       2/353         tValue::tValue() [168]
                0.00    0.00       2/6           tValue::isError() const [350]
                0.00    0.00       2/2           tValue::toInt() const [422]
                0.00    0.00       1/115         tType::isQuExpr() const [186]
                0.00    0.00       1/372         sDef::type() const [162]
                0.00    0.00       1/1           sDef::basetype() [501]
                0.00    0.00       1/5           sObject::isGlobal() const [357]
                0.00    0.00       1/5           tValue::qustate() const [356]
                0.00    0.00       1/167         sObject::def() const [182]
-----------------------------------------------
                0.00    0.01       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
[80]     0.2    0.00    0.01       1         QuHeap::qualloc(int, BaseType) [80]
                0.01    0.00      20/20          bitvec::operator[](int) const [83]
                0.00    0.00       1/31          quBaseState::newsubstring(int, int) <cycle 5> [122]
                0.00    0.00       1/23          quState::mapmask() const [94]
                0.00    0.00       1/44          operator~(bitvec const&) [81]
                0.00    0.00       2/12582587     bitvec::~bitvec() [21]
                0.00    0.00       1/1048577     bitvec::operator&=(bitvec const&) [69]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [508]
-----------------------------------------------
                0.00    0.00       1/44          QuHeap::qualloc(int, BaseType) [80]
                0.00    0.00      20/44          opElementary::apply(quState&) const [9]
                0.01    0.00      23/44          quState::mapmask() const [94]
[81]     0.1    0.01    0.00      44         operator~(bitvec const&) [81]
                0.00    0.00      44/6291518     bitvec::bitvec(bitvec const&) [28]
                0.00    0.00      44/46          bitvec::qnot() [213]
-----------------------------------------------
                                  10             quState::newclone() <cycle 5> [124]
                0.02    0.00      20/31          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[82]     0.1    0.01    0.00      30         quSubString::newsubstring(int, int) <cycle 5> [82]
                                  30             quBaseState::newsubstring(int, int) <cycle 5> [122]
-----------------------------------------------
                0.01    0.00      20/20          QuHeap::qualloc(int, BaseType) [80]
[83]     0.1    0.01    0.00      20         bitvec::operator[](int) const [83]
-----------------------------------------------
                0.00    0.01       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[84]     0.1    0.00    0.01       2         zero(bitvec const&) [84]
                0.01    0.00       2/2           bitvec::testzero() const [85]
-----------------------------------------------
                0.01    0.00       2/2           zero(bitvec const&) [84]
[85]     0.1    0.01    0.00       2         bitvec::testzero() const [85]
-----------------------------------------------
                                                 <spontaneous>
[86]     0.1    0.01    0.00                 bitvec::setbit(int, int) [86]
-----------------------------------------------
                                                 <spontaneous>
[87]     0.1    0.01    0.00                 termlist::nbits() const [87]
-----------------------------------------------
                                                 <spontaneous>
[88]     0.1    0.01    0.00                 std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [88]
-----------------------------------------------
                0.00    0.00      29/316         tValue::operator=(tValue const&) [102]
                0.00    0.01     287/316         tValue::tValue(tValue const&) [90]
[89]     0.1    0.00    0.01     316         tValue::assign(tValue const&) [89]
                0.01    0.00       8/31          quState::newclone() <cycle 5> [124]
                0.00    0.00     316/842         tType::operator=(tType const&) [149]
                0.00    0.00     316/1052        tType::ord() const [146]
                0.00    0.00     316/1013        tType::basetype() const [147]
-----------------------------------------------
                0.00    0.00       1/287         tValue::conv(tType const&) const [117]
                0.00    0.00       1/287         SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00       1/287         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [116]
                0.00    0.00       4/287         sConst::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.01     280/287         SymTab::put(sDef*, tValue const&) [91]
[90]     0.1    0.00    0.01     287         tValue::tValue(tValue const&) [90]
                0.00    0.01     287/316         tValue::assign(tValue const&) [89]
                0.00    0.00     287/1478        tType::tType(BaseType) [144]
-----------------------------------------------
                0.00    0.00       1/324         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       1/324         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/324         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       3/324         sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00       6/324         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      36/324         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.01     275/324         sRoutDef::typecheck(SymTable*, SymTable*) [92]
[91]     0.1    0.00    0.01     324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.01     280/287         tValue::tValue(tValue const&) [90]
                0.00    0.00     324/365         sObject::isDef() const [166]
                0.00    0.00     324/370         sObject::isValueDef() const [163]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
-----------------------------------------------
                0.00    0.01      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[92]     0.1    0.00    0.01      36         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.01     275/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00     734/21427       sDef::id() const [139]
                0.00    0.00     435/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00     275/353         tValue::tValue() [168]
                0.00    0.00     275/663         tValue::~tValue() [155]
                0.00    0.00     263/264         SymTab::getRef(std::string const&, ObjType*) const [174]
                0.00    0.00     263/294         sObject::isFunctDef() const [171]
                0.00    0.00     263/372         sDef::type() const [162]
                0.00    0.00     263/263         tType::isQuReg() const [179]
                0.00    0.00     263/554         sList<sDef>::next(void*&) const [156]
                0.00    0.00      72/77          SymTab::SymTab(int) [204]
                0.00    0.00      72/77          SymTab::~SymTab() [205]
                0.00    0.00      52/455         sObject::setParent(sObject*) [160]
                0.00    0.00      36/135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00      36/167         sObject::def() const [182]
                0.00    0.00      36/95          sList<sDef>::first(void*&) const [190]
                0.00    0.00      36/73          sObject::isExtern() const [207]
                0.00    0.00       8/253         sObject::isRoutDef() const [180]
                0.00    0.00       8/28          sObject::isCondDef() const [264]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00       8/30          sObject::isQuFunDef() const [262]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [328]
                0.00    0.00       3/3           sObject::isBennet() const [397]
-----------------------------------------------
                0.00    0.01       1/1           quBaseState::quBaseState(int, int) [57]
[93]     0.1    0.00    0.01       1         quBaseState::reset(bitvec const&) [93]
                0.00    0.01       1/21          quBaseState::opbegin() [39]
                0.00    0.00       1/2097151     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.00    0.00       1/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00       1/4193825     std::complex<double>::complex(double, double) [34]
                0.00    0.00       1/12582587     bitvec::~bitvec() [21]
                0.00    0.00       1/1           quBaseState::basebits() const [130]
                0.00    0.00       1/3145728     bitvec::length() const [67]
                0.00    0.00       1/21          quBaseState::opend() [279]
-----------------------------------------------
                0.00    0.00       1/23          QuHeap::qualloc(int, BaseType) [80]
                0.00    0.00       2/23          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      20/23          opElementary::apply(quState&) const [9]
[94]     0.1    0.00    0.01      23         quState::mapmask() const [94]
                0.01    0.00      23/44          operator~(bitvec const&) [81]
                0.00    0.00      23/2097173     quSubString::unmap(bitvec const&) const [15]
                0.00    0.00      23/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00      46/12582587     bitvec::~bitvec() [21]
                0.00    0.00      23/3145948     quState::mapbits() const [54]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [98]
[95]     0.1    0.01    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [95]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
-----------------------------------------------
                                                 <spontaneous>
[96]     0.1    0.01    0.00                 tError::object() const [96]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.1    0.01    0.00                 std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [97]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[98]     0.1    0.00    0.00       4         openqclfile(std::string) [98]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [95]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [325]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [351]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
[99]     0.0    0.00    0.00       1         QuHeap::addReg(quState*) [99]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [100]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [119]
                0.00    0.00       1/663         tValue::~tValue() [155]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [99]
[100]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [100]
                0.00    0.00       1/31          quState::newclone() <cycle 5> [124]
                0.00    0.00       1/1478        tType::tType(BaseType) [144]
                0.00    0.00       1/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[101]    0.0    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00      36/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00      36/167         sObject::def() const [182]
                0.00    0.00      36/353         tValue::tValue() [168]
                0.00    0.00      36/663         tValue::~tValue() [155]
-----------------------------------------------
                0.00    0.00       1/29          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/29          sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       2/29          sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/29          sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00      21/29          sConst::sConst(tValue const&) [103]
[102]    0.0    0.00    0.00      29         tValue::operator=(tValue const&) [102]
                0.00    0.00      29/316         tValue::assign(tValue const&) [89]
                0.00    0.00      29/692         tValue::delpointer() [152]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00      19/21          yylex() [104]
[103]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [103]
                0.00    0.00      21/29          tValue::operator=(tValue const&) [102]
                0.00    0.00      21/63          tValue::type() const [208]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [280]
                0.00    0.00      21/353         tValue::tValue() [168]
-----------------------------------------------
                0.00    0.00    2338/2338        yyparse() [105]
[104]    0.0    0.00    0.00    2338         yylex() [104]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [103]
                0.00    0.00       1/4193825     std::complex<double>::complex(double, double) [34]
                0.00    0.00      19/663         tValue::~tValue() [155]
                0.00    0.00      15/15          tValue::tValue(long) [311]
                0.00    0.00      12/12          yy_get_next_buffer() [323]
                0.00    0.00       8/8           yy_get_previous_state() [332]
                0.00    0.00       2/2           tValue::tValue(double) [409]
                0.00    0.00       1/26          yy_load_buffer_state() [266]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [510]
                0.00    0.00       1/1           tValue::tValue(char const*) [509]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [107]
                0.00    0.00       2/4           parseobj() [106]
[105]    0.0    0.00    0.00       4         yyparse() [105]
                0.00    0.00    2338/2338        yylex() [104]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [173]
                0.00    0.00     268/1478        tType::tType(BaseType) [144]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [175]
                0.00    0.00      44/44          sVar::sVar(std::string*) [215]
                0.00    0.00      44/44          sDefList::sDefList() [220]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [246]
                0.00    0.00      27/27          sList<sExpr>::append(sExpr*) [265]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [270]
                0.00    0.00      22/22          sExprList::sExprList() [275]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
                0.00    0.00      18/18          sStmtList::sStmtList() [301]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      14/14          sCall::sCall(std::string*, sExprList*, int) [315]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [339]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [346]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [181]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [365]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [375]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [369]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [391]
                0.00    0.00       2/2           objlist::objlist() [411]
                0.00    0.00       2/2           tType::tType(BaseType, int) [408]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [402]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [405]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [412]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [512]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [503]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [498]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[106]    0.0    0.00    0.00       2         parseobj() [106]
                0.00    0.00       2/4           yyparse() [105]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[107]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [107]
                0.00    0.00       2/4           yyparse() [105]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [359]
                0.00    0.00       2/2           yyCleanUp() [401]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[108]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       3/29          tValue::operator=(tValue const&) [102]
                0.00    0.00       3/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00       6/663         tValue::~tValue() [155]
                0.00    0.00       3/353         tValue::tValue() [168]
                0.00    0.00       3/6           tValue::isError() const [350]
                0.00    0.00       3/63          tValue::type() const [208]
                0.00    0.00       3/372         sDef::type() const [162]
                0.00    0.00       3/7           tType::operator==(tType const&) const [344]
                0.00    0.00       3/167         sObject::def() const [182]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [110]
[109]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       6/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00      29/167         sObject::def() const [182]
                0.00    0.00      23/372         sDef::type() const [162]
                0.00    0.00      16/41          tType::operator==(BaseType) const [234]
                0.00    0.00      11/115         tType::isQuExpr() const [186]
                0.00    0.00       7/21427       sDef::id() const [139]
                0.00    0.00       7/135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00       6/353         tValue::tValue() [168]
                0.00    0.00       6/663         tValue::~tValue() [155]
                0.00    0.00       5/455         sObject::setParent(sObject*) [160]
                0.00    0.00       5/19          sObject::inFunctDef() const [295]
                0.00    0.00       5/96          sExpr::type() [188]
                0.00    0.00       5/165         sObject::isSet(ObjFlag) const [183]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       4/18          sObject::inQuDef() const [305]
                0.00    0.00       4/28          sObject::isCondDef() const [264]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [181]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       1/21          tType::isInt() const [284]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [92]
[110]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00     269/455         sObject::setParent(sObject*) [160]
                0.00    0.00     269/554         sList<sDef>::next(void*&) const [156]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [178]
                0.00    0.00      44/95          sList<sDef>::first(void*&) const [190]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
[111]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       4/287         tValue::tValue(tValue const&) [90]
-----------------------------------------------
[112]    0.0    0.00    0.00       8+19      <cycle 3 as a whole> [112]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[113]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [103]
                0.00    0.00       2/324         SymTab::put(sDef*, tValue const&) [91]
                0.00    0.00       8/455         sObject::setParent(sObject*) [160]
                0.00    0.00       4/96          sExpr::type() [188]
                0.00    0.00       4/21          tType::isInt() const [284]
                0.00    0.00       4/663         tValue::~tValue() [155]
                0.00    0.00       2/77          SymTab::SymTab(int) [204]
                0.00    0.00       2/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       2/52          sVar::id() const [210]
                0.00    0.00       2/135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00       2/79          sVarDef::object() const [202]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       2/21427       sDef::id() const [139]
                0.00    0.00       2/2           tValue::tValue(int) [410]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       2/1478        tType::tType(BaseType) [144]
                0.00    0.00       2/353         tValue::tValue() [168]
                0.00    0.00       2/5           sDef::settype(tType const&) [352]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [328]
                0.00    0.00       2/5           sConstDef::~sConstDef() [354]
                0.00    0.00       2/77          SymTab::~SymTab() [205]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[114]    0.0    0.00    0.00       1         sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [102]
                0.00    0.00       2/2           SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00       2/52          sVar::id() const [210]
                0.00    0.00       2/663         tValue::~tValue() [155]
                0.00    0.00       1/353         tValue::tValue() [168]
                0.00    0.00       1/1           tValue::isExpr() const [532]
                0.00    0.00       1/96          sExpr::type() [188]
                0.00    0.00       1/63          tValue::type() const [208]
                0.00    0.00       1/7           tType::operator==(tType const&) const [344]
-----------------------------------------------
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
[115]    0.0    0.00    0.00       2         SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [90]
                0.00    0.00       1/353         tValue::tValue() [168]
                0.00    0.00       1/362         SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00       1/370         sObject::isValueDef() const [163]
                0.00    0.00       1/79          sVarDef::object() const [202]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[116]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [116]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [90]
                0.00    0.00       1/42          operator new(unsigned long, void*) [229]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[117]    0.0    0.00    0.00       1         tValue::conv(tType const&) const [117]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [90]
                0.00    0.00       1/7           tType::operator==(tType const&) const [344]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [119]
[118]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [116]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [387]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [384]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [441]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [534]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [567]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [526]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [549]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [443]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [436]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [99]
[119]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [119]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [566]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[120]    0.0    0.00    0.00      20         terminfo::terminfo() [120]
                0.00    0.00      20/3145242     term::term() [17]
                0.00    0.00      20/6291069     bitvec::bitvec(int, unsigned long) [16]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[121]    0.0    0.00    0.00       1         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
                0.00    0.00       6/3145242     term::term() [17]
                0.00    0.00       4/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00       4/4           term::set(bitvec const&, std::complex<double> const&) [128]
                0.00    0.00       4/12582587     bitvec::~bitvec() [21]
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [389]
                0.00    0.00       1/1           opMatrix::opMatrix(int) [511]
-----------------------------------------------
                                  30             quSubString::newsubstring(int, int) <cycle 5> [82]
                                  31             quState::newclone() <cycle 5> [124]
                0.00    0.00       1/31          QuHeap::qualloc(int, BaseType) [80]
[122]    0.0    0.00    0.00      62         quBaseState::newsubstring(int, int) <cycle 5> [122]
                0.00    0.00      93/3145948     quState::mapbits() const [54]
                                  31             quSubString::quSubString(int, int, quState&) <cycle 5> [72]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[123]    0.0    0.00    0.00      20         terminfo::~terminfo() [123]
                0.00    0.00      20/3145242     term::~term() [32]
                0.00    0.00      20/12582587     bitvec::~bitvec() [21]
-----------------------------------------------
                                  31             quSubString::quSubString(int, int, quState&) <cycle 5> [72]
                0.00    0.00       1/31          tValue::tValue(quState&, BaseType) [100]
                0.00    0.00       1/31          sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.01    0.00       8/31          tValue::assign(tValue const&) [89]
[124]    0.0    0.00    0.00      41         quState::newclone() <cycle 5> [124]
                0.00    0.00      41/3145948     quState::mapbits() const [54]
                                  31             quBaseState::newsubstring(int, int) <cycle 5> [122]
                                  10             quSubString::newsubstring(int, int) <cycle 5> [82]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[125]    0.0    0.00    0.00       1         opBit::~opBit() [125]
                0.00    0.00       1/1           opBit::~opBit() [126]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [125]
[126]    0.0    0.00    0.00       1         opBit::~opBit() [126]
                0.00    0.00       1/1           opMatrix::~opMatrix() [127]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [126]
[127]    0.0    0.00    0.00       1         opMatrix::~opMatrix() [127]
                0.00    0.00       6/3145242     term::~term() [32]
                0.00    0.00       1/1           opElementary::~opElementary() [497]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
[128]    0.0    0.00    0.00       4         term::set(bitvec const&, std::complex<double> const&) [128]
                0.00    0.00       4/6815255     bitvec::operator=(bitvec const&) [19]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[129]    0.0    0.00    0.00       1         QuHeap::cmask() const [129]
                0.00    0.00       1/6291069     bitvec::bitvec(int, unsigned long) [16]
                0.00    0.00       1/3145728     bitvec::length() const [67]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [93]
[130]    0.0    0.00    0.00       1         quBaseState::basebits() const [130]
                0.00    0.00       1/3145948     quState::mapbits() const [54]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[131]    0.0    0.00    0.00       1         QuHeap::cond() const [131]
                0.00    0.00       1/1           QuHeap::ncond() const [132]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::cond() const [131]
[132]    0.0    0.00    0.00       1         QuHeap::ncond() const [132]
                0.00    0.00       1/3145728     bitvec::length() const [67]
-----------------------------------------------
[133]    0.0    0.00    0.00      23+101     <cycle 1 as a whole> [133]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [277]
                0.00    0.00      22             sList<sExpr>::~sList() <cycle 1> [274]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [276]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [347]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [348]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [362]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [370]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [371]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [366]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [367]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [413]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [414]
-----------------------------------------------
[134]    0.0    0.00    0.00       8+64      <cycle 2 as a whole> [134]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [303]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [297]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [302]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [340]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [341]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [403]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [404]
-----------------------------------------------
                0.00    0.00       2/21427       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       2/21427       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       3/21427       sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       7/21427       sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00     734/21427       sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00    7365/21427       SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00   13314/21427       SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
[139]    0.0    0.00    0.00   21427         sDef::id() const [139]
-----------------------------------------------
                0.00    0.00    3202/6456        SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00    3254/6456        SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
[140]    0.0    0.00    0.00    6456         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [140]
-----------------------------------------------
                0.00    0.00     435/4125        sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00    3690/4125        SymTab::getentry(SymTable::entry*, std::string const&) const [167]
[141]    0.0    0.00    0.00    4125         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00    2906/2906        std::char_traits<char>::compare(char const*, char const*, unsigned long) [143]
-----------------------------------------------
                0.00    0.00     473/3876        SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00    3403/3876        SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
[142]    0.0    0.00    0.00    3876         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [142]
-----------------------------------------------
                0.00    0.00    2906/2906        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
[143]    0.0    0.00    0.00    2906         std::char_traits<char>::compare(char const*, char const*, unsigned long) [143]
-----------------------------------------------
                0.00    0.00       1/1478        tValue::tValue(std::complex<double> const&) [510]
                0.00    0.00       1/1478        tValue::tValue(char const*) [509]
                0.00    0.00       1/1478        tValue::tValue(quState&, BaseType) [100]
                0.00    0.00       1/1478        tValue::tValue(quState*, BaseType) [508]
                0.00    0.00       1/1478        __static_initialization_and_destruction_0(int, int) [469]
                0.00    0.00       1/1478        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [512]
                0.00    0.00       2/1478        tValue::tValue(int) [410]
                0.00    0.00       2/1478        tValue::tValue(double) [409]
                0.00    0.00       2/1478        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       4/1478        sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       4/1478        sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       5/1478        sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       8/1478        sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00      15/1478        tValue::tValue(long) [311]
                0.00    0.00      16/1478        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      19/1478        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
                0.00    0.00      21/1478        sExpr::sExpr(tType const&) [280]
                0.00    0.00      28/1478        sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      52/1478        sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      74/1478        sExpr::sExpr() [206]
                0.00    0.00     268/1478        yyparse() [105]
                0.00    0.00     287/1478        tValue::tValue(tValue const&) [90]
                0.00    0.00     312/1478        sDef::sDef(tType const&, std::string*) [169]
                0.00    0.00     353/1478        tValue::tValue() [168]
[144]    0.0    0.00    0.00    1478         tType::tType(BaseType) [144]
-----------------------------------------------
                0.00    0.00     528/1104        sObject::isDef() const [166]
                0.00    0.00     576/1104        sObject::isValueDef() const [163]
[145]    0.0    0.00    0.00    1104         sArgDef::object() const [145]
-----------------------------------------------
                0.00    0.00       8/1052        sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      36/1052        sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00     316/1052        tValue::assign(tValue const&) [89]
                0.00    0.00     692/1052        tValue::ord() const [153]
[146]    0.0    0.00    0.00    1052         tType::ord() const [146]
-----------------------------------------------
                0.00    0.00       1/1013        sDef::basetype() [501]
                0.00    0.00       4/1013        sExpr::basetype() [368]
                0.00    0.00     316/1013        tValue::assign(tValue const&) [89]
                0.00    0.00     692/1013        tValue::basetype() const [154]
[147]    0.0    0.00    0.00    1013         tType::basetype() const [147]
-----------------------------------------------
                0.00    0.00      97/881         sObject::isSetRec(ObjFlag) [322]
                0.00    0.00     784/881         sObject::def() const [182]
[148]    0.0    0.00    0.00     881         sObject::parent() const [148]
-----------------------------------------------
                0.00    0.00       1/842         sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       5/842         sDef::settype(tType const&) [352]
                0.00    0.00      21/842         sExpr::sExpr(tType const&) [280]
                0.00    0.00      36/842         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      42/842         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00     109/842         sExpr::settype(tType const&) [187]
                0.00    0.00     312/842         sDef::sDef(tType const&, std::string*) [169]
                0.00    0.00     316/842         tValue::assign(tValue const&) [89]
[149]    0.0    0.00    0.00     842         tType::operator=(tType const&) [149]
-----------------------------------------------
                0.00    0.00     826/826         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [226]
[150]    0.0    0.00    0.00     826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [150]
-----------------------------------------------
                0.00    0.00     783/783         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [226]
[151]    0.0    0.00    0.00     783         std::_List_const_iterator<sObject*>::operator++() [151]
-----------------------------------------------
                0.00    0.00      29/692         tValue::operator=(tValue const&) [102]
                0.00    0.00     663/692         tValue::~tValue() [155]
[152]    0.0    0.00    0.00     692         tValue::delpointer() [152]
                0.00    0.00     692/692         tValue::ord() const [153]
                0.00    0.00     692/692         tValue::basetype() const [154]
                0.00    0.00      10/10          quSubState::isbasestate() const [330]
                0.00    0.00      10/30          quSubString::~quSubString() [258]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [152]
[153]    0.0    0.00    0.00     692         tValue::ord() const [153]
                0.00    0.00     692/1052        tType::ord() const [146]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [152]
[154]    0.0    0.00    0.00     692         tValue::basetype() const [154]
                0.00    0.00     692/1013        tType::basetype() const [147]
-----------------------------------------------
                0.00    0.00       1/663         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/663         QuHeap::addReg(quState*) [99]
                0.00    0.00       1/663         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [516]
                0.00    0.00       2/663         sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       3/663         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/663         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       4/663         sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       4/663         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       6/663         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       6/663         sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00      19/663         yylex() [104]
                0.00    0.00      21/663         sConst::~sConst() [282]
                0.00    0.00      36/663         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00     275/663         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00     280/663         SymTab::deltree(SymTable::entry*) [211]
[155]    0.0    0.00    0.00     663         tValue::~tValue() [155]
                0.00    0.00     663/692         tValue::delpointer() [152]
-----------------------------------------------
                0.00    0.00       1/554         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      21/554         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00     263/554         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00     269/554         sDefList::typecheck(SymTable*, SymTable*) [110]
[156]    0.0    0.00    0.00     554         sList<sDef>::next(void*&) const [156]
-----------------------------------------------
                0.00    0.00      63/531         tValue::type() const [208]
                0.00    0.00      96/531         sExpr::type() [188]
                0.00    0.00     372/531         sDef::type() const [162]
[157]    0.0    0.00    0.00     531         tType::tType(tType const&) [157]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::sList() [296]
                0.00    0.00      21/515         sExpr::sExpr(tType const&) [280]
                0.00    0.00      22/515         sList<sExpr>::sList() [273]
                0.00    0.00      24/515         sStmt::sStmt(int) [268]
                0.00    0.00      44/515         sList<sDef>::sList() [218]
                0.00    0.00      74/515         sExpr::sExpr() [206]
                0.00    0.00     312/515         sDef::sDef(tType const&, std::string*) [169]
[158]    0.0    0.00    0.00     515         sObject::sObject(unsigned int) [158]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::~sList() <cycle 2> [297]
                0.00    0.00      22/515         sList<sExpr>::~sList() <cycle 1> [274]
                0.00    0.00      24/515         sStmt::~sStmt() [269]
                0.00    0.00      44/515         sList<sDef>::~sList() [219]
                0.00    0.00      95/515         sExpr::~sExpr() [189]
                0.00    0.00     312/515         sDef::~sDef() [170]
[159]    0.0    0.00    0.00     515         sObject::~sObject() [159]
-----------------------------------------------
                0.00    0.00       1/455         sExit::typecheck(SymTable*, SymTable*) [502]
                0.00    0.00       3/455         sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       4/455         sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       4/455         sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       5/455         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       6/455         sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       8/455         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       8/455         sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      15/455         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00      21/455         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      23/455         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00      36/455         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      52/455         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00     269/455         sDefList::typecheck(SymTable*, SymTable*) [110]
[160]    0.0    0.00    0.00     455         sObject::setParent(sObject*) [160]
-----------------------------------------------
                0.00    0.00       1/450         tValue::tValue(std::complex<double> const&) [510]
                0.00    0.00       1/450         tValue::tValue(char const*) [509]
                0.00    0.00       1/450         tValue::tValue(quState&, BaseType) [100]
                0.00    0.00       1/450         tValue::tValue(quState*, BaseType) [508]
                0.00    0.00       2/450         tValue::tValue(int) [410]
                0.00    0.00       2/450         tValue::tValue(double) [409]
                0.00    0.00      15/450         tValue::tValue(long) [311]
                0.00    0.00      74/450         sExpr::sExpr() [206]
                0.00    0.00     353/450         tValue::tValue() [168]
[161]    0.0    0.00    0.00     450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       1/372         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       1/372         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/372         sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00      23/372         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      37/372         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      44/372         sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00     263/372         sRoutDef::typecheck(SymTable*, SymTable*) [92]
[162]    0.0    0.00    0.00     372         sDef::type() const [162]
                0.00    0.00     372/531         tType::tType(tType const&) [157]
-----------------------------------------------
                0.00    0.00       1/370         SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00       1/370         SymTab::getRef(std::string const&, ObjType*) const [174]
                0.00    0.00      44/370         sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00     324/370         SymTab::put(sDef*, tValue const&) [91]
[163]    0.0    0.00    0.00     370         sObject::isValueDef() const [163]
                0.00    0.00     576/1104        sArgDef::object() const [145]
                0.00    0.00      50/79          sVarDef::object() const [202]
                0.00    0.00      26/48          sConstDef::object() const [212]
                0.00    0.00      23/369         sQuOpDef::object() const [164]
                0.00    0.00      19/369         sQuFunDef::object() const [165]
                0.00    0.00       2/58          sProcDef::object() const [209]
-----------------------------------------------
                0.00    0.00       6/369         sObject::isProcDef() const [320]
                0.00    0.00       9/369         sObject::isQuOpDef() const [278]
                0.00    0.00      10/369         sObject::isQuFunDef() const [262]
                0.00    0.00      19/369         sObject::isInclude() const [235]
                0.00    0.00      23/369         sObject::isValueDef() const [163]
                0.00    0.00      84/369         sObject::isDef() const [166]
                0.00    0.00      90/369         sObject::isRoutDef() const [180]
                0.00    0.00     128/369         sObject::isFunctDef() const [171]
[164]    0.0    0.00    0.00     369         sQuOpDef::object() const [164]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [320]
                0.00    0.00      10/369         sObject::isQuOpDef() const [278]
                0.00    0.00      13/369         sObject::isQuFunDef() const [262]
                0.00    0.00      16/369         sObject::isInclude() const [235]
                0.00    0.00      19/369         sObject::isValueDef() const [163]
                0.00    0.00      70/369         sObject::isDef() const [166]
                0.00    0.00      74/369         sObject::isRoutDef() const [180]
                0.00    0.00     162/369         sObject::isFunctDef() const [171]
[165]    0.0    0.00    0.00     369         sQuFunDef::object() const [165]
-----------------------------------------------
                0.00    0.00      41/365         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     324/365         SymTab::put(sDef*, tValue const&) [91]
[166]    0.0    0.00    0.00     365         sObject::isDef() const [166]
                0.00    0.00     528/1104        sArgDef::object() const [145]
                0.00    0.00      84/369         sQuOpDef::object() const [164]
                0.00    0.00      70/369         sQuFunDef::object() const [165]
                0.00    0.00      24/79          sVarDef::object() const [202]
                0.00    0.00      16/48          sConstDef::object() const [212]
                0.00    0.00       6/58          sProcDef::object() const [209]
                0.00    0.00       1/8           sCall::object() const [335]
-----------------------------------------------
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00       1/362         SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00     133/362         SymTab::getDef(std::string const&) const [184]
                0.00    0.00     228/362         SymTab::getRef(std::string const&, ObjType*) const [174]
[167]    0.0    0.00    0.00     362+3328    SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00    7365/21427       sDef::id() const [139]
                0.00    0.00    3690/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [141]
                0.00    0.00    3202/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [140]
                0.00    0.00     473/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [142]
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [167]
-----------------------------------------------
                0.00    0.00       1/353         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/353         SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00       1/353         sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       1/353         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/353         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       2/353         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/353         sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00       4/353         sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       6/353         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      21/353         sConst::sConst(tValue const&) [103]
                0.00    0.00      36/353         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00     275/353         sRoutDef::typecheck(SymTable*, SymTable*) [92]
[168]    0.0    0.00    0.00     353         tValue::tValue() [168]
                0.00    0.00     353/1478        tType::tType(BaseType) [144]
                0.00    0.00     353/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [248]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [175]
[169]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [169]
                0.00    0.00     312/515         sObject::sObject(unsigned int) [158]
                0.00    0.00     312/1478        tType::tType(BaseType) [144]
                0.00    0.00     312/842         tType::operator=(tType const&) [149]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [355]
                0.00    0.00       8/312         sVarDef::~sVarDef() [343]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [249]
                0.00    0.00     263/312         sArgDef::~sArgDef() [177]
[170]    0.0    0.00    0.00     312         sDef::~sDef() [170]
                0.00    0.00     312/515         sObject::~sObject() [159]
-----------------------------------------------
                0.00    0.00      14/294         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      17/294         sObject::inFunctDef() const [295]
                0.00    0.00     263/294         sRoutDef::typecheck(SymTable*, SymTable*) [92]
[171]    0.0    0.00    0.00     294         sObject::isFunctDef() const [171]
                0.00    0.00     162/369         sQuFunDef::object() const [165]
                0.00    0.00     128/369         sQuOpDef::object() const [164]
                0.00    0.00       4/58          sProcDef::object() const [209]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [91]
[172]    0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
                0.00    0.00   13314/21427       sDef::id() const [139]
                0.00    0.00    3403/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [142]
                0.00    0.00    3254/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [140]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [172]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [105]
[173]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [173]
-----------------------------------------------
                0.00    0.00       1/264         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00     263/264         sRoutDef::typecheck(SymTable*, SymTable*) [92]
[174]    0.0    0.00    0.00     264         SymTab::getRef(std::string const&, ObjType*) const [174]
                0.00    0.00     228/362         SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00       1/370         sObject::isValueDef() const [163]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [105]
[175]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [175]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [169]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [219]
[176]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [176]
                0.00    0.00     263/263         sArgDef::~sArgDef() [177]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [176]
[177]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [177]
                0.00    0.00     263/312         sDef::~sDef() [170]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [110]
[178]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [178]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [92]
[179]    0.0    0.00    0.00     263         tType::isQuReg() const [179]
-----------------------------------------------
                0.00    0.00       8/253         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00      14/253         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00     231/253         sObject::def() const [182]
[180]    0.0    0.00    0.00     253         sObject::isRoutDef() const [180]
                0.00    0.00      90/369         sQuOpDef::object() const [164]
                0.00    0.00      78/78          sStmtList::object() const [203]
                0.00    0.00      74/369         sQuFunDef::object() const [165]
                0.00    0.00      34/34          sDefList::object() const [252]
                0.00    0.00      32/58          sProcDef::object() const [209]
                0.00    0.00      21/21          sIf::object() const [283]
                0.00    0.00      15/15          sFor::object() const [312]
                0.00    0.00       4/8           sCall::object() const [335]
                0.00    0.00       3/9           sMult::object() const [331]
-----------------------------------------------
                0.00    0.00       4/176         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       4/176         yyparse() [105]
                0.00    0.00      24/176         sStmt::sStmt(int) [268]
                0.00    0.00     144/176         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [248]
[181]    0.0    0.00    0.00     176         sObject::setFlag(ObjFlag, int) [181]
-----------------------------------------------
                                 155             sObject::def() const [182]
                0.00    0.00       1/167         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/167         sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00       5/167         sObject::isGlobal() const [357]
                0.00    0.00       6/167         sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00      14/167         sObject::inQuFunDef() const [319]
                0.00    0.00      18/167         sObject::inQuDef() const [305]
                0.00    0.00      19/167         sObject::inFunctDef() const [295]
                0.00    0.00      29/167         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      36/167         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00      36/167         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
[182]    0.0    0.00    0.00     167+155     sObject::def() const [182]
                0.00    0.00     784/881         sObject::parent() const [148]
                0.00    0.00     231/253         sObject::isRoutDef() const [180]
                                 155             sObject::def() const [182]
-----------------------------------------------
                0.00    0.00       1/165         sStmt::isInv() const [528]
                0.00    0.00       3/165         sObject::isBennet() const [397]
                0.00    0.00       5/165         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      28/165         sObject::isCondDef() const [264]
                0.00    0.00      55/165         sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      73/165         sObject::isExtern() const [207]
[183]    0.0    0.00    0.00     165         sObject::isSet(ObjFlag) const [183]
-----------------------------------------------
                0.00    0.00       1/135         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       1/135         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/135         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       3/135         sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       7/135         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      32/135         sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00      36/135         sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00      53/135         SymTabComb::getDef(std::string const&) const [263]
[184]    0.0    0.00    0.00     135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00     133/362         SymTab::getentry(SymTable::entry*, std::string const&) const [167]
-----------------------------------------------
                0.00    0.00      41/123         std::list<sObject*, std::allocator<sObject*> >::end() [241]
                0.00    0.00      82/123         std::list<sObject*, std::allocator<sObject*> >::begin() [200]
[185]    0.0    0.00    0.00     123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [185]
-----------------------------------------------
                0.00    0.00       1/115         sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       2/115         tType::isConv(tType const&) const [285]
                0.00    0.00       3/115         sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       4/115         sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       7/115         tValue::isQuExpr() const [345]
                0.00    0.00       8/115         sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      11/115         sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      21/115         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      26/115         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      32/115         tType::isQuCond() const [254]
[186]    0.0    0.00    0.00     115         tType::isQuExpr() const [186]
-----------------------------------------------
                0.00    0.00       4/109         sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       4/109         sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       4/109         sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00      16/109         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      18/109         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      19/109         sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00      44/109         sVar::typecheck(SymTable*, SymTable*) [214]
[187]    0.0    0.00    0.00     109         sExpr::settype(tType const&) [187]
                0.00    0.00     109/842         tType::operator=(tType const&) [149]
-----------------------------------------------
                0.00    0.00       1/96          sExit::typecheck(SymTable*, SymTable*) [502]
                0.00    0.00       1/96          sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       3/96          sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       4/96          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       4/96          sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       5/96          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       6/96          sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       7/96          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00       8/96          sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      21/96          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      36/96          sBinOp::typecheck(SymTable*, SymTable*) [321]
[188]    0.0    0.00    0.00      96         sExpr::type() [188]
                0.00    0.00      96/531         tType::tType(tType const&) [157]
-----------------------------------------------
                0.00    0.00       4/95          sSubscript::~sSubscript() <cycle 1> [367]
                0.00    0.00       4/95          sUnOp::~sUnOp() [374]
                0.00    0.00       4/95          sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00      18/95          sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00      21/95          sConst::~sConst() [282]
                0.00    0.00      44/95          sVar::~sVar() [217]
[189]    0.0    0.00    0.00      95         sExpr::~sExpr() [189]
                0.00    0.00      95/515         sObject::~sObject() [159]
-----------------------------------------------
                0.00    0.00       1/95          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      14/95          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      36/95          sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00      44/95          sDefList::typecheck(SymTable*, SymTable*) [110]
[190]    0.0    0.00    0.00      95         sList<sDef>::first(void*&) const [190]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00      77/87          SymTab::SymTab(int) [204]
[191]    0.0    0.00    0.00      87         SymTable::SymTable() [191]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::~SymTabComb() [329]
                0.00    0.00      77/87          SymTab::~SymTab() [205]
[192]    0.0    0.00    0.00      87         SymTable::~SymTable() [192]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() const [225]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::end() const [223]
[193]    0.0    0.00    0.00      86         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [193]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [198]
[194]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::new_allocator() [194]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::~allocator() [199]
[195]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [195]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
[196]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [196]
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [197]
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [198]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [196]
[197]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [197]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [196]
[198]    0.0    0.00    0.00      82         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [198]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::new_allocator() [194]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
[199]    0.0    0.00    0.00      82         std::allocator<sObject*>::~allocator() [199]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [195]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::front() [242]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::pop_front() [245]
[200]    0.0    0.00    0.00      82         std::list<sObject*, std::allocator<sObject*> >::begin() [200]
                0.00    0.00      82/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [185]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
[201]    0.0    0.00    0.00      82         sObject** std::__addressof<sObject*>(sObject*&) [201]
-----------------------------------------------
                0.00    0.00       1/79          sObject::isConstDef() const [383]
                0.00    0.00       1/79          sObject::isInclude() const [235]
                0.00    0.00       1/79          SymTab::getVal(std::string const&, ObjType*) const [115]
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00      24/79          sObject::isDef() const [166]
                0.00    0.00      50/79          sObject::isValueDef() const [163]
[202]    0.0    0.00    0.00      79         sVarDef::object() const [202]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [180]
[203]    0.0    0.00    0.00      78         sStmtList::object() const [203]
-----------------------------------------------
                0.00    0.00       1/77          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       2/77          main [1]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [92]
[204]    0.0    0.00    0.00      77         SymTab::SymTab(int) [204]
                0.00    0.00      77/87          SymTable::SymTable() [191]
-----------------------------------------------
                0.00    0.00       1/77          SymTab::~SymTab() [507]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       2/77          main [1]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [92]
[205]    0.0    0.00    0.00      77         SymTab::~SymTab() [205]
                0.00    0.00      77/87          SymTable::~SymTable() [192]
                0.00    0.00      48/48          SymTab::deltree(SymTable::entry*) [211]
-----------------------------------------------
                0.00    0.00       4/74          sSubscript::sSubscript(sVar*, sExprList*) [365]
                0.00    0.00       4/74          sUnOp::sUnOp(sExpr*) [373]
                0.00    0.00       4/74          sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00      18/74          sBinOp::sBinOp(sExpr*, sExpr*) [298]
                0.00    0.00      44/74          sVar::sVar(std::string*) [215]
[206]    0.0    0.00    0.00      74         sExpr::sExpr() [206]
                0.00    0.00      74/515         sObject::sObject(unsigned int) [158]
                0.00    0.00      74/1478        tType::tType(BaseType) [144]
                0.00    0.00      74/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       1/73          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00      36/73          sRoutDef::~sRoutDef() [249]
                0.00    0.00      36/73          sRoutDef::typecheck(SymTable*, SymTable*) [92]
[207]    0.0    0.00    0.00      73         sObject::isExtern() const [207]
                0.00    0.00      73/165         sObject::isSet(ObjFlag) const [183]
-----------------------------------------------
                0.00    0.00       1/63          sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       3/63          sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00      21/63          sConst::sConst(tValue const&) [103]
                0.00    0.00      38/63          sConst::typecheck(SymTable*, SymTable*) [290]
[208]    0.0    0.00    0.00      63         tValue::type() const [208]
                0.00    0.00      63/531         tType::tType(tType const&) [157]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [235]
                0.00    0.00       2/58          sObject::isValueDef() const [163]
                0.00    0.00       3/58          sObject::isProcDef() const [320]
                0.00    0.00       3/58          sObject::isQuOpDef() const [278]
                0.00    0.00       4/58          sObject::isFunctDef() const [171]
                0.00    0.00       6/58          sObject::isDef() const [166]
                0.00    0.00       7/58          sObject::isQuFunDef() const [262]
                0.00    0.00      32/58          sObject::isRoutDef() const [180]
[209]    0.0    0.00    0.00      58         sProcDef::object() const [209]
-----------------------------------------------
                0.00    0.00       2/52          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       2/52          sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00      48/52          sVar::typecheck(SymTable*, SymTable*) [214]
[210]    0.0    0.00    0.00      52         sVar::id() const [210]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [211]
                0.00    0.00      48/48          SymTab::~SymTab() [205]
[211]    0.0    0.00    0.00      48+276     SymTab::deltree(SymTable::entry*) [211]
                0.00    0.00     280/663         tValue::~tValue() [155]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [292]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [309]
                0.00    0.00       3/5           sConstDef::~sConstDef() [354]
                0.00    0.00       1/1           sProcDef::~sProcDef() [513]
                0.00    0.00       1/7           sVarDef::~sVarDef() [342]
                                 276             SymTab::deltree(SymTable::entry*) [211]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [383]
                0.00    0.00       3/48          sObject::isInclude() const [235]
                0.00    0.00      16/48          sObject::isDef() const [166]
                0.00    0.00      26/48          sObject::isValueDef() const [163]
[212]    0.0    0.00    0.00      48         sConstDef::object() const [212]
-----------------------------------------------
                0.00    0.00       2/46          QuHeap::QuHeap(int, int) [56]
                0.00    0.00      44/46          operator~(bitvec const&) [81]
[213]    0.0    0.00    0.00      46         bitvec::qnot() [213]
-----------------------------------------------
                0.00    0.00       2/44          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       4/44          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       4/44          sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       4/44          sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       6/44          sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      12/44          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      12/44          sBinOp::typecheck(SymTable*, SymTable*) [321]
[214]    0.0    0.00    0.00      44         sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00      48/52          sVar::id() const [210]
                0.00    0.00      44/370         sObject::isValueDef() const [163]
                0.00    0.00      44/372         sDef::type() const [162]
                0.00    0.00      44/109         sExpr::settype(tType const&) [187]
                0.00    0.00      32/135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [263]
                0.00    0.00       4/4           sObject::isConstDef() const [383]
                0.00    0.00       1/5           sObject::isGlobal() const [357]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [105]
[215]    0.0    0.00    0.00      44         sVar::sVar(std::string*) [215]
                0.00    0.00      44/74          sExpr::sExpr() [206]
-----------------------------------------------
                0.00    0.00       2/44          sFor::~sFor() <cycle 2> [404]
                0.00    0.00       4/44          sSubscript::~sSubscript() <cycle 1> [367]
                0.00    0.00       4/44          sUnOp::~sUnOp() [374]
                0.00    0.00       4/44          sVarDef::~sVarDef() [343]
                0.00    0.00      12/44          sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00      18/44          sList<sExpr>::~sList() <cycle 1> [274]
[216]    0.0    0.00    0.00      44         sVar::~sVar() [216]
                0.00    0.00      44/44          sVar::~sVar() [217]
-----------------------------------------------
                0.00    0.00      44/44          sVar::~sVar() [216]
[217]    0.0    0.00    0.00      44         sVar::~sVar() [217]
                0.00    0.00      44/95          sExpr::~sExpr() [189]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [220]
[218]    0.0    0.00    0.00      44         sList<sDef>::sList() [218]
                0.00    0.00      44/515         sObject::sObject(unsigned int) [158]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [222]
[219]    0.0    0.00    0.00      44         sList<sDef>::~sList() [219]
                0.00    0.00     263/263         sArgDef::~sArgDef() [176]
                0.00    0.00      44/515         sObject::~sObject() [159]
                0.00    0.00       6/7           sVarDef::~sVarDef() [342]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [105]
[220]    0.0    0.00    0.00      44         sDefList::sDefList() [220]
                0.00    0.00      44/44          sList<sDef>::sList() [218]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [249]
[221]    0.0    0.00    0.00      44         sDefList::~sDefList() [221]
                0.00    0.00      44/44          sDefList::~sDefList() [222]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [221]
[222]    0.0    0.00    0.00      44         sDefList::~sDefList() [222]
                0.00    0.00      44/44          sList<sDef>::~sList() [219]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [224]
[223]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() const [223]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [193]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[224]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::size() const [224]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::begin() const [225]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() const [223]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [228]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [224]
[225]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::begin() const [225]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [193]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [228]
[226]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [226]
                0.00    0.00     826/826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [150]
                0.00    0.00     783/783         std::_List_const_iterator<sObject*>::operator++() [151]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [228]
[227]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [227]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [224]
[228]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [228]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [227]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [226]
-----------------------------------------------
                0.00    0.00       1/42          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [116]
                0.00    0.00      41/42          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [231]
[229]    0.0    0.00    0.00      42         operator new(unsigned long, void*) [229]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
[230]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [230]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
[231]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [231]
                0.00    0.00      41/42          operator new(unsigned long, void*) [229]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [239]
[232]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [232]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [238]
[233]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [233]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [236]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [321]
[234]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [234]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[235]    0.0    0.00    0.00      41         sObject::isInclude() const [235]
                0.00    0.00      19/369         sQuOpDef::object() const [164]
                0.00    0.00      16/369         sQuFunDef::object() const [165]
                0.00    0.00       3/48          sConstDef::object() const [212]
                0.00    0.00       1/8           sCall::object() const [335]
                0.00    0.00       1/79          sVarDef::object() const [202]
                0.00    0.00       1/58          sProcDef::object() const [209]
-----------------------------------------------
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [233]
[236]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [236]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [242]
[237]    0.0    0.00    0.00      41         std::_List_iterator<sObject*>::operator*() const [237]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
[238]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [238]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [233]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
[239]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [239]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [232]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [244]
[240]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [238]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [201]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [196]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [199]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [231]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [246]
[241]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::end() [241]
                0.00    0.00      41/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [185]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[242]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::front() [242]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [200]
                0.00    0.00      41/41          std::_List_iterator<sObject*>::operator*() const [237]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [245]
[243]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [201]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [196]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [199]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [230]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [239]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [246]
[244]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [244]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [240]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[245]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::pop_front() [245]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [200]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [243]
-----------------------------------------------
                0.00    0.00      41/41          yyparse() [105]
[246]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [246]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::end() [241]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [244]
-----------------------------------------------
                0.00    0.00       2/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      35/37          sCall::typecheck(SymTable*, SymTable*) [314]
[247]    0.0    0.00    0.00      37         sRoutDef::args() [247]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [512]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
[248]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [248]
                0.00    0.00     144/176         sObject::setFlag(ObjFlag, int) [181]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [169]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [514]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [310]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [293]
[249]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [249]
                0.00    0.00      44/44          sDefList::~sDefList() [221]
                0.00    0.00      36/73          sObject::isExtern() const [207]
                0.00    0.00      36/312         sDef::~sDef() [170]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [302]
-----------------------------------------------
                0.00    0.00       1/36          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/36          sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       4/36          sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       6/36          sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      21/36          sCall::typecheck(SymTable*, SymTable*) [314]
[250]    0.0    0.00    0.00      36         sList<sExpr>::next(void*&) const [250]
-----------------------------------------------
                0.00    0.00       1/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/35          sSubscript::sSubscript(sVar*, sExprList*) [365]
                0.00    0.00       4/35          sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       4/35          sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       8/35          sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      14/35          sCall::typecheck(SymTable*, SymTable*) [314]
[251]    0.0    0.00    0.00      35         sList<sExpr>::first(void*&) const [251]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [180]
[252]    0.0    0.00    0.00      34         sDefList::object() const [252]
-----------------------------------------------
                0.00    0.00       1/32          quBaseState::quBaseState(int, int) [57]
                0.00    0.00      31/32          quSubState::quSubState(int) [255]
[253]    0.0    0.00    0.00      32         quState::quState(int) [253]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      14/32          tType::isCond() const [318]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
[254]    0.0    0.00    0.00      32         tType::isQuCond() const [254]
                0.00    0.00      32/115         tType::isQuExpr() const [186]
-----------------------------------------------
                0.00    0.00      31/31          quSubString::quSubString(int, int, quState&) <cycle 5> [72]
[255]    0.0    0.00    0.00      31         quSubState::quSubState(int) [255]
                0.00    0.00      31/32          quState::quState(int) [253]
-----------------------------------------------
                0.00    0.00       1/31          quBaseState::~quBaseState() [47]
                0.00    0.00      30/31          quSubState::~quSubState() [257]
[256]    0.0    0.00    0.00      31         quState::~quState() [256]
-----------------------------------------------
                0.00    0.00      30/30          quSubString::~quSubString() [259]
[257]    0.0    0.00    0.00      30         quSubState::~quSubState() [257]
                0.00    0.00      30/30          quBaseState::isbasestate() const [260]
                0.00    0.00      30/31          quState::~quState() [256]
-----------------------------------------------
                0.00    0.00      10/30          tValue::delpointer() [152]
                0.00    0.00      20/30          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[258]    0.0    0.00    0.00      30         quSubString::~quSubString() [258]
                0.00    0.00      30/30          quSubString::~quSubString() [259]
-----------------------------------------------
                0.00    0.00      30/30          quSubString::~quSubString() [258]
[259]    0.0    0.00    0.00      30         quSubString::~quSubString() [259]
                0.00    0.00      30/30          quSubState::~quSubState() [257]
-----------------------------------------------
                0.00    0.00      30/30          quSubState::~quSubState() [257]
[260]    0.0    0.00    0.00      30         quBaseState::isbasestate() const [260]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [321]
[261]    0.0    0.00    0.00      30         tType::isNumber() const [261]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00       9/30          sObject::isQuDef() const [306]
                0.00    0.00      13/30          sObject::inQuFunDef() const [319]
[262]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [262]
                0.00    0.00      13/369         sQuFunDef::object() const [165]
                0.00    0.00      10/369         sQuOpDef::object() const [164]
                0.00    0.00       7/58          sProcDef::object() const [209]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [214]
[263]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [263]
                0.00    0.00      53/135         SymTab::getDef(std::string const&) const [184]
-----------------------------------------------
                0.00    0.00       1/28          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       1/28          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/28          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       8/28          sRoutDef::typecheck(SymTable*, SymTable*) [92]
                0.00    0.00      14/28          sCall::typecheck(SymTable*, SymTable*) [314]
[264]    0.0    0.00    0.00      28         sObject::isCondDef() const [264]
                0.00    0.00      28/165         sObject::isSet(ObjFlag) const [183]
-----------------------------------------------
                0.00    0.00      27/27          yyparse() [105]
[265]    0.0    0.00    0.00      27         sList<sExpr>::append(sExpr*) [265]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [104]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [326]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [307]
[266]    0.0    0.00    0.00      26         yy_load_buffer_state() [266]
-----------------------------------------------
                0.00    0.00      25/25          sCall::typecheck(SymTable*, SymTable*) [314]
[267]    0.0    0.00    0.00      25         tType::isQuConst() const [267]
-----------------------------------------------
                0.00    0.00       1/24          sExit::sExit(sExpr*) [503]
                0.00    0.00       2/24          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [402]
                0.00    0.00       7/24          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [339]
                0.00    0.00      14/24          sCall::sCall(std::string*, sExprList*, int) [315]
[268]    0.0    0.00    0.00      24         sStmt::sStmt(int) [268]
                0.00    0.00      24/515         sObject::sObject(unsigned int) [158]
                0.00    0.00      24/176         sObject::setFlag(ObjFlag, int) [181]
-----------------------------------------------
                0.00    0.00       1/24          sExit::~sExit() [505]
                0.00    0.00       2/24          sFor::~sFor() <cycle 2> [404]
                0.00    0.00       7/24          sIf::~sIf() <cycle 2> [341]
                0.00    0.00      14/24          sCall::~sCall() [317]
[269]    0.0    0.00    0.00      24         sStmt::~sStmt() [269]
                0.00    0.00      24/515         sObject::~sObject() [159]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [105]
[270]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [270]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[271]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [271]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00      14/23          tType::isCond() const [318]
[272]    0.0    0.00    0.00      23         tType::isBoolean() const [272]
-----------------------------------------------
                0.00    0.00      22/22          sExprList::sExprList() [275]
[273]    0.0    0.00    0.00      22         sList<sExpr>::sList() [273]
                0.00    0.00      22/515         sObject::sObject(unsigned int) [158]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [277]
[274]    0.0    0.00    0.00      22         sList<sExpr>::~sList() <cycle 1> [274]
                0.00    0.00      22/515         sObject::~sObject() [159]
                0.00    0.00      18/44          sVar::~sVar() [216]
                                   4             sSubscript::~sSubscript() <cycle 1> [366]
                                   3             sMult::~sMult() <cycle 1> [347]
                                   2             sConcat::~sConcat() <cycle 1> [413]
-----------------------------------------------
                0.00    0.00      22/22          yyparse() [105]
[275]    0.0    0.00    0.00      22         sExprList::sExprList() [275]
                0.00    0.00      22/22          sList<sExpr>::sList() [273]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [367]
                                   4             sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00      14/23          sCall::~sCall() [317]
[276]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [276]
                                  22             sExprList::~sExprList() <cycle 1> [277]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [276]
[277]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [277]
                                  22             sList<sExpr>::~sList() <cycle 1> [274]
-----------------------------------------------
                0.00    0.00       4/22          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      18/22          sObject::isQuDef() const [306]
[278]    0.0    0.00    0.00      22         sObject::isQuOpDef() const [278]
                0.00    0.00      10/369         sQuFunDef::object() const [165]
                0.00    0.00       9/369         sQuOpDef::object() const [164]
                0.00    0.00       3/58          sProcDef::object() const [209]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::reset(bitvec const&) [93]
                0.00    0.00      20/21          quSubState::opend() [286]
[279]    0.0    0.00    0.00      21         quBaseState::opend() [279]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [103]
[280]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [280]
                0.00    0.00      21/515         sObject::sObject(unsigned int) [158]
                0.00    0.00      21/1478        tType::tType(BaseType) [144]
                0.00    0.00      21/842         tType::operator=(tType const&) [149]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [505]
                0.00    0.00       1/21          sVarDef::~sVarDef() [343]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [404]
                0.00    0.00       5/21          sConstDef::~sConstDef() [355]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [299]
[281]    0.0    0.00    0.00      21         sConst::~sConst() [281]
                0.00    0.00      21/21          sConst::~sConst() [282]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [281]
[282]    0.0    0.00    0.00      21         sConst::~sConst() [282]
                0.00    0.00      21/95          sExpr::~sExpr() [189]
                0.00    0.00      21/663         tValue::~tValue() [155]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [180]
[283]    0.0    0.00    0.00      21         sIf::object() const [283]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       2/21          tValue::isInt() const [421]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       8/21          tType::isOrdered() const [337]
[284]    0.0    0.00    0.00      21         tType::isInt() const [284]
-----------------------------------------------
                0.00    0.00      21/21          sCall::typecheck(SymTable*, SymTable*) [314]
[285]    0.0    0.00    0.00      21         tType::isConv(tType const&) const [285]
                0.00    0.00       2/115         tType::isQuExpr() const [186]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[286]    0.0    0.00    0.00      20         quSubState::opend() [286]
                0.00    0.00      20/21          quBaseState::opend() [279]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[287]    0.0    0.00    0.00      20         quSubState::baseterms() const [287]
                0.00    0.00      20/20          quBaseState::baseterms() const [288]
-----------------------------------------------
                0.00    0.00      20/20          quSubState::baseterms() const [287]
[288]    0.0    0.00    0.00      20         quBaseState::baseterms() const [288]
                0.00    0.00      20/20          termlist::nterms() const [289]
-----------------------------------------------
                0.00    0.00      20/20          quBaseState::baseterms() const [288]
[289]    0.0    0.00    0.00      20         termlist::nterms() const [289]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [502]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [321]
[290]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00      38/63          tValue::type() const [208]
                0.00    0.00      19/19          tType::isDefined() const [294]
                0.00    0.00      19/109         sExpr::settype(tType const&) [187]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [105]
[291]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
                0.00    0.00      19/1478        tType::tType(BaseType) [144]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [248]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [211]
[292]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [292]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [293]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [292]
[293]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [293]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [249]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [290]
[294]    0.0    0.00    0.00      19         tType::isDefined() const [294]
-----------------------------------------------
                0.00    0.00       5/19          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      14/19          sCall::typecheck(SymTable*, SymTable*) [314]
[295]    0.0    0.00    0.00      19         sObject::inFunctDef() const [295]
                0.00    0.00      19/167         sObject::def() const [182]
                0.00    0.00      17/294         sObject::isFunctDef() const [171]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [301]
[296]    0.0    0.00    0.00      18         sList<sStmt>::sList() [296]
                0.00    0.00      18/515         sObject::sObject(unsigned int) [158]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [303]
[297]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [297]
                0.00    0.00      18/515         sObject::~sObject() [159]
                0.00    0.00      13/14          sCall::~sCall() [316]
                0.00    0.00       1/1           sExit::~sExit() [504]
                                   7             sIf::~sIf() <cycle 2> [340]
                                   2             sFor::~sFor() <cycle 2> [403]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [498]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [405]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [412]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [391]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [369]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [346]
[298]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [298]
                0.00    0.00      18/74          sExpr::sExpr() [206]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [414]
                                   4             sLess::~sLess() <cycle 1> [371]
                                   6             sMult::~sMult() <cycle 1> [348]
                0.00    0.00       1/23          sOr::~sOr() [500]
                0.00    0.00       2/23          sSub::~sSub() [407]
                0.00    0.00       3/23          sEqual::~sEqual() [393]
[299]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00      18/95          sExpr::~sExpr() [189]
                0.00    0.00      12/21          sConst::~sConst() [281]
                0.00    0.00      12/44          sVar::~sVar() [216]
                0.00    0.00       4/4           sLength::~sLength() [376]
                                   3             sMult::~sMult() <cycle 1> [347]
                                   3             sListFunct::~sListFunct() <cycle 1> [362]
                                   2             sLess::~sLess() <cycle 1> [370]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [92]
[300]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00      23/455         sObject::setParent(sObject*) [160]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [271]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [304]
                0.00    0.00      13/14          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [502]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [105]
[301]    0.0    0.00    0.00      18         sStmtList::sStmtList() [301]
                0.00    0.00      18/18          sList<sStmt>::sList() [296]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [404]
                                   8             sIf::~sIf() <cycle 2> [341]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [249]
[302]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [302]
                                  18             sStmtList::~sStmtList() <cycle 2> [303]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [302]
[303]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [303]
                                  18             sList<sStmt>::~sList() <cycle 2> [297]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[304]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [304]
-----------------------------------------------
                0.00    0.00       4/18          sVarDef::typecheck(SymTable*, SymTable*) [109]
                0.00    0.00      14/18          sCall::typecheck(SymTable*, SymTable*) [314]
[305]    0.0    0.00    0.00      18         sObject::inQuDef() const [305]
                0.00    0.00      18/167         sObject::def() const [182]
                0.00    0.00      17/18          sObject::isQuDef() const [306]
-----------------------------------------------
                0.00    0.00       1/18          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/18          sObject::inQuDef() const [305]
[306]    0.0    0.00    0.00      18         sObject::isQuDef() const [306]
                0.00    0.00      18/22          sObject::isQuOpDef() const [278]
                0.00    0.00       9/30          sObject::isQuFunDef() const [262]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [401]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [359]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
[307]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [307]
                0.00    0.00      15/26          yy_load_buffer_state() [266]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [105]
[308]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      16/1478        tType::tType(BaseType) [144]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [248]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [211]
[309]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [309]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [310]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [309]
[310]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [310]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [249]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [104]
[311]    0.0    0.00    0.00      15         tValue::tValue(long) [311]
                0.00    0.00      15/1478        tType::tType(BaseType) [144]
                0.00    0.00      15/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [180]
[312]    0.0    0.00    0.00      15         sFor::object() const [312]
-----------------------------------------------
                0.00    0.00       1/15          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      14/15          sCall::typecheck(SymTable*, SymTable*) [314]
[313]    0.0    0.00    0.00      15         sCall::id() const [313]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/14          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[314]    0.0    0.00    0.00      14         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      42/842         tType::operator=(tType const&) [149]
                0.00    0.00      37/372         sDef::type() const [162]
                0.00    0.00      35/37          sRoutDef::args() [247]
                0.00    0.00      28/1478        tType::tType(BaseType) [144]
                0.00    0.00      25/25          tType::isQuConst() const [267]
                0.00    0.00      21/455         sObject::setParent(sObject*) [160]
                0.00    0.00      21/96          sExpr::type() [188]
                0.00    0.00      21/21          tType::isConv(tType const&) const [285]
                0.00    0.00      21/115         tType::isQuExpr() const [186]
                0.00    0.00      21/36          sList<sExpr>::next(void*&) const [250]
                0.00    0.00      21/554         sList<sDef>::next(void*&) const [156]
                0.00    0.00      16/109         sExpr::settype(tType const&) [187]
                0.00    0.00      14/15          sCall::id() const [313]
                0.00    0.00      14/253         sObject::isRoutDef() const [180]
                0.00    0.00      14/294         sObject::isFunctDef() const [171]
                0.00    0.00      14/19          sObject::inFunctDef() const [295]
                0.00    0.00      14/18          sObject::inQuDef() const [305]
                0.00    0.00      14/28          sObject::isCondDef() const [264]
                0.00    0.00      14/14          sObject::inQuFunDef() const [319]
                0.00    0.00      14/35          sList<sExpr>::first(void*&) const [251]
                0.00    0.00      14/95          sList<sDef>::first(void*&) const [190]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [263]
                0.00    0.00      13/13          sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00      10/14          sObject::isProcDef() const [320]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       4/22          sObject::isQuOpDef() const [278]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [184]
-----------------------------------------------
                0.00    0.00      14/14          yyparse() [105]
[315]    0.0    0.00    0.00      14         sCall::sCall(std::string*, sExprList*, int) [315]
                0.00    0.00      14/24          sStmt::sStmt(int) [268]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/14          sList<sStmt>::~sList() <cycle 2> [297]
[316]    0.0    0.00    0.00      14         sCall::~sCall() [316]
                0.00    0.00      14/14          sCall::~sCall() [317]
-----------------------------------------------
                0.00    0.00      14/14          sCall::~sCall() [316]
[317]    0.0    0.00    0.00      14         sCall::~sCall() [317]
                0.00    0.00      14/23          sExprList::~sExprList() <cycle 1> [276]
                0.00    0.00      14/24          sStmt::~sStmt() [269]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [321]
[318]    0.0    0.00    0.00      14         tType::isCond() const [318]
                0.00    0.00      14/32          tType::isQuCond() const [254]
                0.00    0.00      14/23          tType::isBoolean() const [272]
-----------------------------------------------
                0.00    0.00      14/14          sCall::typecheck(SymTable*, SymTable*) [314]
[319]    0.0    0.00    0.00      14         sObject::inQuFunDef() const [319]
                0.00    0.00      14/167         sObject::def() const [182]
                0.00    0.00      13/30          sObject::isQuFunDef() const [262]
-----------------------------------------------
                0.00    0.00       1/14          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/14          sObject::isGlobal() const [357]
                0.00    0.00      10/14          sCall::typecheck(SymTable*, SymTable*) [314]
[320]    0.0    0.00    0.00      14         sObject::isProcDef() const [320]
                0.00    0.00       6/369         sQuOpDef::object() const [164]
                0.00    0.00       5/369         sQuFunDef::object() const [165]
                0.00    0.00       3/58          sProcDef::object() const [209]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
[321]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      52/1478        tType::tType(BaseType) [144]
                0.00    0.00      36/455         sObject::setParent(sObject*) [160]
                0.00    0.00      36/96          sExpr::type() [188]
                0.00    0.00      36/842         tType::operator=(tType const&) [149]
                0.00    0.00      36/1052        tType::ord() const [146]
                0.00    0.00      30/30          tType::isNumber() const [261]
                0.00    0.00      26/115         tType::isQuExpr() const [186]
                0.00    0.00      25/41          tType::operator==(BaseType) const [234]
                0.00    0.00      18/109         sExpr::settype(tType const&) [187]
                0.00    0.00      14/14          tType::isCond() const [318]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       8/8           tType::isOrdered() const [337]
                0.00    0.00       6/9           sMult::object() const [331]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       4/4           sLess::object() const [381]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       3/3           sEqual::object() const [395]
                0.00    0.00       2/2           sSub::object() const [420]
                0.00    0.00       2/2           sConcat::object() const [423]
                0.00    0.00       2/23          tType::isBoolean() const [272]
                0.00    0.00       2/7           tType::operator==(tType const&) const [344]
                0.00    0.00       1/1           sOr::object() const [527]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [321]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      13/13          sCall::typecheck(SymTable*, SymTable*) [314]
[322]    0.0    0.00    0.00      13+42      sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      97/881         sObject::parent() const [148]
                0.00    0.00      55/165         sObject::isSet(ObjFlag) const [183]
                                  42             sObject::isSetRec(ObjFlag) [322]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [104]
[323]    0.0    0.00    0.00      12         yy_get_next_buffer() [323]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [326]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [466]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [326]
[324]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [307]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [491]
                0.00    0.00      10/11          openqclfile(std::string) [98]
[325]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [325]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [401]
                0.00    0.00       4/10          yy_get_next_buffer() [323]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [359]
[326]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [326]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
                0.00    0.00      10/26          yy_load_buffer_state() [266]
                0.00    0.00       1/1           yyensure_buffer_stack() [493]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [466]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [92]
[327]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00      10/87          SymTable::SymTable() [191]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [92]
[328]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [328]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [329]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [328]
[329]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [329]
                0.00    0.00      10/87          SymTable::~SymTable() [192]
-----------------------------------------------
                0.00    0.00      10/10          tValue::delpointer() [152]
[330]    0.0    0.00    0.00      10         quSubState::isbasestate() const [330]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [180]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [321]
[331]    0.0    0.00    0.00       9         sMult::object() const [331]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [104]
[332]    0.0    0.00    0.00       8         yy_get_previous_state() [332]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [469]
                0.00    0.00       7/8           yyparse() [105]
[333]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [169]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [360]
[334]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       8/35          sList<sExpr>::first(void*&) const [251]
                0.00    0.00       6/455         sObject::setParent(sObject*) [160]
                0.00    0.00       6/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       6/36          sList<sExpr>::next(void*&) const [250]
-----------------------------------------------
                0.00    0.00       1/8           sObject::isDef() const [166]
                0.00    0.00       1/8           sObject::isInclude() const [235]
                0.00    0.00       2/8           sObject::isStmt() const [533]
                0.00    0.00       4/8           sObject::isRoutDef() const [180]
[335]    0.0    0.00    0.00       8         sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [380]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [360]
[336]    0.0    0.00    0.00       8         sList<sExpr>::n() const [336]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [321]
[337]    0.0    0.00    0.00       8         tType::isOrdered() const [337]
                0.00    0.00       8/21          tType::isInt() const [284]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[338]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00      15/455         sObject::setParent(sObject*) [160]
                0.00    0.00      14/32          tType::isQuCond() const [254]
                0.00    0.00       7/23          tType::isBoolean() const [272]
                0.00    0.00       7/96          sExpr::type() [188]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [360]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [105]
[339]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [339]
                0.00    0.00       7/24          sStmt::sStmt(int) [268]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [297]
[340]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [340]
                                   7             sIf::~sIf() <cycle 2> [341]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [340]
[341]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [341]
                0.00    0.00       7/24          sStmt::~sStmt() [269]
                0.00    0.00       3/3           sEqual::~sEqual() [392]
                0.00    0.00       2/23          sLess::~sLess() <cycle 1> [370]
                0.00    0.00       1/23          sListFunct::~sListFunct() <cycle 1> [362]
                0.00    0.00       1/1           sOr::~sOr() [499]
                                   8             sStmtList::~sStmtList() <cycle 2> [302]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [211]
                0.00    0.00       6/7           sList<sDef>::~sList() [219]
[342]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [342]
                0.00    0.00       7/7           sVarDef::~sVarDef() [343]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [342]
[343]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [343]
                0.00    0.00       8/312         sDef::~sDef() [170]
                0.00    0.00       4/44          sVar::~sVar() [216]
                0.00    0.00       1/21          sConst::~sConst() [281]
-----------------------------------------------
                0.00    0.00       1/7           tValue::conv(tType const&) const [117]
                0.00    0.00       1/7           sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       2/7           sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       3/7           sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
[344]    0.0    0.00    0.00       7         tType::operator==(tType const&) const [344]
-----------------------------------------------
                0.00    0.00       1/7           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/7           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       5/7           tValue::qustate() const [356]
[345]    0.0    0.00    0.00       7         tValue::isQuExpr() const [345]
                0.00    0.00       7/115         tType::isQuExpr() const [186]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [105]
[346]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [346]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [299]
                                   3             sList<sExpr>::~sList() <cycle 1> [274]
[347]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [347]
                                   6             sMult::~sMult() <cycle 1> [348]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [347]
[348]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [348]
                                   6             sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       6/6           tValue::isError() const [350]
[349]    0.0    0.00    0.00       6         tType::isError() const [349]
-----------------------------------------------
                0.00    0.00       1/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/6           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/6           sConstDef::define(SymTable*, SymTable*, QuHeap*) [108]
[350]    0.0    0.00    0.00       6         tValue::isError() const [350]
                0.00    0.00       6/6           tType::isError() const [349]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [98]
[351]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [351]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [394]
[352]    0.0    0.00    0.00       5         sDef::settype(tType const&) [352]
                0.00    0.00       5/842         tType::operator=(tType const&) [149]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       3/5           yyparse() [105]
[353]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       5/1478        tType::tType(BaseType) [144]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [169]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [211]
[354]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [354]
                0.00    0.00       5/5           sConstDef::~sConstDef() [355]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [354]
[355]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [355]
                0.00    0.00       5/21          sConst::~sConst() [281]
                0.00    0.00       5/312         sDef::~sDef() [170]
-----------------------------------------------
                0.00    0.00       1/5           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/5           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[356]    0.0    0.00    0.00       5         tValue::qustate() const [356]
                0.00    0.00       5/7           tValue::isQuExpr() const [345]
-----------------------------------------------
                0.00    0.00       1/5           sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/5           sObject::isLocal() const [396]
[357]    0.0    0.00    0.00       5         sObject::isGlobal() const [357]
                0.00    0.00       5/167         sObject::def() const [182]
                0.00    0.00       3/14          sObject::isProcDef() const [320]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [95]
[358]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [107]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[359]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [359]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [307]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [326]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [321]
[360]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [360]
                0.00    0.00       8/1478        tType::tType(BaseType) [144]
                0.00    0.00       4/353         tValue::tValue() [168]
                0.00    0.00       4/455         sObject::setParent(sObject*) [160]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/8           sList<sExpr>::n() const [336]
                0.00    0.00       4/4           sListFunct::object() const [379]
                0.00    0.00       4/109         sExpr::settype(tType const&) [187]
                0.00    0.00       4/663         tValue::~tValue() [155]
                0.00    0.00       3/96          sExpr::type() [188]
                0.00    0.00       3/3           sObject::isLocal() const [396]
                0.00    0.00       2/21          tType::isInt() const [284]
                0.00    0.00       1/842         tType::operator=(tType const&) [149]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[361]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       4/74          sExpr::sExpr() [206]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [251]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [250]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00       1/23          sIf::~sIf() <cycle 2> [341]
[362]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [362]
                                   4             sListFunct::~sListFunct() <cycle 1> [363]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [362]
[363]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00       4/95          sExpr::~sExpr() [189]
                                   4             sExprList::~sExprList() <cycle 1> [276]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [314]
[364]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       8/455         sObject::setParent(sObject*) [160]
                0.00    0.00       8/96          sExpr::type() [188]
                0.00    0.00       8/115         tType::isQuExpr() const [186]
                0.00    0.00       8/1052        tType::ord() const [146]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/4           sSubscript::nargs() const [380]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [251]
                0.00    0.00       4/21          tType::isInt() const [284]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [250]
                0.00    0.00       4/32          tType::isQuCond() const [254]
                0.00    0.00       4/4           sExpr::basetype() [368]
                0.00    0.00       4/1478        tType::tType(BaseType) [144]
                0.00    0.00       4/109         sExpr::settype(tType const&) [187]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[365]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [365]
                0.00    0.00       4/74          sExpr::sExpr() [206]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [251]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [274]
[366]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [366]
                                   4             sSubscript::~sSubscript() <cycle 1> [367]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [366]
[367]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [367]
                0.00    0.00       4/44          sVar::~sVar() [216]
                0.00    0.00       4/95          sExpr::~sExpr() [189]
                                   4             sExprList::~sExprList() <cycle 1> [276]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [364]
[368]    0.0    0.00    0.00       4         sExpr::basetype() [368]
                0.00    0.00       4/1013        tType::basetype() const [147]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[369]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [369]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00       2/23          sIf::~sIf() <cycle 2> [341]
[370]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [370]
                                   4             sLess::~sLess() <cycle 1> [371]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [370]
[371]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [371]
                                   4             sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [321]
[372]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [372]
                0.00    0.00       4/455         sObject::setParent(sObject*) [160]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [214]
                0.00    0.00       4/96          sExpr::type() [188]
                0.00    0.00       4/4           sLength::object() const [382]
                0.00    0.00       4/115         tType::isQuExpr() const [186]
                0.00    0.00       4/1478        tType::tType(BaseType) [144]
                0.00    0.00       4/109         sExpr::settype(tType const&) [187]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [375]
[373]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [373]
                0.00    0.00       4/74          sExpr::sExpr() [206]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [377]
[374]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [374]
                0.00    0.00       4/44          sVar::~sVar() [216]
                0.00    0.00       4/95          sExpr::~sExpr() [189]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[375]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [375]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [373]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [299]
[376]    0.0    0.00    0.00       4         sLength::~sLength() [376]
                0.00    0.00       4/4           sLength::~sLength() [377]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [376]
[377]    0.0    0.00    0.00       4         sLength::~sLength() [377]
                0.00    0.00       4/4           sUnOp::~sUnOp() [374]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [428]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [427]
[378]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [378]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [360]
[379]    0.0    0.00    0.00       4         sListFunct::object() const [379]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [364]
[380]    0.0    0.00    0.00       4         sSubscript::nargs() const [380]
                0.00    0.00       4/8           sList<sExpr>::n() const [336]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [321]
[381]    0.0    0.00    0.00       4         sLess::object() const [381]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [372]
[382]    0.0    0.00    0.00       4         sLength::object() const [382]
-----------------------------------------------
                0.00    0.00       4/4           sVar::typecheck(SymTable*, SymTable*) [214]
[383]    0.0    0.00    0.00       4         sObject::isConstDef() const [383]
                0.00    0.00       3/48          sConstDef::object() const [212]
                0.00    0.00       1/79          sVarDef::object() const [202]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [526]
[384]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [384]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [419]
[385]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [385]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [534]
[386]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [386]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [570]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[387]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [387]
-----------------------------------------------
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [389]
[388]    0.0    0.00    0.00       4         std::complex<double>::operator*=(double) [388]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
[389]    0.0    0.00    0.00       4         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [389]
                0.00    0.00       4/4           std::complex<double>::operator*=(double) [388]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [493]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [466]
[390]    0.0    0.00    0.00       3         yyalloc(unsigned long) [390]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [105]
[391]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [391]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [341]
[392]    0.0    0.00    0.00       3         sEqual::~sEqual() [392]
                0.00    0.00       3/3           sEqual::~sEqual() [393]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [392]
[393]    0.0    0.00    0.00       3         sEqual::~sEqual() [393]
                0.00    0.00       3/23          sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[394]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [394]
                0.00    0.00       6/167         sObject::def() const [182]
                0.00    0.00       6/96          sExpr::type() [188]
                0.00    0.00       3/455         sObject::setParent(sObject*) [160]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       3/21427       sDef::id() const [139]
                0.00    0.00       3/135         SymTab::getDef(std::string const&) const [184]
                0.00    0.00       3/115         tType::isQuExpr() const [186]
                0.00    0.00       3/5           sDef::settype(tType const&) [352]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [321]
[395]    0.0    0.00    0.00       3         sEqual::object() const [395]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [360]
[396]    0.0    0.00    0.00       3         sObject::isLocal() const [396]
                0.00    0.00       3/5           sObject::isGlobal() const [357]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [92]
[397]    0.0    0.00    0.00       3         sObject::isBennet() const [397]
                0.00    0.00       3/165         sObject::isSet(ObjFlag) const [183]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [517]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [430]
[398]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [398]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [491]
[399]    0.0    0.00    0.00       2         irqOn() [399]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [58]
[400]    0.0    0.00    0.00       2         duallog(int) [400]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [107]
[401]    0.0    0.00    0.00       2         yyCleanUp() [401]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [326]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [307]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[402]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [402]
                0.00    0.00       2/24          sStmt::sStmt(int) [268]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [297]
[403]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [403]
                                   2             sFor::~sFor() <cycle 2> [404]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [403]
[404]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [404]
                0.00    0.00       2/44          sVar::~sVar() [216]
                0.00    0.00       2/21          sConst::~sConst() [281]
                0.00    0.00       2/2           sSub::~sSub() [406]
                0.00    0.00       2/24          sStmt::~sStmt() [269]
                                   2             sStmtList::~sStmtList() <cycle 2> [302]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[405]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [405]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [404]
[406]    0.0    0.00    0.00       2         sSub::~sSub() [406]
                0.00    0.00       2/2           sSub::~sSub() [407]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [406]
[407]    0.0    0.00    0.00       2         sSub::~sSub() [407]
                0.00    0.00       2/23          sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[408]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [408]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [104]
[409]    0.0    0.00    0.00       2         tValue::tValue(double) [409]
                0.00    0.00       2/1478        tType::tType(BaseType) [144]
                0.00    0.00       2/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [113]
[410]    0.0    0.00    0.00       2         tValue::tValue(int) [410]
                0.00    0.00       2/1478        tType::tType(BaseType) [144]
                0.00    0.00       2/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[411]    0.0    0.00    0.00       2         objlist::objlist() [411]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [438]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[412]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [412]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [274]
[413]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [413]
                                   2             sConcat::~sConcat() <cycle 1> [414]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [413]
[414]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [414]
                                   2             sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [431]
[415]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [415]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [566]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [567]
[416]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [416]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [535]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [536]
[417]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [417]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [538]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [539]
[418]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [418]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [429]
[419]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [419]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [385]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [321]
[420]    0.0    0.00    0.00       2         sSub::object() const [420]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [422]
[421]    0.0    0.00    0.00       2         tValue::isInt() const [421]
                0.00    0.00       2/21          tType::isInt() const [284]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
[422]    0.0    0.00    0.00       2         tValue::toInt() const [422]
                0.00    0.00       2/2           tValue::isInt() const [421]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [321]
[423]    0.0    0.00    0.00       2         sConcat::object() const [423]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [524]
[424]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [424]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [525]
[425]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [425]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [430]
[426]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [426]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [429]
[427]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [427]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [378]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [429]
[428]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [428]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [378]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [43]
[429]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [429]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [427]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [428]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [419]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [534]
[430]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [430]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [398]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [426]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [432]
[431]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [431]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [415]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [434]
[432]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [432]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [431]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [434]
[433]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [433]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [438]
[434]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [434]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [433]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [432]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [442]
[435]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [435]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [553]
[436]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [436]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [515]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [439]
[437]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [437]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [411]
[438]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [438]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [434]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [440]
[439]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [439]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [437]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [441]
[440]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [440]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [439]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[441]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [441]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [440]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [443]
[442]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [442]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [435]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [570]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[443]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [443]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [442]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[444]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [444]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[445]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [445]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[446]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [446]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[447]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [447]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[448]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [448]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[449]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [449]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[450]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [450]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[451]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [451]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[452]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [452]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[453]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [453]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[454]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [454]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[455]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [455]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[456]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [456]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[457]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [457]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[458]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [458]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[459]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [459]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[462]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [462]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[463]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [463]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[464]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [464]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [62]
[465]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [465]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [326]
[466]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [466]
                0.00    0.00       2/3           yyalloc(unsigned long) [390]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[467]    0.0    0.00    0.00       1         initialize_readline() [467]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [456]
[468]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [444]
[469]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [469]
                0.00    0.00       1/1478        tType::tType(BaseType) [144]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [450]
[470]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [449]
[471]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [453]
[472]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [465]
[473]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [464]
[474]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [452]
[475]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [454]
[476]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [445]
[477]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [448]
[478]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [447]
[479]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [463]
[480]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [461]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [462]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [451]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [446]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [460]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [455]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nbitvecs [61]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [459]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [458]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [457]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[491]    0.0    0.00    0.00       1         parseopt(int, char**) [491]
                0.00    0.00       2/2           irqOn() [399]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [325]
                0.00    0.00       1/1           qc_srand(long) [492]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [491]
[492]    0.0    0.00    0.00       1         qc_srand(long) [492]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [326]
[493]    0.0    0.00    0.00       1         yyensure_buffer_stack() [493]
                0.00    0.00       1/3           yyalloc(unsigned long) [390]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::opElementary(int) [496]
[494]    0.0    0.00    0.00       1         opOperator::opOperator(int) [494]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::~opElementary() [497]
[495]    0.0    0.00    0.00       1         opOperator::~opOperator() [495]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::opMatrix(int) [511]
[496]    0.0    0.00    0.00       1         opElementary::opElementary(int) [496]
                0.00    0.00       1/1           opOperator::opOperator(int) [494]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::~opMatrix() [127]
[497]    0.0    0.00    0.00       1         opElementary::~opElementary() [497]
                0.00    0.00       1/1           opOperator::~opOperator() [495]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [105]
[498]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [498]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [341]
[499]    0.0    0.00    0.00       1         sOr::~sOr() [499]
                0.00    0.00       1/1           sOr::~sOr() [500]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [499]
[500]    0.0    0.00    0.00       1         sOr::~sOr() [500]
                0.00    0.00       1/23          sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [79]
[501]    0.0    0.00    0.00       1         sDef::basetype() [501]
                0.00    0.00       1/1013        tType::basetype() const [147]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[502]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [502]
                0.00    0.00       1/455         sObject::setParent(sObject*) [160]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       1/96          sExpr::type() [188]
                0.00    0.00       1/1           tType::isString() const [530]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [105]
[503]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [503]
                0.00    0.00       1/24          sStmt::sStmt(int) [268]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [297]
[504]    0.0    0.00    0.00       1         sExit::~sExit() [504]
                0.00    0.00       1/1           sExit::~sExit() [505]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [504]
[505]    0.0    0.00    0.00       1         sExit::~sExit() [505]
                0.00    0.00       1/21          sConst::~sConst() [281]
                0.00    0.00       1/24          sStmt::~sStmt() [269]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[506]    0.0    0.00    0.00       1         QuHeap::init() [506]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[507]    0.0    0.00    0.00       1         SymTab::~SymTab() [507]
                0.00    0.00       1/77          SymTab::~SymTab() [205]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [80]
[508]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [508]
                0.00    0.00       1/1478        tType::tType(BaseType) [144]
                0.00    0.00       1/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [104]
[509]    0.0    0.00    0.00       1         tValue::tValue(char const*) [509]
                0.00    0.00       1/1478        tType::tType(BaseType) [144]
                0.00    0.00       1/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [104]
[510]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [510]
                0.00    0.00       1/1478        tType::tType(BaseType) [144]
                0.00    0.00       1/450         tType::operator=(BaseType) [161]
-----------------------------------------------
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [121]
[511]    0.0    0.00    0.00       1         opMatrix::opMatrix(int) [511]
                0.00    0.00       1/1           opElementary::opElementary(int) [496]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [105]
[512]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [512]
                0.00    0.00       1/1478        tType::tType(BaseType) [144]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [248]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [211]
[513]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [513]
                0.00    0.00       1/1           sProcDef::~sProcDef() [514]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [513]
[514]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [514]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [249]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [436]
[515]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [515]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [568]
[516]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [516]
                0.00    0.00       1/663         tValue::~tValue() [155]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [549]
[517]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [517]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [398]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [541]
[518]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [518]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [542]
[519]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [519]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [543]
[520]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [520]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [544]
[521]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [521]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [545]
[522]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [522]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [546]
[523]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [523]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [537]
[524]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [524]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [424]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [540]
[525]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [525]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [425]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[526]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [526]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [384]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [321]
[527]    0.0    0.00    0.00       1         sOr::object() const [527]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[528]    0.0    0.00    0.00       1         sStmt::isInv() const [528]
                0.00    0.00       1/165         sObject::isSet(ObjFlag) const [183]
-----------------------------------------------
                0.00    0.00       1/1           tValue::isExpr() const [532]
[529]    0.0    0.00    0.00       1         tType::isExpr() const [529]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [502]
[530]    0.0    0.00    0.00       1         tType::isString() const [530]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[531]    0.0    0.00    0.00       1         QuHeap::nBits() const [531]
-----------------------------------------------
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [114]
[532]    0.0    0.00    0.00       1         tValue::isExpr() const [532]
                0.00    0.00       1/1           tType::isExpr() const [529]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[533]    0.0    0.00    0.00       1         sObject::isStmt() const [533]
                0.00    0.00       2/8           sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[534]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [534]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [386]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [430]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [575]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [537]
[535]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [535]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [417]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [537]
[536]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [536]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [417]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [43]
[537]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [537]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [535]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [536]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [524]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [540]
[538]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [538]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [418]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [540]
[539]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [539]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [418]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [43]
[540]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [540]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [538]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [539]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [525]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [550]
[541]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [541]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [518]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [551]
[542]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [542]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [519]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [554]
[543]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [543]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [520]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [555]
[544]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [544]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [521]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [560]
[545]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [545]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [522]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [561]
[546]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [546]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [523]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [576]
[547]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [547]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [578]
[548]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [548]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[549]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [549]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [517]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [552]
[550]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [550]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [541]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [553]
[551]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [551]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [542]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [569]
[552]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [552]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [550]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [570]
[553]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [553]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [436]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [551]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [558]
[554]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [554]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [543]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [559]
[555]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [555]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [544]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [559]
[556]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [556]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [572]
[557]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [557]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [571]
[558]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [558]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [554]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [572]
[559]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [559]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [556]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [555]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [564]
[560]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [560]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [565]
[561]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [561]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [546]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [565]
[562]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [562]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [574]
[563]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [563]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [573]
[564]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [564]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [560]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [574]
[565]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [565]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [562]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [561]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [119]
[566]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [566]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [416]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [118]
[567]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [567]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [416]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [43]
[568]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [568]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [516]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[569]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [569]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [552]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [43]
[570]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [570]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [387]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [553]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [443]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[571]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [571]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [558]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [43]
[572]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [572]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [557]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [559]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [577]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[573]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [573]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [564]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [43]
[574]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [574]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [563]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [579]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [565]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [534]
[575]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [575]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [577]
[576]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [576]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [547]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [572]
[577]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [577]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [576]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [579]
[578]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [578]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [548]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [574]
[579]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [579]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [578]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [444] _GLOBAL__sub_I_CONDDEF (syntax.cc) [29] bitvec::setlen(int) [167] SymTab::getentry(SymTable::entry*, std::string const&) const
 [445] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [26] bitvec::setbits(int, bitvec const&) [67] bitvec::length() const
 [446] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [31] bitvec::setbits(int, int, unsigned long) [70] bitvec::testeq(bitvec const&) const
 [447] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [16] bitvec::bitvec(int, unsigned long) [36] bitvec::getbits(int, int) const
 [448] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [28] bitvec::bitvec(bitvec const&) [76] bitvec::getword(int, int) const
 [449] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [21] bitvec::~bitvec() [65] bitvec::getword() const
 [450] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [69] bitvec::operator&=(bitvec const&) [75] bitvec::testless(bitvec const&) const
 [451] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [19] bitvec::operator=(bitvec const&) [85] bitvec::testzero() const
 [452] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [73] bitvec::operator=(unsigned long) [41] bitvec::hashfunct() const
 [453] _GLOBAL__sub_I_isErrorReported (error.cc) [35] bitvec::operator|=(bitvec const&) [83] bitvec::operator[](int) const
 [454] _GLOBAL__sub_I_isStateModified (quheap.cc) [321] sBinOp::typecheck(SymTable*, SymTable*) [395] sEqual::object() const
 [455] _GLOBAL__sub_I_main (qcl.cc) [298] sBinOp::sBinOp(sExpr*, sExpr*) [96] tError::object() const
 [456] _GLOBAL__sub_I_n_object (types.cc) [299] sBinOp::~sBinOp() [153] tValue::ord() const
  [61] _GLOBAL__sub_I_nbitvecs (bitvec.cc) [111] sConst::eval(SymTable*, SymTable*, QuHeap*) [117] tValue::conv(tType const&) const
 [457] _GLOBAL__sub_I_noperators (operator.cc) [290] sConst::typecheck(SymTable*, SymTable*) [208] tValue::type() const
 [458] _GLOBAL__sub_I_nstates (qustates.cc) [103] sConst::sConst(tValue const&) [421] tValue::isInt() const
 [459] _GLOBAL__sub_I_nterms (terms.cc) [281] sConst::~sConst() [422] tValue::toInt() const
 [460] _GLOBAL__sub_I_plotfile (plot.cc) [282] sConst::~sConst() [532] tValue::isExpr() const
 [461] _GLOBAL__sub_I_qcl_options (options.cc) [391] sEqual::sEqual(sExpr*, sExpr*) [350] tValue::isError() const
 [462] _GLOBAL__sub_I_shell_depth (debug.cc) [392] sEqual::~sEqual() [356] tValue::qustate() const
 [463] _GLOBAL__sub_I_yyObjList (parse.cc) [393] sEqual::~sEqual() [154] tValue::basetype() const
 [464] _GLOBAL__sub_I_yydebug (yacc.cc) [152] tValue::delpointer() [345] tValue::isQuExpr() const
 [465] _GLOBAL__sub_I_yyleng (qcl.lex) [89] tValue::assign(tValue const&) [54] quState::mapbits() const
 [359] yyScanFile(_IO_FILE*) [508] tValue::tValue(quState*, BaseType) [94] quState::mapmask() const
  [98] openqclfile(std::string) [509] tValue::tValue(char const*) [145] sArgDef::object() const
 [307] yy_flush_buffer(yy_buffer_state*) [100] tValue::tValue(quState&, BaseType) [423] sConcat::object() const
 [466] yy_create_buffer(_IO_FILE*, int) [90] tValue::tValue(tValue const&) [382] sLength::object() const
 [467] initialize_readline() [409] tValue::tValue(double) [295] sObject::inFunctDef() const
 [468] __static_initialization_and_destruction_0(int, int) (types.cc) [410] tValue::tValue(int) [319] sObject::inQuFunDef() const
 [469] __static_initialization_and_destruction_0(int, int) (syntax.cc) [311] tValue::tValue(long) [383] sObject::isConstDef() const
 [470] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [510] tValue::tValue(std::complex<double> const&) [171] sObject::isFunctDef() const
 [471] __static_initialization_and_destruction_0(int, int) (symbols.cc) [168] tValue::tValue() [262] sObject::isQuFunDef() const
 [472] __static_initialization_and_destruction_0(int, int) (error.cc) [155] tValue::~tValue() [163] sObject::isValueDef() const
 [473] __static_initialization_and_destruction_0(int, int) (qcl.lex) [102] tValue::operator=(tValue const&) [182] sObject::def() const
 [474] __static_initialization_and_destruction_0(int, int) (yacc.cc) [411] objlist::objlist() [166] sObject::isDef() const
 [475] __static_initialization_and_destruction_0(int, int) (print.cc) [124] quState::newclone() [183] sObject::isSet(ObjFlag) const
 [476] __static_initialization_and_destruction_0(int, int) (quheap.cc) [253] quState::quState(int) [533] sObject::isStmt() const
 [477] __static_initialization_and_destruction_0(int, int) (extern.cc) [256] quState::~quState() [148] sObject::parent() const
 [478] __static_initialization_and_destruction_0(int, int) (eval.cc) [175] sArgDef::sArgDef(tType const&, std::string*) [305] sObject::inQuDef() const
 [479] __static_initialization_and_destruction_0(int, int) (exec.cc) [176] sArgDef::~sArgDef() [396] sObject::isLocal() const
 [480] __static_initialization_and_destruction_0(int, int) (parse.cc) [177] sArgDef::~sArgDef() [306] sObject::isQuDef() const
 [481] __static_initialization_and_destruction_0(int, int) (options.cc) [412] sConcat::sConcat(sExpr*, sExpr*) [397] sObject::isBennet() const
 [482] __static_initialization_and_destruction_0(int, int) (debug.cc) [413] sConcat::~sConcat() [207] sObject::isExtern() const
 [483] __static_initialization_and_destruction_0(int, int) (cond.cc) [414] sConcat::~sConcat() [357] sObject::isGlobal() const
 [484] __static_initialization_and_destruction_0(int, int) (dump.cc) [375] sLength::sLength(sExpr*) [264] sObject::isCondDef() const
 [485] __static_initialization_and_destruction_0(int, int) (plot.cc) [376] sLength::~sLength() [235] sObject::isInclude() const
 [486] __static_initialization_and_destruction_0(int, int) (qcl.cc) [377] sLength::~sLength() [320] sObject::isProcDef() const
 [487] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [181] sObject::setFlag(ObjFlag, int) [278] sObject::isQuOpDef() const
 [488] __static_initialization_and_destruction_0(int, int) (terms.cc) [322] sObject::isSetRec(ObjFlag) [180] sObject::isRoutDef() const
 [489] __static_initialization_and_destruction_0(int, int) (qustates.cc) [160] sObject::setParent(sObject*) [202] sVarDef::object() const
 [490] __static_initialization_and_destruction_0(int, int) (operator.cc) [178] sObject::typecheck(SymTable*, SymTable*) [10] opMatrix::addterms(terminfo const&) const
  [84] zero(bitvec const&)   [158] sObject::sObject(unsigned int) [252] sDefList::object() const
 [399] irqOn()               [159] sObject::~sObject()   [209] sProcDef::object() const
 [104] yylex()                [79] sVarDef::define(SymTable*, SymTable*, QuHeap*) [164] sQuOpDef::object() const
 [400] duallog(int)          [109] sVarDef::typecheck(SymTable*, SymTable*) [30] termlist::hashfunct1(bitvec const&) const
   [5] ext_bit(sRoutDef const*, SymTable const*, int) [333] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [66] termlist::hashfunct2(bitvec const&) const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [342] sVarDef::~sVarDef() [87] termlist::nbits() const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [343] sVarDef::~sVarDef() [289] termlist::nterms() const
 [390] yyalloc(unsigned long) [191] SymTable::SymTable()  [60] termlist::operator[](int) const
 [105] yyparse()             [192] SymTable::~SymTable() [398] __gnu_cxx::new_allocator<tValue>::max_size() const
 [106] parseobj()            [511] opMatrix::opMatrix(int) [236] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [491] parseopt(int, char**) [127] opMatrix::~opMatrix() [384] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [492] qc_srand(long)        [110] sDefList::typecheck(SymTable*, SymTable*) [385] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [107] chksyntax(_IO_FILE*)  [220] sDefList::sDefList()  [424] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [401] yyCleanUp()           [221] sDefList::~sDefList() [425] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [326] yyrestart(_IO_FILE*)  [222] sDefList::~sDefList() [212] sConstDef::object() const
 [324] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [512] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [165] sQuFunDef::object() const
 [323] yy_get_next_buffer() (lex.cc) [513] sProcDef::~sProcDef() [203] sStmtList::object() const
 [266] yy_load_buffer_state() (lex.cc) [514] sProcDef::~sProcDef() [196] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [332] yy_get_previous_state() (lex.cc) [291] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [197] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [493] yyensure_buffer_stack() (lex.cc) [292] sQuOpDef::~sQuOpDef() [426] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [327] SymTabComb::SymTabComb(SymTable*, SymTable*) [293] sQuOpDef::~sQuOpDef() [237] std::_List_iterator<sObject*>::operator*() const
 [328] SymTabComb::~SymTabComb() [247] sRoutDef::args()  [150] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [329] SymTabComb::~SymTabComb() [101] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [223] std::list<sObject*, std::allocator<sObject*> >::end() const
 [494] opOperator::opOperator(int) [8] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [224] std::list<sObject*, std::allocator<sObject*> >::size() const
 [495] opOperator::~opOperator() [92] sRoutDef::typecheck(SymTable*, SymTable*) [225] std::list<sObject*, std::allocator<sObject*> >::begin() const
  [11] quSubState::opadd(bitvec const&, std::complex<double> const&) [248] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [534] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [286] quSubState::opend()   [249] sRoutDef::~sRoutDef() [427] std::vector<tValue, std::allocator<tValue> >::end() const
  [38] quSubState::opbegin() [120] terminfo::terminfo()  [386] std::vector<tValue, std::allocator<tValue> >::size() const
 [255] quSubState::quSubState(int) [123] terminfo::~terminfo() [428] std::vector<tValue, std::allocator<tValue> >::begin() const
 [257] quSubState::~quSubState() [55] termlist::add(term const&) [429] std::vector<tValue, std::allocator<tValue> >::empty() const
 [360] sListFunct::typecheck(SymTable*, SymTable*) [14] termlist::add(bitvec const&, std::complex<double> const&) [430] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [361] sListFunct::sListFunct(ObjType, sExprList*) [27] termlist::clear() [535] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [362] sListFunct::~sListFunct() [44] termlist::dellist() [536] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [363] sListFunct::~sListFunct() [18] termlist::newlist() [537] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [364] sSubscript::typecheck(SymTable*, SymTable*) [58] termlist::termlist(int, int) [538] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [365] sSubscript::sSubscript(sVar*, sExprList*) [45] termlist::~termlist() [539] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [366] sSubscript::~sSubscript() [515] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [540] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [367] sSubscript::~sSubscript() [516] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [68] std::complex<double>::imag() const
 [122] quBaseState::newsubstring(int, int) [517] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [59] std::complex<double>::real() const
  [12] quBaseState::opadd(bitvec const&, std::complex<double> const&) [116] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [541] std::allocator<tValue>::allocator()
 [279] quBaseState::opend()  [518] __gnu_cxx::new_allocator<tValue>::new_allocator() [542] std::allocator<tValue>::~allocator()
  [93] quBaseState::reset(bitvec const&) [519] __gnu_cxx::new_allocator<tValue>::~new_allocator() [543] std::allocator<QuHeap::centry>::allocator()
  [39] quBaseState::opbegin() [520] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [544] std::allocator<QuHeap::centry>::~allocator()
  [57] quBaseState::quBaseState(int, int) [521] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [545] std::allocator<QuHeap::quentry>::allocator()
  [46] quBaseState::~quBaseState() [522] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [546] std::allocator<QuHeap::quentry>::~allocator()
  [47] quBaseState::~quBaseState() [523] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [198] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  [82] quSubString::newsubstring(int, int) [230] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [199] std::allocator<sObject*>::~allocator()
  [72] quSubString::quSubString(int, int, quState&) [231] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [431] std::allocator<std::_List_node<sObject*> >::allocator()
 [258] quSubString::~quSubString() [194] __gnu_cxx::new_allocator<sObject*>::new_allocator() [432] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [259] quSubString::~quSubString() [195] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [238] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [496] opElementary::opElementary(int) [232] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [239] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [497] opElementary::~opElementary() [233] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [433] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [338] sIf::typecheck(SymTable*, SymTable*) [415] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [434] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [339] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [416] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [143] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [340] sIf::~sIf()           [378] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [435] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [341] sIf::~sIf()           [417] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [547] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [498] sOr::sOr(sExpr*, sExpr*) [418] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [548] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [499] sOr::~sOr()           [419] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [549] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [500] sOr::~sOr()           [524] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [550] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [352] sDef::settype(tType const&) [525] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [551] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [501] sDef::basetype()      [526] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [436] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [169] sDef::sDef(tType const&, std::string*) [108] sConstDef::define(SymTable*, SymTable*, QuHeap*) [387] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [170] sDef::~sDef()         [394] sConstDef::typecheck(SymTable*, SymTable*) [552] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [113] sFor::typecheck(SymTable*, SymTable*) [353] sConstDef::sConstDef(std::string*, sExpr*) [553] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [402] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [354] sConstDef::~sConstDef() [554] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [403] sFor::~sFor()         [355] sConstDef::~sConstDef() [555] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [404] sFor::~sFor()         [334] sExprList::typecheck(SymTable*, SymTable*) [556] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [405] sSub::sSub(sExpr*, sExpr*) [275] sExprList::sExprList() [557] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [406] sSub::~sSub()         [276] sExprList::~sExprList() [558] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [407] sSub::~sSub()         [277] sExprList::~sExprList() [559] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [114] sVar::eval(SymTable*, SymTable*, QuHeap*) [308] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [560] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [214] sVar::typecheck(SymTable*, SymTable*) [309] sQuFunDef::~sQuFunDef() [561] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [215] sVar::sVar(std::string*) [310] sQuFunDef::~sQuFunDef() [562] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [216] sVar::~sVar()         [300] sStmtList::typecheck(SymTable*, SymTable*) [563] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [217] sVar::~sVar()         [301] sStmtList::sStmtList() [564] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [128] term::set(bitvec const&, std::complex<double> const&) [302] sStmtList::~sStmtList() [565] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  [33] term::setampl(std::complex<double> const&) [303] sStmtList::~sStmtList() [185] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  [22] term::setvect(bitvec const&) [263] SymTabComb::getDef(std::string const&) const [193] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [17] term::term()          [330] quSubState::isbasestate() const [151] std::_List_const_iterator<sObject*>::operator++()
  [64] term::term(term const&) [42] quSubState::baseterm(int) const [437] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [32] term::~term()         [287] quSubState::baseterms() const [240] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [40] term::operator=(term const&) [379] sListFunct::object() const [241] std::list<sObject*, std::allocator<sObject*> >::end()
 [121] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [380] sSubscript::nargs() const [200] std::list<sObject*, std::allocator<sObject*> >::begin()
 [125] opBit::~opBit()       [260] quBaseState::isbasestate() const [242] std::list<sObject*, std::allocator<sObject*> >::front()
 [126] opBit::~opBit()        [53] quBaseState::map(bitvec const&) const [243] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [52] quBaseState::unmap(bitvec const&) const [244] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [314] sCall::typecheck(SymTable*, SymTable*) [130] quBaseState::basebits() const [245] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [315] sCall::sCall(std::string*, sExprList*, int) [50] quBaseState::baseterm(int) const [246] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [316] sCall::~sCall()       [288] quBaseState::baseterms() const [438] std::list<sObject*, std::allocator<sObject*> >::list()
 [317] sCall::~sCall()        [23] quSubString::map(bitvec const&) const [118] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [502] sExit::typecheck(SymTable*, SymTable*) [15] quSubString::unmap(bitvec const&) const [566] std::vector<tValue, std::allocator<tValue> >::end()
 [503] sExit::sExit(sExpr*)   [49] quSubString::mapoffs() const [567] std::vector<tValue, std::allocator<tValue> >::begin()
 [504] sExit::~sExit()         [9] opElementary::apply(quState&) const [568] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [505] sExit::~sExit()       [283] sIf::object() const   [119] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [188] sExpr::type()         [527] sOr::object() const   [569] std::vector<tValue, std::allocator<tValue> >::vector()
 [187] sExpr::settype(tType const&) [139] sDef::id() const [570] std::vector<tValue, std::allocator<tValue> >::~vector()
 [368] sExpr::basetype()     [162] sDef::type() const    [571] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [280] sExpr::sExpr(tType const&) [312] sFor::object() const [572] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [206] sExpr::sExpr()        [420] sSub::object() const  [573] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [189] sExpr::~sExpr()       [210] sVar::id() const      [574] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [369] sLess::sLess(sExpr*, sExpr*) [37] term::ampl() const [77] std::complex<double>::real()
 [370] sLess::~sLess()        [48] term::vect() const     [34] std::complex<double>::complex(double, double)
 [371] sLess::~sLess()        [74] term::nbits() const    [97] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
 [173] sList<sDef>::append(sDef*) [313] sCall::id() const [388] std::complex<double>::operator*=(double)
 [218] sList<sDef>::sList()  [335] sCall::object() const  [24] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [219] sList<sDef>::~sList() [381] sLess::object() const [226] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [265] sList<sExpr>::append(sExpr*) [156] sList<sDef>::next(void*&) const [201] sObject** std::__addressof<sObject*>(sObject*&)
 [273] sList<sExpr>::sList() [190] sList<sDef>::first(void*&) const [439] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [274] sList<sExpr>::~sList() [336] sList<sExpr>::n() const [227] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [270] sList<sStmt>::append(sStmt*) [250] sList<sExpr>::next(void*&) const [440] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [296] sList<sStmt>::sList() [251] sList<sExpr>::first(void*&) const [441] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [297] sList<sStmt>::~sList() [271] sList<sStmt>::next(void*&) const [575] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [346] sMult::sMult(sExpr*, sExpr*) [304] sList<sStmt>::first(void*&) const [78] std::pow(double, int)
 [347] sMult::~sMult()       [331] sMult::object() const [442] void std::_Destroy<tValue*>(tValue*, tValue*)
 [348] sMult::~sMult()       [528] sStmt::isInv() const  [443] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [268] sStmt::sStmt(int)     [146] tType::ord() const    [576] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [269] sStmt::~sStmt()       [284] tType::isInt() const  [577] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [372] sUnOp::typecheck(SymTable*, SymTable*) [318] tType::isCond() const [578] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [373] sUnOp::sUnOp(sExpr*)  [285] tType::isConv(tType const&) const [579] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [374] sUnOp::~sUnOp()       [529] tType::isExpr() const [228] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [144] tType::tType(BaseType) [349] tType::isError() const [141] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [408] tType::tType(BaseType, int) [179] tType::isQuReg() const [358] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [157] tType::tType(tType const&) [147] tType::basetype() const [140] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [161] tType::operator=(BaseType) [261] tType::isNumber() const [142] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [149] tType::operator=(tType const&) [254] tType::isQuCond() const [88] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
   [6] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [186] tType::isQuExpr() const [389] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
 [506] QuHeap::init()        [530] tType::isString() const [20] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  [99] QuHeap::addReg(quState*) [272] tType::isBoolean() const [95] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [80] QuHeap::qualloc(int, BaseType) [294] tType::isDefined() const [325] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
   [7] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [337] tType::isOrdered() const [351] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [56] QuHeap::QuHeap(int, int) [267] tType::isQuConst() const [51] operator&(bitvec const&, bitvec const&)
  [43] QuHeap::~QuHeap()     [234] tType::operator==(BaseType) const [81] operator~(bitvec const&)
  [91] SymTab::put(sDef*, tValue const&) [344] tType::operator==(tType const&) const [71] operator==(bitvec const&, bitvec const&)
 [211] SymTab::deltree(SymTable::entry*) [131] QuHeap::cond() const [229] operator new(unsigned long, void*)
 [172] SymTab::putentry(SymTable::entry*, SymTable::entry*) [129] QuHeap::cmask() const [25] operator|(bitvec const&, bitvec const&)
 [204] SymTab::SymTab(int)   [531] QuHeap::nBits() const [133] <cycle 1>
 [507] SymTab::~SymTab()     [132] QuHeap::ncond() const [134] <cycle 2>
 [205] SymTab::~SymTab()     [184] SymTab::getDef(std::string const&) const [112] <cycle 3>
 [213] bitvec::qnot()        [174] SymTab::getRef(std::string const&, ObjType*) const [13] <cycle 4>
  [86] bitvec::setbit(int, int) [115] SymTab::getVal(std::string const&, ObjType*) const [63] <cycle 5>
