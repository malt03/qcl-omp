Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 16.67      0.01     0.01   127694     0.00     0.00  bitvec::~bitvec()
 16.67      0.02     0.01    68091     0.00     0.00  term::ampl() const
 16.67      0.03     0.01    24073     0.00     0.00  bitvec::hashfunct() const
 16.67      0.04     0.01    22551     0.00     0.00  bitvec::setbits(int, int, unsigned long)
 16.67      0.05     0.01    22551     0.00     0.00  quSubString::unmap(bitvec const&) const
 16.67      0.06     0.01    11266     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.00      0.06     0.00   124412     0.00     0.00  term::vect() const
  0.00      0.06     0.00    78914     0.00     0.00  bitvec::bitvec(bitvec const&)
  0.00      0.06     0.00    58906     0.00     0.00  bitvec::setlen(int)
  0.00      0.06     0.00    58906     0.00     0.00  bitvec::operator=(bitvec const&)
  0.00      0.06     0.00    48780     0.00     0.00  bitvec::bitvec(int, unsigned long)
  0.00      0.06     0.00    34043     0.00     0.00  quState::mapbits() const
  0.00      0.06     0.00    33814     0.00     0.00  quSubString::mapoffs() const
  0.00      0.06     0.00    33794     0.00     0.00  bitvec::length() const
  0.00      0.06     0.00    32766     0.00     0.00  std::complex<double>::imag() const
  0.00      0.06     0.00    32766     0.00     0.00  std::complex<double>::real() const
  0.00      0.06     0.00    26156     0.00     0.00  std::complex<double>::complex(double, double)
  0.00      0.06     0.00    25086     0.00     0.00  term::setvect(bitvec const&)
  0.00      0.06     0.00    24067     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  0.00      0.06     0.00    24063     0.00     0.00  term::setampl(std::complex<double> const&)
  0.00      0.06     0.00    24063     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  0.00      0.06     0.00    22551     0.00     0.00  bitvec::setbits(int, bitvec const&)
  0.00      0.06     0.00    22551     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.00      0.06     0.00    22528     0.00     0.00  bitvec::operator|=(bitvec const&)
  0.00      0.06     0.00    22527     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.06     0.00    22526     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.06     0.00    22526     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.00      0.06     0.00    22526     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      0.06     0.00    22526     0.00     0.00  operator|(bitvec const&, bitvec const&)
  0.00      0.06     0.00    21506     0.00     0.00  sDef::id() const
  0.00      0.06     0.00    14879     0.00     0.00  term::~term()
  0.00      0.06     0.00    11283     0.00     0.00  terminfo::~terminfo()
  0.00      0.06     0.00    11265     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.00      0.06     0.00    11263     0.00     0.00  term::term(term const&)
  0.00      0.06     0.00    11263     0.00     0.00  term::operator=(term const&)
  0.00      0.06     0.00    11263     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.00      0.06     0.00    11263     0.00     0.00  quSubState::baseterm(int) const
  0.00      0.06     0.00    11263     0.00     0.00  quBaseState::map(bitvec const&) const
  0.00      0.06     0.00    11263     0.00     0.00  quBaseState::baseterm(int) const
  0.00      0.06     0.00    11263     0.00     0.00  quSubString::map(bitvec const&) const
  0.00      0.06     0.00    11263     0.00     0.00  bitvec::getbits(int, int) const
  0.00      0.06     0.00    11263     0.00     0.00  bitvec::getword() const
  0.00      0.06     0.00    11263     0.00     0.00  opMatrix::addterms(terminfo const&) const
  0.00      0.06     0.00    11263     0.00     0.00  termlist::operator[](int) const
  0.00      0.06     0.00    10246     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.00      0.06     0.00    10246     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.00      0.06     0.00    10240     0.00     0.00  std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
  0.00      0.06     0.00    10240     0.00     0.00  std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      0.06     0.00     6480     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.06     0.00     4160     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.06     0.00     3894     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.06     0.00     3616     0.00     0.00  term::term()
  0.00      0.06     0.00     2917     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      0.06     0.00     2346     0.00     0.00  yylex()
  0.00      0.06     0.00     1536     0.00     0.00  termlist::add(term const&)
  0.00      0.06     0.00     1488     0.00     0.00  tType::tType(BaseType)
  0.00      0.06     0.00     1110     0.00     0.00  sArgDef::object() const
  0.00      0.06     0.00     1068     0.00     0.00  tType::ord() const
  0.00      0.06     0.00     1029     0.00     0.00  tType::basetype() const
  0.00      0.06     0.00      889     0.00     0.00  sObject::parent() const
  0.00      0.06     0.00      852     0.00     0.00  tType::operator=(tType const&)
  0.00      0.06     0.00      830     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      0.06     0.00      786     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      0.06     0.00      702     0.00     0.00  tValue::delpointer()
  0.00      0.06     0.00      702     0.00     0.00  tValue::ord() const
  0.00      0.06     0.00      702     0.00     0.00  tValue::basetype() const
  0.00      0.06     0.00      670     0.00     0.00  tValue::~tValue()
  0.00      0.06     0.00      556     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      0.06     0.00      538     0.00     0.00  tType::tType(tType const&)
  0.00      0.06     0.00      518     0.00     0.00  sObject::sObject(unsigned int)
  0.00      0.06     0.00      518     0.00     0.00  sObject::~sObject()
  0.00      0.06     0.00      456     0.00     0.00  sObject::setParent(sObject*)
  0.00      0.06     0.00      455     0.00     0.00  tType::operator=(BaseType)
  0.00      0.06     0.00      376     0.00     0.00  sDef::type() const
  0.00      0.06     0.00      374     0.00     0.00  sObject::isValueDef() const
  0.00      0.06     0.00      374     0.00     0.00  sQuOpDef::object() const
  0.00      0.06     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      0.06     0.00      367     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      0.06     0.00      367     0.00     0.00  sObject::isDef() const
  0.00      0.06     0.00      357     0.00     0.00  tValue::tValue()
  0.00      0.06     0.00      325     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      0.06     0.00      322     0.00     0.00  tValue::assign(tValue const&)
  0.00      0.06     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      0.06     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      0.06     0.00      295     0.00     0.00  sObject::isFunctDef() const
  0.00      0.06     0.00      290     0.00     0.00  tValue::tValue(tValue const&)
  0.00      0.06     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      0.06     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      0.06     0.00      265     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      0.06     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      0.06     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.06     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.06     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      0.06     0.00      255     0.00     0.00  sObject::isRoutDef() const
  0.00      0.06     0.00      177     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      0.06     0.00      171     0.00     0.00  sObject::def() const
  0.00      0.06     0.00      171     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      0.06     0.00      139     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      0.06     0.00      126     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.06     0.00      122     0.00     0.00  tType::isQuExpr() const
  0.00      0.06     0.00      111     0.00     0.00  sExpr::settype(tType const&)
  0.00      0.06     0.00       98     0.00     0.00  sExpr::type()
  0.00      0.06     0.00       97     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      0.06     0.00       96     0.00     0.00  sExpr::~sExpr()
  0.00      0.06     0.00       88     0.00     0.00  SymTable::SymTable()
  0.00      0.06     0.00       88     0.00     0.00  SymTable::~SymTable()
  0.00      0.06     0.00       88     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      0.06     0.00       85     0.00     0.00  sVarDef::object() const
  0.00      0.06     0.00       84     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      0.06     0.00       84     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      0.06     0.00       84     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      0.06     0.00       84     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      0.06     0.00       84     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      0.06     0.00       84     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      0.06     0.00       84     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      0.06     0.00       84     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      0.06     0.00       78     0.00     0.00  SymTab::SymTab(int)
  0.00      0.06     0.00       78     0.00     0.00  SymTab::~SymTab()
  0.00      0.06     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      0.06     0.00       75     0.00     0.00  sExpr::sExpr()
  0.00      0.06     0.00       74     0.00     0.00  sObject::isExtern() const
  0.00      0.06     0.00       72     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      0.06     0.00       64     0.00     0.00  tValue::type() const
  0.00      0.06     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      0.06     0.00       56     0.00     0.00  sVar::id() const
  0.00      0.06     0.00       51     0.00     0.00  quState::newclone()
  0.00      0.06     0.00       49     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      0.06     0.00       48     0.00     0.00  bitvec::qnot()
  0.00      0.06     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      0.06     0.00       46     0.00     0.00  operator~(bitvec const&)
  0.00      0.06     0.00       45     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       45     0.00     0.00  sVar::sVar(std::string*)
  0.00      0.06     0.00       45     0.00     0.00  sVar::~sVar()
  0.00      0.06     0.00       45     0.00     0.00  sVar::~sVar()
  0.00      0.06     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      0.06     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      0.06     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      0.06     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.06     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.06     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      0.06     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      0.06     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      0.06     0.00       44     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      0.06     0.00       44     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      0.06     0.00       44     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      0.06     0.00       43     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.06     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      0.06     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      0.06     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      0.06     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      0.06     0.00       42     0.00     0.00  sObject::isInclude() const
  0.00      0.06     0.00       42     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      0.06     0.00       42     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      0.06     0.00       42     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      0.06     0.00       42     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      0.06     0.00       42     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      0.06     0.00       41     0.00     0.00  sRoutDef::args()
  0.00      0.06     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      0.06     0.00       38     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      0.06     0.00       37     0.00     0.00  quState::quState(int)
  0.00      0.06     0.00       37     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      0.06     0.00       36     0.00     0.00  quSubState::quSubState(int)
  0.00      0.06     0.00       36     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.00      0.06     0.00       36     0.00     0.00  quState::~quState()
  0.00      0.06     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.06     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.06     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      0.06     0.00       35     0.00     0.00  quSubState::~quSubState()
  0.00      0.06     0.00       35     0.00     0.00  quSubString::newsubstring(int, int)
  0.00      0.06     0.00       35     0.00     0.00  quSubString::~quSubString()
  0.00      0.06     0.00       35     0.00     0.00  quSubString::~quSubString()
  0.00      0.06     0.00       35     0.00     0.00  quBaseState::isbasestate() const
  0.00      0.06     0.00       34     0.00     0.00  sDefList::object() const
  0.00      0.06     0.00       32     0.00     0.00  tValue::operator=(tValue const&)
  0.00      0.06     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      0.06     0.00       31     0.00     0.00  sObject::isCondDef() const
  0.00      0.06     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      0.06     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      0.06     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      0.06     0.00       28     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      0.06     0.00       27     0.00     0.00  termlist::clear()
  0.00      0.06     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      0.06     0.00       26     0.00     0.00  tType::isQuConst() const
  0.00      0.06     0.00       25     0.00     0.00  sStmt::sStmt(int)
  0.00      0.06     0.00       25     0.00     0.00  sStmt::~sStmt()
  0.00      0.06     0.00       25     0.00     0.00  quState::mapmask() const
  0.00      0.06     0.00       23     0.00     0.00  sList<sExpr>::sList()
  0.00      0.06     0.00       23     0.00     0.00  sList<sExpr>::~sList()
  0.00      0.06     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      0.06     0.00       23     0.00     0.00  sExprList::sExprList()
  0.00      0.06     0.00       23     0.00     0.00  sExprList::~sExprList()
  0.00      0.06     0.00       23     0.00     0.00  sExprList::~sExprList()
  0.00      0.06     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      0.06     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      0.06     0.00       23     0.00     0.00  sObject::isQuOpDef() const
  0.00      0.06     0.00       22     0.00     0.00  tType::isConv(tType const&) const
  0.00      0.06     0.00       21     0.00     0.00  quBaseState::opend()
  0.00      0.06     0.00       21     0.00     0.00  quBaseState::opbegin()
  0.00      0.06     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      0.06     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      0.06     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.06     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.06     0.00       21     0.00     0.00  sIf::object() const
  0.00      0.06     0.00       21     0.00     0.00  tType::isInt() const
  0.00      0.06     0.00       20     0.00     0.00  quSubState::opend()
  0.00      0.06     0.00       20     0.00     0.00  quSubState::opbegin()
  0.00      0.06     0.00       20     0.00     0.00  terminfo::terminfo()
  0.00      0.06     0.00       20     0.00     0.00  quSubState::baseterms() const
  0.00      0.06     0.00       20     0.00     0.00  quBaseState::baseterms() const
  0.00      0.06     0.00       20     0.00     2.99  opElementary::apply(quState&) const
  0.00      0.06     0.00       20     0.00     0.00  sObject::inFunctDef() const
  0.00      0.06     0.00       20     0.00     0.00  termlist::nterms() const
  0.00      0.06     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.06     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.06     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.06     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      0.06     0.00       19     0.00     0.00  sObject::inQuDef() const
  0.00      0.06     0.00       19     0.00     0.00  sObject::isQuDef() const
  0.00      0.06     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      0.06     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      0.06     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      0.06     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      0.06     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      0.06     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.06     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.06     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      0.06     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      0.06     0.00       17     0.00     0.00  sCall::id() const
  0.00      0.06     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.06     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.06     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.06     0.00       15     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       15     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      0.06     0.00       15     0.00     0.00  sCall::~sCall()
  0.00      0.06     0.00       15     0.00     0.00  sCall::~sCall()
  0.00      0.06     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      0.06     0.00       15     0.00     0.00  quSubState::isbasestate() const
  0.00      0.06     0.00       15     0.00     0.00  sFor::object() const
  0.00      0.06     0.00       15     0.00     0.00  sObject::inQuFunDef() const
  0.00      0.06     0.00       15     0.00     0.00  sObject::isProcDef() const
  0.00      0.06     0.00       14     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      0.06     0.00       14     0.00     0.00  tType::isCond() const
  0.00      0.06     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00       13     0.00     0.00  sCall::object() const
  0.00      0.06     0.00       13     0.00     0.00  tValue::isQuExpr() const
  0.00      0.06     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      0.06     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      0.06     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.06     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      0.06     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      0.06     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.06     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.06     0.00       10     0.00     0.00  bitvec::operator[](int) const
  0.00      0.06     0.00        9     0.00     0.00  sMult::object() const
  0.00      0.06     0.00        9     0.00     0.00  tType::operator==(tType const&) const
  0.00      0.06     0.00        9     0.00     0.00  tValue::qustate() const
  0.00      0.06     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      0.06     0.00        8     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      0.06     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      0.06     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      0.06     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      0.06     0.00        8     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      0.06     0.00        8     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      0.06     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      0.06     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.06     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.06     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.06     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.06     0.00        7     0.00     0.00  tType::isError() const
  0.00      0.06     0.00        7     0.00     0.00  tValue::isError() const
  0.00      0.06     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      0.06     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.06     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.06     0.00        6     0.00     0.00  termlist::newlist()
  0.00      0.06     0.00        6     0.00     0.00  sObject::isGlobal() const
  0.00      0.06     0.00        6     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.00      0.06     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.06     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      0.06     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      0.06     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.06     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.06     0.00        5     0.00     0.00  sObject::isConstDef() const
  0.00      0.06     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.06     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.06     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      0.06     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      0.06     0.00        4     0.00     0.00  zero(bitvec const&)
  0.00      0.06     0.00        4     0.00     0.00  yyparse()
  0.00      0.06     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      0.06     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.06     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.06     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      0.06     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.06     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.06     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      0.06     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      0.06     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.06     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.06     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      0.06     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      0.06     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.06     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      0.06     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.06     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.06     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      0.06     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      0.06     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      0.06     0.00        4     0.00     0.00  sLess::object() const
  0.00      0.06     0.00        4     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      0.06     0.00        4     0.00     0.00  bitvec::testzero() const
  0.00      0.06     0.00        4     0.00     0.00  sLength::object() const
  0.00      0.06     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.06     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.06     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      0.06     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      0.06     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      0.06     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      0.06     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.06     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.06     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.06     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        3     0.00     0.00  sEqual::object() const
  0.00      0.06     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      0.06     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      0.06     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      0.06     0.00        2     0.00     0.00  irqOn()
  0.00      0.06     0.00        2     0.00     0.00  duallog(int)
  0.00      0.06     0.00        2     0.00    29.91  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      0.06     0.00        2     0.00    29.92  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.06     0.00        2     0.00    29.92  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.06     0.00        2     0.00     0.00  parseobj()
  0.00      0.06     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      0.06     0.00        2     0.00     0.00  yyCleanUp()
  0.00      0.06     0.00        2     0.00     0.00  opOperator::opOperator(int)
  0.00      0.06     0.00        2     0.00     0.00  opOperator::~opOperator()
  0.00      0.06     0.00        2     0.00     0.00  opElementary::opElementary(int)
  0.00      0.06     0.00        2     0.00     0.00  opElementary::~opElementary()
  0.00      0.06     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      0.06     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.06     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.06     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      0.06     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.06     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.06     0.00        2     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.06     0.00        2     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      0.06     0.00        2     0.00     0.00  opBit::~opBit()
  0.00      0.06     0.00        2     0.00     0.00  opBit::~opBit()
  0.00      0.06     0.00        2     0.00    29.92  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      0.06     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      0.06     0.00        2     0.00    29.91  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      0.06     0.00        2     0.00    29.91  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      0.06     0.00        2     0.00     0.00  SymTab::~SymTab()
  0.00      0.06     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      0.06     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      0.06     0.00        2     0.00     0.00  objlist::objlist()
  0.00      0.06     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      0.06     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.06     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.06     0.00        2     0.00     0.00  opMatrix::opMatrix(int)
  0.00      0.06     0.00        2     0.00     0.00  opMatrix::~opMatrix()
  0.00      0.06     0.00        2     0.00    29.91  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      0.06     0.00        2     0.00     0.08  termlist::dellist()
  0.00      0.06     0.00        2     0.00     0.00  termlist::termlist(int, int)
  0.00      0.06     0.00        2     0.00     0.08  termlist::~termlist()
  0.00      0.06     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      0.06     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      0.06     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      0.06     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      0.06     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.06     0.00        2     0.00     0.00  sSub::object() const
  0.00      0.06     0.00        2     0.00     0.00  sStmt::isInv() const
  0.00      0.06     0.00        2     0.00     0.00  tType::isExpr() const
  0.00      0.06     0.00        2     0.00     0.00  QuHeap::cond() const
  0.00      0.06     0.00        2     0.00     0.00  QuHeap::cmask() const
  0.00      0.06     0.00        2     0.00     0.00  QuHeap::nBits() const
  0.00      0.06     0.00        2     0.00     0.00  QuHeap::ncond() const
  0.00      0.06     0.00        2     0.00     0.00  tValue::conv(tType const&) const
  0.00      0.06     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      0.06     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      0.06     0.00        2     0.00     0.00  tValue::isExpr() const
  0.00      0.06     0.00        2     0.00     0.00  sConcat::object() const
  0.00      0.06     0.00        2     0.00     0.00  sObject::isStmt() const
  0.00      0.06     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      0.06     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      0.06     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      0.06     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      0.06     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      0.06     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      0.06     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      0.06     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      0.06     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      0.06     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      0.06     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      0.06     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      0.06     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      0.06     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.06     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      0.06     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.06     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.06     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.06     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      0.06     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_qc_check_txt
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      0.06     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      0.06     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      0.06     0.00        1     0.00     0.00  initialize_readline()
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.06     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      0.06     0.00        1     0.00     0.00  qc_srand(long)
  0.00      0.06     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      0.06     0.00        1     0.00     0.00  quBaseState::reset(bitvec const&)
  0.00      0.06     0.00        1     0.00     0.00  quBaseState::quBaseState(int, int)
  0.00      0.06     0.00        1     0.00     0.16  quBaseState::~quBaseState()
  0.00      0.06     0.00        1     0.00     0.16  quBaseState::~quBaseState()
  0.00      0.06     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      0.06     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.06     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.06     0.00        1     0.00     0.00  sDef::basetype()
  0.00      0.06     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      0.06     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      0.06     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.06     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.06     0.00        1     0.00     0.00  QuHeap::init()
  0.00      0.06     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      0.06     0.00        1     0.00     0.00  QuHeap::qualloc(int, BaseType)
  0.00      0.06     0.00        1     0.00     0.00  QuHeap::QuHeap(int, int)
  0.00      0.06     0.00        1     0.00     0.16  QuHeap::~QuHeap()
  0.00      0.06     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      0.06     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      0.06     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      0.06     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      0.06     0.00        1     0.00     0.00  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.06     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      0.06     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.06     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      0.06     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      0.06     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      0.06     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.06     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      0.06     0.00        1     0.00     0.00  sOr::object() const
  0.00      0.06     0.00        1     0.00     0.00  tType::isString() const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      0.06     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      0.06     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.06     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      0.06     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      0.06     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      0.06     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.06     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.06     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      0.06     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.06     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 16.67% of 0.06 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.06                 main [1]
                0.00    0.06       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [43]
                0.00    0.00       2/78          SymTab::SymTab(int) [152]
                0.00    0.00       2/78          SymTab::~SymTab() [153]
                0.00    0.00       1/1           initialize_readline() [463]
                0.00    0.00       1/1           parseopt(int, char**) [487]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
-----------------------------------------------
                0.00    0.06       2/2           main [1]
[2]     99.7    0.00    0.06       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.06       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       4/4           openqclfile(std::string) [331]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [377]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [330]
-----------------------------------------------
                0.00    0.06       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     99.7    0.00    0.06       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.06       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::size() const [177]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::front() [194]
                0.00    0.00      42/42          sObject::isInclude() const [187]
                0.00    0.00      42/367         sObject::isDef() const [113]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::pop_front() [197]
                0.00    0.00      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [207]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       2/2           parseobj() [376]
                0.00    0.00       2/15          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00       2/2           sObject::isStmt() const [418]
                0.00    0.00       2/15          sCall::~sCall() [277]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [312]
-----------------------------------------------
                0.00    0.06       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     99.7    0.00    0.06       2         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.06       2/2           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       4/25          quState::mapmask() const [36]
                0.00    0.00       2/11265       operator&(bitvec const&, bitvec const&) [22]
                0.00    0.00      10/127694      bitvec::~bitvec() [16]
                0.00    0.00       6/670         tValue::~tValue() [101]
                0.00    0.00       6/9           tValue::qustate() const [299]
                0.00    0.00       4/41          sRoutDef::args() [199]
                0.00    0.00       4/4           zero(bitvec const&) [332]
                0.00    0.00       2/2           QuHeap::nBits() const [411]
                0.00    0.00       2/357         tValue::tValue() [114]
                0.00    0.00       2/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00       2/17          sCall::id() const [271]
                0.00    0.00       2/139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00       2/15          sObject::isProcDef() const [283]
                0.00    0.00       2/19          sObject::isQuDef() const [260]
                0.00    0.00       2/78          SymTab::SymTab(int) [152]
                0.00    0.00       2/37          sList<sExpr>::first(void*&) const [203]
                0.00    0.00       2/97          sList<sDef>::first(void*&) const [138]
                0.00    0.00       2/376         sDef::type() const [108]
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       2/2           tValue::conv(tType const&) const [413]
                0.00    0.00       2/32          tValue::operator=(tValue const&) [217]
                0.00    0.00       2/7           tValue::isError() const [316]
                0.00    0.00       2/325         SymTab::put(sDef*, tValue const&) [115]
                0.00    0.00       2/13          tValue::isQuExpr() const [288]
                0.00    0.00       2/22528       bitvec::operator|=(bitvec const&) [69]
                0.00    0.00       2/34043       quState::mapbits() const [60]
                0.00    0.00       2/38          sList<sExpr>::next(void*&) const [201]
                0.00    0.00       2/556         sList<sDef>::next(void*&) const [102]
                0.00    0.00       2/31          sObject::isCondDef() const [219]
                0.00    0.00       2/2           QuHeap::cond() const [409]
                0.00    0.00       2/2           QuHeap::cmask() const [410]
                0.00    0.00       2/2           sStmt::isInv() const [407]
-----------------------------------------------
                0.00    0.06       2/2           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
[5]     99.7    0.00    0.06       2         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.06      20/20          opElementary::apply(quState&) const [9]
                0.00    0.00       2/2           opBit::~opBit() [40]
                0.00    0.00       2/2           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
                0.00    0.00      22/34043       quState::mapbits() const [60]
                0.00    0.00      20/36          quSubString::newsubstring(int, int) <cycle 5> [212]
                0.00    0.00      20/35          quSubString::~quSubString() [213]
                0.00    0.00      12/26156       std::complex<double>::complex(double, double) [65]
                0.00    0.00       4/21506       sDef::id() const [73]
                0.00    0.00       2/265         SymTab::getRef(std::string const&, ObjType*) const [123]
                0.00    0.00       2/13          tValue::isQuExpr() const [288]
                0.00    0.00       2/9           tValue::qustate() const [299]
-----------------------------------------------
                0.00    0.06       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[6]     99.7    0.00    0.06       2         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.06       2/2           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.00       2/31          sObject::isCondDef() const [219]
-----------------------------------------------
                0.00    0.06       2/2           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
[7]     99.7    0.00    0.06       2         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.06       2/2           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       2/2           SymTab::~SymTab() [392]
-----------------------------------------------
                0.00    0.06       2/2           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[8]     99.7    0.00    0.06       2         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.06       2/2           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       2/357         tValue::tValue() [114]
                0.00    0.00       2/74          sObject::isExtern() const [156]
                0.00    0.00       2/670         tValue::~tValue() [101]
-----------------------------------------------
                0.00    0.06      20/20          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[9]     99.7    0.00    0.06      20         opElementary::apply(quState&) const [9]
                0.00    0.04   11263/11263       opMatrix::addterms(terminfo const&) const [10]
                0.00    0.01   11263/11265       operator&(bitvec const&, bitvec const&) [22]
                0.00    0.00   22586/127694      bitvec::~bitvec() [16]
                0.00    0.00   11283/11283       terminfo::~terminfo() [24]
                0.00    0.00   11263/11263       terminfo::terminfo(terminfo const&) [27]
                0.00    0.00   11263/11263       term::operator=(term const&) [26]
                0.00    0.00   11263/11263       quSubString::map(bitvec const&) const [29]
                0.00    0.00      20/25          quState::mapmask() const [36]
                0.00    0.00   22526/124412      term::vect() const [55]
                0.00    0.00   11283/58906       bitvec::operator=(bitvec const&) [58]
                0.00    0.00   11263/11263       quSubState::baseterm(int) const [74]
                0.00    0.00   11263/25086       term::setvect(bitvec const&) [66]
                0.00    0.00      20/20          terminfo::terminfo() [249]
                0.00    0.00      20/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00      20/34043       quState::mapbits() const [60]
                0.00    0.00      20/20          quSubState::opbegin() [248]
                0.00    0.00      20/46          operator~(bitvec const&) [165]
                0.00    0.00      20/20          quSubState::baseterms() const [250]
                0.00    0.00      20/20          quSubState::opend() [247]
-----------------------------------------------
                0.00    0.04   11263/11263       opElementary::apply(quState&) const [9]
[10]    70.1    0.00    0.04   11263         opMatrix::addterms(terminfo const&) const [10]
                0.01    0.01   22526/22551       quSubString::unmap(bitvec const&) const [11]
                0.00    0.01   22526/22526       quSubState::opadd(bitvec const&, std::complex<double> const&) [14]
                0.00    0.00   33789/68091       term::ampl() const [17]
                0.00    0.00   45052/127694      bitvec::~bitvec() [16]
                0.00    0.00   67578/124412      term::vect() const [55]
                0.00    0.00   33789/33794       bitvec::length() const [62]
                0.00    0.00   22526/22526       std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [71]
                0.00    0.00   22526/22526       operator|(bitvec const&, bitvec const&) [72]
                0.00    0.00   11263/26156       std::complex<double>::complex(double, double) [65]
                0.00    0.00   11263/11263       bitvec::getword() const [78]
-----------------------------------------------
                0.00    0.00      25/22551       quState::mapmask() const [36]
                0.01    0.01   22526/22551       opMatrix::addterms(terminfo const&) const [10]
[11]    36.3    0.01    0.01   22551         quSubString::unmap(bitvec const&) const [11]
                0.00    0.01   22551/22551       bitvec::setbits(int, bitvec const&) [19]
                0.00    0.00   22551/127694      bitvec::~bitvec() [16]
                0.00    0.00   22551/34043       quState::mapbits() const [60]
                0.00    0.00   22551/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00   22551/33814       quSubString::mapoffs() const [61]
                0.00    0.00   22551/22551       quBaseState::unmap(bitvec const&) const [68]
-----------------------------------------------
[12]    19.7    0.00    0.01   22527+3072    <cycle 4 as a whole> [12]
                0.00    0.01   24063+4           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.00    1536             termlist::add(term const&) <cycle 4> [30]
-----------------------------------------------
                0.00    0.00       1/22527       quBaseState::reset(bitvec const&) [46]
                0.00    0.01   22526/22527       quSubState::opadd(bitvec const&, std::complex<double> const&) [14]
[13]    19.7    0.00    0.01   22527         quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.00    0.01   22527/22527       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
-----------------------------------------------
                0.00    0.01   22526/22526       opMatrix::addterms(terminfo const&) const [10]
[14]    19.7    0.00    0.01   22526         quSubState::opadd(bitvec const&, std::complex<double> const&) [14]
                0.00    0.01   22526/22527       quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
-----------------------------------------------
                                   4             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                                1536             termlist::add(term const&) <cycle 4> [30]
                0.00    0.01   22527/22527       quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
[15]    19.4    0.00    0.01   24063+4       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.01   24067/24067       termlist::hashfunct1(bitvec const&) const [23]
                0.00    0.00   10240/68091       term::ampl() const [17]
                0.00    0.00    1536/14879       term::~term() [28]
                0.00    0.00       6/6           termlist::hashfunct2(bitvec const&) const [37]
                0.00    0.00   24063/24063       term::setampl(std::complex<double> const&) [67]
                0.00    0.00   13823/25086       term::setvect(bitvec const&) [66]
                0.00    0.00   10246/10246       operator==(bitvec const&, bitvec const&) [81]
                0.00    0.00   10246/124412      term::vect() const [55]
                0.00    0.00   10240/10240       std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [83]
                0.00    0.00       4/6           termlist::newlist() [320]
                0.00    0.00       4/27          termlist::clear() [224]
                                1536             termlist::add(term const&) <cycle 4> [30]
                                   4             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
-----------------------------------------------
                0.00    0.00       1/127694      quBaseState::reset(bitvec const&) [46]
                0.00    0.00       1/127694      quBaseState::quBaseState(int, int) [44]
                0.00    0.00       2/127694      QuHeap::qualloc(int, BaseType) [38]
                0.00    0.00       3/127694      QuHeap::QuHeap(int, int) [43]
                0.00    0.00       5/127694      QuHeap::~QuHeap() [31]
                0.00    0.00       8/127694      opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
                0.00    0.00      10/127694      sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      50/127694      quState::mapmask() const [36]
                0.00    0.00   11263/127694      quSubString::map(bitvec const&) const [29]
                0.00    0.00   11283/127694      terminfo::~terminfo() [24]
                0.00    0.00   14879/127694      term::~term() [28]
                0.00    0.00   22551/127694      quSubString::unmap(bitvec const&) const [11]
                0.00    0.00   22586/127694      opElementary::apply(quState&) const [9]
                0.00    0.00   45052/127694      opMatrix::addterms(terminfo const&) const [10]
[16]    16.7    0.01    0.00  127694         bitvec::~bitvec() [16]
-----------------------------------------------
                0.00    0.00    1536/68091       termlist::add(term const&) <cycle 4> [30]
                0.00    0.00   10240/68091       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.00   11263/68091       term::term(term const&) [25]
                0.00    0.00   11263/68091       term::operator=(term const&) [26]
                0.00    0.00   33789/68091       opMatrix::addterms(terminfo const&) const [10]
[17]    16.7    0.01    0.00   68091         term::ampl() const [17]
-----------------------------------------------
                0.00    0.00       6/24073       termlist::hashfunct2(bitvec const&) const [37]
                0.01    0.00   24067/24073       termlist::hashfunct1(bitvec const&) const [23]
[18]    16.7    0.01    0.00   24073         bitvec::hashfunct() const [18]
-----------------------------------------------
                0.00    0.01   22551/22551       quSubString::unmap(bitvec const&) const [11]
[19]    16.7    0.00    0.01   22551         bitvec::setbits(int, bitvec const&) [19]
                0.01    0.00   22551/22551       bitvec::setbits(int, int, unsigned long) [20]
-----------------------------------------------
                0.01    0.00   22551/22551       bitvec::setbits(int, bitvec const&) [19]
[20]    16.7    0.01    0.00   22551         bitvec::setbits(int, int, unsigned long) [20]
-----------------------------------------------
                0.00    0.00       1/11266       QuHeap::qualloc(int, BaseType) [38]
                0.01    0.00   11265/11266       operator&(bitvec const&, bitvec const&) [22]
[21]    16.7    0.01    0.00   11266         bitvec::operator&=(bitvec const&) [21]
-----------------------------------------------
                0.00    0.00       2/11265       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.01   11263/11265       opElementary::apply(quState&) const [9]
[22]    16.7    0.00    0.01   11265         operator&(bitvec const&, bitvec const&) [22]
                0.01    0.00   11265/11266       bitvec::operator&=(bitvec const&) [21]
                0.00    0.00   11265/78914       bitvec::bitvec(bitvec const&) [56]
-----------------------------------------------
                0.00    0.01   24067/24067       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[23]    16.7    0.00    0.01   24067         termlist::hashfunct1(bitvec const&) const [23]
                0.01    0.00   24067/24073       bitvec::hashfunct() const [18]
-----------------------------------------------
                0.00    0.00   11283/11283       opElementary::apply(quState&) const [9]
[24]     2.9    0.00    0.00   11283         terminfo::~terminfo() [24]
                0.00    0.00   11283/14879       term::~term() [28]
                0.00    0.00   11283/127694      bitvec::~bitvec() [16]
-----------------------------------------------
                0.00    0.00   11263/11263       terminfo::terminfo(terminfo const&) [27]
[25]     2.8    0.00    0.00   11263         term::term(term const&) [25]
                0.00    0.00   11263/68091       term::ampl() const [17]
                0.00    0.00   11263/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00   11263/26156       std::complex<double>::complex(double, double) [65]
                0.00    0.00   11263/124412      term::vect() const [55]
                0.00    0.00   11263/58906       bitvec::operator=(bitvec const&) [58]
-----------------------------------------------
                0.00    0.00   11263/11263       opElementary::apply(quState&) const [9]
[26]     2.8    0.00    0.00   11263         term::operator=(term const&) [26]
                0.00    0.00   11263/68091       term::ampl() const [17]
                0.00    0.00   11263/124412      term::vect() const [55]
                0.00    0.00   11263/58906       bitvec::operator=(bitvec const&) [58]
-----------------------------------------------
                0.00    0.00   11263/11263       opElementary::apply(quState&) const [9]
[27]     2.8    0.00    0.00   11263         terminfo::terminfo(terminfo const&) [27]
                0.00    0.00   11263/11263       term::term(term const&) [25]
                0.00    0.00   11263/78914       bitvec::bitvec(bitvec const&) [56]
-----------------------------------------------
                0.00    0.00      12/14879       opMatrix::~opMatrix() [42]
                0.00    0.00    1536/14879       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.00    2048/14879       termlist::dellist() [32]
                0.00    0.00   11283/14879       terminfo::~terminfo() [24]
[28]     1.9    0.00    0.00   14879         term::~term() [28]
                0.00    0.00   14879/127694      bitvec::~bitvec() [16]
-----------------------------------------------
                0.00    0.00   11263/11263       opElementary::apply(quState&) const [9]
[29]     1.5    0.00    0.00   11263         quSubString::map(bitvec const&) const [29]
                0.00    0.00   11263/127694      bitvec::~bitvec() [16]
                0.00    0.00   11263/34043       quState::mapbits() const [60]
                0.00    0.00   11263/33814       quSubString::mapoffs() const [61]
                0.00    0.00   11263/11263       quBaseState::map(bitvec const&) const [75]
                0.00    0.00   11263/11263       bitvec::getbits(int, int) const [77]
-----------------------------------------------
                                1536             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[30]     0.4    0.00    0.00    1536         termlist::add(term const&) <cycle 4> [30]
                0.00    0.00    1536/68091       term::ampl() const [17]
                0.00    0.00    1536/124412      term::vect() const [55]
                                1536             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[31]     0.3    0.00    0.00       1         QuHeap::~QuHeap() [31]
                0.00    0.00       1/1           quBaseState::~quBaseState() [34]
                0.00    0.00       5/127694      bitvec::~bitvec() [16]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [424]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [529]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [526]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [558]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
-----------------------------------------------
                0.00    0.00       2/2           termlist::~termlist() [33]
[32]     0.3    0.00    0.00       2         termlist::dellist() [32]
                0.00    0.00    2048/14879       term::~term() [28]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::~quBaseState() [35]
[33]     0.3    0.00    0.00       2         termlist::~termlist() [33]
                0.00    0.00       2/2           termlist::dellist() [32]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[34]     0.3    0.00    0.00       1         quBaseState::~quBaseState() [34]
                0.00    0.00       1/1           quBaseState::~quBaseState() [35]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::~quBaseState() [34]
[35]     0.3    0.00    0.00       1         quBaseState::~quBaseState() [35]
                0.00    0.00       2/2           termlist::~termlist() [33]
                0.00    0.00       1/36          quState::~quState() [206]
-----------------------------------------------
                0.00    0.00       1/25          QuHeap::qualloc(int, BaseType) [38]
                0.00    0.00       4/25          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      20/25          opElementary::apply(quState&) const [9]
[36]     0.0    0.00    0.00      25         quState::mapmask() const [36]
                0.00    0.00      25/22551       quSubString::unmap(bitvec const&) const [11]
                0.00    0.00      50/127694      bitvec::~bitvec() [16]
                0.00    0.00      25/34043       quState::mapbits() const [60]
                0.00    0.00      25/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00      25/46          operator~(bitvec const&) [165]
-----------------------------------------------
                0.00    0.00       6/6           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[37]     0.0    0.00    0.00       6         termlist::hashfunct2(bitvec const&) const [37]
                0.00    0.00       6/24073       bitvec::hashfunct() const [18]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
[38]     0.0    0.00    0.00       1         QuHeap::qualloc(int, BaseType) [38]
                0.00    0.00       1/25          quState::mapmask() const [36]
                0.00    0.00       1/11266       bitvec::operator&=(bitvec const&) [21]
                0.00    0.00       2/127694      bitvec::~bitvec() [16]
                0.00    0.00      10/10          bitvec::operator[](int) const [296]
                0.00    0.00       1/36          quBaseState::newsubstring(int, int) <cycle 5> [157]
                0.00    0.00       1/46          operator~(bitvec const&) [165]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [500]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[39]     0.0    0.00    0.00       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [38]
                0.00    0.00       4/670         tValue::~tValue() [101]
                0.00    0.00       2/357         tValue::tValue() [114]
                0.00    0.00       2/32          tValue::operator=(tValue const&) [217]
                0.00    0.00       2/7           tValue::isError() const [316]
                0.00    0.00       2/2           tValue::toInt() const [415]
                0.00    0.00       1/122         tType::isQuExpr() const [135]
                0.00    0.00       1/376         sDef::type() const [108]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [349]
                0.00    0.00       1/1           sDef::basetype() [493]
                0.00    0.00       1/6           sObject::isGlobal() const [321]
                0.00    0.00       1/9           tValue::qustate() const [299]
                0.00    0.00       1/36          quState::newclone() <cycle 5> [161]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [499]
                0.00    0.00       1/171         sObject::def() const [131]
                0.00    0.00       1/325         SymTab::put(sDef*, tValue const&) [115]
-----------------------------------------------
                0.00    0.00       2/2           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[40]     0.0    0.00    0.00       2         opBit::~opBit() [40]
                0.00    0.00       2/2           opBit::~opBit() [41]
-----------------------------------------------
                0.00    0.00       2/2           opBit::~opBit() [40]
[41]     0.0    0.00    0.00       2         opBit::~opBit() [41]
                0.00    0.00       2/2           opMatrix::~opMatrix() [42]
-----------------------------------------------
                0.00    0.00       2/2           opBit::~opBit() [41]
[42]     0.0    0.00    0.00       2         opMatrix::~opMatrix() [42]
                0.00    0.00      12/14879       term::~term() [28]
                0.00    0.00       2/2           opElementary::~opElementary() [382]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[43]     0.0    0.00    0.00       1         QuHeap::QuHeap(int, int) [43]
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [44]
                0.00    0.00       3/127694      bitvec::~bitvec() [16]
                0.00    0.00       8/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00       3/58906       bitvec::operator=(bitvec const&) [58]
                0.00    0.00       2/48          bitvec::qnot() [163]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [562]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [564]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [560]
                0.00    0.00       1/1           QuHeap::init() [498]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [43]
[44]     0.0    0.00    0.00       1         quBaseState::quBaseState(int, int) [44]
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [46]
                0.00    0.00       1/127694      bitvec::~bitvec() [16]
                0.00    0.00       2/2           termlist::termlist(int, int) [400]
                0.00    0.00       1/37          quState::quState(int) [202]
                0.00    0.00       1/48780       bitvec::bitvec(int, unsigned long) [59]
-----------------------------------------------
                0.00    0.00       2/2           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[45]     0.0    0.00    0.00       2         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
                0.00    0.00       8/127694      bitvec::~bitvec() [16]
                0.00    0.00      12/3616        term::term() [87]
                0.00    0.00       8/8           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [307]
                0.00    0.00       8/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00       8/8           term::set(bitvec const&, std::complex<double> const&) [301]
                0.00    0.00       2/2           opMatrix::opMatrix(int) [399]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [44]
[46]     0.0    0.00    0.00       1         quBaseState::reset(bitvec const&) [46]
                0.00    0.00       1/22527       quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.00    0.00       1/127694      bitvec::~bitvec() [16]
                0.00    0.00       1/21          quBaseState::opbegin() [240]
                0.00    0.00       1/33794       bitvec::length() const [62]
                0.00    0.00       1/26156       std::complex<double>::complex(double, double) [65]
                0.00    0.00       1/1           quBaseState::basebits() const [520]
                0.00    0.00       1/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00       1/21          quBaseState::opend() [239]
-----------------------------------------------
[47]     0.0    0.00    0.00      24+103     <cycle 1 as a whole> [47]
                0.00    0.00      23             sExprList::~sExprList() <cycle 1> [234]
                0.00    0.00      23             sList<sExpr>::~sList() <cycle 1> [230]
                0.00    0.00      23             sExprList::~sExprList() <cycle 1> [233]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [264]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [318]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [319]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [336]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [337]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [344]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [345]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [340]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [341]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [397]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [398]
-----------------------------------------------
[48]     0.0    0.00    0.00       8+64      <cycle 2 as a whole> [48]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [268]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [262]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [267]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [310]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [311]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [385]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [386]
-----------------------------------------------
[49]     0.0    0.00    0.00       8+19      <cycle 3 as a whole> [49]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
-----------------------------------------------
[50]     0.0    0.00    0.00      36+158     <cycle 5 as a whole> [50]
                0.00    0.00      72             quBaseState::newsubstring(int, int) <cycle 5> [157]
                0.00    0.00      51             quState::newclone() <cycle 5> [161]
                0.00    0.00      36             quSubString::quSubString(int, int, quState&) <cycle 5> [205]
                0.00    0.00      35             quSubString::newsubstring(int, int) <cycle 5> [212]
-----------------------------------------------
                0.00    0.00    1536/124412      termlist::add(term const&) <cycle 4> [30]
                0.00    0.00   10246/124412      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.00   11263/124412      term::term(term const&) [25]
                0.00    0.00   11263/124412      term::operator=(term const&) [26]
                0.00    0.00   22526/124412      opElementary::apply(quState&) const [9]
                0.00    0.00   67578/124412      opMatrix::addterms(terminfo const&) const [10]
[55]     0.0    0.00    0.00  124412         term::vect() const [55]
-----------------------------------------------
                0.00    0.00      46/78914       operator~(bitvec const&) [165]
                0.00    0.00   11263/78914       quBaseState::map(bitvec const&) const [75]
                0.00    0.00   11263/78914       terminfo::terminfo(terminfo const&) [27]
                0.00    0.00   11265/78914       operator&(bitvec const&, bitvec const&) [22]
                0.00    0.00   22526/78914       operator|(bitvec const&, bitvec const&) [72]
                0.00    0.00   22551/78914       quBaseState::unmap(bitvec const&) const [68]
[56]     0.0    0.00    0.00   78914         bitvec::bitvec(bitvec const&) [56]
-----------------------------------------------
                0.00    0.00   58906/58906       bitvec::operator=(bitvec const&) [58]
[57]     0.0    0.00    0.00   58906         bitvec::setlen(int) [57]
-----------------------------------------------
                0.00    0.00       3/58906       QuHeap::QuHeap(int, int) [43]
                0.00    0.00       8/58906       term::set(bitvec const&, std::complex<double> const&) [301]
                0.00    0.00   11263/58906       term::term(term const&) [25]
                0.00    0.00   11263/58906       term::operator=(term const&) [26]
                0.00    0.00   11283/58906       opElementary::apply(quState&) const [9]
                0.00    0.00   25086/58906       term::setvect(bitvec const&) [66]
[58]     0.0    0.00    0.00   58906         bitvec::operator=(bitvec const&) [58]
                0.00    0.00   58906/58906       bitvec::setlen(int) [57]
-----------------------------------------------
                0.00    0.00       1/48780       quBaseState::reset(bitvec const&) [46]
                0.00    0.00       1/48780       quBaseState::quBaseState(int, int) [44]
                0.00    0.00       2/48780       QuHeap::cmask() const [410]
                0.00    0.00       2/48780       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/48780       QuHeap::QuHeap(int, int) [43]
                0.00    0.00       8/48780       opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
                0.00    0.00      20/48780       opElementary::apply(quState&) const [9]
                0.00    0.00      20/48780       terminfo::terminfo() [249]
                0.00    0.00      25/48780       quState::mapmask() const [36]
                0.00    0.00    3616/48780       term::term() [87]
                0.00    0.00   11263/48780       bitvec::getbits(int, int) const [77]
                0.00    0.00   11263/48780       term::term(term const&) [25]
                0.00    0.00   22551/48780       quSubString::unmap(bitvec const&) const [11]
[59]     0.0    0.00    0.00   48780         bitvec::bitvec(int, unsigned long) [59]
-----------------------------------------------
                0.00    0.00       1/34043       quBaseState::basebits() const [520]
                0.00    0.00       2/34043       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      20/34043       opElementary::apply(quState&) const [9]
                0.00    0.00      22/34043       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      25/34043       quState::mapmask() const [36]
                0.00    0.00      51/34043       quState::newclone() <cycle 5> [161]
                0.00    0.00     108/34043       quBaseState::newsubstring(int, int) <cycle 5> [157]
                0.00    0.00   11263/34043       quSubString::map(bitvec const&) const [29]
                0.00    0.00   22551/34043       quSubString::unmap(bitvec const&) const [11]
[60]     0.0    0.00    0.00   34043         quState::mapbits() const [60]
-----------------------------------------------
                0.00    0.00   11263/33814       quSubString::map(bitvec const&) const [29]
                0.00    0.00   22551/33814       quSubString::unmap(bitvec const&) const [11]
[61]     0.0    0.00    0.00   33814         quSubString::mapoffs() const [61]
-----------------------------------------------
                0.00    0.00       1/33794       quBaseState::reset(bitvec const&) [46]
                0.00    0.00       2/33794       QuHeap::ncond() const [412]
                0.00    0.00       2/33794       QuHeap::cmask() const [410]
                0.00    0.00   33789/33794       opMatrix::addterms(terminfo const&) const [10]
[62]     0.0    0.00    0.00   33794         bitvec::length() const [62]
-----------------------------------------------
                0.00    0.00   10240/32766       std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [82]
                0.00    0.00   22526/32766       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [70]
[63]     0.0    0.00    0.00   32766         std::complex<double>::imag() const [63]
-----------------------------------------------
                0.00    0.00   10240/32766       std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [82]
                0.00    0.00   22526/32766       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [70]
[64]     0.0    0.00    0.00   32766         std::complex<double>::real() const [64]
-----------------------------------------------
                0.00    0.00       1/26156       yylex() [89]
                0.00    0.00       1/26156       quBaseState::reset(bitvec const&) [46]
                0.00    0.00      12/26156       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00    3616/26156       term::term() [87]
                0.00    0.00   11263/26156       term::term(term const&) [25]
                0.00    0.00   11263/26156       opMatrix::addterms(terminfo const&) const [10]
[65]     0.0    0.00    0.00   26156         std::complex<double>::complex(double, double) [65]
-----------------------------------------------
                0.00    0.00   11263/25086       opElementary::apply(quState&) const [9]
                0.00    0.00   13823/25086       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[66]     0.0    0.00    0.00   25086         term::setvect(bitvec const&) [66]
                0.00    0.00   25086/58906       bitvec::operator=(bitvec const&) [58]
-----------------------------------------------
                0.00    0.00   24063/24063       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[67]     0.0    0.00    0.00   24063         term::setampl(std::complex<double> const&) [67]
-----------------------------------------------
                0.00    0.00   22551/22551       quSubString::unmap(bitvec const&) const [11]
[68]     0.0    0.00    0.00   22551         quBaseState::unmap(bitvec const&) const [68]
                0.00    0.00   22551/78914       bitvec::bitvec(bitvec const&) [56]
-----------------------------------------------
                0.00    0.00       2/22528       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00   22526/22528       operator|(bitvec const&, bitvec const&) [72]
[69]     0.0    0.00    0.00   22528         bitvec::operator|=(bitvec const&) [69]
-----------------------------------------------
                0.00    0.00   22526/22526       std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [71]
[70]     0.0    0.00    0.00   22526         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [70]
                0.00    0.00   22526/32766       std::complex<double>::real() const [64]
                0.00    0.00   22526/32766       std::complex<double>::imag() const [63]
-----------------------------------------------
                0.00    0.00   22526/22526       opMatrix::addterms(terminfo const&) const [10]
[71]     0.0    0.00    0.00   22526         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [71]
                0.00    0.00   22526/22526       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [70]
-----------------------------------------------
                0.00    0.00   22526/22526       opMatrix::addterms(terminfo const&) const [10]
[72]     0.0    0.00    0.00   22526         operator|(bitvec const&, bitvec const&) [72]
                0.00    0.00   22526/78914       bitvec::bitvec(bitvec const&) [56]
                0.00    0.00   22526/22528       bitvec::operator|=(bitvec const&) [69]
-----------------------------------------------
                0.00    0.00       2/21506       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       3/21506       sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       4/21506       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       7/21506       sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00     734/21506       sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00    7442/21506       SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00   13314/21506       SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
[73]     0.0    0.00    0.00   21506         sDef::id() const [73]
-----------------------------------------------
                0.00    0.00   11263/11263       opElementary::apply(quState&) const [9]
[74]     0.0    0.00    0.00   11263         quSubState::baseterm(int) const [74]
                0.00    0.00   11263/11263       quBaseState::baseterm(int) const [76]
-----------------------------------------------
                0.00    0.00   11263/11263       quSubString::map(bitvec const&) const [29]
[75]     0.0    0.00    0.00   11263         quBaseState::map(bitvec const&) const [75]
                0.00    0.00   11263/78914       bitvec::bitvec(bitvec const&) [56]
-----------------------------------------------
                0.00    0.00   11263/11263       quSubState::baseterm(int) const [74]
[76]     0.0    0.00    0.00   11263         quBaseState::baseterm(int) const [76]
                0.00    0.00   11263/11263       termlist::operator[](int) const [79]
-----------------------------------------------
                0.00    0.00   11263/11263       quSubString::map(bitvec const&) const [29]
[77]     0.0    0.00    0.00   11263         bitvec::getbits(int, int) const [77]
                0.00    0.00   11263/48780       bitvec::bitvec(int, unsigned long) [59]
-----------------------------------------------
                0.00    0.00   11263/11263       opMatrix::addterms(terminfo const&) const [10]
[78]     0.0    0.00    0.00   11263         bitvec::getword() const [78]
-----------------------------------------------
                0.00    0.00   11263/11263       quBaseState::baseterm(int) const [76]
[79]     0.0    0.00    0.00   11263         termlist::operator[](int) const [79]
-----------------------------------------------
                0.00    0.00   10246/10246       operator==(bitvec const&, bitvec const&) [81]
[80]     0.0    0.00    0.00   10246         bitvec::testeq(bitvec const&) const [80]
-----------------------------------------------
                0.00    0.00   10246/10246       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[81]     0.0    0.00    0.00   10246         operator==(bitvec const&, bitvec const&) [81]
                0.00    0.00   10246/10246       bitvec::testeq(bitvec const&) const [80]
-----------------------------------------------
                0.00    0.00   10240/10240       std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [83]
[82]     0.0    0.00    0.00   10240         std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [82]
                0.00    0.00   10240/32766       std::complex<double>::real() const [64]
                0.00    0.00   10240/32766       std::complex<double>::imag() const [63]
-----------------------------------------------
                0.00    0.00   10240/10240       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[83]     0.0    0.00    0.00   10240         std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [83]
                0.00    0.00   10240/10240       std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [82]
-----------------------------------------------
                0.00    0.00    3226/6480        SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00    3254/6480        SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
[84]     0.0    0.00    0.00    6480         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [84]
-----------------------------------------------
                0.00    0.00     435/4160        sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00    3725/4160        SymTab::getentry(SymTable::entry*, std::string const&) const [112]
[85]     0.0    0.00    0.00    4160         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [85]
                0.00    0.00    2917/2917        std::char_traits<char>::compare(char const*, char const*, unsigned long) [88]
-----------------------------------------------
                0.00    0.00     491/3894        SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00    3403/3894        SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
[86]     0.0    0.00    0.00    3894         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [86]
-----------------------------------------------
                0.00    0.00      12/3616        opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
                0.00    0.00      20/3616        terminfo::terminfo() [249]
                0.00    0.00    3584/3616        termlist::newlist() [320]
[87]     0.0    0.00    0.00    3616         term::term() [87]
                0.00    0.00    3616/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00    3616/26156       std::complex<double>::complex(double, double) [65]
-----------------------------------------------
                0.00    0.00    2917/2917        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [85]
[88]     0.0    0.00    0.00    2917         std::char_traits<char>::compare(char const*, char const*, unsigned long) [88]
-----------------------------------------------
                0.00    0.00    2346/2346        yyparse() [333]
[89]     0.0    0.00    0.00    2346         yylex() [89]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [242]
                0.00    0.00      19/670         tValue::~tValue() [101]
                0.00    0.00      15/15          tValue::tValue(long) [279]
                0.00    0.00      12/12          yy_get_next_buffer() [289]
                0.00    0.00       8/8           yy_get_previous_state() [300]
                0.00    0.00       2/2           tValue::tValue(double) [393]
                0.00    0.00       1/26          yy_load_buffer_state() [225]
                0.00    0.00       1/26156       std::complex<double>::complex(double, double) [65]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [503]
                0.00    0.00       1/1           tValue::tValue(char const*) [501]
-----------------------------------------------
                0.00    0.00       1/1488        tValue::tValue(std::complex<double> const&) [503]
                0.00    0.00       1/1488        tValue::tValue(char const*) [501]
                0.00    0.00       1/1488        tValue::tValue(quState&, BaseType) [502]
                0.00    0.00       1/1488        tValue::tValue(quState*, BaseType) [500]
                0.00    0.00       1/1488        __static_initialization_and_destruction_0(int, int) [465]
                0.00    0.00       1/1488        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [504]
                0.00    0.00       2/1488        tValue::tValue(int) [394]
                0.00    0.00       2/1488        tValue::tValue(double) [393]
                0.00    0.00       2/1488        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       4/1488        sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       4/1488        sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       5/1488        sConstDef::sConstDef(std::string*, sExpr*) [324]
                0.00    0.00       8/1488        sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      15/1488        tValue::tValue(long) [279]
                0.00    0.00      16/1488        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [272]
                0.00    0.00      19/1488        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [255]
                0.00    0.00      21/1488        sExpr::sExpr(tType const&) [241]
                0.00    0.00      30/1488        sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      52/1488        sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      75/1488        sExpr::sExpr() [155]
                0.00    0.00     268/1488        yyparse() [333]
                0.00    0.00     290/1488        tValue::tValue(tValue const&) [120]
                0.00    0.00     312/1488        sDef::sDef(tType const&, std::string*) [117]
                0.00    0.00     357/1488        tValue::tValue() [114]
[90]     0.0    0.00    0.00    1488         tType::tType(BaseType) [90]
-----------------------------------------------
                0.00    0.00     530/1110        sObject::isDef() const [113]
                0.00    0.00     580/1110        sObject::isValueDef() const [109]
[91]     0.0    0.00    0.00    1110         sArgDef::object() const [91]
-----------------------------------------------
                0.00    0.00       8/1068        sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00      36/1068        sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00     322/1068        tValue::assign(tValue const&) [116]
                0.00    0.00     702/1068        tValue::ord() const [99]
[92]     0.0    0.00    0.00    1068         tType::ord() const [92]
-----------------------------------------------
                0.00    0.00       1/1029        sDef::basetype() [493]
                0.00    0.00       4/1029        sExpr::basetype() [342]
                0.00    0.00     322/1029        tValue::assign(tValue const&) [116]
                0.00    0.00     702/1029        tValue::basetype() const [100]
[93]     0.0    0.00    0.00    1029         tType::basetype() const [93]
-----------------------------------------------
                0.00    0.00      98/889         sObject::isSetRec(ObjFlag) [284]
                0.00    0.00     791/889         sObject::def() const [131]
[94]     0.0    0.00    0.00     889         sObject::parent() const [94]
-----------------------------------------------
                0.00    0.00       1/852         sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       5/852         sDef::settype(tType const&) [323]
                0.00    0.00      21/852         sExpr::sExpr(tType const&) [241]
                0.00    0.00      36/852         sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      44/852         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00     111/852         sExpr::settype(tType const&) [136]
                0.00    0.00     312/852         sDef::sDef(tType const&, std::string*) [117]
                0.00    0.00     322/852         tValue::assign(tValue const&) [116]
[95]     0.0    0.00    0.00     852         tType::operator=(tType const&) [95]
-----------------------------------------------
                0.00    0.00     830/830         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [179]
[96]     0.0    0.00    0.00     830         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [96]
-----------------------------------------------
                0.00    0.00     786/786         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [179]
[97]     0.0    0.00    0.00     786         std::_List_const_iterator<sObject*>::operator++() [97]
-----------------------------------------------
                0.00    0.00      32/702         tValue::operator=(tValue const&) [217]
                0.00    0.00     670/702         tValue::~tValue() [101]
[98]     0.0    0.00    0.00     702         tValue::delpointer() [98]
                0.00    0.00     702/702         tValue::ord() const [99]
                0.00    0.00     702/702         tValue::basetype() const [100]
                0.00    0.00      15/15          quSubState::isbasestate() const [280]
                0.00    0.00      15/35          quSubString::~quSubString() [213]
-----------------------------------------------
                0.00    0.00     702/702         tValue::delpointer() [98]
[99]     0.0    0.00    0.00     702         tValue::ord() const [99]
                0.00    0.00     702/1068        tType::ord() const [92]
-----------------------------------------------
                0.00    0.00     702/702         tValue::delpointer() [98]
[100]    0.0    0.00    0.00     702         tValue::basetype() const [100]
                0.00    0.00     702/1029        tType::basetype() const [93]
-----------------------------------------------
                0.00    0.00       1/670         QuHeap::addReg(quState*) [499]
                0.00    0.00       1/670         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [508]
                0.00    0.00       2/670         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       4/670         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       4/670         sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/670         sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       4/670         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       6/670         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       6/670         sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       6/670         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      19/670         yylex() [89]
                0.00    0.00      21/670         sConst::~sConst() [244]
                0.00    0.00      36/670         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [207]
                0.00    0.00     275/670         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00     281/670         SymTab::deltree(SymTable::entry*) [162]
[101]    0.0    0.00    0.00     670         tValue::~tValue() [101]
                0.00    0.00     670/702         tValue::delpointer() [98]
-----------------------------------------------
                0.00    0.00       2/556         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      22/556         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00     263/556         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00     269/556         sDefList::typecheck(SymTable*, SymTable*) [172]
[102]    0.0    0.00    0.00     556         sList<sDef>::next(void*&) const [102]
-----------------------------------------------
                0.00    0.00      64/538         tValue::type() const [158]
                0.00    0.00      98/538         sExpr::type() [137]
                0.00    0.00     376/538         sDef::type() const [108]
[103]    0.0    0.00    0.00     538         tType::tType(tType const&) [103]
-----------------------------------------------
                0.00    0.00      18/518         sList<sStmt>::sList() [261]
                0.00    0.00      21/518         sExpr::sExpr(tType const&) [241]
                0.00    0.00      23/518         sList<sExpr>::sList() [229]
                0.00    0.00      25/518         sStmt::sStmt(int) [227]
                0.00    0.00      44/518         sList<sDef>::sList() [170]
                0.00    0.00      75/518         sExpr::sExpr() [155]
                0.00    0.00     312/518         sDef::sDef(tType const&, std::string*) [117]
[104]    0.0    0.00    0.00     518         sObject::sObject(unsigned int) [104]
-----------------------------------------------
                0.00    0.00      18/518         sList<sStmt>::~sList() <cycle 2> [262]
                0.00    0.00      23/518         sList<sExpr>::~sList() <cycle 1> [230]
                0.00    0.00      25/518         sStmt::~sStmt() [228]
                0.00    0.00      44/518         sList<sDef>::~sList() [171]
                0.00    0.00      96/518         sExpr::~sExpr() [139]
                0.00    0.00     312/518         sDef::~sDef() [118]
[105]    0.0    0.00    0.00     518         sObject::~sObject() [105]
-----------------------------------------------
                0.00    0.00       1/456         sExit::typecheck(SymTable*, SymTable*) [494]
                0.00    0.00       3/456         sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       4/456         sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       4/456         sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       5/456         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       6/456         sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       8/456         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       8/456         sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00      15/456         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00      22/456         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      23/456         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
                0.00    0.00      36/456         sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      52/456         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00     269/456         sDefList::typecheck(SymTable*, SymTable*) [172]
[106]    0.0    0.00    0.00     456         sObject::setParent(sObject*) [106]
-----------------------------------------------
                0.00    0.00       1/455         tValue::tValue(std::complex<double> const&) [503]
                0.00    0.00       1/455         tValue::tValue(char const*) [501]
                0.00    0.00       1/455         tValue::tValue(quState&, BaseType) [502]
                0.00    0.00       1/455         tValue::tValue(quState*, BaseType) [500]
                0.00    0.00       2/455         tValue::tValue(int) [394]
                0.00    0.00       2/455         tValue::tValue(double) [393]
                0.00    0.00      15/455         tValue::tValue(long) [279]
                0.00    0.00      75/455         sExpr::sExpr() [155]
                0.00    0.00     357/455         tValue::tValue() [114]
[107]    0.0    0.00    0.00     455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       1/376         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/376         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/376         sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00      23/376         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      39/376         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      45/376         sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00     263/376         sRoutDef::typecheck(SymTable*, SymTable*) [208]
[108]    0.0    0.00    0.00     376         sDef::type() const [108]
                0.00    0.00     376/538         tType::tType(tType const&) [103]
-----------------------------------------------
                0.00    0.00       2/374         SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00       2/374         SymTab::getRef(std::string const&, ObjType*) const [123]
                0.00    0.00      45/374         sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00     325/374         SymTab::put(sDef*, tValue const&) [115]
[109]    0.0    0.00    0.00     374         sObject::isValueDef() const [109]
                0.00    0.00     580/1110        sArgDef::object() const [91]
                0.00    0.00      54/85          sVarDef::object() const [143]
                0.00    0.00      26/48          sConstDef::object() const [164]
                0.00    0.00      23/374         sQuOpDef::object() const [110]
                0.00    0.00      19/369         sQuFunDef::object() const [111]
                0.00    0.00       2/58          sProcDef::object() const [159]
-----------------------------------------------
                0.00    0.00       7/374         sObject::isProcDef() const [283]
                0.00    0.00      10/374         sObject::isQuOpDef() const [237]
                0.00    0.00      10/374         sObject::isQuFunDef() const [221]
                0.00    0.00      19/374         sObject::isInclude() const [187]
                0.00    0.00      23/374         sObject::isValueDef() const [109]
                0.00    0.00      84/374         sObject::isDef() const [113]
                0.00    0.00      92/374         sObject::isRoutDef() const [129]
                0.00    0.00     129/374         sObject::isFunctDef() const [119]
[110]    0.0    0.00    0.00     374         sQuOpDef::object() const [110]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [283]
                0.00    0.00      10/369         sObject::isQuOpDef() const [237]
                0.00    0.00      13/369         sObject::isQuFunDef() const [221]
                0.00    0.00      16/369         sObject::isInclude() const [187]
                0.00    0.00      19/369         sObject::isValueDef() const [109]
                0.00    0.00      70/369         sObject::isDef() const [113]
                0.00    0.00      74/369         sObject::isRoutDef() const [129]
                0.00    0.00     162/369         sObject::isFunctDef() const [119]
[111]    0.0    0.00    0.00     369         sQuFunDef::object() const [111]
-----------------------------------------------
                                3358             SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00       2/367         SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00     136/367         SymTab::getDef(std::string const&) const [133]
                0.00    0.00     229/367         SymTab::getRef(std::string const&, ObjType*) const [123]
[112]    0.0    0.00    0.00     367+3358    SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00    7442/21506       sDef::id() const [73]
                0.00    0.00    3725/4160        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [85]
                0.00    0.00    3226/6480        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [84]
                0.00    0.00     491/3894        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [86]
                                3358             SymTab::getentry(SymTable::entry*, std::string const&) const [112]
-----------------------------------------------
                0.00    0.00      42/367         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     325/367         SymTab::put(sDef*, tValue const&) [115]
[113]    0.0    0.00    0.00     367         sObject::isDef() const [113]
                0.00    0.00     530/1110        sArgDef::object() const [91]
                0.00    0.00      84/374         sQuOpDef::object() const [110]
                0.00    0.00      70/369         sQuFunDef::object() const [111]
                0.00    0.00      24/85          sVarDef::object() const [143]
                0.00    0.00      16/48          sConstDef::object() const [164]
                0.00    0.00       6/58          sProcDef::object() const [159]
                0.00    0.00       2/13          sCall::object() const [287]
-----------------------------------------------
                0.00    0.00       2/357         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       2/357         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       2/357         SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00       2/357         sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       2/357         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/357         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/357         sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       4/357         sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       6/357         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      21/357         sConst::sConst(tValue const&) [242]
                0.00    0.00      36/357         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [207]
                0.00    0.00     275/357         sRoutDef::typecheck(SymTable*, SymTable*) [208]
[114]    0.0    0.00    0.00     357         tValue::tValue() [114]
                0.00    0.00     357/1488        tType::tType(BaseType) [90]
                0.00    0.00     357/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       1/325         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/325         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       2/325         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/325         sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       6/325         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      36/325         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [207]
                0.00    0.00     275/325         sRoutDef::typecheck(SymTable*, SymTable*) [208]
[115]    0.0    0.00    0.00     325         SymTab::put(sDef*, tValue const&) [115]
                0.00    0.00     325/367         sObject::isDef() const [113]
                0.00    0.00     325/374         sObject::isValueDef() const [109]
                0.00    0.00     281/290         tValue::tValue(tValue const&) [120]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
-----------------------------------------------
                0.00    0.00      32/322         tValue::operator=(tValue const&) [217]
                0.00    0.00     290/322         tValue::tValue(tValue const&) [120]
[116]    0.0    0.00    0.00     322         tValue::assign(tValue const&) [116]
                0.00    0.00     322/852         tType::operator=(tType const&) [95]
                0.00    0.00     322/1068        tType::ord() const [92]
                0.00    0.00     322/1029        tType::basetype() const [93]
                0.00    0.00      13/36          quState::newclone() <cycle 5> [161]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [324]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [302]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [124]
[117]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [117]
                0.00    0.00     312/518         sObject::sObject(unsigned int) [104]
                0.00    0.00     312/1488        tType::tType(BaseType) [90]
                0.00    0.00     312/852         tType::operator=(tType const&) [95]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [326]
                0.00    0.00       8/312         sVarDef::~sVarDef() [314]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [210]
                0.00    0.00     263/312         sArgDef::~sArgDef() [126]
[118]    0.0    0.00    0.00     312         sDef::~sDef() [118]
                0.00    0.00     312/518         sObject::~sObject() [105]
-----------------------------------------------
                0.00    0.00      15/295         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      17/295         sObject::inFunctDef() const [252]
                0.00    0.00     263/295         sRoutDef::typecheck(SymTable*, SymTable*) [208]
[119]    0.0    0.00    0.00     295         sObject::isFunctDef() const [119]
                0.00    0.00     162/369         sQuFunDef::object() const [111]
                0.00    0.00     129/374         sQuOpDef::object() const [110]
                0.00    0.00       4/58          sProcDef::object() const [159]
-----------------------------------------------
                0.00    0.00       1/290         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [510]
                0.00    0.00       2/290         tValue::conv(tType const&) const [413]
                0.00    0.00       2/290         SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00       4/290         sConst::eval(SymTable*, SymTable*, QuHeap*) [349]
                0.00    0.00     281/290         SymTab::put(sDef*, tValue const&) [115]
[120]    0.0    0.00    0.00     290         tValue::tValue(tValue const&) [120]
                0.00    0.00     290/1488        tType::tType(BaseType) [90]
                0.00    0.00     290/322         tValue::assign(tValue const&) [116]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [115]
[121]    0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
                0.00    0.00   13314/21506       sDef::id() const [73]
                0.00    0.00    3403/3894        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [86]
                0.00    0.00    3254/6480        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [84]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [121]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [333]
[122]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [122]
-----------------------------------------------
                0.00    0.00       2/265         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00     263/265         sRoutDef::typecheck(SymTable*, SymTable*) [208]
[123]    0.0    0.00    0.00     265         SymTab::getRef(std::string const&, ObjType*) const [123]
                0.00    0.00     229/367         SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00       2/374         sObject::isValueDef() const [109]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [333]
[124]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [124]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [117]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [171]
[125]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [125]
                0.00    0.00     263/263         sArgDef::~sArgDef() [126]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [125]
[126]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [126]
                0.00    0.00     263/312         sDef::~sDef() [118]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [172]
[127]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [127]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [208]
[128]    0.0    0.00    0.00     263         tType::isQuReg() const [128]
-----------------------------------------------
                0.00    0.00       8/255         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00      15/255         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00     232/255         sObject::def() const [131]
[129]    0.0    0.00    0.00     255         sObject::isRoutDef() const [129]
                0.00    0.00      92/374         sQuOpDef::object() const [110]
                0.00    0.00      78/78          sStmtList::object() const [154]
                0.00    0.00      74/369         sQuFunDef::object() const [111]
                0.00    0.00      34/34          sDefList::object() const [216]
                0.00    0.00      32/58          sProcDef::object() const [159]
                0.00    0.00      21/21          sIf::object() const [245]
                0.00    0.00      15/15          sFor::object() const [281]
                0.00    0.00       5/13          sCall::object() const [287]
                0.00    0.00       3/9           sMult::object() const [297]
-----------------------------------------------
                0.00    0.00       4/177         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       4/177         yyparse() [333]
                0.00    0.00      25/177         sStmt::sStmt(int) [227]
                0.00    0.00     144/177         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209]
[130]    0.0    0.00    0.00     177         sObject::setFlag(ObjFlag, int) [130]
-----------------------------------------------
                                 156             sObject::def() const [131]
                0.00    0.00       1/171         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       3/171         sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       6/171         sObject::isGlobal() const [321]
                0.00    0.00       6/171         sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00      15/171         sObject::inQuFunDef() const [282]
                0.00    0.00      19/171         sObject::inQuDef() const [259]
                0.00    0.00      20/171         sObject::inFunctDef() const [252]
                0.00    0.00      29/171         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      36/171         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00      36/171         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [207]
[131]    0.0    0.00    0.00     171+156     sObject::def() const [131]
                0.00    0.00     791/889         sObject::parent() const [94]
                0.00    0.00     232/255         sObject::isRoutDef() const [129]
                                 156             sObject::def() const [131]
-----------------------------------------------
                0.00    0.00       2/171         sStmt::isInv() const [407]
                0.00    0.00       3/171         sObject::isBennet() const [372]
                0.00    0.00       5/171         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      31/171         sObject::isCondDef() const [219]
                0.00    0.00      56/171         sObject::isSetRec(ObjFlag) [284]
                0.00    0.00      74/171         sObject::isExtern() const [156]
[132]    0.0    0.00    0.00     171         sObject::isSet(ObjFlag) const [132]
-----------------------------------------------
                0.00    0.00       2/139         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00       2/139         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       2/139         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/139         sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       7/139         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      34/139         sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00      36/139         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00      53/139         SymTabComb::getDef(std::string const&) const [222]
[133]    0.0    0.00    0.00     139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00     136/367         SymTab::getentry(SymTable::entry*, std::string const&) const [112]
-----------------------------------------------
                0.00    0.00      42/126         std::list<sObject*, std::allocator<sObject*> >::end() [193]
                0.00    0.00      84/126         std::list<sObject*, std::allocator<sObject*> >::begin() [150]
[134]    0.0    0.00    0.00     126         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [134]
-----------------------------------------------
                0.00    0.00       1/122         sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/122         tType::isConv(tType const&) const [238]
                0.00    0.00       3/122         sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       4/122         sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       8/122         sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00      11/122         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      13/122         tValue::isQuExpr() const [288]
                0.00    0.00      22/122         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      26/122         sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      32/122         tType::isQuCond() const [218]
[135]    0.0    0.00    0.00     122         tType::isQuExpr() const [135]
-----------------------------------------------
                0.00    0.00       4/111         sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       4/111         sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       4/111         sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      17/111         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      18/111         sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      19/111         sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00      45/111         sVar::typecheck(SymTable*, SymTable*) [166]
[136]    0.0    0.00    0.00     111         sExpr::settype(tType const&) [136]
                0.00    0.00     111/852         tType::operator=(tType const&) [95]
-----------------------------------------------
                0.00    0.00       1/98          sExit::typecheck(SymTable*, SymTable*) [494]
                0.00    0.00       2/98          sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       3/98          sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/98          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       4/98          sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       5/98          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       6/98          sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       7/98          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00       8/98          sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00      22/98          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      36/98          sBinOp::typecheck(SymTable*, SymTable*) [286]
[137]    0.0    0.00    0.00      98         sExpr::type() [137]
                0.00    0.00      98/538         tType::tType(tType const&) [103]
-----------------------------------------------
                0.00    0.00       2/97          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      15/97          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      36/97          sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00      44/97          sDefList::typecheck(SymTable*, SymTable*) [172]
[138]    0.0    0.00    0.00      97         sList<sDef>::first(void*&) const [138]
-----------------------------------------------
                0.00    0.00       4/96          sSubscript::~sSubscript() <cycle 1> [341]
                0.00    0.00       4/96          sUnOp::~sUnOp() [348]
                0.00    0.00       4/96          sListFunct::~sListFunct() <cycle 1> [337]
                0.00    0.00      18/96          sBinOp::~sBinOp() <cycle 1> [264]
                0.00    0.00      21/96          sConst::~sConst() [244]
                0.00    0.00      45/96          sVar::~sVar() [169]
[139]    0.0    0.00    0.00      96         sExpr::~sExpr() [139]
                0.00    0.00      96/518         sObject::~sObject() [105]
-----------------------------------------------
                0.00    0.00      10/88          SymTabComb::SymTabComb(SymTable*, SymTable*) [293]
                0.00    0.00      78/88          SymTab::SymTab(int) [152]
[140]    0.0    0.00    0.00      88         SymTable::SymTable() [140]
-----------------------------------------------
                0.00    0.00      10/88          SymTabComb::~SymTabComb() [295]
                0.00    0.00      78/88          SymTab::~SymTab() [153]
[141]    0.0    0.00    0.00      88         SymTable::~SymTable() [141]
-----------------------------------------------
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::begin() const [178]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::end() const [176]
[142]    0.0    0.00    0.00      88         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [142]
-----------------------------------------------
                0.00    0.00       1/85          sObject::isInclude() const [187]
                0.00    0.00       2/85          sObject::isConstDef() const [327]
                0.00    0.00       2/85          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       2/85          SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00      24/85          sObject::isDef() const [113]
                0.00    0.00      54/85          sObject::isValueDef() const [109]
[143]    0.0    0.00    0.00      85         sVarDef::object() const [143]
-----------------------------------------------
                0.00    0.00      84/84          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [148]
[144]    0.0    0.00    0.00      84         __gnu_cxx::new_allocator<sObject*>::new_allocator() [144]
-----------------------------------------------
                0.00    0.00      84/84          std::allocator<sObject*>::~allocator() [149]
[145]    0.0    0.00    0.00      84         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [145]
-----------------------------------------------
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
[146]    0.0    0.00    0.00      84         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [146]
                0.00    0.00      84/84          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [147]
                0.00    0.00      84/84          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [148]
-----------------------------------------------
                0.00    0.00      84/84          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [146]
[147]    0.0    0.00    0.00      84         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [147]
-----------------------------------------------
                0.00    0.00      84/84          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [146]
[148]    0.0    0.00    0.00      84         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [148]
                0.00    0.00      84/84          __gnu_cxx::new_allocator<sObject*>::new_allocator() [144]
-----------------------------------------------
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
[149]    0.0    0.00    0.00      84         std::allocator<sObject*>::~allocator() [149]
                0.00    0.00      84/84          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [145]
-----------------------------------------------
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::front() [194]
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::pop_front() [197]
[150]    0.0    0.00    0.00      84         std::list<sObject*, std::allocator<sObject*> >::begin() [150]
                0.00    0.00      84/126         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [134]
-----------------------------------------------
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
[151]    0.0    0.00    0.00      84         sObject** std::__addressof<sObject*>(sObject*&) [151]
-----------------------------------------------
                0.00    0.00       2/78          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       2/78          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/78          main [1]
                0.00    0.00      72/78          sRoutDef::typecheck(SymTable*, SymTable*) [208]
[152]    0.0    0.00    0.00      78         SymTab::SymTab(int) [152]
                0.00    0.00      78/88          SymTable::SymTable() [140]
-----------------------------------------------
                0.00    0.00       2/78          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       2/78          SymTab::~SymTab() [392]
                0.00    0.00       2/78          main [1]
                0.00    0.00      72/78          sRoutDef::typecheck(SymTable*, SymTable*) [208]
[153]    0.0    0.00    0.00      78         SymTab::~SymTab() [153]
                0.00    0.00      78/88          SymTable::~SymTable() [141]
                0.00    0.00      49/49          SymTab::deltree(SymTable::entry*) [162]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [129]
[154]    0.0    0.00    0.00      78         sStmtList::object() const [154]
-----------------------------------------------
                0.00    0.00       4/75          sSubscript::sSubscript(sVar*, sExprList*) [339]
                0.00    0.00       4/75          sUnOp::sUnOp(sExpr*) [347]
                0.00    0.00       4/75          sListFunct::sListFunct(ObjType, sExprList*) [335]
                0.00    0.00      18/75          sBinOp::sBinOp(sExpr*, sExpr*) [263]
                0.00    0.00      45/75          sVar::sVar(std::string*) [167]
[155]    0.0    0.00    0.00      75         sExpr::sExpr() [155]
                0.00    0.00      75/518         sObject::sObject(unsigned int) [104]
                0.00    0.00      75/1488        tType::tType(BaseType) [90]
                0.00    0.00      75/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       2/74          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00      36/74          sRoutDef::~sRoutDef() [210]
                0.00    0.00      36/74          sRoutDef::typecheck(SymTable*, SymTable*) [208]
[156]    0.0    0.00    0.00      74         sObject::isExtern() const [156]
                0.00    0.00      74/171         sObject::isSet(ObjFlag) const [132]
-----------------------------------------------
                                  35             quSubString::newsubstring(int, int) <cycle 5> [212]
                                  36             quState::newclone() <cycle 5> [161]
                0.00    0.00       1/36          QuHeap::qualloc(int, BaseType) [38]
[157]    0.0    0.00    0.00      72         quBaseState::newsubstring(int, int) <cycle 5> [157]
                0.00    0.00     108/34043       quState::mapbits() const [60]
                                  36             quSubString::quSubString(int, int, quState&) <cycle 5> [205]
-----------------------------------------------
                0.00    0.00       2/64          sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       3/64          sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00      21/64          sConst::sConst(tValue const&) [242]
                0.00    0.00      38/64          sConst::typecheck(SymTable*, SymTable*) [254]
[158]    0.0    0.00    0.00      64         tValue::type() const [158]
                0.00    0.00      64/538         tType::tType(tType const&) [103]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [187]
                0.00    0.00       2/58          sObject::isValueDef() const [109]
                0.00    0.00       3/58          sObject::isProcDef() const [283]
                0.00    0.00       3/58          sObject::isQuOpDef() const [237]
                0.00    0.00       4/58          sObject::isFunctDef() const [119]
                0.00    0.00       6/58          sObject::isDef() const [113]
                0.00    0.00       7/58          sObject::isQuFunDef() const [221]
                0.00    0.00      32/58          sObject::isRoutDef() const [129]
[159]    0.0    0.00    0.00      58         sProcDef::object() const [159]
-----------------------------------------------
                0.00    0.00       2/56          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       4/56          sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00      50/56          sVar::typecheck(SymTable*, SymTable*) [166]
[160]    0.0    0.00    0.00      56         sVar::id() const [160]
-----------------------------------------------
                                  36             quSubString::quSubString(int, int, quState&) <cycle 5> [205]
                0.00    0.00       1/36          tValue::tValue(quState&, BaseType) [502]
                0.00    0.00       1/36          sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00      13/36          tValue::assign(tValue const&) [116]
[161]    0.0    0.00    0.00      51         quState::newclone() <cycle 5> [161]
                0.00    0.00      51/34043       quState::mapbits() const [60]
                                  36             quBaseState::newsubstring(int, int) <cycle 5> [157]
                                  15             quSubString::newsubstring(int, int) <cycle 5> [212]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [162]
                0.00    0.00      49/49          SymTab::~SymTab() [153]
[162]    0.0    0.00    0.00      49+276     SymTab::deltree(SymTable::entry*) [162]
                0.00    0.00     281/670         tValue::~tValue() [101]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [256]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [273]
                0.00    0.00       3/5           sConstDef::~sConstDef() [325]
                0.00    0.00       1/1           sProcDef::~sProcDef() [505]
                0.00    0.00       1/7           sVarDef::~sVarDef() [313]
                                 276             SymTab::deltree(SymTable::entry*) [162]
-----------------------------------------------
                0.00    0.00       2/48          QuHeap::QuHeap(int, int) [43]
                0.00    0.00      46/48          operator~(bitvec const&) [165]
[163]    0.0    0.00    0.00      48         bitvec::qnot() [163]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [327]
                0.00    0.00       3/48          sObject::isInclude() const [187]
                0.00    0.00      16/48          sObject::isDef() const [113]
                0.00    0.00      26/48          sObject::isValueDef() const [109]
[164]    0.0    0.00    0.00      48         sConstDef::object() const [164]
-----------------------------------------------
                0.00    0.00       1/46          QuHeap::qualloc(int, BaseType) [38]
                0.00    0.00      20/46          opElementary::apply(quState&) const [9]
                0.00    0.00      25/46          quState::mapmask() const [36]
[165]    0.0    0.00    0.00      46         operator~(bitvec const&) [165]
                0.00    0.00      46/78914       bitvec::bitvec(bitvec const&) [56]
                0.00    0.00      46/48          bitvec::qnot() [163]
-----------------------------------------------
                0.00    0.00       2/45          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       4/45          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       4/45          sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       4/45          sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       6/45          sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00      12/45          sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      13/45          sCall::typecheck(SymTable*, SymTable*) [275]
[166]    0.0    0.00    0.00      45         sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00      50/56          sVar::id() const [160]
                0.00    0.00      45/374         sObject::isValueDef() const [109]
                0.00    0.00      45/376         sDef::type() const [108]
                0.00    0.00      45/111         sExpr::settype(tType const&) [136]
                0.00    0.00      34/139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [222]
                0.00    0.00       5/5           sObject::isConstDef() const [327]
                0.00    0.00       2/6           sObject::isGlobal() const [321]
-----------------------------------------------
                0.00    0.00      45/45          yyparse() [333]
[167]    0.0    0.00    0.00      45         sVar::sVar(std::string*) [167]
                0.00    0.00      45/75          sExpr::sExpr() [155]
-----------------------------------------------
                0.00    0.00       2/45          sFor::~sFor() <cycle 2> [386]
                0.00    0.00       4/45          sSubscript::~sSubscript() <cycle 1> [341]
                0.00    0.00       4/45          sUnOp::~sUnOp() [348]
                0.00    0.00       4/45          sVarDef::~sVarDef() [314]
                0.00    0.00      12/45          sBinOp::~sBinOp() <cycle 1> [264]
                0.00    0.00      19/45          sList<sExpr>::~sList() <cycle 1> [230]
[168]    0.0    0.00    0.00      45         sVar::~sVar() [168]
                0.00    0.00      45/45          sVar::~sVar() [169]
-----------------------------------------------
                0.00    0.00      45/45          sVar::~sVar() [168]
[169]    0.0    0.00    0.00      45         sVar::~sVar() [169]
                0.00    0.00      45/96          sExpr::~sExpr() [139]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [173]
[170]    0.0    0.00    0.00      44         sList<sDef>::sList() [170]
                0.00    0.00      44/518         sObject::sObject(unsigned int) [104]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [175]
[171]    0.0    0.00    0.00      44         sList<sDef>::~sList() [171]
                0.00    0.00     263/263         sArgDef::~sArgDef() [125]
                0.00    0.00      44/518         sObject::~sObject() [105]
                0.00    0.00       6/7           sVarDef::~sVarDef() [313]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [208]
[172]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [172]
                0.00    0.00     269/456         sObject::setParent(sObject*) [106]
                0.00    0.00     269/556         sList<sDef>::next(void*&) const [102]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00      44/97          sList<sDef>::first(void*&) const [138]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [312]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [333]
[173]    0.0    0.00    0.00      44         sDefList::sDefList() [173]
                0.00    0.00      44/44          sList<sDef>::sList() [170]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [210]
[174]    0.0    0.00    0.00      44         sDefList::~sDefList() [174]
                0.00    0.00      44/44          sDefList::~sDefList() [175]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [174]
[175]    0.0    0.00    0.00      44         sDefList::~sDefList() [175]
                0.00    0.00      44/44          sList<sDef>::~sList() [171]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::size() const [177]
[176]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::end() const [176]
                0.00    0.00      44/88          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [142]
-----------------------------------------------
                0.00    0.00      44/44          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[177]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::size() const [177]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::begin() const [178]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::end() const [176]
                0.00    0.00      44/44          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [181]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::size() const [177]
[178]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::begin() const [178]
                0.00    0.00      44/88          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [142]
-----------------------------------------------
                0.00    0.00      44/44          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [181]
[179]    0.0    0.00    0.00      44         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [179]
                0.00    0.00     830/830         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [96]
                0.00    0.00     786/786         std::_List_const_iterator<sObject*>::operator++() [97]
-----------------------------------------------
                0.00    0.00      44/44          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [181]
[180]    0.0    0.00    0.00      44         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [180]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::size() const [177]
[181]    0.0    0.00    0.00      44         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [181]
                0.00    0.00      44/44          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [180]
                0.00    0.00      44/44          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [179]
-----------------------------------------------
                0.00    0.00       1/43          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [510]
                0.00    0.00      42/43          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [184]
[182]    0.0    0.00    0.00      43         operator new(unsigned long, void*) [182]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
[183]    0.0    0.00    0.00      42         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [183]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
[184]    0.0    0.00    0.00      42         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [184]
                0.00    0.00      42/43          operator new(unsigned long, void*) [182]
-----------------------------------------------
                0.00    0.00      42/42          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [191]
[185]    0.0    0.00    0.00      42         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [185]
-----------------------------------------------
                0.00    0.00      42/42          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [190]
[186]    0.0    0.00    0.00      42         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [186]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [188]
-----------------------------------------------
                0.00    0.00      42/42          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[187]    0.0    0.00    0.00      42         sObject::isInclude() const [187]
                0.00    0.00      19/374         sQuOpDef::object() const [110]
                0.00    0.00      16/369         sQuFunDef::object() const [111]
                0.00    0.00       3/48          sConstDef::object() const [164]
                0.00    0.00       2/13          sCall::object() const [287]
                0.00    0.00       1/85          sVarDef::object() const [143]
                0.00    0.00       1/58          sProcDef::object() const [159]
-----------------------------------------------
                0.00    0.00      42/42          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [186]
[188]    0.0    0.00    0.00      42         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [188]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::front() [194]
[189]    0.0    0.00    0.00      42         std::_List_iterator<sObject*>::operator*() const [189]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
[190]    0.0    0.00    0.00      42         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [190]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [186]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
[191]    0.0    0.00    0.00      42         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [191]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [185]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [196]
[192]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
                0.00    0.00      42/42          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [190]
                0.00    0.00      42/84          sObject** std::__addressof<sObject*>(sObject*&) [151]
                0.00    0.00      42/84          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [146]
                0.00    0.00      42/84          std::allocator<sObject*>::~allocator() [149]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [184]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [198]
[193]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::end() [193]
                0.00    0.00      42/126         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [134]
-----------------------------------------------
                0.00    0.00      42/42          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[194]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::front() [194]
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::begin() [150]
                0.00    0.00      42/42          std::_List_iterator<sObject*>::operator*() const [189]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::pop_front() [197]
[195]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
                0.00    0.00      42/84          sObject** std::__addressof<sObject*>(sObject*&) [151]
                0.00    0.00      42/84          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [146]
                0.00    0.00      42/84          std::allocator<sObject*>::~allocator() [149]
                0.00    0.00      42/42          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [183]
                0.00    0.00      42/42          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [191]
-----------------------------------------------
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [198]
[196]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [196]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [192]
-----------------------------------------------
                0.00    0.00      42/42          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[197]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::pop_front() [197]
                0.00    0.00      42/84          std::list<sObject*, std::allocator<sObject*> >::begin() [150]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [195]
-----------------------------------------------
                0.00    0.00      42/42          yyparse() [333]
[198]    0.0    0.00    0.00      42         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [198]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::end() [193]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [196]
-----------------------------------------------
                0.00    0.00       4/41          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      37/41          sCall::typecheck(SymTable*, SymTable*) [275]
[199]    0.0    0.00    0.00      41         sRoutDef::args() [199]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [286]
[200]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [200]
-----------------------------------------------
                0.00    0.00       2/38          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/38          sListFunct::sListFunct(ObjType, sExprList*) [335]
                0.00    0.00       4/38          sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       6/38          sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00      22/38          sCall::typecheck(SymTable*, SymTable*) [275]
[201]    0.0    0.00    0.00      38         sList<sExpr>::next(void*&) const [201]
-----------------------------------------------
                0.00    0.00       1/37          quBaseState::quBaseState(int, int) [44]
                0.00    0.00      36/37          quSubState::quSubState(int) [204]
[202]    0.0    0.00    0.00      37         quState::quState(int) [202]
-----------------------------------------------
                0.00    0.00       2/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/37          sSubscript::sSubscript(sVar*, sExprList*) [339]
                0.00    0.00       4/37          sListFunct::sListFunct(ObjType, sExprList*) [335]
                0.00    0.00       4/37          sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       8/37          sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00      15/37          sCall::typecheck(SymTable*, SymTable*) [275]
[203]    0.0    0.00    0.00      37         sList<sExpr>::first(void*&) const [203]
-----------------------------------------------
                0.00    0.00      36/36          quSubString::quSubString(int, int, quState&) <cycle 5> [205]
[204]    0.0    0.00    0.00      36         quSubState::quSubState(int) [204]
                0.00    0.00      36/37          quState::quState(int) [202]
-----------------------------------------------
                                  36             quBaseState::newsubstring(int, int) <cycle 5> [157]
[205]    0.0    0.00    0.00      36         quSubString::quSubString(int, int, quState&) <cycle 5> [205]
                0.00    0.00      36/36          quSubState::quSubState(int) [204]
                                  36             quState::newclone() <cycle 5> [161]
-----------------------------------------------
                0.00    0.00       1/36          quBaseState::~quBaseState() [35]
                0.00    0.00      35/36          quSubState::~quSubState() [211]
[206]    0.0    0.00    0.00      36         quState::~quState() [206]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[207]    0.0    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [207]
                0.00    0.00      36/171         sObject::def() const [131]
                0.00    0.00      36/357         tValue::tValue() [114]
                0.00    0.00      36/325         SymTab::put(sDef*, tValue const&) [115]
                0.00    0.00      36/670         tValue::~tValue() [101]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[208]    0.0    0.00    0.00      36         sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00     734/21506       sDef::id() const [73]
                0.00    0.00     435/4160        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [85]
                0.00    0.00     275/357         tValue::tValue() [114]
                0.00    0.00     275/325         SymTab::put(sDef*, tValue const&) [115]
                0.00    0.00     275/670         tValue::~tValue() [101]
                0.00    0.00     263/265         SymTab::getRef(std::string const&, ObjType*) const [123]
                0.00    0.00     263/295         sObject::isFunctDef() const [119]
                0.00    0.00     263/376         sDef::type() const [108]
                0.00    0.00     263/263         tType::isQuReg() const [128]
                0.00    0.00     263/556         sList<sDef>::next(void*&) const [102]
                0.00    0.00      72/78          SymTab::SymTab(int) [152]
                0.00    0.00      72/78          SymTab::~SymTab() [153]
                0.00    0.00      52/456         sObject::setParent(sObject*) [106]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [172]
                0.00    0.00      36/139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00      36/171         sObject::def() const [131]
                0.00    0.00      36/97          sList<sDef>::first(void*&) const [138]
                0.00    0.00      36/74          sObject::isExtern() const [156]
                0.00    0.00       8/255         sObject::isRoutDef() const [129]
                0.00    0.00       8/31          sObject::isCondDef() const [219]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [293]
                0.00    0.00       8/30          sObject::isQuFunDef() const [221]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [294]
                0.00    0.00       3/3           sObject::isBennet() const [372]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [504]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [272]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [255]
[209]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209]
                0.00    0.00     144/177         sObject::setFlag(ObjFlag, int) [130]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [117]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [506]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [274]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [257]
[210]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [210]
                0.00    0.00      44/44          sDefList::~sDefList() [174]
                0.00    0.00      36/74          sObject::isExtern() const [156]
                0.00    0.00      36/312         sDef::~sDef() [118]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [267]
-----------------------------------------------
                0.00    0.00      35/35          quSubString::~quSubString() [214]
[211]    0.0    0.00    0.00      35         quSubState::~quSubState() [211]
                0.00    0.00      35/35          quBaseState::isbasestate() const [215]
                0.00    0.00      35/36          quState::~quState() [206]
-----------------------------------------------
                                  15             quState::newclone() <cycle 5> [161]
                0.00    0.00      20/36          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[212]    0.0    0.00    0.00      35         quSubString::newsubstring(int, int) <cycle 5> [212]
                                  35             quBaseState::newsubstring(int, int) <cycle 5> [157]
-----------------------------------------------
                0.00    0.00      15/35          tValue::delpointer() [98]
                0.00    0.00      20/35          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[213]    0.0    0.00    0.00      35         quSubString::~quSubString() [213]
                0.00    0.00      35/35          quSubString::~quSubString() [214]
-----------------------------------------------
                0.00    0.00      35/35          quSubString::~quSubString() [213]
[214]    0.0    0.00    0.00      35         quSubString::~quSubString() [214]
                0.00    0.00      35/35          quSubState::~quSubState() [211]
-----------------------------------------------
                0.00    0.00      35/35          quSubState::~quSubState() [211]
[215]    0.0    0.00    0.00      35         quBaseState::isbasestate() const [215]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [129]
[216]    0.0    0.00    0.00      34         sDefList::object() const [216]
-----------------------------------------------
                0.00    0.00       2/32          sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/32          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/32          sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       4/32          sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00      21/32          sConst::sConst(tValue const&) [242]
[217]    0.0    0.00    0.00      32         tValue::operator=(tValue const&) [217]
                0.00    0.00      32/702         tValue::delpointer() [98]
                0.00    0.00      32/322         tValue::assign(tValue const&) [116]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00      14/32          tType::isCond() const [285]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
[218]    0.0    0.00    0.00      32         tType::isQuCond() const [218]
                0.00    0.00      32/122         tType::isQuExpr() const [135]
-----------------------------------------------
                0.00    0.00       2/31          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       2/31          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/31          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       8/31          sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00      15/31          sCall::typecheck(SymTable*, SymTable*) [275]
[219]    0.0    0.00    0.00      31         sObject::isCondDef() const [219]
                0.00    0.00      31/171         sObject::isSet(ObjFlag) const [132]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [286]
[220]    0.0    0.00    0.00      30         tType::isNumber() const [220]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [208]
                0.00    0.00       9/30          sObject::isQuDef() const [260]
                0.00    0.00      13/30          sObject::inQuFunDef() const [282]
[221]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [221]
                0.00    0.00      13/369         sQuFunDef::object() const [111]
                0.00    0.00      10/374         sQuOpDef::object() const [110]
                0.00    0.00       7/58          sProcDef::object() const [159]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [166]
[222]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [222]
                0.00    0.00      53/139         SymTab::getDef(std::string const&) const [133]
-----------------------------------------------
                0.00    0.00      28/28          yyparse() [333]
[223]    0.0    0.00    0.00      28         sList<sExpr>::append(sExpr*) [223]
-----------------------------------------------
                0.00    0.00       2/27          termlist::termlist(int, int) [400]
                0.00    0.00       4/27          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.00      21/27          quBaseState::opbegin() [240]
[224]    0.0    0.00    0.00      27         termlist::clear() [224]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [89]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [292]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [270]
[225]    0.0    0.00    0.00      26         yy_load_buffer_state() [225]
-----------------------------------------------
                0.00    0.00      26/26          sCall::typecheck(SymTable*, SymTable*) [275]
[226]    0.0    0.00    0.00      26         tType::isQuConst() const [226]
-----------------------------------------------
                0.00    0.00       1/25          sExit::sExit(sExpr*) [495]
                0.00    0.00       2/25          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [384]
                0.00    0.00       7/25          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [309]
                0.00    0.00      15/25          sCall::sCall(std::string*, sExprList*, int) [276]
[227]    0.0    0.00    0.00      25         sStmt::sStmt(int) [227]
                0.00    0.00      25/518         sObject::sObject(unsigned int) [104]
                0.00    0.00      25/177         sObject::setFlag(ObjFlag, int) [130]
-----------------------------------------------
                0.00    0.00       1/25          sExit::~sExit() [497]
                0.00    0.00       2/25          sFor::~sFor() <cycle 2> [386]
                0.00    0.00       7/25          sIf::~sIf() <cycle 2> [311]
                0.00    0.00      15/25          sCall::~sCall() [278]
[228]    0.0    0.00    0.00      25         sStmt::~sStmt() [228]
                0.00    0.00      25/518         sObject::~sObject() [105]
-----------------------------------------------
                0.00    0.00      23/23          sExprList::sExprList() [232]
[229]    0.0    0.00    0.00      23         sList<sExpr>::sList() [229]
                0.00    0.00      23/518         sObject::sObject(unsigned int) [104]
-----------------------------------------------
                                  23             sExprList::~sExprList() <cycle 1> [234]
[230]    0.0    0.00    0.00      23         sList<sExpr>::~sList() <cycle 1> [230]
                0.00    0.00      23/518         sObject::~sObject() [105]
                0.00    0.00      19/45          sVar::~sVar() [168]
                                   4             sSubscript::~sSubscript() <cycle 1> [340]
                                   3             sMult::~sMult() <cycle 1> [318]
                                   2             sConcat::~sConcat() <cycle 1> [397]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [333]
[231]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [231]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [333]
[232]    0.0    0.00    0.00      23         sExprList::sExprList() [232]
                0.00    0.00      23/23          sList<sExpr>::sList() [229]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [341]
                                   4             sListFunct::~sListFunct() <cycle 1> [337]
                0.00    0.00      15/24          sCall::~sCall() [278]
[233]    0.0    0.00    0.00      23         sExprList::~sExprList() <cycle 1> [233]
                                  23             sExprList::~sExprList() <cycle 1> [234]
-----------------------------------------------
                                  23             sExprList::~sExprList() <cycle 1> [233]
[234]    0.0    0.00    0.00      23         sExprList::~sExprList() <cycle 1> [234]
                                  23             sList<sExpr>::~sList() <cycle 1> [230]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
[235]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [235]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00      14/23          tType::isCond() const [285]
[236]    0.0    0.00    0.00      23         tType::isBoolean() const [236]
-----------------------------------------------
                0.00    0.00       4/23          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      19/23          sObject::isQuDef() const [260]
[237]    0.0    0.00    0.00      23         sObject::isQuOpDef() const [237]
                0.00    0.00      10/374         sQuOpDef::object() const [110]
                0.00    0.00      10/369         sQuFunDef::object() const [111]
                0.00    0.00       3/58          sProcDef::object() const [159]
-----------------------------------------------
                0.00    0.00      22/22          sCall::typecheck(SymTable*, SymTable*) [275]
[238]    0.0    0.00    0.00      22         tType::isConv(tType const&) const [238]
                0.00    0.00       2/122         tType::isQuExpr() const [135]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::reset(bitvec const&) [46]
                0.00    0.00      20/21          quSubState::opend() [247]
[239]    0.0    0.00    0.00      21         quBaseState::opend() [239]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::reset(bitvec const&) [46]
                0.00    0.00      20/21          quSubState::opbegin() [248]
[240]    0.0    0.00    0.00      21         quBaseState::opbegin() [240]
                0.00    0.00      21/27          termlist::clear() [224]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [242]
[241]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [241]
                0.00    0.00      21/518         sObject::sObject(unsigned int) [104]
                0.00    0.00      21/1488        tType::tType(BaseType) [90]
                0.00    0.00      21/852         tType::operator=(tType const&) [95]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00      19/21          yylex() [89]
[242]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [242]
                0.00    0.00      21/64          tValue::type() const [158]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [241]
                0.00    0.00      21/357         tValue::tValue() [114]
                0.00    0.00      21/32          tValue::operator=(tValue const&) [217]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [497]
                0.00    0.00       1/21          sVarDef::~sVarDef() [314]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [386]
                0.00    0.00       5/21          sConstDef::~sConstDef() [326]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [264]
[243]    0.0    0.00    0.00      21         sConst::~sConst() [243]
                0.00    0.00      21/21          sConst::~sConst() [244]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [243]
[244]    0.0    0.00    0.00      21         sConst::~sConst() [244]
                0.00    0.00      21/96          sExpr::~sExpr() [139]
                0.00    0.00      21/670         tValue::~tValue() [101]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [129]
[245]    0.0    0.00    0.00      21         sIf::object() const [245]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       2/21          tValue::isInt() const [414]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       8/21          tType::isOrdered() const [305]
[246]    0.0    0.00    0.00      21         tType::isInt() const [246]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[247]    0.0    0.00    0.00      20         quSubState::opend() [247]
                0.00    0.00      20/21          quBaseState::opend() [239]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[248]    0.0    0.00    0.00      20         quSubState::opbegin() [248]
                0.00    0.00      20/21          quBaseState::opbegin() [240]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[249]    0.0    0.00    0.00      20         terminfo::terminfo() [249]
                0.00    0.00      20/48780       bitvec::bitvec(int, unsigned long) [59]
                0.00    0.00      20/3616        term::term() [87]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[250]    0.0    0.00    0.00      20         quSubState::baseterms() const [250]
                0.00    0.00      20/20          quBaseState::baseterms() const [251]
-----------------------------------------------
                0.00    0.00      20/20          quSubState::baseterms() const [250]
[251]    0.0    0.00    0.00      20         quBaseState::baseterms() const [251]
                0.00    0.00      20/20          termlist::nterms() const [253]
-----------------------------------------------
                0.00    0.00       5/20          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      15/20          sCall::typecheck(SymTable*, SymTable*) [275]
[252]    0.0    0.00    0.00      20         sObject::inFunctDef() const [252]
                0.00    0.00      20/171         sObject::def() const [131]
                0.00    0.00      17/295         sObject::isFunctDef() const [119]
-----------------------------------------------
                0.00    0.00      20/20          quBaseState::baseterms() const [251]
[253]    0.0    0.00    0.00      20         termlist::nterms() const [253]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [494]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [286]
[254]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00      38/64          tValue::type() const [158]
                0.00    0.00      19/19          tType::isDefined() const [258]
                0.00    0.00      19/111         sExpr::settype(tType const&) [136]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [333]
[255]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [255]
                0.00    0.00      19/1488        tType::tType(BaseType) [90]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [162]
[256]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [256]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [257]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [256]
[257]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [257]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [210]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [254]
[258]    0.0    0.00    0.00      19         tType::isDefined() const [258]
-----------------------------------------------
                0.00    0.00       4/19          sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      15/19          sCall::typecheck(SymTable*, SymTable*) [275]
[259]    0.0    0.00    0.00      19         sObject::inQuDef() const [259]
                0.00    0.00      19/171         sObject::def() const [131]
                0.00    0.00      17/19          sObject::isQuDef() const [260]
-----------------------------------------------
                0.00    0.00       2/19          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/19          sObject::inQuDef() const [259]
[260]    0.0    0.00    0.00      19         sObject::isQuDef() const [260]
                0.00    0.00      19/23          sObject::isQuOpDef() const [237]
                0.00    0.00       9/30          sObject::isQuFunDef() const [221]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [266]
[261]    0.0    0.00    0.00      18         sList<sStmt>::sList() [261]
                0.00    0.00      18/518         sObject::sObject(unsigned int) [104]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [268]
[262]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [262]
                0.00    0.00      18/518         sObject::~sObject() [105]
                0.00    0.00      13/15          sCall::~sCall() [277]
                0.00    0.00       1/1           sExit::~sExit() [496]
                                   7             sIf::~sIf() <cycle 2> [310]
                                   2             sFor::~sFor() <cycle 2> [385]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [490]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [387]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [396]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [365]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [343]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [317]
[263]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [263]
                0.00    0.00      18/75          sExpr::sExpr() [155]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [398]
                                   4             sLess::~sLess() <cycle 1> [345]
                                   6             sMult::~sMult() <cycle 1> [319]
                0.00    0.00       1/24          sOr::~sOr() [492]
                0.00    0.00       2/24          sSub::~sSub() [389]
                0.00    0.00       3/24          sEqual::~sEqual() [367]
[264]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [264]
                0.00    0.00      18/96          sExpr::~sExpr() [139]
                0.00    0.00      12/21          sConst::~sConst() [243]
                0.00    0.00      12/45          sVar::~sVar() [168]
                0.00    0.00       4/4           sLength::~sLength() [351]
                                   3             sMult::~sMult() <cycle 1> [318]
                                   3             sListFunct::~sListFunct() <cycle 1> [336]
                                   2             sLess::~sLess() <cycle 1> [344]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [208]
[265]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
                0.00    0.00      23/456         sObject::setParent(sObject*) [106]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [235]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [269]
                0.00    0.00      13/15          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [494]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [333]
[266]    0.0    0.00    0.00      18         sStmtList::sStmtList() [266]
                0.00    0.00      18/18          sList<sStmt>::sList() [261]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [386]
                                   8             sIf::~sIf() <cycle 2> [311]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [210]
[267]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [267]
                                  18             sStmtList::~sStmtList() <cycle 2> [268]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [267]
[268]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [268]
                                  18             sList<sStmt>::~sList() <cycle 2> [262]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
[269]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [269]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [378]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [330]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [290]
[270]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [270]
                0.00    0.00      15/26          yy_load_buffer_state() [225]
-----------------------------------------------
                0.00    0.00       2/17          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      15/17          sCall::typecheck(SymTable*, SymTable*) [275]
[271]    0.0    0.00    0.00      17         sCall::id() const [271]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [333]
[272]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [272]
                0.00    0.00      16/1488        tType::tType(BaseType) [90]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [162]
[273]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [273]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [274]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [273]
[274]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [274]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [210]
-----------------------------------------------
                0.00    0.00       2/15          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/15          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
[275]    0.0    0.00    0.00      15         sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00      44/852         tType::operator=(tType const&) [95]
                0.00    0.00      39/376         sDef::type() const [108]
                0.00    0.00      37/41          sRoutDef::args() [199]
                0.00    0.00      30/1488        tType::tType(BaseType) [90]
                0.00    0.00      26/26          tType::isQuConst() const [226]
                0.00    0.00      22/456         sObject::setParent(sObject*) [106]
                0.00    0.00      22/98          sExpr::type() [137]
                0.00    0.00      22/22          tType::isConv(tType const&) const [238]
                0.00    0.00      22/122         tType::isQuExpr() const [135]
                0.00    0.00      22/38          sList<sExpr>::next(void*&) const [201]
                0.00    0.00      22/556         sList<sDef>::next(void*&) const [102]
                0.00    0.00      17/111         sExpr::settype(tType const&) [136]
                0.00    0.00      15/17          sCall::id() const [271]
                0.00    0.00      15/255         sObject::isRoutDef() const [129]
                0.00    0.00      15/295         sObject::isFunctDef() const [119]
                0.00    0.00      15/20          sObject::inFunctDef() const [252]
                0.00    0.00      15/19          sObject::inQuDef() const [259]
                0.00    0.00      15/31          sObject::isCondDef() const [219]
                0.00    0.00      15/15          sObject::inQuFunDef() const [282]
                0.00    0.00      15/37          sList<sExpr>::first(void*&) const [203]
                0.00    0.00      15/97          sList<sDef>::first(void*&) const [138]
                0.00    0.00      14/14          sObject::isSetRec(ObjFlag) [284]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [222]
                0.00    0.00      13/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00      10/15          sObject::isProcDef() const [283]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00       4/23          sObject::isQuOpDef() const [237]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       2/139         SymTab::getDef(std::string const&) const [133]
-----------------------------------------------
                0.00    0.00      15/15          yyparse() [333]
[276]    0.0    0.00    0.00      15         sCall::sCall(std::string*, sExprList*, int) [276]
                0.00    0.00      15/25          sStmt::sStmt(int) [227]
-----------------------------------------------
                0.00    0.00       2/15          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/15          sList<sStmt>::~sList() <cycle 2> [262]
[277]    0.0    0.00    0.00      15         sCall::~sCall() [277]
                0.00    0.00      15/15          sCall::~sCall() [278]
-----------------------------------------------
                0.00    0.00      15/15          sCall::~sCall() [277]
[278]    0.0    0.00    0.00      15         sCall::~sCall() [278]
                0.00    0.00      15/24          sExprList::~sExprList() <cycle 1> [233]
                0.00    0.00      15/25          sStmt::~sStmt() [228]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [89]
[279]    0.0    0.00    0.00      15         tValue::tValue(long) [279]
                0.00    0.00      15/1488        tType::tType(BaseType) [90]
                0.00    0.00      15/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00      15/15          tValue::delpointer() [98]
[280]    0.0    0.00    0.00      15         quSubState::isbasestate() const [280]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [129]
[281]    0.0    0.00    0.00      15         sFor::object() const [281]
-----------------------------------------------
                0.00    0.00      15/15          sCall::typecheck(SymTable*, SymTable*) [275]
[282]    0.0    0.00    0.00      15         sObject::inQuFunDef() const [282]
                0.00    0.00      15/171         sObject::def() const [131]
                0.00    0.00      13/30          sObject::isQuFunDef() const [221]
-----------------------------------------------
                0.00    0.00       2/15          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/15          sObject::isGlobal() const [321]
                0.00    0.00      10/15          sCall::typecheck(SymTable*, SymTable*) [275]
[283]    0.0    0.00    0.00      15         sObject::isProcDef() const [283]
                0.00    0.00       7/374         sQuOpDef::object() const [110]
                0.00    0.00       5/369         sQuFunDef::object() const [111]
                0.00    0.00       3/58          sProcDef::object() const [159]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [284]
                0.00    0.00      14/14          sCall::typecheck(SymTable*, SymTable*) [275]
[284]    0.0    0.00    0.00      14+42      sObject::isSetRec(ObjFlag) [284]
                0.00    0.00      98/889         sObject::parent() const [94]
                0.00    0.00      56/171         sObject::isSet(ObjFlag) const [132]
                                  42             sObject::isSetRec(ObjFlag) [284]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [286]
[285]    0.0    0.00    0.00      14         tType::isCond() const [285]
                0.00    0.00      14/32          tType::isQuCond() const [218]
                0.00    0.00      14/23          tType::isBoolean() const [236]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [275]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
[286]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00      52/1488        tType::tType(BaseType) [90]
                0.00    0.00      36/456         sObject::setParent(sObject*) [106]
                0.00    0.00      36/98          sExpr::type() [137]
                0.00    0.00      36/852         tType::operator=(tType const&) [95]
                0.00    0.00      36/1068        tType::ord() const [92]
                0.00    0.00      30/30          tType::isNumber() const [220]
                0.00    0.00      26/122         tType::isQuExpr() const [135]
                0.00    0.00      25/41          tType::operator==(BaseType) const [200]
                0.00    0.00      18/111         sExpr::settype(tType const&) [136]
                0.00    0.00      14/14          tType::isCond() const [285]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00      12/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       8/8           tType::isOrdered() const [305]
                0.00    0.00       6/9           sMult::object() const [297]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       4/4           sLess::object() const [356]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       3/3           sEqual::object() const [370]
                0.00    0.00       2/2           sSub::object() const [406]
                0.00    0.00       2/2           sConcat::object() const [417]
                0.00    0.00       2/23          tType::isBoolean() const [236]
                0.00    0.00       2/9           tType::operator==(tType const&) const [298]
                0.00    0.00       1/1           sOr::object() const [521]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [286]
-----------------------------------------------
                0.00    0.00       2/13          sObject::isDef() const [113]
                0.00    0.00       2/13          sObject::isInclude() const [187]
                0.00    0.00       4/13          sObject::isStmt() const [418]
                0.00    0.00       5/13          sObject::isRoutDef() const [129]
[287]    0.0    0.00    0.00      13         sCall::object() const [287]
-----------------------------------------------
                0.00    0.00       2/13          ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       2/13          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       9/13          tValue::qustate() const [299]
[288]    0.0    0.00    0.00      13         tValue::isQuExpr() const [288]
                0.00    0.00      13/122         tType::isQuExpr() const [135]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [89]
[289]    0.0    0.00    0.00      12         yy_get_next_buffer() [289]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [292]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [462]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [292]
[290]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [290]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [270]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [487]
                0.00    0.00      10/11          openqclfile(std::string) [331]
[291]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [291]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [378]
                0.00    0.00       4/10          yy_get_next_buffer() [289]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [330]
[292]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [292]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [290]
                0.00    0.00      10/26          yy_load_buffer_state() [225]
                0.00    0.00       1/1           yyensure_buffer_stack() [489]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [462]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [208]
[293]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [293]
                0.00    0.00      10/88          SymTable::SymTable() [140]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [208]
[294]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [294]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [295]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [294]
[295]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [295]
                0.00    0.00      10/88          SymTable::~SymTable() [141]
-----------------------------------------------
                0.00    0.00      10/10          QuHeap::qualloc(int, BaseType) [38]
[296]    0.0    0.00    0.00      10         bitvec::operator[](int) const [296]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [129]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [286]
[297]    0.0    0.00    0.00       9         sMult::object() const [297]
-----------------------------------------------
                0.00    0.00       2/9           tValue::conv(tType const&) const [413]
                0.00    0.00       2/9           sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00       2/9           sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       3/9           sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
[298]    0.0    0.00    0.00       9         tType::operator==(tType const&) const [298]
-----------------------------------------------
                0.00    0.00       1/9           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/9           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       6/9           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[299]    0.0    0.00    0.00       9         tValue::qustate() const [299]
                0.00    0.00       9/13          tValue::isQuExpr() const [288]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [89]
[300]    0.0    0.00    0.00       8         yy_get_previous_state() [300]
-----------------------------------------------
                0.00    0.00       8/8           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
[301]    0.0    0.00    0.00       8         term::set(bitvec const&, std::complex<double> const&) [301]
                0.00    0.00       8/58906       bitvec::operator=(bitvec const&) [58]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [465]
                0.00    0.00       7/8           yyparse() [333]
[302]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [302]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [117]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [334]
[303]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       8/37          sList<sExpr>::first(void*&) const [203]
                0.00    0.00       6/456         sObject::setParent(sObject*) [106]
                0.00    0.00       6/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       6/38          sList<sExpr>::next(void*&) const [201]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [355]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [334]
[304]    0.0    0.00    0.00       8         sList<sExpr>::n() const [304]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [286]
[305]    0.0    0.00    0.00       8         tType::isOrdered() const [305]
                0.00    0.00       8/21          tType::isInt() const [246]
-----------------------------------------------
                0.00    0.00       8/8           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [307]
[306]    0.0    0.00    0.00       8         std::complex<double>::operator*=(double) [306]
-----------------------------------------------
                0.00    0.00       8/8           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
[307]    0.0    0.00    0.00       8         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [307]
                0.00    0.00       8/8           std::complex<double>::operator*=(double) [306]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
[308]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00      15/456         sObject::setParent(sObject*) [106]
                0.00    0.00      14/32          tType::isQuCond() const [218]
                0.00    0.00       7/23          tType::isBoolean() const [236]
                0.00    0.00       7/98          sExpr::type() [137]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [334]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [333]
[309]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [309]
                0.00    0.00       7/25          sStmt::sStmt(int) [227]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [262]
[310]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [310]
                                   7             sIf::~sIf() <cycle 2> [311]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [310]
[311]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [311]
                0.00    0.00       7/25          sStmt::~sStmt() [228]
                0.00    0.00       3/3           sEqual::~sEqual() [366]
                0.00    0.00       2/24          sLess::~sLess() <cycle 1> [344]
                0.00    0.00       1/24          sListFunct::~sListFunct() <cycle 1> [336]
                0.00    0.00       1/1           sOr::~sOr() [491]
                                   8             sStmtList::~sStmtList() <cycle 2> [267]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [172]
[312]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [312]
                0.00    0.00      29/171         sObject::def() const [131]
                0.00    0.00      23/376         sDef::type() const [108]
                0.00    0.00      16/41          tType::operator==(BaseType) const [200]
                0.00    0.00      11/122         tType::isQuExpr() const [135]
                0.00    0.00       7/21506       sDef::id() const [73]
                0.00    0.00       7/139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00       6/357         tValue::tValue() [114]
                0.00    0.00       6/325         SymTab::put(sDef*, tValue const&) [115]
                0.00    0.00       6/670         tValue::~tValue() [101]
                0.00    0.00       5/456         sObject::setParent(sObject*) [106]
                0.00    0.00       5/20          sObject::inFunctDef() const [252]
                0.00    0.00       5/98          sExpr::type() [137]
                0.00    0.00       5/171         sObject::isSet(ObjFlag) const [132]
                0.00    0.00       4/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       4/19          sObject::inQuDef() const [259]
                0.00    0.00       4/31          sObject::isCondDef() const [219]
                0.00    0.00       4/177         sObject::setFlag(ObjFlag, int) [130]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00       1/21          tType::isInt() const [246]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [162]
                0.00    0.00       6/7           sList<sDef>::~sList() [171]
[313]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [313]
                0.00    0.00       7/7           sVarDef::~sVarDef() [314]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [313]
[314]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [314]
                0.00    0.00       8/312         sDef::~sDef() [118]
                0.00    0.00       4/45          sVar::~sVar() [168]
                0.00    0.00       1/21          sConst::~sConst() [243]
-----------------------------------------------
                0.00    0.00       7/7           tValue::isError() const [316]
[315]    0.0    0.00    0.00       7         tType::isError() const [315]
-----------------------------------------------
                0.00    0.00       2/7           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/7           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/7           sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
[316]    0.0    0.00    0.00       7         tValue::isError() const [316]
                0.00    0.00       7/7           tType::isError() const [315]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [333]
[317]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [317]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [263]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [264]
                                   3             sList<sExpr>::~sList() <cycle 1> [230]
[318]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [318]
                                   6             sMult::~sMult() <cycle 1> [319]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [318]
[319]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [319]
                                   6             sBinOp::~sBinOp() <cycle 1> [264]
-----------------------------------------------
                0.00    0.00       2/6           termlist::termlist(int, int) [400]
                0.00    0.00       4/6           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[320]    0.0    0.00    0.00       6         termlist::newlist() [320]
                0.00    0.00    3584/3616        term::term() [87]
-----------------------------------------------
                0.00    0.00       1/6           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       2/6           sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       3/6           sObject::isLocal() const [371]
[321]    0.0    0.00    0.00       6         sObject::isGlobal() const [321]
                0.00    0.00       6/171         sObject::def() const [131]
                0.00    0.00       3/15          sObject::isProcDef() const [283]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [331]
[322]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [322]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [369]
[323]    0.0    0.00    0.00       5         sDef::settype(tType const&) [323]
                0.00    0.00       5/852         tType::operator=(tType const&) [95]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       3/5           yyparse() [333]
[324]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [324]
                0.00    0.00       5/1488        tType::tType(BaseType) [90]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [117]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [162]
[325]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [325]
                0.00    0.00       5/5           sConstDef::~sConstDef() [326]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [325]
[326]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [326]
                0.00    0.00       5/21          sConst::~sConst() [243]
                0.00    0.00       5/312         sDef::~sDef() [118]
-----------------------------------------------
                0.00    0.00       5/5           sVar::typecheck(SymTable*, SymTable*) [166]
[327]    0.0    0.00    0.00       5         sObject::isConstDef() const [327]
                0.00    0.00       3/48          sConstDef::object() const [164]
                0.00    0.00       2/85          sVarDef::object() const [143]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
[328]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [328]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [331]
[329]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [328]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [377]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[330]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [330]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [270]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [292]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[331]    0.0    0.00    0.00       4         openqclfile(std::string) [331]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [291]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [322]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[332]    0.0    0.00    0.00       4         zero(bitvec const&) [332]
                0.00    0.00       4/4           bitvec::testzero() const [358]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [377]
                0.00    0.00       2/4           parseobj() [376]
[333]    0.0    0.00    0.00       4         yyparse() [333]
                0.00    0.00    2346/2346        yylex() [89]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [122]
                0.00    0.00     268/1488        tType::tType(BaseType) [90]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [124]
                0.00    0.00      45/45          sVar::sVar(std::string*) [167]
                0.00    0.00      44/44          sDefList::sDefList() [173]
                0.00    0.00      42/42          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [198]
                0.00    0.00      28/28          sList<sExpr>::append(sExpr*) [223]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [231]
                0.00    0.00      23/23          sExprList::sExprList() [232]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [255]
                0.00    0.00      18/18          sStmtList::sStmtList() [266]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [272]
                0.00    0.00      15/15          sCall::sCall(std::string*, sExprList*, int) [276]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [302]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [309]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [317]
                0.00    0.00       4/177         sObject::setFlag(ObjFlag, int) [130]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [339]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [350]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [343]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [335]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [324]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [365]
                0.00    0.00       2/2           objlist::objlist() [395]
                0.00    0.00       2/2           tType::tType(BaseType, int) [391]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [384]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [387]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [396]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [504]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [495]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [490]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [308]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [286]
[334]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       8/1488        tType::tType(BaseType) [90]
                0.00    0.00       4/357         tValue::tValue() [114]
                0.00    0.00       4/456         sObject::setParent(sObject*) [106]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       4/8           sList<sExpr>::n() const [304]
                0.00    0.00       4/4           sListFunct::object() const [354]
                0.00    0.00       4/111         sExpr::settype(tType const&) [136]
                0.00    0.00       4/670         tValue::~tValue() [101]
                0.00    0.00       3/98          sExpr::type() [137]
                0.00    0.00       3/3           sObject::isLocal() const [371]
                0.00    0.00       2/21          tType::isInt() const [246]
                0.00    0.00       1/852         tType::operator=(tType const&) [95]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [333]
[335]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [335]
                0.00    0.00       4/75          sExpr::sExpr() [155]
                0.00    0.00       4/37          sList<sExpr>::first(void*&) const [203]
                0.00    0.00       4/38          sList<sExpr>::next(void*&) const [201]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [264]
                0.00    0.00       1/24          sIf::~sIf() <cycle 2> [311]
[336]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [336]
                                   4             sListFunct::~sListFunct() <cycle 1> [337]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [336]
[337]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [337]
                0.00    0.00       4/96          sExpr::~sExpr() [139]
                                   4             sExprList::~sExprList() <cycle 1> [233]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [275]
[338]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [338]
                0.00    0.00       8/456         sObject::setParent(sObject*) [106]
                0.00    0.00       8/98          sExpr::type() [137]
                0.00    0.00       8/122         tType::isQuExpr() const [135]
                0.00    0.00       8/1068        tType::ord() const [92]
                0.00    0.00       4/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       4/4           sSubscript::nargs() const [355]
                0.00    0.00       4/37          sList<sExpr>::first(void*&) const [203]
                0.00    0.00       4/21          tType::isInt() const [246]
                0.00    0.00       4/38          sList<sExpr>::next(void*&) const [201]
                0.00    0.00       4/32          tType::isQuCond() const [218]
                0.00    0.00       4/4           sExpr::basetype() [342]
                0.00    0.00       4/1488        tType::tType(BaseType) [90]
                0.00    0.00       4/111         sExpr::settype(tType const&) [136]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [333]
[339]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [339]
                0.00    0.00       4/75          sExpr::sExpr() [155]
                0.00    0.00       4/37          sList<sExpr>::first(void*&) const [203]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [230]
[340]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [340]
                                   4             sSubscript::~sSubscript() <cycle 1> [341]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [340]
[341]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [341]
                0.00    0.00       4/45          sVar::~sVar() [168]
                0.00    0.00       4/96          sExpr::~sExpr() [139]
                                   4             sExprList::~sExprList() <cycle 1> [233]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [338]
[342]    0.0    0.00    0.00       4         sExpr::basetype() [342]
                0.00    0.00       4/1029        tType::basetype() const [93]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [333]
[343]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [343]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [263]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [264]
                0.00    0.00       2/24          sIf::~sIf() <cycle 2> [311]
[344]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [344]
                                   4             sLess::~sLess() <cycle 1> [345]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [344]
[345]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [345]
                                   4             sBinOp::~sBinOp() <cycle 1> [264]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [286]
[346]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [346]
                0.00    0.00       4/456         sObject::setParent(sObject*) [106]
                0.00    0.00       4/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       4/98          sExpr::type() [137]
                0.00    0.00       4/4           sLength::object() const [359]
                0.00    0.00       4/122         tType::isQuExpr() const [135]
                0.00    0.00       4/1488        tType::tType(BaseType) [90]
                0.00    0.00       4/111         sExpr::settype(tType const&) [136]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [350]
[347]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [347]
                0.00    0.00       4/75          sExpr::sExpr() [155]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [352]
[348]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [348]
                0.00    0.00       4/45          sVar::~sVar() [168]
                0.00    0.00       4/96          sExpr::~sExpr() [139]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
[349]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [349]
                0.00    0.00       4/290         tValue::tValue(tValue const&) [120]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [333]
[350]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [350]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [347]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [264]
[351]    0.0    0.00    0.00       4         sLength::~sLength() [351]
                0.00    0.00       4/4           sLength::~sLength() [352]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [351]
[352]    0.0    0.00    0.00       4         sLength::~sLength() [352]
                0.00    0.00       4/4           sUnOp::~sUnOp() [348]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [423]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [422]
[353]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [353]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [334]
[354]    0.0    0.00    0.00       4         sListFunct::object() const [354]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [338]
[355]    0.0    0.00    0.00       4         sSubscript::nargs() const [355]
                0.00    0.00       4/8           sList<sExpr>::n() const [304]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [286]
[356]    0.0    0.00    0.00       4         sLess::object() const [356]
-----------------------------------------------
                0.00    0.00       4/4           sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
[357]    0.0    0.00    0.00       4         SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00       2/357         tValue::tValue() [114]
                0.00    0.00       2/367         SymTab::getentry(SymTable::entry*, std::string const&) const [112]
                0.00    0.00       2/374         sObject::isValueDef() const [109]
                0.00    0.00       2/85          sVarDef::object() const [143]
                0.00    0.00       2/290         tValue::tValue(tValue const&) [120]
-----------------------------------------------
                0.00    0.00       4/4           zero(bitvec const&) [332]
[358]    0.0    0.00    0.00       4         bitvec::testzero() const [358]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [346]
[359]    0.0    0.00    0.00       4         sLength::object() const [359]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [519]
[360]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [360]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [405]
[361]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [361]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [523]
[362]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [362]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[363]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [363]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [489]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [462]
[364]    0.0    0.00    0.00       3         yyalloc(unsigned long) [364]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [333]
[365]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [365]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [263]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [311]
[366]    0.0    0.00    0.00       3         sEqual::~sEqual() [366]
                0.00    0.00       3/3           sEqual::~sEqual() [367]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [366]
[367]    0.0    0.00    0.00       3         sEqual::~sEqual() [367]
                0.00    0.00       3/24          sBinOp::~sBinOp() <cycle 1> [264]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[368]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [368]
                0.00    0.00       6/670         tValue::~tValue() [101]
                0.00    0.00       3/357         tValue::tValue() [114]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [349]
                0.00    0.00       3/32          tValue::operator=(tValue const&) [217]
                0.00    0.00       3/7           tValue::isError() const [316]
                0.00    0.00       3/64          tValue::type() const [158]
                0.00    0.00       3/376         sDef::type() const [108]
                0.00    0.00       3/9           tType::operator==(tType const&) const [298]
                0.00    0.00       3/171         sObject::def() const [131]
                0.00    0.00       3/325         SymTab::put(sDef*, tValue const&) [115]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[369]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [369]
                0.00    0.00       6/171         sObject::def() const [131]
                0.00    0.00       6/98          sExpr::type() [137]
                0.00    0.00       3/456         sObject::setParent(sObject*) [106]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00       3/21506       sDef::id() const [73]
                0.00    0.00       3/139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00       3/122         tType::isQuExpr() const [135]
                0.00    0.00       3/5           sDef::settype(tType const&) [323]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [286]
[370]    0.0    0.00    0.00       3         sEqual::object() const [370]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [334]
[371]    0.0    0.00    0.00       3         sObject::isLocal() const [371]
                0.00    0.00       3/6           sObject::isGlobal() const [321]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [208]
[372]    0.0    0.00    0.00       3         sObject::isBennet() const [372]
                0.00    0.00       3/171         sObject::isSet(ObjFlag) const [132]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [509]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [425]
[373]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [373]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [487]
[374]    0.0    0.00    0.00       2         irqOn() [374]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [400]
[375]    0.0    0.00    0.00       2         duallog(int) [375]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[376]    0.0    0.00    0.00       2         parseobj() [376]
                0.00    0.00       2/4           yyparse() [333]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[377]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [377]
                0.00    0.00       2/4           yyparse() [333]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [330]
                0.00    0.00       2/2           yyCleanUp() [378]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [377]
[378]    0.0    0.00    0.00       2         yyCleanUp() [378]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [292]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [270]
-----------------------------------------------
                0.00    0.00       2/2           opElementary::opElementary(int) [381]
[379]    0.0    0.00    0.00       2         opOperator::opOperator(int) [379]
-----------------------------------------------
                0.00    0.00       2/2           opElementary::~opElementary() [382]
[380]    0.0    0.00    0.00       2         opOperator::~opOperator() [380]
-----------------------------------------------
                0.00    0.00       2/2           opMatrix::opMatrix(int) [399]
[381]    0.0    0.00    0.00       2         opElementary::opElementary(int) [381]
                0.00    0.00       2/2           opOperator::opOperator(int) [379]
-----------------------------------------------
                0.00    0.00       2/2           opMatrix::~opMatrix() [42]
[382]    0.0    0.00    0.00       2         opElementary::~opElementary() [382]
                0.00    0.00       2/2           opOperator::~opOperator() [380]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
[383]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
                0.00    0.00       8/456         sObject::setParent(sObject*) [106]
                0.00    0.00       4/98          sExpr::type() [137]
                0.00    0.00       4/21          tType::isInt() const [246]
                0.00    0.00       4/670         tValue::~tValue() [101]
                0.00    0.00       2/78          SymTab::SymTab(int) [152]
                0.00    0.00       2/45          sVar::typecheck(SymTable*, SymTable*) [166]
                0.00    0.00       2/56          sVar::id() const [160]
                0.00    0.00       2/139         SymTab::getDef(std::string const&) const [133]
                0.00    0.00       2/85          sVarDef::object() const [143]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [286]
                0.00    0.00       2/21506       sDef::id() const [73]
                0.00    0.00       2/2           tValue::tValue(int) [394]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [242]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [324]
                0.00    0.00       2/1488        tType::tType(BaseType) [90]
                0.00    0.00       2/357         tValue::tValue() [114]
                0.00    0.00       2/5           sDef::settype(tType const&) [323]
                0.00    0.00       2/325         SymTab::put(sDef*, tValue const&) [115]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [293]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [294]
                0.00    0.00       2/5           sConstDef::~sConstDef() [325]
                0.00    0.00       2/78          SymTab::~SymTab() [153]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [333]
[384]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [384]
                0.00    0.00       2/25          sStmt::sStmt(int) [227]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [262]
[385]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [385]
                                   2             sFor::~sFor() <cycle 2> [386]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [385]
[386]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [386]
                0.00    0.00       2/45          sVar::~sVar() [168]
                0.00    0.00       2/21          sConst::~sConst() [243]
                0.00    0.00       2/2           sSub::~sSub() [388]
                0.00    0.00       2/25          sStmt::~sStmt() [228]
                                   2             sStmtList::~sStmtList() <cycle 2> [267]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [333]
[387]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [387]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [263]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [386]
[388]    0.0    0.00    0.00       2         sSub::~sSub() [388]
                0.00    0.00       2/2           sSub::~sSub() [389]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [388]
[389]    0.0    0.00    0.00       2         sSub::~sSub() [389]
                0.00    0.00       2/24          sBinOp::~sBinOp() <cycle 1> [264]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[390]    0.0    0.00    0.00       2         sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
                0.00    0.00       4/56          sVar::id() const [160]
                0.00    0.00       4/4           SymTab::getVal(std::string const&, ObjType*) const [357]
                0.00    0.00       4/32          tValue::operator=(tValue const&) [217]
                0.00    0.00       4/670         tValue::~tValue() [101]
                0.00    0.00       2/357         tValue::tValue() [114]
                0.00    0.00       2/2           tValue::isExpr() const [416]
                0.00    0.00       2/98          sExpr::type() [137]
                0.00    0.00       2/64          tValue::type() const [158]
                0.00    0.00       2/9           tType::operator==(tType const&) const [298]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [333]
[391]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [391]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[392]    0.0    0.00    0.00       2         SymTab::~SymTab() [392]
                0.00    0.00       2/78          SymTab::~SymTab() [153]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [89]
[393]    0.0    0.00    0.00       2         tValue::tValue(double) [393]
                0.00    0.00       2/1488        tType::tType(BaseType) [90]
                0.00    0.00       2/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [383]
[394]    0.0    0.00    0.00       2         tValue::tValue(int) [394]
                0.00    0.00       2/1488        tType::tType(BaseType) [90]
                0.00    0.00       2/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [333]
[395]    0.0    0.00    0.00       2         objlist::objlist() [395]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [433]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [333]
[396]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [396]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [263]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [230]
[397]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [397]
                                   2             sConcat::~sConcat() <cycle 1> [398]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [397]
[398]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [398]
                                   2             sBinOp::~sBinOp() <cycle 1> [264]
-----------------------------------------------
                0.00    0.00       2/2           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [45]
[399]    0.0    0.00    0.00       2         opMatrix::opMatrix(int) [399]
                0.00    0.00       2/2           opElementary::opElementary(int) [381]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::quBaseState(int, int) [44]
[400]    0.0    0.00    0.00       2         termlist::termlist(int, int) [400]
                0.00    0.00       2/2           duallog(int) [375]
                0.00    0.00       2/27          termlist::clear() [224]
                0.00    0.00       2/6           termlist::newlist() [320]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [426]
[401]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [401]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [556]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [557]
[402]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [402]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [524]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [525]
[403]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [403]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [527]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [528]
[404]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [404]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [424]
[405]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [405]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [361]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [286]
[406]    0.0    0.00    0.00       2         sSub::object() const [406]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[407]    0.0    0.00    0.00       2         sStmt::isInv() const [407]
                0.00    0.00       2/171         sObject::isSet(ObjFlag) const [132]
-----------------------------------------------
                0.00    0.00       2/2           tValue::isExpr() const [416]
[408]    0.0    0.00    0.00       2         tType::isExpr() const [408]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[409]    0.0    0.00    0.00       2         QuHeap::cond() const [409]
                0.00    0.00       2/2           QuHeap::ncond() const [412]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[410]    0.0    0.00    0.00       2         QuHeap::cmask() const [410]
                0.00    0.00       2/33794       bitvec::length() const [62]
                0.00    0.00       2/48780       bitvec::bitvec(int, unsigned long) [59]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[411]    0.0    0.00    0.00       2         QuHeap::nBits() const [411]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::cond() const [409]
[412]    0.0    0.00    0.00       2         QuHeap::ncond() const [412]
                0.00    0.00       2/33794       bitvec::length() const [62]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[413]    0.0    0.00    0.00       2         tValue::conv(tType const&) const [413]
                0.00    0.00       2/9           tType::operator==(tType const&) const [298]
                0.00    0.00       2/290         tValue::tValue(tValue const&) [120]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [415]
[414]    0.0    0.00    0.00       2         tValue::isInt() const [414]
                0.00    0.00       2/21          tType::isInt() const [246]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
[415]    0.0    0.00    0.00       2         tValue::toInt() const [415]
                0.00    0.00       2/2           tValue::isInt() const [414]
-----------------------------------------------
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [390]
[416]    0.0    0.00    0.00       2         tValue::isExpr() const [416]
                0.00    0.00       2/2           tType::isExpr() const [408]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [286]
[417]    0.0    0.00    0.00       2         sConcat::object() const [417]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[418]    0.0    0.00    0.00       2         sObject::isStmt() const [418]
                0.00    0.00       4/13          sCall::object() const [287]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [517]
[419]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [419]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [518]
[420]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [420]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [425]
[421]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [421]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [424]
[422]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [422]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [353]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [424]
[423]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [423]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [353]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [31]
[424]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [424]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [422]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [423]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [405]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [523]
[425]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [425]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [373]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [421]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [427]
[426]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [426]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [401]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [429]
[427]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [427]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [426]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [429]
[428]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [428]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [433]
[429]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [429]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [428]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [427]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [437]
[430]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [430]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [542]
[431]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [431]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [507]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [434]
[432]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [432]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [395]
[433]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [433]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [429]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [435]
[434]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [434]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [432]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [436]
[435]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [435]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [434]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[436]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [436]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [435]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [438]
[437]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [437]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [430]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[438]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [438]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [437]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[439]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [439]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [465]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[440]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [440]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[441]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [441]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[442]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [442]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[443]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [443]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[444]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [444]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[445]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [445]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [466]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[446]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [446]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[447]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [447]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[448]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [448]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[449]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [449]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[450]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [450]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[451]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [451]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [464]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[452]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [452]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[453]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [453]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[454]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [454]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[455]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [455]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[456]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qc_check_txt [456]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[457]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [457]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[458]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [458]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[459]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [459]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [292]
[462]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [462]
                0.00    0.00       2/3           yyalloc(unsigned long) [364]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [290]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[463]    0.0    0.00    0.00       1         initialize_readline() [463]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [451]
[464]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [464]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [439]
[465]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [465]
                0.00    0.00       1/1488        tType::tType(BaseType) [90]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [302]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [445]
[466]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [466]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [444]
[467]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [448]
[468]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [461]
[469]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [460]
[470]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [447]
[471]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [449]
[472]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [440]
[473]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [443]
[474]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [442]
[475]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [459]
[476]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [457]
[477]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [458]
[478]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [446]
[479]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [441]
[480]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [455]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [450]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [456]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [454]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [453]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [452]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[487]    0.0    0.00    0.00       1         parseopt(int, char**) [487]
                0.00    0.00       2/2           irqOn() [374]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [291]
                0.00    0.00       1/1           qc_srand(long) [488]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [487]
[488]    0.0    0.00    0.00       1         qc_srand(long) [488]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [292]
[489]    0.0    0.00    0.00       1         yyensure_buffer_stack() [489]
                0.00    0.00       1/3           yyalloc(unsigned long) [364]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [333]
[490]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [490]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [263]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [311]
[491]    0.0    0.00    0.00       1         sOr::~sOr() [491]
                0.00    0.00       1/1           sOr::~sOr() [492]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [491]
[492]    0.0    0.00    0.00       1         sOr::~sOr() [492]
                0.00    0.00       1/24          sBinOp::~sBinOp() <cycle 1> [264]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
[493]    0.0    0.00    0.00       1         sDef::basetype() [493]
                0.00    0.00       1/1029        tType::basetype() const [93]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [265]
[494]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [494]
                0.00    0.00       1/456         sObject::setParent(sObject*) [106]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [254]
                0.00    0.00       1/98          sExpr::type() [137]
                0.00    0.00       1/1           tType::isString() const [522]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [333]
[495]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [495]
                0.00    0.00       1/25          sStmt::sStmt(int) [227]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [262]
[496]    0.0    0.00    0.00       1         sExit::~sExit() [496]
                0.00    0.00       1/1           sExit::~sExit() [497]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [496]
[497]    0.0    0.00    0.00       1         sExit::~sExit() [497]
                0.00    0.00       1/21          sConst::~sConst() [243]
                0.00    0.00       1/25          sStmt::~sStmt() [228]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [43]
[498]    0.0    0.00    0.00       1         QuHeap::init() [498]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [39]
[499]    0.0    0.00    0.00       1         QuHeap::addReg(quState*) [499]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [502]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [559]
                0.00    0.00       1/670         tValue::~tValue() [101]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [38]
[500]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [500]
                0.00    0.00       1/1488        tType::tType(BaseType) [90]
                0.00    0.00       1/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [89]
[501]    0.0    0.00    0.00       1         tValue::tValue(char const*) [501]
                0.00    0.00       1/1488        tType::tType(BaseType) [90]
                0.00    0.00       1/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [499]
[502]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [502]
                0.00    0.00       1/1488        tType::tType(BaseType) [90]
                0.00    0.00       1/36          quState::newclone() <cycle 5> [161]
                0.00    0.00       1/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [89]
[503]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [503]
                0.00    0.00       1/1488        tType::tType(BaseType) [90]
                0.00    0.00       1/455         tType::operator=(BaseType) [107]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [333]
[504]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [504]
                0.00    0.00       1/1488        tType::tType(BaseType) [90]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [162]
[505]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [505]
                0.00    0.00       1/1           sProcDef::~sProcDef() [506]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [505]
[506]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [506]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [210]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [431]
[507]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [507]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [558]
[508]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [508]
                0.00    0.00       1/670         tValue::~tValue() [101]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [538]
[509]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [509]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [373]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[510]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [510]
                0.00    0.00       1/43          operator new(unsigned long, void*) [182]
                0.00    0.00       1/290         tValue::tValue(tValue const&) [120]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [530]
[511]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [511]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [531]
[512]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [512]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [532]
[513]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [513]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [533]
[514]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [514]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [534]
[515]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [515]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [535]
[516]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [516]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [526]
[517]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [517]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [419]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [529]
[518]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [518]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [420]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[519]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [519]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [360]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [46]
[520]    0.0    0.00    0.00       1         quBaseState::basebits() const [520]
                0.00    0.00       1/34043       quState::mapbits() const [60]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [286]
[521]    0.0    0.00    0.00       1         sOr::object() const [521]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [494]
[522]    0.0    0.00    0.00       1         tType::isString() const [522]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[523]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [523]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [362]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [425]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [566]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [526]
[524]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [524]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [403]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [526]
[525]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [525]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [403]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[526]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [526]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [524]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [525]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [517]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [529]
[527]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [527]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [404]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [529]
[528]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [528]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [404]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[529]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [529]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [527]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [528]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [518]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [539]
[530]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [530]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [511]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [540]
[531]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [531]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [512]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [543]
[532]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [532]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [513]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [544]
[533]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [533]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [514]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [549]
[534]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [534]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [515]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [550]
[535]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [535]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [516]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [567]
[536]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [536]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [569]
[537]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [537]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[538]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [538]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [509]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [541]
[539]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [539]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [530]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [542]
[540]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [540]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [531]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [560]
[541]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [541]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [539]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
[542]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [542]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [431]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [540]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [547]
[543]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [543]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [532]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [548]
[544]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [544]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [533]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [548]
[545]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [545]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
[546]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [546]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [562]
[547]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [547]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [543]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
[548]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [548]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [545]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [544]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [553]
[549]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [549]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [534]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [554]
[550]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [550]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [535]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [554]
[551]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [551]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
[552]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [552]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [564]
[553]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [553]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
[554]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [554]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [551]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [550]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [559]
[555]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [363]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [360]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [436]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [523]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [557]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [519]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [538]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [510]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [438]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [431]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [559]
[556]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [556]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [402]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
[557]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [557]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [402]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[558]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [558]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [508]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [499]
[559]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [559]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [556]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [555]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [43]
[560]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [560]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [541]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[561]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [363]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [542]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [438]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [43]
[562]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [562]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [547]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[563]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [546]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [548]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [568]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [43]
[564]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [564]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [553]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [31]
[565]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [552]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [570]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [554]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [523]
[566]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [566]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [568]
[567]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [567]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [536]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
[568]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [568]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [567]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [570]
[569]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [569]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [537]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
[570]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [570]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [569]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [439] _GLOBAL__sub_I_CONDDEF (syntax.cc) [163] bitvec::qnot() [123] SymTab::getRef(std::string const&, ObjType*) const
 [440] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [57] bitvec::setlen(int) [357] SymTab::getVal(std::string const&, ObjType*) const
 [441] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [19] bitvec::setbits(int, bitvec const&) [112] SymTab::getentry(SymTable::entry*, std::string const&) const
 [442] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [20] bitvec::setbits(int, int, unsigned long) [62] bitvec::length() const
 [443] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [59] bitvec::bitvec(int, unsigned long) [80] bitvec::testeq(bitvec const&) const
 [444] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [56] bitvec::bitvec(bitvec const&) [77] bitvec::getbits(int, int) const
 [445] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [16] bitvec::~bitvec() [78] bitvec::getword() const
 [446] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [21] bitvec::operator&=(bitvec const&) [358] bitvec::testzero() const
 [447] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [58] bitvec::operator=(bitvec const&) [18] bitvec::hashfunct() const
 [448] _GLOBAL__sub_I_isErrorReported (error.cc) [69] bitvec::operator|=(bitvec const&) [296] bitvec::operator[](int) const
 [449] _GLOBAL__sub_I_isStateModified (quheap.cc) [286] sBinOp::typecheck(SymTable*, SymTable*) [370] sEqual::object() const
 [450] _GLOBAL__sub_I_main (qcl.cc) [263] sBinOp::sBinOp(sExpr*, sExpr*) [99] tValue::ord() const
 [451] _GLOBAL__sub_I_n_object (types.cc) [264] sBinOp::~sBinOp() [413] tValue::conv(tType const&) const
 [452] _GLOBAL__sub_I_noperators (operator.cc) [349] sConst::eval(SymTable*, SymTable*, QuHeap*) [158] tValue::type() const
 [453] _GLOBAL__sub_I_nstates (qustates.cc) [254] sConst::typecheck(SymTable*, SymTable*) [414] tValue::isInt() const
 [454] _GLOBAL__sub_I_nterms (terms.cc) [242] sConst::sConst(tValue const&) [415] tValue::toInt() const
 [455] _GLOBAL__sub_I_plotfile (plot.cc) [243] sConst::~sConst() [416] tValue::isExpr() const
 [456] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [244] sConst::~sConst() [316] tValue::isError() const
 [457] _GLOBAL__sub_I_qcl_options (options.cc) [365] sEqual::sEqual(sExpr*, sExpr*) [299] tValue::qustate() const
 [458] _GLOBAL__sub_I_shell_depth (debug.cc) [366] sEqual::~sEqual() [100] tValue::basetype() const
 [459] _GLOBAL__sub_I_yyObjList (parse.cc) [367] sEqual::~sEqual() [288] tValue::isQuExpr() const
 [460] _GLOBAL__sub_I_yydebug (yacc.cc) [98] tValue::delpointer() [60] quState::mapbits() const
 [461] _GLOBAL__sub_I_yyleng (qcl.lex) [116] tValue::assign(tValue const&) [36] quState::mapmask() const
 [330] yyScanFile(_IO_FILE*) [500] tValue::tValue(quState*, BaseType) [91] sArgDef::object() const
 [331] openqclfile(std::string) [501] tValue::tValue(char const*) [417] sConcat::object() const
 [270] yy_flush_buffer(yy_buffer_state*) [502] tValue::tValue(quState&, BaseType) [359] sLength::object() const
 [462] yy_create_buffer(_IO_FILE*, int) [120] tValue::tValue(tValue const&) [252] sObject::inFunctDef() const
 [463] initialize_readline() [393] tValue::tValue(double) [282] sObject::inQuFunDef() const
 [464] __static_initialization_and_destruction_0(int, int) (types.cc) [394] tValue::tValue(int) [327] sObject::isConstDef() const
 [465] __static_initialization_and_destruction_0(int, int) (syntax.cc) [279] tValue::tValue(long) [119] sObject::isFunctDef() const
 [466] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [503] tValue::tValue(std::complex<double> const&) [221] sObject::isQuFunDef() const
 [467] __static_initialization_and_destruction_0(int, int) (symbols.cc) [114] tValue::tValue() [109] sObject::isValueDef() const
 [468] __static_initialization_and_destruction_0(int, int) (error.cc) [101] tValue::~tValue() [131] sObject::def() const
 [469] __static_initialization_and_destruction_0(int, int) (qcl.lex) [217] tValue::operator=(tValue const&) [113] sObject::isDef() const
 [470] __static_initialization_and_destruction_0(int, int) (yacc.cc) [395] objlist::objlist() [132] sObject::isSet(ObjFlag) const
 [471] __static_initialization_and_destruction_0(int, int) (print.cc) [161] quState::newclone() [418] sObject::isStmt() const
 [472] __static_initialization_and_destruction_0(int, int) (quheap.cc) [202] quState::quState(int) [94] sObject::parent() const
 [473] __static_initialization_and_destruction_0(int, int) (extern.cc) [206] quState::~quState() [259] sObject::inQuDef() const
 [474] __static_initialization_and_destruction_0(int, int) (eval.cc) [124] sArgDef::sArgDef(tType const&, std::string*) [371] sObject::isLocal() const
 [475] __static_initialization_and_destruction_0(int, int) (exec.cc) [125] sArgDef::~sArgDef() [260] sObject::isQuDef() const
 [476] __static_initialization_and_destruction_0(int, int) (parse.cc) [126] sArgDef::~sArgDef() [372] sObject::isBennet() const
 [477] __static_initialization_and_destruction_0(int, int) (options.cc) [396] sConcat::sConcat(sExpr*, sExpr*) [156] sObject::isExtern() const
 [478] __static_initialization_and_destruction_0(int, int) (debug.cc) [397] sConcat::~sConcat() [321] sObject::isGlobal() const
 [479] __static_initialization_and_destruction_0(int, int) (cond.cc) [398] sConcat::~sConcat() [219] sObject::isCondDef() const
 [480] __static_initialization_and_destruction_0(int, int) (dump.cc) [350] sLength::sLength(sExpr*) [187] sObject::isInclude() const
 [481] __static_initialization_and_destruction_0(int, int) (plot.cc) [351] sLength::~sLength() [283] sObject::isProcDef() const
 [482] __static_initialization_and_destruction_0(int, int) (qcl.cc) [352] sLength::~sLength() [237] sObject::isQuOpDef() const
 [483] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [130] sObject::setFlag(ObjFlag, int) [129] sObject::isRoutDef() const
 [484] __static_initialization_and_destruction_0(int, int) (terms.cc) [284] sObject::isSetRec(ObjFlag) [143] sVarDef::object() const
 [485] __static_initialization_and_destruction_0(int, int) (qustates.cc) [106] sObject::setParent(sObject*) [10] opMatrix::addterms(terminfo const&) const
 [486] __static_initialization_and_destruction_0(int, int) (operator.cc) [127] sObject::typecheck(SymTable*, SymTable*) [216] sDefList::object() const
 [332] zero(bitvec const&)   [104] sObject::sObject(unsigned int) [159] sProcDef::object() const
 [374] irqOn()               [105] sObject::~sObject()   [110] sQuOpDef::object() const
  [89] yylex()                [39] sVarDef::define(SymTable*, SymTable*, QuHeap*) [23] termlist::hashfunct1(bitvec const&) const
 [375] duallog(int)          [312] sVarDef::typecheck(SymTable*, SymTable*) [37] termlist::hashfunct2(bitvec const&) const
   [5] ext_bit(sRoutDef const*, SymTable const*, int) [302] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [253] termlist::nterms() const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [313] sVarDef::~sVarDef() [79] termlist::operator[](int) const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [314] sVarDef::~sVarDef() [373] __gnu_cxx::new_allocator<tValue>::max_size() const
 [364] yyalloc(unsigned long) [140] SymTable::SymTable() [188] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [333] yyparse()             [141] SymTable::~SymTable() [360] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [376] parseobj()            [399] opMatrix::opMatrix(int) [361] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [487] parseopt(int, char**)  [42] opMatrix::~opMatrix() [419] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [488] qc_srand(long)        [172] sDefList::typecheck(SymTable*, SymTable*) [420] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [377] chksyntax(_IO_FILE*)  [173] sDefList::sDefList()  [164] sConstDef::object() const
 [378] yyCleanUp()           [174] sDefList::~sDefList() [111] sQuFunDef::object() const
 [292] yyrestart(_IO_FILE*)  [175] sDefList::~sDefList() [154] sStmtList::object() const
 [290] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [504] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [146] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [289] yy_get_next_buffer() (lex.cc) [505] sProcDef::~sProcDef() [147] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [225] yy_load_buffer_state() (lex.cc) [506] sProcDef::~sProcDef() [421] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [300] yy_get_previous_state() (lex.cc) [255] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [189] std::_List_iterator<sObject*>::operator*() const
 [489] yyensure_buffer_stack() (lex.cc) [256] sQuOpDef::~sQuOpDef() [96] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [293] SymTabComb::SymTabComb(SymTable*, SymTable*) [257] sQuOpDef::~sQuOpDef() [176] std::list<sObject*, std::allocator<sObject*> >::end() const
 [294] SymTabComb::~SymTabComb() [199] sRoutDef::args()  [177] std::list<sObject*, std::allocator<sObject*> >::size() const
 [295] SymTabComb::~SymTabComb() [207] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [178] std::list<sObject*, std::allocator<sObject*> >::begin() const
 [379] opOperator::opOperator(int) [8] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [523] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [380] opOperator::~opOperator() [208] sRoutDef::typecheck(SymTable*, SymTable*) [422] std::vector<tValue, std::allocator<tValue> >::end() const
  [14] quSubState::opadd(bitvec const&, std::complex<double> const&) [209] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [362] std::vector<tValue, std::allocator<tValue> >::size() const
 [247] quSubState::opend()   [210] sRoutDef::~sRoutDef() [423] std::vector<tValue, std::allocator<tValue> >::begin() const
 [248] quSubState::opbegin()  [27] terminfo::terminfo(terminfo const&) [424] std::vector<tValue, std::allocator<tValue> >::empty() const
 [204] quSubState::quSubState(int) [249] terminfo::terminfo() [425] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [211] quSubState::~quSubState() [24] terminfo::~terminfo() [524] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [334] sListFunct::typecheck(SymTable*, SymTable*) [30] termlist::add(term const&) [525] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [335] sListFunct::sListFunct(ObjType, sExprList*) [15] termlist::add(bitvec const&, std::complex<double> const&) [526] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [336] sListFunct::~sListFunct() [224] termlist::clear() [527] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [337] sListFunct::~sListFunct() [32] termlist::dellist() [528] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [338] sSubscript::typecheck(SymTable*, SymTable*) [320] termlist::newlist() [529] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [339] sSubscript::sSubscript(sVar*, sExprList*) [400] termlist::termlist(int, int) [63] std::complex<double>::imag() const
 [340] sSubscript::~sSubscript() [33] termlist::~termlist() [64] std::complex<double>::real() const
 [341] sSubscript::~sSubscript() [507] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [530] std::allocator<tValue>::allocator()
 [157] quBaseState::newsubstring(int, int) [508] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [531] std::allocator<tValue>::~allocator()
  [13] quBaseState::opadd(bitvec const&, std::complex<double> const&) [509] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [532] std::allocator<QuHeap::centry>::allocator()
 [239] quBaseState::opend()  [510] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [533] std::allocator<QuHeap::centry>::~allocator()
  [46] quBaseState::reset(bitvec const&) [511] __gnu_cxx::new_allocator<tValue>::new_allocator() [534] std::allocator<QuHeap::quentry>::allocator()
 [240] quBaseState::opbegin() [512] __gnu_cxx::new_allocator<tValue>::~new_allocator() [535] std::allocator<QuHeap::quentry>::~allocator()
  [44] quBaseState::quBaseState(int, int) [513] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [148] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  [34] quBaseState::~quBaseState() [514] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [149] std::allocator<sObject*>::~allocator()
  [35] quBaseState::~quBaseState() [515] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [426] std::allocator<std::_List_node<sObject*> >::allocator()
 [212] quSubString::newsubstring(int, int) [516] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [427] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [205] quSubString::quSubString(int, int, quState&) [183] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [190] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [213] quSubString::~quSubString() [184] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [191] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [214] quSubString::~quSubString() [144] __gnu_cxx::new_allocator<sObject*>::new_allocator() [428] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [381] opElementary::opElementary(int) [145] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [429] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [382] opElementary::~opElementary() [185] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [88] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [308] sIf::typecheck(SymTable*, SymTable*) [186] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [430] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [309] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [401] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [536] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [310] sIf::~sIf()           [402] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [537] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [311] sIf::~sIf()           [353] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [538] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [490] sOr::sOr(sExpr*, sExpr*) [403] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [539] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [491] sOr::~sOr()           [404] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [540] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [492] sOr::~sOr()           [405] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [431] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [323] sDef::settype(tType const&) [517] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [363] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [493] sDef::basetype()      [518] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [541] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [117] sDef::sDef(tType const&, std::string*) [519] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [542] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [118] sDef::~sDef()         [368] sConstDef::define(SymTable*, SymTable*, QuHeap*) [543] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [383] sFor::typecheck(SymTable*, SymTable*) [369] sConstDef::typecheck(SymTable*, SymTable*) [544] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [384] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [324] sConstDef::sConstDef(std::string*, sExpr*) [545] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [385] sFor::~sFor()         [325] sConstDef::~sConstDef() [546] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [386] sFor::~sFor()         [326] sConstDef::~sConstDef() [547] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [387] sSub::sSub(sExpr*, sExpr*) [303] sExprList::typecheck(SymTable*, SymTable*) [548] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [388] sSub::~sSub()         [232] sExprList::sExprList() [549] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [389] sSub::~sSub()         [233] sExprList::~sExprList() [550] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [390] sVar::eval(SymTable*, SymTable*, QuHeap*) [234] sExprList::~sExprList() [551] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [166] sVar::typecheck(SymTable*, SymTable*) [272] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [552] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [167] sVar::sVar(std::string*) [273] sQuFunDef::~sQuFunDef() [553] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [168] sVar::~sVar()         [274] sQuFunDef::~sQuFunDef() [554] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
 [169] sVar::~sVar()         [265] sStmtList::typecheck(SymTable*, SymTable*) [134] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
 [301] term::set(bitvec const&, std::complex<double> const&) [266] sStmtList::sStmtList() [142] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [67] term::setampl(std::complex<double> const&) [267] sStmtList::~sStmtList() [97] std::_List_const_iterator<sObject*>::operator++()
  [66] term::setvect(bitvec const&) [268] sStmtList::~sStmtList() [432] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [87] term::term()          [222] SymTabComb::getDef(std::string const&) const [192] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [25] term::term(term const&) [280] quSubState::isbasestate() const [193] std::list<sObject*, std::allocator<sObject*> >::end()
  [28] term::~term()          [74] quSubState::baseterm(int) const [150] std::list<sObject*, std::allocator<sObject*> >::begin()
  [26] term::operator=(term const&) [250] quSubState::baseterms() const [194] std::list<sObject*, std::allocator<sObject*> >::front()
  [45] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [354] sListFunct::object() const [195] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  [40] opBit::~opBit()       [355] sSubscript::nargs() const [196] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  [41] opBit::~opBit()       [215] quBaseState::isbasestate() const [197] std::list<sObject*, std::allocator<sObject*> >::pop_front()
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [75] quBaseState::map(bitvec const&) const [198] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [275] sCall::typecheck(SymTable*, SymTable*) [68] quBaseState::unmap(bitvec const&) const [433] std::list<sObject*, std::allocator<sObject*> >::list()
 [276] sCall::sCall(std::string*, sExprList*, int) [520] quBaseState::basebits() const [555] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [277] sCall::~sCall()        [76] quBaseState::baseterm(int) const [556] std::vector<tValue, std::allocator<tValue> >::end()
 [278] sCall::~sCall()       [251] quBaseState::baseterms() const [557] std::vector<tValue, std::allocator<tValue> >::begin()
 [494] sExit::typecheck(SymTable*, SymTable*) [29] quSubString::map(bitvec const&) const [558] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [495] sExit::sExit(sExpr*)   [11] quSubString::unmap(bitvec const&) const [559] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [496] sExit::~sExit()        [61] quSubString::mapoffs() const [560] std::vector<tValue, std::allocator<tValue> >::vector()
 [497] sExit::~sExit()         [9] opElementary::apply(quState&) const [561] std::vector<tValue, std::allocator<tValue> >::~vector()
 [137] sExpr::type()         [245] sIf::object() const   [562] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [136] sExpr::settype(tType const&) [521] sOr::object() const [563] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [342] sExpr::basetype()      [73] sDef::id() const      [564] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [241] sExpr::sExpr(tType const&) [108] sDef::type() const [565] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [155] sExpr::sExpr()        [281] sFor::object() const   [65] std::complex<double>::complex(double, double)
 [139] sExpr::~sExpr()       [406] sSub::object() const  [306] std::complex<double>::operator*=(double)
 [343] sLess::sLess(sExpr*, sExpr*) [160] sVar::id() const [70] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [344] sLess::~sLess()        [17] term::ampl() const     [82] std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
 [345] sLess::~sLess()        [55] term::vect() const    [179] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [122] sList<sDef>::append(sDef*) [271] sCall::id() const [151] sObject** std::__addressof<sObject*>(sObject*&)
 [170] sList<sDef>::sList()  [287] sCall::object() const [434] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [171] sList<sDef>::~sList() [356] sLess::object() const [180] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [223] sList<sExpr>::append(sExpr*) [102] sList<sDef>::next(void*&) const [435] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [229] sList<sExpr>::sList() [138] sList<sDef>::first(void*&) const [436] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [230] sList<sExpr>::~sList() [304] sList<sExpr>::n() const [566] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [231] sList<sStmt>::append(sStmt*) [201] sList<sExpr>::next(void*&) const [437] void std::_Destroy<tValue*>(tValue*, tValue*)
 [261] sList<sStmt>::sList() [203] sList<sExpr>::first(void*&) const [438] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [262] sList<sStmt>::~sList() [235] sList<sStmt>::next(void*&) const [567] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [317] sMult::sMult(sExpr*, sExpr*) [269] sList<sStmt>::first(void*&) const [568] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [318] sMult::~sMult()       [297] sMult::object() const [569] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [319] sMult::~sMult()       [407] sStmt::isInv() const  [570] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [227] sStmt::sStmt(int)      [92] tType::ord() const    [181] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [228] sStmt::~sStmt()       [246] tType::isInt() const   [85] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [346] sUnOp::typecheck(SymTable*, SymTable*) [285] tType::isCond() const [328] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [347] sUnOp::sUnOp(sExpr*)  [238] tType::isConv(tType const&) const [84] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [348] sUnOp::~sUnOp()       [408] tType::isExpr() const  [86] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [90] tType::tType(BaseType) [315] tType::isError() const [307] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
 [391] tType::tType(BaseType, int) [128] tType::isQuReg() const [71] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [103] tType::tType(tType const&) [93] tType::basetype() const [329] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [107] tType::operator=(BaseType) [220] tType::isNumber() const [291] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [95] tType::operator=(tType const&) [218] tType::isQuCond() const [322] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [6] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [135] tType::isQuExpr() const [83] std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
 [498] QuHeap::init()        [522] tType::isString() const [22] operator&(bitvec const&, bitvec const&)
 [499] QuHeap::addReg(quState*) [236] tType::isBoolean() const [165] operator~(bitvec const&)
  [38] QuHeap::qualloc(int, BaseType) [258] tType::isDefined() const [81] operator==(bitvec const&, bitvec const&)
   [7] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [305] tType::isOrdered() const [182] operator new(unsigned long, void*)
  [43] QuHeap::QuHeap(int, int) [226] tType::isQuConst() const [72] operator|(bitvec const&, bitvec const&)
  [31] QuHeap::~QuHeap()     [200] tType::operator==(BaseType) const [47] <cycle 1>
 [115] SymTab::put(sDef*, tValue const&) [298] tType::operator==(tType const&) const [48] <cycle 2>
 [162] SymTab::deltree(SymTable::entry*) [409] QuHeap::cond() const [49] <cycle 3>
 [121] SymTab::putentry(SymTable::entry*, SymTable::entry*) [410] QuHeap::cmask() const [12] <cycle 4>
 [152] SymTab::SymTab(int)   [411] QuHeap::nBits() const  [50] <cycle 5>
 [392] SymTab::~SymTab()     [412] QuHeap::ncond() const
 [153] SymTab::~SymTab()     [133] SymTab::getDef(std::string const&) const
