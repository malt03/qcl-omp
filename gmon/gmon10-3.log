Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 10.00      0.01     0.01   110120     0.00     0.00  bitvec::setlen(int)
 10.00      0.02     0.01   110120     0.00     0.00  bitvec::operator=(bitvec const&)
 10.00      0.03     0.01    44553     0.00     0.00  bitvec::hashfunct() const
 10.00      0.04     0.01    44547     0.00     0.00  termlist::hashfunct1(bitvec const&) const
 10.00      0.05     0.01    44543     0.00     0.00  term::setampl(std::complex<double> const&)
 10.00      0.06     0.01    44543     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
 10.00      0.07     0.01    43006     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 10.00      0.08     0.01    21503     0.00     0.00  opMatrix::addterms(terminfo const&) const
 10.00      0.09     0.01     3632     0.00     0.00  term::term()
 10.00      0.10     0.01       50     0.20     0.20  quSubString::newsubstring(int, int)
  0.00      0.10     0.00   240435     0.00     0.00  bitvec::~bitvec()
  0.00      0.10     0.00   237052     0.00     0.00  term::vect() const
  0.00      0.10     0.00   150629     0.00     0.00  bitvec::bitvec(bitvec const&)
  0.00      0.10     0.00   129531     0.00     0.00  term::ampl() const
  0.00      0.10     0.00    89806     0.00     0.00  bitvec::bitvec(int, unsigned long)
  0.00      0.10     0.00    64874     0.00     0.00  quState::mapbits() const
  0.00      0.10     0.00    64546     0.00     0.00  quSubString::mapoffs() const
  0.00      0.10     0.00    64516     0.00     0.00  bitvec::length() const
  0.00      0.10     0.00    63486     0.00     0.00  std::complex<double>::imag() const
  0.00      0.10     0.00    63486     0.00     0.00  std::complex<double>::real() const
  0.00      0.10     0.00    46658     0.00     0.00  std::complex<double>::complex(double, double)
  0.00      0.10     0.00    45566     0.00     0.00  term::setvect(bitvec const&)
  0.00      0.10     0.00    43043     0.00     0.00  bitvec::setbits(int, bitvec const&)
  0.00      0.10     0.00    43043     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  0.00      0.10     0.00    43043     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.00      0.10     0.00    43043     0.00     0.00  quSubString::unmap(bitvec const&) const
  0.00      0.10     0.00    43009     0.00     0.00  bitvec::operator|=(bitvec const&)
  0.00      0.10     0.00    43007     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.10     0.00    43006     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.10     0.00    43006     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.00      0.10     0.00    43006     0.00     0.00  operator|(bitvec const&, bitvec const&)
  0.00      0.10     0.00    25135     0.00     0.00  term::~term()
  0.00      0.10     0.00    21585     0.00     0.00  sDef::id() const
  0.00      0.10     0.00    21533     0.00     0.00  terminfo::~terminfo()
  0.00      0.10     0.00    21507     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.00      0.10     0.00    21506     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.00      0.10     0.00    21503     0.00     0.00  term::term(term const&)
  0.00      0.10     0.00    21503     0.00     0.00  term::operator=(term const&)
  0.00      0.10     0.00    21503     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.00      0.10     0.00    21503     0.00     0.00  quSubState::baseterm(int) const
  0.00      0.10     0.00    21503     0.00     0.00  quBaseState::map(bitvec const&) const
  0.00      0.10     0.00    21503     0.00     0.00  quBaseState::baseterm(int) const
  0.00      0.10     0.00    21503     0.00     0.00  quSubString::map(bitvec const&) const
  0.00      0.10     0.00    21503     0.00     0.00  bitvec::getbits(int, int) const
  0.00      0.10     0.00    21503     0.00     0.00  bitvec::getword() const
  0.00      0.10     0.00    21503     0.00     0.00  termlist::operator[](int) const
  0.00      0.10     0.00    20486     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.00      0.10     0.00    20486     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.00      0.10     0.00    20480     0.00     0.00  std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
  0.00      0.10     0.00    20480     0.00     0.00  std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      0.10     0.00     6504     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.10     0.00     4195     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.10     0.00     3912     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.10     0.00     2928     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      0.10     0.00     2354     0.00     0.00  yylex()
  0.00      0.10     0.00     1536     0.00     0.00  termlist::add(term const&)
  0.00      0.10     0.00     1498     0.00     0.00  tType::tType(BaseType)
  0.00      0.10     0.00     1116     0.00     0.00  sArgDef::object() const
  0.00      0.10     0.00     1084     0.00     0.00  tType::ord() const
  0.00      0.10     0.00     1045     0.00     0.00  tType::basetype() const
  0.00      0.10     0.00      897     0.00     0.00  sObject::parent() const
  0.00      0.10     0.00      862     0.00     0.00  tType::operator=(tType const&)
  0.00      0.10     0.00      835     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      0.10     0.00      790     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      0.10     0.00      712     0.00     0.00  tValue::delpointer()
  0.00      0.10     0.00      712     0.00     0.00  tValue::ord() const
  0.00      0.10     0.00      712     0.00     0.00  tValue::basetype() const
  0.00      0.10     0.00      677     0.00     0.00  tValue::~tValue()
  0.00      0.10     0.00      558     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      0.10     0.00      545     0.00     0.00  tType::tType(tType const&)
  0.00      0.10     0.00      521     0.00     0.00  sObject::sObject(unsigned int)
  0.00      0.10     0.00      521     0.00     0.00  sObject::~sObject()
  0.00      0.10     0.00      460     0.00     0.00  tType::operator=(BaseType)
  0.00      0.10     0.00      457     0.00     0.00  sObject::setParent(sObject*)
  0.00      0.10     0.00      380     0.00     0.00  sDef::type() const
  0.00      0.10     0.00      379     0.00     0.00  sQuOpDef::object() const
  0.00      0.10     0.00      378     0.00     0.00  sObject::isValueDef() const
  0.00      0.10     0.00      372     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      0.10     0.00      369     0.00     0.00  sObject::isDef() const
  0.00      0.10     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      0.10     0.00      361     0.00     0.00  tValue::tValue()
  0.00      0.10     0.00      328     0.00     0.01  tValue::assign(tValue const&)
  0.00      0.10     0.00      326     0.00     0.01  SymTab::put(sDef*, tValue const&)
  0.00      0.10     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      0.10     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      0.10     0.00      296     0.00     0.00  sObject::isFunctDef() const
  0.00      0.10     0.00      293     0.00     0.01  tValue::tValue(tValue const&)
  0.00      0.10     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      0.10     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      0.10     0.00      266     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      0.10     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      0.10     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.10     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.10     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      0.10     0.00      257     0.00     0.00  sObject::isRoutDef() const
  0.00      0.10     0.00      178     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      0.10     0.00      177     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      0.10     0.00      175     0.00     0.00  sObject::def() const
  0.00      0.10     0.00      143     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      0.10     0.00      129     0.00     0.00  tType::isQuExpr() const
  0.00      0.10     0.00      129     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.10     0.00      113     0.00     0.00  sExpr::settype(tType const&)
  0.00      0.10     0.00      102     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      0.10     0.00      100     0.00     0.00  sExpr::type()
  0.00      0.10     0.00       99     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      0.10     0.00       97     0.00     0.00  sExpr::~sExpr()
  0.00      0.10     0.00       91     0.00     0.00  sVarDef::object() const
  0.00      0.10     0.00       90     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      0.10     0.00       89     0.00     0.00  SymTable::SymTable()
  0.00      0.10     0.00       89     0.00     0.00  SymTable::~SymTable()
  0.00      0.10     0.00       86     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      0.10     0.00       86     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      0.10     0.00       86     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      0.10     0.00       86     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      0.10     0.00       86     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      0.10     0.00       86     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      0.10     0.00       86     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      0.10     0.00       86     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      0.10     0.00       79     0.00     0.00  SymTab::SymTab(int)
  0.00      0.10     0.00       79     0.00     0.00  SymTab::~SymTab()
  0.00      0.10     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      0.10     0.00       76     0.00     0.00  sExpr::sExpr()
  0.00      0.10     0.00       75     0.00     0.00  sObject::isExtern() const
  0.00      0.10     0.00       71     0.00     0.00  quState::newclone()
  0.00      0.10     0.00       70     0.00     0.00  bitvec::qnot()
  0.00      0.10     0.00       68     0.00     0.00  operator~(bitvec const&)
  0.00      0.10     0.00       65     0.00     0.00  tValue::type() const
  0.00      0.10     0.00       60     0.00     0.00  sVar::id() const
  0.00      0.10     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      0.10     0.00       52     0.00     0.00  quState::quState(int)
  0.00      0.10     0.00       51     0.00     0.00  quSubState::quSubState(int)
  0.00      0.10     0.00       51     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.00      0.10     0.00       51     0.00     0.00  quState::~quState()
  0.00      0.10     0.00       50     0.00     0.00  quSubState::~quSubState()
  0.00      0.10     0.00       50     0.00     0.00  quSubString::~quSubString()
  0.00      0.10     0.00       50     0.00     0.00  quSubString::~quSubString()
  0.00      0.10     0.00       50     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      0.10     0.00       50     0.00     0.00  quBaseState::isbasestate() const
  0.00      0.10     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      0.10     0.00       46     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       46     0.00     0.00  sVar::sVar(std::string*)
  0.00      0.10     0.00       46     0.00     0.00  sVar::~sVar()
  0.00      0.10     0.00       46     0.00     0.00  sVar::~sVar()
  0.00      0.10     0.00       45     0.00     0.00  sRoutDef::args()
  0.00      0.10     0.00       45     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      0.10     0.00       45     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      0.10     0.00       45     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      0.10     0.00       45     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      0.10     0.00       45     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      0.10     0.00       45     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      0.10     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      0.10     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      0.10     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      0.10     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.10     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.10     0.00       44     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.10     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      0.10     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      0.10     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      0.10     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      0.10     0.00       43     0.00     0.00  sObject::isInclude() const
  0.00      0.10     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      0.10     0.00       43     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      0.10     0.00       43     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      0.10     0.00       43     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      0.10     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      0.10     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      0.10     0.00       40     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      0.10     0.00       39     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      0.10     0.00       37     0.00     0.00  termlist::clear()
  0.00      0.10     0.00       37     0.00     0.00  quState::mapmask() const
  0.00      0.10     0.00       36     0.00     0.01  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.10     0.00       36     0.00     0.07  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.10     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      0.10     0.00       35     0.00     0.01  tValue::operator=(tValue const&)
  0.00      0.10     0.00       34     0.00     0.00  sObject::isCondDef() const
  0.00      0.10     0.00       34     0.00     0.00  sDefList::object() const
  0.00      0.10     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      0.10     0.00       31     0.00     0.00  quBaseState::opend()
  0.00      0.10     0.00       31     0.00     0.00  quBaseState::opbegin()
  0.00      0.10     0.00       30     0.00     0.00  quSubState::opend()
  0.00      0.10     0.00       30     0.00     0.00  quSubState::opbegin()
  0.00      0.10     0.00       30     0.00     0.00  terminfo::terminfo()
  0.00      0.10     0.00       30     0.00     0.00  quSubState::baseterms() const
  0.00      0.10     0.00       30     0.00     0.00  quBaseState::baseterms() const
  0.00      0.10     0.00       30     0.00     2.89  opElementary::apply(quState&) const
  0.00      0.10     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      0.10     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      0.10     0.00       30     0.00     0.00  termlist::nterms() const
  0.00      0.10     0.00       29     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      0.10     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      0.10     0.00       27     0.00     0.00  tType::isQuConst() const
  0.00      0.10     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      0.10     0.00       26     0.00     0.00  sStmt::sStmt(int)
  0.00      0.10     0.00       26     0.00     0.00  sStmt::~sStmt()
  0.00      0.10     0.00       24     0.00     0.00  sList<sExpr>::sList()
  0.00      0.10     0.00       24     0.00     0.00  sList<sExpr>::~sList()
  0.00      0.10     0.00       24     0.00     0.00  sExprList::sExprList()
  0.00      0.10     0.00       24     0.00     0.00  sExprList::~sExprList()
  0.00      0.10     0.00       24     0.00     0.00  sExprList::~sExprList()
  0.00      0.10     0.00       24     0.00     0.00  sObject::isQuOpDef() const
  0.00      0.10     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      0.10     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      0.10     0.00       23     0.00     0.00  tType::isConv(tType const&) const
  0.00      0.10     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      0.10     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      0.10     0.00       21     0.00     0.01  sConst::sConst(tValue const&)
  0.00      0.10     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.10     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.10     0.00       21     0.00     0.00  sIf::object() const
  0.00      0.10     0.00       21     0.00     0.00  tType::isInt() const
  0.00      0.10     0.00       21     0.00     0.00  sObject::inFunctDef() const
  0.00      0.10     0.00       20     0.00     0.00  quSubState::isbasestate() const
  0.00      0.10     0.00       20     0.00     0.00  sObject::inQuDef() const
  0.00      0.10     0.00       20     0.00     0.00  sObject::isQuDef() const
  0.00      0.10     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.10     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.10     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.10     0.00       19     0.00     0.00  sCall::id() const
  0.00      0.10     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      0.10     0.00       19     0.00     0.00  tValue::isQuExpr() const
  0.00      0.10     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      0.10     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      0.10     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      0.10     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      0.10     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      0.10     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.10     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.10     0.00       18     0.00     0.00  sCall::object() const
  0.00      0.10     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      0.10     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      0.10     0.00       16     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       16     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      0.10     0.00       16     0.00     0.00  sCall::~sCall()
  0.00      0.10     0.00       16     0.00     0.00  sCall::~sCall()
  0.00      0.10     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.10     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.10     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.10     0.00       16     0.00     0.00  sObject::inQuFunDef() const
  0.00      0.10     0.00       16     0.00     0.00  sObject::isProcDef() const
  0.00      0.10     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      0.10     0.00       15     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      0.10     0.00       15     0.00     0.00  sFor::object() const
  0.00      0.10     0.00       14     0.00     0.00  tType::isCond() const
  0.00      0.10     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00       13     0.00     0.00  tValue::qustate() const
  0.00      0.10     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      0.10     0.00       12     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      0.10     0.00       12     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      0.10     0.00       12     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      0.10     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      0.10     0.00       11     0.00     0.00  tType::operator==(tType const&) const
  0.00      0.10     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.10     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      0.10     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      0.10     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.10     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.10     0.00       10     0.00     0.00  bitvec::operator[](int) const
  0.00      0.10     0.00        9     0.00     0.00  sMult::object() const
  0.00      0.10     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      0.10     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      0.10     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      0.10     0.00        8     0.00     0.00  tType::isError() const
  0.00      0.10     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      0.10     0.00        8     0.00     0.00  tValue::isError() const
  0.00      0.10     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      0.10     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.10     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.10     0.00        7     0.00     0.01  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.10     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.10     0.00        7     0.00     0.00  sObject::isGlobal() const
  0.00      0.10     0.00        6     0.00     0.00  zero(bitvec const&)
  0.00      0.10     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      0.10     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.10     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.10     0.00        6     0.00     1.64  termlist::newlist()
  0.00      0.10     0.00        6     0.00     0.01  SymTab::getVal(std::string const&, ObjType*) const
  0.00      0.10     0.00        6     0.00     0.00  bitvec::testzero() const
  0.00      0.10     0.00        6     0.00     0.00  sObject::isConstDef() const
  0.00      0.10     0.00        6     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.00      0.10     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.10     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      0.10     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      0.10     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.10     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.10     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.10     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.10     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      0.10     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      0.10     0.00        4     0.00     0.05  yyparse()
  0.00      0.10     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      0.10     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.10     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.10     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      0.10     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.10     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.10     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      0.10     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      0.10     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.10     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.10     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      0.10     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      0.10     0.00        4     0.00     0.01  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.10     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      0.10     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.10     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.10     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      0.10     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      0.10     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      0.10     0.00        4     0.00     0.00  sLess::object() const
  0.00      0.10     0.00        4     0.00     0.00  sLength::object() const
  0.00      0.10     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.10     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.10     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      0.10     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      0.10     0.00        3     0.00    30.86  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      0.10     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      0.10     0.00        3     0.00     0.00  opOperator::opOperator(int)
  0.00      0.10     0.00        3     0.00     0.00  opOperator::~opOperator()
  0.00      0.10     0.00        3     0.00     0.00  opElementary::opElementary(int)
  0.00      0.10     0.00        3     0.00     0.00  opElementary::~opElementary()
  0.00      0.10     0.00        3     0.00     0.03  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.10     0.00        3     0.00     0.02  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      0.10     0.00        3     0.00     0.00  opBit::~opBit()
  0.00      0.10     0.00        3     0.00     0.00  opBit::~opBit()
  0.00      0.10     0.00        3     0.00    30.93  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      0.10     0.00        3     0.00    30.86  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      0.10     0.00        3     0.00    30.86  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      0.10     0.00        3     0.00     0.00  SymTab::~SymTab()
  0.00      0.10     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      0.10     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.10     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.10     0.00        3     0.00     0.00  opMatrix::opMatrix(int)
  0.00      0.10     0.00        3     0.00     0.00  opMatrix::~opMatrix()
  0.00      0.10     0.00        3     0.00    30.86  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      0.10     0.00        3     0.00     0.03  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.10     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        3     0.00     0.00  sStmt::isInv() const
  0.00      0.10     0.00        3     0.00     0.00  tType::isExpr() const
  0.00      0.10     0.00        3     0.00     0.00  QuHeap::cond() const
  0.00      0.10     0.00        3     0.00     0.00  QuHeap::cmask() const
  0.00      0.10     0.00        3     0.00     0.00  QuHeap::nBits() const
  0.00      0.10     0.00        3     0.00     0.00  QuHeap::ncond() const
  0.00      0.10     0.00        3     0.00     0.00  sEqual::object() const
  0.00      0.10     0.00        3     0.00     0.01  tValue::conv(tType const&) const
  0.00      0.10     0.00        3     0.00     0.00  tValue::isExpr() const
  0.00      0.10     0.00        3     0.00     0.00  sObject::isStmt() const
  0.00      0.10     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      0.10     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      0.10     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      0.10     0.00        2     0.00     0.00  irqOn()
  0.00      0.10     0.00        2     0.00     0.00  duallog(int)
  0.00      0.10     0.00        2     0.00    48.35  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.10     0.00        2     0.00    48.30  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.10     0.00        2     0.00     0.05  parseobj()
  0.00      0.10     0.00        2     0.00     0.05  chksyntax(_IO_FILE*)
  0.00      0.10     0.00        2     0.00     0.00  yyCleanUp()
  0.00      0.10     0.00        2     0.00     0.02  sFor::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      0.10     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.10     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.10     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      0.10     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.10     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.10     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      0.10     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      0.10     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      0.10     0.00        2     0.00     0.00  objlist::objlist()
  0.00      0.10     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      0.10     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.10     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.10     0.00        2     0.00     0.00  termlist::dellist()
  0.00      0.10     0.00        2     0.00     1.64  termlist::termlist(int, int)
  0.00      0.10     0.00        2     0.00     0.00  termlist::~termlist()
  0.00      0.10     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      0.10     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      0.10     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      0.10     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      0.10     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.10     0.00        2     0.00     0.00  sSub::object() const
  0.00      0.10     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      0.10     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      0.10     0.00        2     0.00     0.00  sConcat::object() const
  0.00      0.10     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      0.10     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      0.10     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      0.10     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      0.10     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      0.10     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      0.10     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      0.10     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      0.10     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      0.10     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      0.10     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      0.10     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      0.10     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      0.10     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.10     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      0.10     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.10     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.10     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.10     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      0.10     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_qc_check_txt
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      0.10     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      0.10     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      0.10     0.00        1     0.00     0.00  initialize_readline()
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.10     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      0.10     0.00        1     0.00     0.00  qc_srand(long)
  0.00      0.10     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      0.10     0.00        1     0.00     0.00  quBaseState::reset(bitvec const&)
  0.00      0.10     0.00        1     0.00     3.29  quBaseState::quBaseState(int, int)
  0.00      0.10     0.00        1     0.00     0.00  quBaseState::~quBaseState()
  0.00      0.10     0.00        1     0.00     0.00  quBaseState::~quBaseState()
  0.00      0.10     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      0.10     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.10     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.10     0.00        1     0.00     0.00  sDef::basetype()
  0.00      0.10     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      0.10     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      0.10     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.10     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.10     0.00        1     0.00     0.00  QuHeap::init()
  0.00      0.10     0.00        1     0.00     0.21  QuHeap::addReg(quState*)
  0.00      0.10     0.00        1     0.00     0.20  QuHeap::qualloc(int, BaseType)
  0.00      0.10     0.00        1     0.00     3.29  QuHeap::QuHeap(int, int)
  0.00      0.10     0.00        1     0.00     0.00  QuHeap::~QuHeap()
  0.00      0.10     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      0.10     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      0.10     0.00        1     0.00     0.20  tValue::tValue(quState&, BaseType)
  0.00      0.10     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      0.10     0.00        1     0.00     0.64  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.10     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      0.10     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.10     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      0.10     0.00        1     0.00     0.01  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      0.10     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      0.10     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      0.10     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.10     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      0.10     0.00        1     0.00     0.00  sOr::object() const
  0.00      0.10     0.00        1     0.00     0.00  tType::isString() const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      0.10     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      0.10     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.10     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      0.10     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      0.10     0.00        1     0.00     0.01  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      0.10     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      0.10     0.00        1     0.00     0.01  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      0.10     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      0.10     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      0.10     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.10     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.10     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      0.10     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.10     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 10.00% of 0.10 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.10                 main [1]
                0.00    0.10       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [30]
                0.00    0.00       2/79          SymTab::SymTab(int) [169]
                0.00    0.00       2/79          SymTab::~SymTab() [170]
                0.00    0.00       1/1           initialize_readline() [465]
                0.00    0.00       1/1           parseopt(int, char**) [489]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
-----------------------------------------------
                0.00    0.10       2/2           main [1]
[2]     96.7    0.00    0.10       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.10       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [46]
                0.00    0.00       4/4           openqclfile(std::string) [340]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [339]
-----------------------------------------------
                0.00    0.10       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     96.6    0.00    0.10       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.09       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [38]
                0.00    0.00       2/2           parseobj() [45]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [196]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::front() [218]
                0.00    0.00      43/43          sObject::isInclude() const [211]
                0.00    0.00      43/369         sObject::isDef() const [131]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::pop_front() [221]
                0.00    0.00       3/16          sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       3/3           sObject::isStmt() const [390]
                0.00    0.00       3/16          sCall::~sCall() [287]
-----------------------------------------------
                0.00    0.09       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     92.8    0.00    0.09       3         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.09       3/3           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       3/3           sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       3/3           tValue::conv(tType const&) const [57]
                0.00    0.00       3/35          tValue::operator=(tValue const&) [37]
                0.00    0.00       3/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00      15/240435      bitvec::~bitvec() [70]
                0.00    0.00       9/677         tValue::~tValue() [120]
                0.00    0.00       9/13          tValue::qustate() const [299]
                0.00    0.00       6/45          sRoutDef::args() [194]
                0.00    0.00       6/37          quState::mapmask() const [227]
                0.00    0.00       6/6           zero(bitvec const&) [326]
                0.00    0.00       3/3           QuHeap::nBits() const [386]
                0.00    0.00       3/361         tValue::tValue() [133]
                0.00    0.00       3/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00       3/19          sCall::id() const [271]
                0.00    0.00       3/143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00       3/16          sObject::isProcDef() const [293]
                0.00    0.00       3/20          sObject::isQuDef() const [266]
                0.00    0.00       3/79          SymTab::SymTab(int) [169]
                0.00    0.00       3/39          sList<sExpr>::first(void*&) const [225]
                0.00    0.00       3/99          sList<sDef>::first(void*&) const [155]
                0.00    0.00       3/380         sDef::type() const [127]
                0.00    0.00       3/8           tValue::isError() const [318]
                0.00    0.00       3/19          tValue::isQuExpr() const [273]
                0.00    0.00       3/21506       operator&(bitvec const&, bitvec const&) [92]
                0.00    0.00       3/43009       bitvec::operator|=(bitvec const&) [85]
                0.00    0.00       3/64874       quState::mapbits() const [75]
                0.00    0.00       3/40          sList<sExpr>::next(void*&) const [224]
                0.00    0.00       3/558         sList<sDef>::next(void*&) const [121]
                0.00    0.00       3/34          sObject::isCondDef() const [230]
                0.00    0.00       3/3           QuHeap::cond() const [384]
                0.00    0.00       3/3           QuHeap::cmask() const [385]
                0.00    0.00       3/3           sStmt::isInv() const [382]
-----------------------------------------------
                0.00    0.09       3/3           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
[5]     92.6    0.00    0.09       3         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.09      30/30          opElementary::apply(quState&) const [9]
                0.01    0.00      30/51          quSubString::newsubstring(int, int) <cycle 5> [23]
                0.00    0.00       3/3           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
                0.00    0.00      33/64874       quState::mapbits() const [75]
                0.00    0.00      30/50          quSubString::~quSubString() [185]
                0.00    0.00      18/46658       std::complex<double>::complex(double, double) [80]
                0.00    0.00       6/21585       sDef::id() const [89]
                0.00    0.00       3/266         SymTab::getRef(std::string const&, ObjType*) const [139]
                0.00    0.00       3/19          tValue::isQuExpr() const [273]
                0.00    0.00       3/13          tValue::qustate() const [299]
                0.00    0.00       3/3           opBit::~opBit() [373]
-----------------------------------------------
                0.00    0.09       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[6]     92.6    0.00    0.09       3         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.09       3/3           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.00       3/34          sObject::isCondDef() const [230]
-----------------------------------------------
                0.00    0.09       3/3           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
[7]     92.6    0.00    0.09       3         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.09       3/3           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       3/3           SymTab::~SymTab() [375]
-----------------------------------------------
                0.00    0.09       3/3           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[8]     92.6    0.00    0.09       3         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.09       3/3           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       3/361         tValue::tValue() [133]
                0.00    0.00       3/75          sObject::isExtern() const [173]
                0.00    0.00       3/677         tValue::~tValue() [120]
-----------------------------------------------
                0.00    0.09      30/30          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[9]     86.7    0.00    0.09      30         opElementary::apply(quState&) const [9]
                0.01    0.06   21503/21503       opMatrix::addterms(terminfo const&) const [10]
                0.00    0.00   21533/110120      bitvec::operator=(bitvec const&) [15]
                0.00    0.00   21503/21503       terminfo::terminfo(terminfo const&) [28]
                0.00    0.00   21503/21503       term::operator=(term const&) [27]
                0.00    0.00   21503/45566       term::setvect(bitvec const&) [25]
                0.00    0.00      30/30          terminfo::terminfo() [49]
                0.00    0.00   43096/240435      bitvec::~bitvec() [70]
                0.00    0.00   43006/237052      term::vect() const [71]
                0.00    0.00   21533/21533       terminfo::~terminfo() [90]
                0.00    0.00   21503/21503       quSubState::baseterm(int) const [93]
                0.00    0.00   21503/21506       operator&(bitvec const&, bitvec const&) [92]
                0.00    0.00   21503/21503       quSubString::map(bitvec const&) const [96]
                0.00    0.00      30/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00      30/64874       quState::mapbits() const [75]
                0.00    0.00      30/30          quSubState::opbegin() [236]
                0.00    0.00      30/37          quState::mapmask() const [227]
                0.00    0.00      30/68          operator~(bitvec const&) [176]
                0.00    0.00      30/30          quSubState::baseterms() const [237]
                0.00    0.00      30/30          quSubState::opend() [235]
-----------------------------------------------
                0.01    0.06   21503/21503       opElementary::apply(quState&) const [9]
[10]    70.9    0.01    0.06   21503         opMatrix::addterms(terminfo const&) const [10]
                0.00    0.05   43006/43006       quSubState::opadd(bitvec const&, std::complex<double> const&) [14]
                0.01    0.00   43006/43006       std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [21]
                0.00    0.00  129018/237052      term::vect() const [71]
                0.00    0.00   86012/240435      bitvec::~bitvec() [70]
                0.00    0.00   64509/129531      term::ampl() const [73]
                0.00    0.00   64509/64516       bitvec::length() const [77]
                0.00    0.00   43006/43043       quSubString::unmap(bitvec const&) const [84]
                0.00    0.00   43006/43006       operator|(bitvec const&, bitvec const&) [87]
                0.00    0.00   21503/46658       std::complex<double>::complex(double, double) [80]
                0.00    0.00   21503/21503       bitvec::getword() const [98]
-----------------------------------------------
[11]    50.9    0.01    0.04   43007+3072    <cycle 4 as a whole> [11]
                0.01    0.04   44543+4           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                0.00    0.00    1536             termlist::add(term const&) <cycle 4> [108]
-----------------------------------------------
                                   4             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                                1536             termlist::add(term const&) <cycle 4> [108]
                0.01    0.04   43007/43007       quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
[12]    50.9    0.01    0.04   44543+4       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                0.01    0.01   44547/44547       termlist::hashfunct1(bitvec const&) const [16]
                0.01    0.00   44543/44543       term::setampl(std::complex<double> const&) [20]
                0.00    0.01       4/6           termlist::newlist() [24]
                0.00    0.00   24063/45566       term::setvect(bitvec const&) [25]
                0.00    0.00       6/6           termlist::hashfunct2(bitvec const&) const [62]
                0.00    0.00   20486/20486       operator==(bitvec const&, bitvec const&) [101]
                0.00    0.00   20486/237052      term::vect() const [71]
                0.00    0.00   20480/129531      term::ampl() const [73]
                0.00    0.00   20480/20480       std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [103]
                0.00    0.00    1536/25135       term::~term() [88]
                0.00    0.00       4/37          termlist::clear() [226]
                                1536             termlist::add(term const&) <cycle 4> [108]
                                   4             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
-----------------------------------------------
                0.00    0.00       1/43007       quBaseState::reset(bitvec const&) [63]
                0.00    0.05   43006/43007       quSubState::opadd(bitvec const&, std::complex<double> const&) [14]
[13]    50.9    0.00    0.05   43007         quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.01    0.04   43007/43007       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
-----------------------------------------------
                0.00    0.05   43006/43006       opMatrix::addterms(terminfo const&) const [10]
[14]    50.9    0.00    0.05   43006         quSubState::opadd(bitvec const&, std::complex<double> const&) [14]
                0.00    0.05   43006/43007       quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
-----------------------------------------------
                0.00    0.00       3/110120      QuHeap::QuHeap(int, int) [30]
                0.00    0.00      12/110120      term::set(bitvec const&, std::complex<double> const&) [61]
                0.00    0.00   21503/110120      term::term(term const&) [26]
                0.00    0.00   21503/110120      term::operator=(term const&) [27]
                0.00    0.00   21533/110120      opElementary::apply(quState&) const [9]
                0.00    0.00   45566/110120      term::setvect(bitvec const&) [25]
[15]    20.0    0.01    0.01  110120         bitvec::operator=(bitvec const&) [15]
                0.01    0.00  110120/110120      bitvec::setlen(int) [18]
-----------------------------------------------
                0.01    0.01   44547/44547       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[16]    20.0    0.01    0.01   44547         termlist::hashfunct1(bitvec const&) const [16]
                0.01    0.00   44547/44553       bitvec::hashfunct() const [19]
-----------------------------------------------
[17]    10.0    0.01    0.00      51+223     <cycle 5 as a whole> [17]
                0.01    0.00      50             quSubString::newsubstring(int, int) <cycle 5> [23]
                0.00    0.00     102             quBaseState::newsubstring(int, int) <cycle 5> [153]
                0.00    0.00      71             quState::newclone() <cycle 5> [174]
                0.00    0.00      51             quSubString::quSubString(int, int, quState&) <cycle 5> [182]
-----------------------------------------------
                0.01    0.00  110120/110120      bitvec::operator=(bitvec const&) [15]
[18]    10.0    0.01    0.00  110120         bitvec::setlen(int) [18]
-----------------------------------------------
                0.00    0.00       6/44553       termlist::hashfunct2(bitvec const&) const [62]
                0.01    0.00   44547/44553       termlist::hashfunct1(bitvec const&) const [16]
[19]    10.0    0.01    0.00   44553         bitvec::hashfunct() const [19]
-----------------------------------------------
                0.01    0.00   44543/44543       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[20]    10.0    0.01    0.00   44543         term::setampl(std::complex<double> const&) [20]
-----------------------------------------------
                0.01    0.00   43006/43006       opMatrix::addterms(terminfo const&) const [10]
[21]    10.0    0.01    0.00   43006         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [21]
                0.00    0.00   43006/43006       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [86]
-----------------------------------------------
                0.00    0.00      18/3632        opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
                0.00    0.00      30/3632        terminfo::terminfo() [49]
                0.01    0.00    3584/3632        termlist::newlist() [24]
[22]    10.0    0.01    0.00    3632         term::term() [22]
                0.00    0.00    3632/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00    3632/46658       std::complex<double>::complex(double, double) [80]
-----------------------------------------------
                                  20             quState::newclone() <cycle 5> [174]
                0.01    0.00      30/51          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[23]    10.0    0.01    0.00      50         quSubString::newsubstring(int, int) <cycle 5> [23]
                                  50             quBaseState::newsubstring(int, int) <cycle 5> [153]
-----------------------------------------------
                0.00    0.00       2/6           termlist::termlist(int, int) [32]
                0.00    0.01       4/6           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[24]     9.9    0.00    0.01       6         termlist::newlist() [24]
                0.01    0.00    3584/3632        term::term() [22]
-----------------------------------------------
                0.00    0.00   21503/45566       opElementary::apply(quState&) const [9]
                0.00    0.00   24063/45566       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[25]     8.3    0.00    0.01   45566         term::setvect(bitvec const&) [25]
                0.00    0.00   45566/110120      bitvec::operator=(bitvec const&) [15]
-----------------------------------------------
                0.00    0.00   21503/21503       terminfo::terminfo(terminfo const&) [28]
[26]     3.9    0.00    0.00   21503         term::term(term const&) [26]
                0.00    0.00   21503/110120      bitvec::operator=(bitvec const&) [15]
                0.00    0.00   21503/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00   21503/46658       std::complex<double>::complex(double, double) [80]
                0.00    0.00   21503/237052      term::vect() const [71]
                0.00    0.00   21503/129531      term::ampl() const [73]
-----------------------------------------------
                0.00    0.00   21503/21503       opElementary::apply(quState&) const [9]
[27]     3.9    0.00    0.00   21503         term::operator=(term const&) [27]
                0.00    0.00   21503/110120      bitvec::operator=(bitvec const&) [15]
                0.00    0.00   21503/237052      term::vect() const [71]
                0.00    0.00   21503/129531      term::ampl() const [73]
-----------------------------------------------
                0.00    0.00   21503/21503       opElementary::apply(quState&) const [9]
[28]     3.9    0.00    0.00   21503         terminfo::terminfo(terminfo const&) [28]
                0.00    0.00   21503/21503       term::term(term const&) [26]
                0.00    0.00   21503/150629      bitvec::bitvec(bitvec const&) [72]
-----------------------------------------------
                0.00    0.00      35/328         tValue::operator=(tValue const&) [37]
                0.00    0.00     293/328         tValue::tValue(tValue const&) [33]
[29]     3.5    0.00    0.00     328         tValue::assign(tValue const&) [29]
                0.00    0.00      18/51          quState::newclone() <cycle 5> [174]
                0.00    0.00     328/862         tType::operator=(tType const&) [114]
                0.00    0.00     328/1084        tType::ord() const [111]
                0.00    0.00     328/1045        tType::basetype() const [112]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[30]     3.3    0.00    0.00       1         QuHeap::QuHeap(int, int) [30]
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [31]
                0.00    0.00       3/110120      bitvec::operator=(bitvec const&) [15]
                0.00    0.00       8/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00       3/240435      bitvec::~bitvec() [70]
                0.00    0.00       2/70          bitvec::qnot() [175]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [562]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [564]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [560]
                0.00    0.00       1/1           QuHeap::init() [502]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [30]
[31]     3.3    0.00    0.00       1         quBaseState::quBaseState(int, int) [31]
                0.00    0.00       2/2           termlist::termlist(int, int) [32]
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [63]
                0.00    0.00       1/52          quState::quState(int) [180]
                0.00    0.00       1/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00       1/240435      bitvec::~bitvec() [70]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::quBaseState(int, int) [31]
[32]     3.3    0.00    0.00       2         termlist::termlist(int, int) [32]
                0.00    0.00       2/6           termlist::newlist() [24]
                0.00    0.00       2/2           duallog(int) [395]
                0.00    0.00       2/37          termlist::clear() [226]
-----------------------------------------------
                0.00    0.00       1/293         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [58]
                0.00    0.00       3/293         tValue::conv(tType const&) const [57]
                0.00    0.00       3/293         SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00       4/293         sConst::eval(SymTable*, SymTable*, QuHeap*) [53]
                0.00    0.00     282/293         SymTab::put(sDef*, tValue const&) [34]
[33]     3.2    0.00    0.00     293         tValue::tValue(tValue const&) [33]
                0.00    0.00     293/328         tValue::assign(tValue const&) [29]
                0.00    0.00     293/1498        tType::tType(BaseType) [109]
-----------------------------------------------
                0.00    0.00       1/326         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       2/326         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/326         sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       3/326         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/326         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      36/326         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [38]
                0.00    0.00     275/326         sRoutDef::typecheck(SymTable*, SymTable*) [35]
[34]     3.0    0.00    0.00     326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00     282/293         tValue::tValue(tValue const&) [33]
                0.00    0.00     326/369         sObject::isDef() const [131]
                0.00    0.00     326/378         sObject::isValueDef() const [129]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[35]     2.6    0.00    0.00      36         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00     275/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [52]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
                0.00    0.00     734/21585       sDef::id() const [89]
                0.00    0.00     435/4195        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [105]
                0.00    0.00     275/361         tValue::tValue() [133]
                0.00    0.00     275/677         tValue::~tValue() [120]
                0.00    0.00     263/266         SymTab::getRef(std::string const&, ObjType*) const [139]
                0.00    0.00     263/296         sObject::isFunctDef() const [136]
                0.00    0.00     263/380         sDef::type() const [127]
                0.00    0.00     263/263         tType::isQuReg() const [144]
                0.00    0.00     263/558         sList<sDef>::next(void*&) const [121]
                0.00    0.00      72/79          SymTab::SymTab(int) [169]
                0.00    0.00      72/79          SymTab::~SymTab() [170]
                0.00    0.00      52/457         sObject::setParent(sObject*) [126]
                0.00    0.00      36/143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00      36/175         sObject::def() const [148]
                0.00    0.00      36/99          sList<sDef>::first(void*&) const [155]
                0.00    0.00      36/75          sObject::isExtern() const [173]
                0.00    0.00       8/257         sObject::isRoutDef() const [145]
                0.00    0.00       8/34          sObject::isCondDef() const [230]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [307]
                0.00    0.00       8/30          sObject::isQuFunDef() const [240]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [308]
                0.00    0.00       3/3           sObject::isBennet() const [392]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[36]     0.6    0.00    0.00       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [40]
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [43]
                0.00    0.00       1/51          quState::newclone() <cycle 5> [174]
                0.00    0.00       2/35          tValue::operator=(tValue const&) [37]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [53]
                0.00    0.00       1/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00       4/677         tValue::~tValue() [120]
                0.00    0.00       2/361         tValue::tValue() [133]
                0.00    0.00       2/8           tValue::isError() const [318]
                0.00    0.00       2/2           tValue::toInt() const [419]
                0.00    0.00       1/129         tType::isQuExpr() const [150]
                0.00    0.00       1/380         sDef::type() const [127]
                0.00    0.00       1/1           sDef::basetype() [497]
                0.00    0.00       1/7           sObject::isGlobal() const [325]
                0.00    0.00       1/13          tValue::qustate() const [299]
                0.00    0.00       1/175         sObject::def() const [148]
-----------------------------------------------
                0.00    0.00       2/35          sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/35          sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       3/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/35          sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00      21/35          sConst::sConst(tValue const&) [39]
[37]     0.4    0.00    0.00      35         tValue::operator=(tValue const&) [37]
                0.00    0.00      35/328         tValue::assign(tValue const&) [29]
                0.00    0.00      35/712         tValue::delpointer() [117]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[38]     0.3    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [38]
                0.00    0.00      36/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00      36/175         sObject::def() const [148]
                0.00    0.00      36/361         tValue::tValue() [133]
                0.00    0.00      36/677         tValue::~tValue() [120]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00      19/21          yylex() [41]
[39]     0.2    0.00    0.00      21         sConst::sConst(tValue const&) [39]
                0.00    0.00      21/35          tValue::operator=(tValue const&) [37]
                0.00    0.00      21/65          tValue::type() const [177]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [258]
                0.00    0.00      21/361         tValue::tValue() [133]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
[40]     0.2    0.00    0.00       1         QuHeap::addReg(quState*) [40]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [44]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [60]
                0.00    0.00       1/677         tValue::~tValue() [120]
-----------------------------------------------
                0.00    0.00    2354/2354        yyparse() [42]
[41]     0.2    0.00    0.00    2354         yylex() [41]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [39]
                0.00    0.00      19/677         tValue::~tValue() [120]
                0.00    0.00      15/15          tValue::tValue(long) [294]
                0.00    0.00      12/12          yy_get_next_buffer() [300]
                0.00    0.00       8/8           yy_get_previous_state() [312]
                0.00    0.00       2/2           tValue::tValue(double) [404]
                0.00    0.00       1/26          yy_load_buffer_state() [245]
                0.00    0.00       1/46658       std::complex<double>::complex(double, double) [80]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [506]
                0.00    0.00       1/1           tValue::tValue(char const*) [505]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [46]
                0.00    0.00       2/4           parseobj() [45]
[42]     0.2    0.00    0.00       4         yyparse() [42]
                0.00    0.00    2354/2354        yylex() [41]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [138]
                0.00    0.00     268/1498        tType::tType(BaseType) [109]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [140]
                0.00    0.00      46/46          sVar::sVar(std::string*) [191]
                0.00    0.00      44/44          sDefList::sDefList() [203]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [222]
                0.00    0.00      29/29          sList<sExpr>::append(sExpr*) [242]
                0.00    0.00      24/24          sExprList::sExprList() [250]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [254]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [268]
                0.00    0.00      18/18          sStmtList::sStmtList() [279]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [289]
                0.00    0.00      16/16          sCall::sCall(std::string*, sExprList*, int) [286]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [313]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [320]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [327]
                0.00    0.00       4/178         sObject::setFlag(ObjFlag, int) [146]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [346]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [356]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [350]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [342]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [334]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [376]
                0.00    0.00       2/2           objlist::objlist() [406]
                0.00    0.00       2/2           tType::tType(BaseType, int) [403]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [397]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [400]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [407]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [507]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [499]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [494]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
[43]     0.2    0.00    0.00       1         QuHeap::qualloc(int, BaseType) [43]
                0.00    0.00       1/51          quBaseState::newsubstring(int, int) <cycle 5> [153]
                0.00    0.00      10/10          bitvec::operator[](int) const [310]
                0.00    0.00       2/240435      bitvec::~bitvec() [70]
                0.00    0.00       1/37          quState::mapmask() const [227]
                0.00    0.00       1/68          operator~(bitvec const&) [176]
                0.00    0.00       1/21507       bitvec::operator&=(bitvec const&) [91]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [504]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [40]
[44]     0.2    0.00    0.00       1         tValue::tValue(quState&, BaseType) [44]
                0.00    0.00       1/51          quState::newclone() <cycle 5> [174]
                0.00    0.00       1/1498        tType::tType(BaseType) [109]
                0.00    0.00       1/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[45]     0.1    0.00    0.00       2         parseobj() [45]
                0.00    0.00       2/4           yyparse() [42]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[46]     0.1    0.00    0.00       2         chksyntax(_IO_FILE*) [46]
                0.00    0.00       2/4           yyparse() [42]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [339]
                0.00    0.00       2/2           yyCleanUp() [396]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[47]     0.1    0.00    0.00       3         sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       6/35          tValue::operator=(tValue const&) [37]
                0.00    0.00       6/6           SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00       6/60          sVar::id() const [178]
                0.00    0.00       6/677         tValue::~tValue() [120]
                0.00    0.00       3/361         tValue::tValue() [133]
                0.00    0.00       3/3           tValue::isExpr() const [389]
                0.00    0.00       3/100         sExpr::type() [154]
                0.00    0.00       3/65          tValue::type() const [177]
                0.00    0.00       3/11          tType::operator==(tType const&) const [304]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[48]     0.1    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [53]
                0.00    0.00       3/35          tValue::operator=(tValue const&) [37]
                0.00    0.00       3/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00       6/677         tValue::~tValue() [120]
                0.00    0.00       3/361         tValue::tValue() [133]
                0.00    0.00       3/8           tValue::isError() const [318]
                0.00    0.00       3/65          tValue::type() const [177]
                0.00    0.00       3/380         sDef::type() const [127]
                0.00    0.00       3/11          tType::operator==(tType const&) const [304]
                0.00    0.00       3/175         sObject::def() const [148]
-----------------------------------------------
                0.00    0.00      30/30          opElementary::apply(quState&) const [9]
[49]     0.1    0.00    0.00      30         terminfo::terminfo() [49]
                0.00    0.00      30/3632        term::term() [22]
                0.00    0.00      30/89806       bitvec::bitvec(int, unsigned long) [74]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [52]
[50]     0.1    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       6/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00      29/175         sObject::def() const [148]
                0.00    0.00      23/380         sDef::type() const [127]
                0.00    0.00      16/41          tType::operator==(BaseType) const [223]
                0.00    0.00      11/129         tType::isQuExpr() const [150]
                0.00    0.00       7/21585       sDef::id() const [89]
                0.00    0.00       7/143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00       6/361         tValue::tValue() [133]
                0.00    0.00       6/677         tValue::~tValue() [120]
                0.00    0.00       5/457         sObject::setParent(sObject*) [126]
                0.00    0.00       5/21          sObject::inFunctDef() const [263]
                0.00    0.00       5/100         sExpr::type() [154]
                0.00    0.00       5/177         sObject::isSet(ObjFlag) const [147]
                0.00    0.00       4/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00       4/20          sObject::inQuDef() const [265]
                0.00    0.00       4/34          sObject::isCondDef() const [230]
                0.00    0.00       4/178         sObject::setFlag(ObjFlag, int) [146]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00       1/21          tType::isInt() const [262]
-----------------------------------------------
                0.00    0.00       3/3           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[51]     0.1    0.00    0.00       3         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
                0.00    0.00      18/3632        term::term() [22]
                0.00    0.00      12/12          term::set(bitvec const&, std::complex<double> const&) [61]
                0.00    0.00      12/12          std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [302]
                0.00    0.00      12/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00      12/240435      bitvec::~bitvec() [70]
                0.00    0.00       3/3           opMatrix::opMatrix(int) [379]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [35]
[52]     0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [52]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00     269/457         sObject::setParent(sObject*) [126]
                0.00    0.00     269/558         sList<sDef>::next(void*&) const [121]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [143]
                0.00    0.00      44/99          sList<sDef>::first(void*&) const [155]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
[53]     0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [53]
                0.00    0.00       4/293         tValue::tValue(tValue const&) [33]
-----------------------------------------------
[54]     0.0    0.00    0.00       8+19      <cycle 3 as a whole> [54]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
[55]     0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [39]
                0.00    0.00       2/326         SymTab::put(sDef*, tValue const&) [34]
                0.00    0.00       8/457         sObject::setParent(sObject*) [126]
                0.00    0.00       4/100         sExpr::type() [154]
                0.00    0.00       4/21          tType::isInt() const [262]
                0.00    0.00       4/677         tValue::~tValue() [120]
                0.00    0.00       2/79          SymTab::SymTab(int) [169]
                0.00    0.00       2/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00       2/60          sVar::id() const [178]
                0.00    0.00       2/143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00       2/91          sVarDef::object() const [157]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       2/21585       sDef::id() const [89]
                0.00    0.00       2/2           tValue::tValue(int) [405]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [334]
                0.00    0.00       2/1498        tType::tType(BaseType) [109]
                0.00    0.00       2/361         tValue::tValue() [133]
                0.00    0.00       2/5           sDef::settype(tType const&) [333]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [307]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [308]
                0.00    0.00       2/5           sConstDef::~sConstDef() [335]
                0.00    0.00       2/79          SymTab::~SymTab() [170]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
-----------------------------------------------
                0.00    0.00       6/6           sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
[56]     0.0    0.00    0.00       6         SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00       3/293         tValue::tValue(tValue const&) [33]
                0.00    0.00       3/361         tValue::tValue() [133]
                0.00    0.00       3/372         SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00       3/378         sObject::isValueDef() const [129]
                0.00    0.00       3/91          sVarDef::object() const [157]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[57]     0.0    0.00    0.00       3         tValue::conv(tType const&) const [57]
                0.00    0.00       3/293         tValue::tValue(tValue const&) [33]
                0.00    0.00       3/11          tType::operator==(tType const&) const [304]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[58]     0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [58]
                0.00    0.00       1/293         tValue::tValue(tValue const&) [33]
                0.00    0.00       1/44          operator new(unsigned long, void*) [206]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [60]
[59]     0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [58]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [367]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [364]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [438]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [525]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [558]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [521]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [540]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [440]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [433]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [40]
[60]     0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [60]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [557]
-----------------------------------------------
                0.00    0.00      12/12          opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
[61]     0.0    0.00    0.00      12         term::set(bitvec const&, std::complex<double> const&) [61]
                0.00    0.00      12/110120      bitvec::operator=(bitvec const&) [15]
-----------------------------------------------
                0.00    0.00       6/6           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[62]     0.0    0.00    0.00       6         termlist::hashfunct2(bitvec const&) const [62]
                0.00    0.00       6/44553       bitvec::hashfunct() const [19]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [31]
[63]     0.0    0.00    0.00       1         quBaseState::reset(bitvec const&) [63]
                0.00    0.00       1/43007       quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.00    0.00       1/31          quBaseState::opbegin() [234]
                0.00    0.00       1/64516       bitvec::length() const [77]
                0.00    0.00       1/46658       std::complex<double>::complex(double, double) [80]
                0.00    0.00       1/1           quBaseState::basebits() const [522]
                0.00    0.00       1/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00       1/240435      bitvec::~bitvec() [70]
                0.00    0.00       1/31          quBaseState::opend() [233]
-----------------------------------------------
[64]     0.0    0.00    0.00      25+105     <cycle 1 as a whole> [64]
                0.00    0.00      24             sExprList::~sExprList() <cycle 1> [252]
                0.00    0.00      24             sList<sExpr>::~sList() <cycle 1> [249]
                0.00    0.00      24             sExprList::~sExprList() <cycle 1> [251]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [277]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [328]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [329]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [343]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [344]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [351]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [352]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [347]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [348]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [408]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [409]
-----------------------------------------------
[65]     0.0    0.00    0.00       8+64      <cycle 2 as a whole> [65]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [281]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [275]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [280]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [321]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [322]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [398]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [399]
-----------------------------------------------
                0.00    0.00       1/240435      quBaseState::reset(bitvec const&) [63]
                0.00    0.00       1/240435      quBaseState::quBaseState(int, int) [31]
                0.00    0.00       2/240435      QuHeap::qualloc(int, BaseType) [43]
                0.00    0.00       3/240435      QuHeap::QuHeap(int, int) [30]
                0.00    0.00       5/240435      QuHeap::~QuHeap() [503]
                0.00    0.00      12/240435      opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
                0.00    0.00      15/240435      sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      74/240435      quState::mapmask() const [227]
                0.00    0.00   21503/240435      quSubString::map(bitvec const&) const [96]
                0.00    0.00   21533/240435      terminfo::~terminfo() [90]
                0.00    0.00   25135/240435      term::~term() [88]
                0.00    0.00   43043/240435      quSubString::unmap(bitvec const&) const [84]
                0.00    0.00   43096/240435      opElementary::apply(quState&) const [9]
                0.00    0.00   86012/240435      opMatrix::addterms(terminfo const&) const [10]
[70]     0.0    0.00    0.00  240435         bitvec::~bitvec() [70]
-----------------------------------------------
                0.00    0.00    1536/237052      termlist::add(term const&) <cycle 4> [108]
                0.00    0.00   20486/237052      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                0.00    0.00   21503/237052      term::term(term const&) [26]
                0.00    0.00   21503/237052      term::operator=(term const&) [27]
                0.00    0.00   43006/237052      opElementary::apply(quState&) const [9]
                0.00    0.00  129018/237052      opMatrix::addterms(terminfo const&) const [10]
[71]     0.0    0.00    0.00  237052         term::vect() const [71]
-----------------------------------------------
                0.00    0.00      68/150629      operator~(bitvec const&) [176]
                0.00    0.00   21503/150629      quBaseState::map(bitvec const&) const [94]
                0.00    0.00   21503/150629      terminfo::terminfo(terminfo const&) [28]
                0.00    0.00   21506/150629      operator&(bitvec const&, bitvec const&) [92]
                0.00    0.00   43006/150629      operator|(bitvec const&, bitvec const&) [87]
                0.00    0.00   43043/150629      quBaseState::unmap(bitvec const&) const [83]
[72]     0.0    0.00    0.00  150629         bitvec::bitvec(bitvec const&) [72]
-----------------------------------------------
                0.00    0.00    1536/129531      termlist::add(term const&) <cycle 4> [108]
                0.00    0.00   20480/129531      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                0.00    0.00   21503/129531      term::term(term const&) [26]
                0.00    0.00   21503/129531      term::operator=(term const&) [27]
                0.00    0.00   64509/129531      opMatrix::addterms(terminfo const&) const [10]
[73]     0.0    0.00    0.00  129531         term::ampl() const [73]
-----------------------------------------------
                0.00    0.00       1/89806       quBaseState::reset(bitvec const&) [63]
                0.00    0.00       1/89806       quBaseState::quBaseState(int, int) [31]
                0.00    0.00       3/89806       QuHeap::cmask() const [385]
                0.00    0.00       3/89806       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/89806       QuHeap::QuHeap(int, int) [30]
                0.00    0.00      12/89806       opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
                0.00    0.00      30/89806       opElementary::apply(quState&) const [9]
                0.00    0.00      30/89806       terminfo::terminfo() [49]
                0.00    0.00      37/89806       quState::mapmask() const [227]
                0.00    0.00    3632/89806       term::term() [22]
                0.00    0.00   21503/89806       bitvec::getbits(int, int) const [97]
                0.00    0.00   21503/89806       term::term(term const&) [26]
                0.00    0.00   43043/89806       quSubString::unmap(bitvec const&) const [84]
[74]     0.0    0.00    0.00   89806         bitvec::bitvec(int, unsigned long) [74]
-----------------------------------------------
                0.00    0.00       1/64874       quBaseState::basebits() const [522]
                0.00    0.00       3/64874       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      30/64874       opElementary::apply(quState&) const [9]
                0.00    0.00      33/64874       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      37/64874       quState::mapmask() const [227]
                0.00    0.00      71/64874       quState::newclone() <cycle 5> [174]
                0.00    0.00     153/64874       quBaseState::newsubstring(int, int) <cycle 5> [153]
                0.00    0.00   21503/64874       quSubString::map(bitvec const&) const [96]
                0.00    0.00   43043/64874       quSubString::unmap(bitvec const&) const [84]
[75]     0.0    0.00    0.00   64874         quState::mapbits() const [75]
-----------------------------------------------
                0.00    0.00   21503/64546       quSubString::map(bitvec const&) const [96]
                0.00    0.00   43043/64546       quSubString::unmap(bitvec const&) const [84]
[76]     0.0    0.00    0.00   64546         quSubString::mapoffs() const [76]
-----------------------------------------------
                0.00    0.00       1/64516       quBaseState::reset(bitvec const&) [63]
                0.00    0.00       3/64516       QuHeap::ncond() const [387]
                0.00    0.00       3/64516       QuHeap::cmask() const [385]
                0.00    0.00   64509/64516       opMatrix::addterms(terminfo const&) const [10]
[77]     0.0    0.00    0.00   64516         bitvec::length() const [77]
-----------------------------------------------
                0.00    0.00   20480/63486       std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [102]
                0.00    0.00   43006/63486       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [86]
[78]     0.0    0.00    0.00   63486         std::complex<double>::imag() const [78]
-----------------------------------------------
                0.00    0.00   20480/63486       std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [102]
                0.00    0.00   43006/63486       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [86]
[79]     0.0    0.00    0.00   63486         std::complex<double>::real() const [79]
-----------------------------------------------
                0.00    0.00       1/46658       yylex() [41]
                0.00    0.00       1/46658       quBaseState::reset(bitvec const&) [63]
                0.00    0.00      18/46658       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00    3632/46658       term::term() [22]
                0.00    0.00   21503/46658       term::term(term const&) [26]
                0.00    0.00   21503/46658       opMatrix::addterms(terminfo const&) const [10]
[80]     0.0    0.00    0.00   46658         std::complex<double>::complex(double, double) [80]
-----------------------------------------------
                0.00    0.00   43043/43043       quSubString::unmap(bitvec const&) const [84]
[81]     0.0    0.00    0.00   43043         bitvec::setbits(int, bitvec const&) [81]
                0.00    0.00   43043/43043       bitvec::setbits(int, int, unsigned long) [82]
-----------------------------------------------
                0.00    0.00   43043/43043       bitvec::setbits(int, bitvec const&) [81]
[82]     0.0    0.00    0.00   43043         bitvec::setbits(int, int, unsigned long) [82]
-----------------------------------------------
                0.00    0.00   43043/43043       quSubString::unmap(bitvec const&) const [84]
[83]     0.0    0.00    0.00   43043         quBaseState::unmap(bitvec const&) const [83]
                0.00    0.00   43043/150629      bitvec::bitvec(bitvec const&) [72]
-----------------------------------------------
                0.00    0.00      37/43043       quState::mapmask() const [227]
                0.00    0.00   43006/43043       opMatrix::addterms(terminfo const&) const [10]
[84]     0.0    0.00    0.00   43043         quSubString::unmap(bitvec const&) const [84]
                0.00    0.00   43043/64874       quState::mapbits() const [75]
                0.00    0.00   43043/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00   43043/64546       quSubString::mapoffs() const [76]
                0.00    0.00   43043/43043       bitvec::setbits(int, bitvec const&) [81]
                0.00    0.00   43043/43043       quBaseState::unmap(bitvec const&) const [83]
                0.00    0.00   43043/240435      bitvec::~bitvec() [70]
-----------------------------------------------
                0.00    0.00       3/43009       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00   43006/43009       operator|(bitvec const&, bitvec const&) [87]
[85]     0.0    0.00    0.00   43009         bitvec::operator|=(bitvec const&) [85]
-----------------------------------------------
                0.00    0.00   43006/43006       std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [21]
[86]     0.0    0.00    0.00   43006         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [86]
                0.00    0.00   43006/63486       std::complex<double>::real() const [79]
                0.00    0.00   43006/63486       std::complex<double>::imag() const [78]
-----------------------------------------------
                0.00    0.00   43006/43006       opMatrix::addterms(terminfo const&) const [10]
[87]     0.0    0.00    0.00   43006         operator|(bitvec const&, bitvec const&) [87]
                0.00    0.00   43006/150629      bitvec::bitvec(bitvec const&) [72]
                0.00    0.00   43006/43009       bitvec::operator|=(bitvec const&) [85]
-----------------------------------------------
                0.00    0.00      18/25135       opMatrix::~opMatrix() [380]
                0.00    0.00    1536/25135       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                0.00    0.00    2048/25135       termlist::dellist() [410]
                0.00    0.00   21533/25135       terminfo::~terminfo() [90]
[88]     0.0    0.00    0.00   25135         term::~term() [88]
                0.00    0.00   25135/240435      bitvec::~bitvec() [70]
-----------------------------------------------
                0.00    0.00       2/21585       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/21585       sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       6/21585       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       7/21585       sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00     734/21585       sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00    7519/21585       SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00   13314/21585       SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
[89]     0.0    0.00    0.00   21585         sDef::id() const [89]
-----------------------------------------------
                0.00    0.00   21533/21533       opElementary::apply(quState&) const [9]
[90]     0.0    0.00    0.00   21533         terminfo::~terminfo() [90]
                0.00    0.00   21533/25135       term::~term() [88]
                0.00    0.00   21533/240435      bitvec::~bitvec() [70]
-----------------------------------------------
                0.00    0.00       1/21507       QuHeap::qualloc(int, BaseType) [43]
                0.00    0.00   21506/21507       operator&(bitvec const&, bitvec const&) [92]
[91]     0.0    0.00    0.00   21507         bitvec::operator&=(bitvec const&) [91]
-----------------------------------------------
                0.00    0.00       3/21506       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00   21503/21506       opElementary::apply(quState&) const [9]
[92]     0.0    0.00    0.00   21506         operator&(bitvec const&, bitvec const&) [92]
                0.00    0.00   21506/150629      bitvec::bitvec(bitvec const&) [72]
                0.00    0.00   21506/21507       bitvec::operator&=(bitvec const&) [91]
-----------------------------------------------
                0.00    0.00   21503/21503       opElementary::apply(quState&) const [9]
[93]     0.0    0.00    0.00   21503         quSubState::baseterm(int) const [93]
                0.00    0.00   21503/21503       quBaseState::baseterm(int) const [95]
-----------------------------------------------
                0.00    0.00   21503/21503       quSubString::map(bitvec const&) const [96]
[94]     0.0    0.00    0.00   21503         quBaseState::map(bitvec const&) const [94]
                0.00    0.00   21503/150629      bitvec::bitvec(bitvec const&) [72]
-----------------------------------------------
                0.00    0.00   21503/21503       quSubState::baseterm(int) const [93]
[95]     0.0    0.00    0.00   21503         quBaseState::baseterm(int) const [95]
                0.00    0.00   21503/21503       termlist::operator[](int) const [99]
-----------------------------------------------
                0.00    0.00   21503/21503       opElementary::apply(quState&) const [9]
[96]     0.0    0.00    0.00   21503         quSubString::map(bitvec const&) const [96]
                0.00    0.00   21503/64874       quState::mapbits() const [75]
                0.00    0.00   21503/64546       quSubString::mapoffs() const [76]
                0.00    0.00   21503/21503       quBaseState::map(bitvec const&) const [94]
                0.00    0.00   21503/21503       bitvec::getbits(int, int) const [97]
                0.00    0.00   21503/240435      bitvec::~bitvec() [70]
-----------------------------------------------
                0.00    0.00   21503/21503       quSubString::map(bitvec const&) const [96]
[97]     0.0    0.00    0.00   21503         bitvec::getbits(int, int) const [97]
                0.00    0.00   21503/89806       bitvec::bitvec(int, unsigned long) [74]
-----------------------------------------------
                0.00    0.00   21503/21503       opMatrix::addterms(terminfo const&) const [10]
[98]     0.0    0.00    0.00   21503         bitvec::getword() const [98]
-----------------------------------------------
                0.00    0.00   21503/21503       quBaseState::baseterm(int) const [95]
[99]     0.0    0.00    0.00   21503         termlist::operator[](int) const [99]
-----------------------------------------------
                0.00    0.00   20486/20486       operator==(bitvec const&, bitvec const&) [101]
[100]    0.0    0.00    0.00   20486         bitvec::testeq(bitvec const&) const [100]
-----------------------------------------------
                0.00    0.00   20486/20486       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[101]    0.0    0.00    0.00   20486         operator==(bitvec const&, bitvec const&) [101]
                0.00    0.00   20486/20486       bitvec::testeq(bitvec const&) const [100]
-----------------------------------------------
                0.00    0.00   20480/20480       std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [103]
[102]    0.0    0.00    0.00   20480         std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [102]
                0.00    0.00   20480/63486       std::complex<double>::real() const [79]
                0.00    0.00   20480/63486       std::complex<double>::imag() const [78]
-----------------------------------------------
                0.00    0.00   20480/20480       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[103]    0.0    0.00    0.00   20480         std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [103]
                0.00    0.00   20480/20480       std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [102]
-----------------------------------------------
                0.00    0.00    3250/6504        SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00    3254/6504        SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
[104]    0.0    0.00    0.00    6504         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [104]
-----------------------------------------------
                0.00    0.00     435/4195        sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00    3760/4195        SymTab::getentry(SymTable::entry*, std::string const&) const [130]
[105]    0.0    0.00    0.00    4195         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [105]
                0.00    0.00    2928/2928        std::char_traits<char>::compare(char const*, char const*, unsigned long) [107]
-----------------------------------------------
                0.00    0.00     509/3912        SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00    3403/3912        SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
[106]    0.0    0.00    0.00    3912         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [106]
-----------------------------------------------
                0.00    0.00    2928/2928        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [105]
[107]    0.0    0.00    0.00    2928         std::char_traits<char>::compare(char const*, char const*, unsigned long) [107]
-----------------------------------------------
                                1536             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
[108]    0.0    0.00    0.00    1536         termlist::add(term const&) <cycle 4> [108]
                0.00    0.00    1536/237052      term::vect() const [71]
                0.00    0.00    1536/129531      term::ampl() const [73]
                                1536             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
-----------------------------------------------
                0.00    0.00       1/1498        tValue::tValue(std::complex<double> const&) [506]
                0.00    0.00       1/1498        tValue::tValue(char const*) [505]
                0.00    0.00       1/1498        tValue::tValue(quState&, BaseType) [44]
                0.00    0.00       1/1498        tValue::tValue(quState*, BaseType) [504]
                0.00    0.00       1/1498        __static_initialization_and_destruction_0(int, int) [467]
                0.00    0.00       1/1498        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [507]
                0.00    0.00       2/1498        tValue::tValue(int) [405]
                0.00    0.00       2/1498        tValue::tValue(double) [404]
                0.00    0.00       2/1498        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       4/1498        sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       4/1498        sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       5/1498        sConstDef::sConstDef(std::string*, sExpr*) [334]
                0.00    0.00       8/1498        sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00      15/1498        tValue::tValue(long) [294]
                0.00    0.00      16/1498        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [289]
                0.00    0.00      19/1498        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [268]
                0.00    0.00      21/1498        sExpr::sExpr(tType const&) [258]
                0.00    0.00      32/1498        sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      52/1498        sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      76/1498        sExpr::sExpr() [172]
                0.00    0.00     268/1498        yyparse() [42]
                0.00    0.00     293/1498        tValue::tValue(tValue const&) [33]
                0.00    0.00     312/1498        sDef::sDef(tType const&, std::string*) [134]
                0.00    0.00     361/1498        tValue::tValue() [133]
[109]    0.0    0.00    0.00    1498         tType::tType(BaseType) [109]
-----------------------------------------------
                0.00    0.00     532/1116        sObject::isDef() const [131]
                0.00    0.00     584/1116        sObject::isValueDef() const [129]
[110]    0.0    0.00    0.00    1116         sArgDef::object() const [110]
-----------------------------------------------
                0.00    0.00       8/1084        sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00      36/1084        sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00     328/1084        tValue::assign(tValue const&) [29]
                0.00    0.00     712/1084        tValue::ord() const [118]
[111]    0.0    0.00    0.00    1084         tType::ord() const [111]
-----------------------------------------------
                0.00    0.00       1/1045        sDef::basetype() [497]
                0.00    0.00       4/1045        sExpr::basetype() [349]
                0.00    0.00     328/1045        tValue::assign(tValue const&) [29]
                0.00    0.00     712/1045        tValue::basetype() const [119]
[112]    0.0    0.00    0.00    1045         tType::basetype() const [112]
-----------------------------------------------
                0.00    0.00      99/897         sObject::isSetRec(ObjFlag) [295]
                0.00    0.00     798/897         sObject::def() const [148]
[113]    0.0    0.00    0.00     897         sObject::parent() const [113]
-----------------------------------------------
                0.00    0.00       1/862         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       5/862         sDef::settype(tType const&) [333]
                0.00    0.00      21/862         sExpr::sExpr(tType const&) [258]
                0.00    0.00      36/862         sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      46/862         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00     113/862         sExpr::settype(tType const&) [152]
                0.00    0.00     312/862         sDef::sDef(tType const&, std::string*) [134]
                0.00    0.00     328/862         tValue::assign(tValue const&) [29]
[114]    0.0    0.00    0.00     862         tType::operator=(tType const&) [114]
-----------------------------------------------
                0.00    0.00     835/835         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [198]
[115]    0.0    0.00    0.00     835         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [115]
-----------------------------------------------
                0.00    0.00     790/790         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [198]
[116]    0.0    0.00    0.00     790         std::_List_const_iterator<sObject*>::operator++() [116]
-----------------------------------------------
                0.00    0.00      35/712         tValue::operator=(tValue const&) [37]
                0.00    0.00     677/712         tValue::~tValue() [120]
[117]    0.0    0.00    0.00     712         tValue::delpointer() [117]
                0.00    0.00     712/712         tValue::ord() const [118]
                0.00    0.00     712/712         tValue::basetype() const [119]
                0.00    0.00      20/20          quSubState::isbasestate() const [264]
                0.00    0.00      20/50          quSubString::~quSubString() [185]
-----------------------------------------------
                0.00    0.00     712/712         tValue::delpointer() [117]
[118]    0.0    0.00    0.00     712         tValue::ord() const [118]
                0.00    0.00     712/1084        tType::ord() const [111]
-----------------------------------------------
                0.00    0.00     712/712         tValue::delpointer() [117]
[119]    0.0    0.00    0.00     712         tValue::basetype() const [119]
                0.00    0.00     712/1045        tType::basetype() const [112]
-----------------------------------------------
                0.00    0.00       1/677         QuHeap::addReg(quState*) [40]
                0.00    0.00       1/677         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [511]
                0.00    0.00       3/677         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       4/677         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       4/677         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       4/677         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       6/677         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       6/677         sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       6/677         sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       9/677         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      19/677         yylex() [41]
                0.00    0.00      21/677         sConst::~sConst() [260]
                0.00    0.00      36/677         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [38]
                0.00    0.00     275/677         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00     282/677         SymTab::deltree(SymTable::entry*) [187]
[120]    0.0    0.00    0.00     677         tValue::~tValue() [120]
                0.00    0.00     677/712         tValue::delpointer() [117]
-----------------------------------------------
                0.00    0.00       3/558         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      23/558         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00     263/558         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00     269/558         sDefList::typecheck(SymTable*, SymTable*) [52]
[121]    0.0    0.00    0.00     558         sList<sDef>::next(void*&) const [121]
-----------------------------------------------
                0.00    0.00      65/545         tValue::type() const [177]
                0.00    0.00     100/545         sExpr::type() [154]
                0.00    0.00     380/545         sDef::type() const [127]
[122]    0.0    0.00    0.00     545         tType::tType(tType const&) [122]
-----------------------------------------------
                0.00    0.00      18/521         sList<sStmt>::sList() [274]
                0.00    0.00      21/521         sExpr::sExpr(tType const&) [258]
                0.00    0.00      24/521         sList<sExpr>::sList() [248]
                0.00    0.00      26/521         sStmt::sStmt(int) [246]
                0.00    0.00      44/521         sList<sDef>::sList() [201]
                0.00    0.00      76/521         sExpr::sExpr() [172]
                0.00    0.00     312/521         sDef::sDef(tType const&, std::string*) [134]
[123]    0.0    0.00    0.00     521         sObject::sObject(unsigned int) [123]
-----------------------------------------------
                0.00    0.00      18/521         sList<sStmt>::~sList() <cycle 2> [275]
                0.00    0.00      24/521         sList<sExpr>::~sList() <cycle 1> [249]
                0.00    0.00      26/521         sStmt::~sStmt() [247]
                0.00    0.00      44/521         sList<sDef>::~sList() [202]
                0.00    0.00      97/521         sExpr::~sExpr() [156]
                0.00    0.00     312/521         sDef::~sDef() [135]
[124]    0.0    0.00    0.00     521         sObject::~sObject() [124]
-----------------------------------------------
                0.00    0.00       1/460         tValue::tValue(std::complex<double> const&) [506]
                0.00    0.00       1/460         tValue::tValue(char const*) [505]
                0.00    0.00       1/460         tValue::tValue(quState&, BaseType) [44]
                0.00    0.00       1/460         tValue::tValue(quState*, BaseType) [504]
                0.00    0.00       2/460         tValue::tValue(int) [405]
                0.00    0.00       2/460         tValue::tValue(double) [404]
                0.00    0.00      15/460         tValue::tValue(long) [294]
                0.00    0.00      76/460         sExpr::sExpr() [172]
                0.00    0.00     361/460         tValue::tValue() [133]
[125]    0.0    0.00    0.00     460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       1/457         sExit::typecheck(SymTable*, SymTable*) [498]
                0.00    0.00       3/457         sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       4/457         sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       4/457         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       5/457         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       6/457         sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       8/457         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       8/457         sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00      15/457         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                0.00    0.00      23/457         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
                0.00    0.00      23/457         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      36/457         sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      52/457         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00     269/457         sDefList::typecheck(SymTable*, SymTable*) [52]
[126]    0.0    0.00    0.00     457         sObject::setParent(sObject*) [126]
-----------------------------------------------
                0.00    0.00       1/380         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/380         sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       3/380         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      23/380         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      41/380         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      46/380         sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00     263/380         sRoutDef::typecheck(SymTable*, SymTable*) [35]
[127]    0.0    0.00    0.00     380         sDef::type() const [127]
                0.00    0.00     380/545         tType::tType(tType const&) [122]
-----------------------------------------------
                0.00    0.00       8/379         sObject::isProcDef() const [293]
                0.00    0.00      10/379         sObject::isQuFunDef() const [240]
                0.00    0.00      11/379         sObject::isQuOpDef() const [253]
                0.00    0.00      19/379         sObject::isInclude() const [211]
                0.00    0.00      23/379         sObject::isValueDef() const [129]
                0.00    0.00      84/379         sObject::isDef() const [131]
                0.00    0.00      94/379         sObject::isRoutDef() const [145]
                0.00    0.00     130/379         sObject::isFunctDef() const [136]
[128]    0.0    0.00    0.00     379         sQuOpDef::object() const [128]
-----------------------------------------------
                0.00    0.00       3/378         SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00       3/378         SymTab::getRef(std::string const&, ObjType*) const [139]
                0.00    0.00      46/378         sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00     326/378         SymTab::put(sDef*, tValue const&) [34]
[129]    0.0    0.00    0.00     378         sObject::isValueDef() const [129]
                0.00    0.00     584/1116        sArgDef::object() const [110]
                0.00    0.00      58/91          sVarDef::object() const [157]
                0.00    0.00      26/48          sConstDef::object() const [189]
                0.00    0.00      23/379         sQuOpDef::object() const [128]
                0.00    0.00      19/369         sQuFunDef::object() const [132]
                0.00    0.00       2/58          sProcDef::object() const [179]
-----------------------------------------------
                                3388             SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00       3/372         SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00     139/372         SymTab::getDef(std::string const&) const [149]
                0.00    0.00     230/372         SymTab::getRef(std::string const&, ObjType*) const [139]
[130]    0.0    0.00    0.00     372+3388    SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00    7519/21585       sDef::id() const [89]
                0.00    0.00    3760/4195        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [105]
                0.00    0.00    3250/6504        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [104]
                0.00    0.00     509/3912        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [106]
                                3388             SymTab::getentry(SymTable::entry*, std::string const&) const [130]
-----------------------------------------------
                0.00    0.00      43/369         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     326/369         SymTab::put(sDef*, tValue const&) [34]
[131]    0.0    0.00    0.00     369         sObject::isDef() const [131]
                0.00    0.00     532/1116        sArgDef::object() const [110]
                0.00    0.00      84/379         sQuOpDef::object() const [128]
                0.00    0.00      70/369         sQuFunDef::object() const [132]
                0.00    0.00      24/91          sVarDef::object() const [157]
                0.00    0.00      16/48          sConstDef::object() const [189]
                0.00    0.00       6/58          sProcDef::object() const [179]
                0.00    0.00       3/18          sCall::object() const [282]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [293]
                0.00    0.00      10/369         sObject::isQuOpDef() const [253]
                0.00    0.00      13/369         sObject::isQuFunDef() const [240]
                0.00    0.00      16/369         sObject::isInclude() const [211]
                0.00    0.00      19/369         sObject::isValueDef() const [129]
                0.00    0.00      70/369         sObject::isDef() const [131]
                0.00    0.00      74/369         sObject::isRoutDef() const [145]
                0.00    0.00     162/369         sObject::isFunctDef() const [136]
[132]    0.0    0.00    0.00     369         sQuFunDef::object() const [132]
-----------------------------------------------
                0.00    0.00       2/361         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       2/361         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/361         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       3/361         SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00       3/361         sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       3/361         sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       3/361         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/361         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       6/361         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      21/361         sConst::sConst(tValue const&) [39]
                0.00    0.00      36/361         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [38]
                0.00    0.00     275/361         sRoutDef::typecheck(SymTable*, SymTable*) [35]
[133]    0.0    0.00    0.00     361         tValue::tValue() [133]
                0.00    0.00     361/1498        tType::tType(BaseType) [109]
                0.00    0.00     361/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [334]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [313]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [140]
[134]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [134]
                0.00    0.00     312/521         sObject::sObject(unsigned int) [123]
                0.00    0.00     312/1498        tType::tType(BaseType) [109]
                0.00    0.00     312/862         tType::operator=(tType const&) [114]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [336]
                0.00    0.00       8/312         sVarDef::~sVarDef() [324]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [229]
                0.00    0.00     263/312         sArgDef::~sArgDef() [142]
[135]    0.0    0.00    0.00     312         sDef::~sDef() [135]
                0.00    0.00     312/521         sObject::~sObject() [124]
-----------------------------------------------
                0.00    0.00      16/296         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      17/296         sObject::inFunctDef() const [263]
                0.00    0.00     263/296         sRoutDef::typecheck(SymTable*, SymTable*) [35]
[136]    0.0    0.00    0.00     296         sObject::isFunctDef() const [136]
                0.00    0.00     162/369         sQuFunDef::object() const [132]
                0.00    0.00     130/379         sQuOpDef::object() const [128]
                0.00    0.00       4/58          sProcDef::object() const [179]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [34]
[137]    0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
                0.00    0.00   13314/21585       sDef::id() const [89]
                0.00    0.00    3403/3912        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [106]
                0.00    0.00    3254/6504        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [104]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [137]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [42]
[138]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [138]
-----------------------------------------------
                0.00    0.00       3/266         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00     263/266         sRoutDef::typecheck(SymTable*, SymTable*) [35]
[139]    0.0    0.00    0.00     266         SymTab::getRef(std::string const&, ObjType*) const [139]
                0.00    0.00     230/372         SymTab::getentry(SymTable::entry*, std::string const&) const [130]
                0.00    0.00       3/378         sObject::isValueDef() const [129]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [42]
[140]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [140]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [134]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [202]
[141]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [141]
                0.00    0.00     263/263         sArgDef::~sArgDef() [142]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [141]
[142]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [142]
                0.00    0.00     263/312         sDef::~sDef() [135]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [52]
[143]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [143]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [35]
[144]    0.0    0.00    0.00     263         tType::isQuReg() const [144]
-----------------------------------------------
                0.00    0.00       8/257         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00      16/257         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00     233/257         sObject::def() const [148]
[145]    0.0    0.00    0.00     257         sObject::isRoutDef() const [145]
                0.00    0.00      94/379         sQuOpDef::object() const [128]
                0.00    0.00      78/78          sStmtList::object() const [171]
                0.00    0.00      74/369         sQuFunDef::object() const [132]
                0.00    0.00      34/34          sDefList::object() const [231]
                0.00    0.00      32/58          sProcDef::object() const [179]
                0.00    0.00      21/21          sIf::object() const [261]
                0.00    0.00      15/15          sFor::object() const [296]
                0.00    0.00       6/18          sCall::object() const [282]
                0.00    0.00       3/9           sMult::object() const [311]
-----------------------------------------------
                0.00    0.00       4/178         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       4/178         yyparse() [42]
                0.00    0.00      26/178         sStmt::sStmt(int) [246]
                0.00    0.00     144/178         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228]
[146]    0.0    0.00    0.00     178         sObject::setFlag(ObjFlag, int) [146]
-----------------------------------------------
                0.00    0.00       3/177         sObject::isBennet() const [392]
                0.00    0.00       3/177         sStmt::isInv() const [382]
                0.00    0.00       5/177         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      34/177         sObject::isCondDef() const [230]
                0.00    0.00      57/177         sObject::isSetRec(ObjFlag) [295]
                0.00    0.00      75/177         sObject::isExtern() const [173]
[147]    0.0    0.00    0.00     177         sObject::isSet(ObjFlag) const [147]
-----------------------------------------------
                                 157             sObject::def() const [148]
                0.00    0.00       1/175         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/175         sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       6/175         sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       7/175         sObject::isGlobal() const [325]
                0.00    0.00      16/175         sObject::inQuFunDef() const [292]
                0.00    0.00      20/175         sObject::inQuDef() const [265]
                0.00    0.00      21/175         sObject::inFunctDef() const [263]
                0.00    0.00      29/175         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      36/175         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00      36/175         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [38]
[148]    0.0    0.00    0.00     175+157     sObject::def() const [148]
                0.00    0.00     798/897         sObject::parent() const [113]
                0.00    0.00     233/257         sObject::isRoutDef() const [145]
                                 157             sObject::def() const [148]
-----------------------------------------------
                0.00    0.00       2/143         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/143         sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       3/143         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00       3/143         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       7/143         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      36/143         sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00      36/143         sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00      53/143         SymTabComb::getDef(std::string const&) const [243]
[149]    0.0    0.00    0.00     143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00     139/372         SymTab::getentry(SymTable::entry*, std::string const&) const [130]
-----------------------------------------------
                0.00    0.00       1/129         sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       2/129         tType::isConv(tType const&) const [256]
                0.00    0.00       3/129         sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       4/129         sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       8/129         sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00      11/129         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      19/129         tValue::isQuExpr() const [273]
                0.00    0.00      23/129         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      26/129         sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      32/129         tType::isQuCond() const [232]
[150]    0.0    0.00    0.00     129         tType::isQuExpr() const [150]
-----------------------------------------------
                0.00    0.00      43/129         std::list<sObject*, std::allocator<sObject*> >::end() [217]
                0.00    0.00      86/129         std::list<sObject*, std::allocator<sObject*> >::begin() [167]
[151]    0.0    0.00    0.00     129         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [151]
-----------------------------------------------
                0.00    0.00       4/113         sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       4/113         sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       4/113         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00      18/113         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      18/113         sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      19/113         sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00      46/113         sVar::typecheck(SymTable*, SymTable*) [190]
[152]    0.0    0.00    0.00     113         sExpr::settype(tType const&) [152]
                0.00    0.00     113/862         tType::operator=(tType const&) [114]
-----------------------------------------------
                                  50             quSubString::newsubstring(int, int) <cycle 5> [23]
                                  51             quState::newclone() <cycle 5> [174]
                0.00    0.00       1/51          QuHeap::qualloc(int, BaseType) [43]
[153]    0.0    0.00    0.00     102         quBaseState::newsubstring(int, int) <cycle 5> [153]
                0.00    0.00     153/64874       quState::mapbits() const [75]
                                  51             quSubString::quSubString(int, int, quState&) <cycle 5> [182]
-----------------------------------------------
                0.00    0.00       1/100         sExit::typecheck(SymTable*, SymTable*) [498]
                0.00    0.00       3/100         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       3/100         sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       4/100         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       4/100         sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       5/100         sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       6/100         sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       7/100         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                0.00    0.00       8/100         sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00      23/100         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      36/100         sBinOp::typecheck(SymTable*, SymTable*) [298]
[154]    0.0    0.00    0.00     100         sExpr::type() [154]
                0.00    0.00     100/545         tType::tType(tType const&) [122]
-----------------------------------------------
                0.00    0.00       3/99          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      16/99          sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      36/99          sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00      44/99          sDefList::typecheck(SymTable*, SymTable*) [52]
[155]    0.0    0.00    0.00      99         sList<sDef>::first(void*&) const [155]
-----------------------------------------------
                0.00    0.00       4/97          sSubscript::~sSubscript() <cycle 1> [348]
                0.00    0.00       4/97          sUnOp::~sUnOp() [355]
                0.00    0.00       4/97          sListFunct::~sListFunct() <cycle 1> [344]
                0.00    0.00      18/97          sBinOp::~sBinOp() <cycle 1> [277]
                0.00    0.00      21/97          sConst::~sConst() [260]
                0.00    0.00      46/97          sVar::~sVar() [193]
[156]    0.0    0.00    0.00      97         sExpr::~sExpr() [156]
                0.00    0.00      97/521         sObject::~sObject() [124]
-----------------------------------------------
                0.00    0.00       1/91          sObject::isInclude() const [211]
                0.00    0.00       2/91          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/91          sObject::isConstDef() const [331]
                0.00    0.00       3/91          SymTab::getVal(std::string const&, ObjType*) const [56]
                0.00    0.00      24/91          sObject::isDef() const [131]
                0.00    0.00      58/91          sObject::isValueDef() const [129]
[157]    0.0    0.00    0.00      91         sVarDef::object() const [157]
-----------------------------------------------
                0.00    0.00      45/90          std::list<sObject*, std::allocator<sObject*> >::begin() const [197]
                0.00    0.00      45/90          std::list<sObject*, std::allocator<sObject*> >::end() const [195]
[158]    0.0    0.00    0.00      90         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [158]
-----------------------------------------------
                0.00    0.00      10/89          SymTabComb::SymTabComb(SymTable*, SymTable*) [307]
                0.00    0.00      79/89          SymTab::SymTab(int) [169]
[159]    0.0    0.00    0.00      89         SymTable::SymTable() [159]
-----------------------------------------------
                0.00    0.00      10/89          SymTabComb::~SymTabComb() [309]
                0.00    0.00      79/89          SymTab::~SymTab() [170]
[160]    0.0    0.00    0.00      89         SymTable::~SymTable() [160]
-----------------------------------------------
                0.00    0.00      86/86          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [165]
[161]    0.0    0.00    0.00      86         __gnu_cxx::new_allocator<sObject*>::new_allocator() [161]
-----------------------------------------------
                0.00    0.00      86/86          std::allocator<sObject*>::~allocator() [166]
[162]    0.0    0.00    0.00      86         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [162]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
[163]    0.0    0.00    0.00      86         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [163]
                0.00    0.00      86/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [164]
                0.00    0.00      86/86          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [165]
-----------------------------------------------
                0.00    0.00      86/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [163]
[164]    0.0    0.00    0.00      86         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [164]
-----------------------------------------------
                0.00    0.00      86/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [163]
[165]    0.0    0.00    0.00      86         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [165]
                0.00    0.00      86/86          __gnu_cxx::new_allocator<sObject*>::new_allocator() [161]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
[166]    0.0    0.00    0.00      86         std::allocator<sObject*>::~allocator() [166]
                0.00    0.00      86/86          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [162]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::front() [218]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::pop_front() [221]
[167]    0.0    0.00    0.00      86         std::list<sObject*, std::allocator<sObject*> >::begin() [167]
                0.00    0.00      86/129         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [151]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
[168]    0.0    0.00    0.00      86         sObject** std::__addressof<sObject*>(sObject*&) [168]
-----------------------------------------------
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       2/79          main [1]
                0.00    0.00       3/79          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      72/79          sRoutDef::typecheck(SymTable*, SymTable*) [35]
[169]    0.0    0.00    0.00      79         SymTab::SymTab(int) [169]
                0.00    0.00      79/89          SymTable::SymTable() [159]
-----------------------------------------------
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       2/79          main [1]
                0.00    0.00       3/79          SymTab::~SymTab() [375]
                0.00    0.00      72/79          sRoutDef::typecheck(SymTable*, SymTable*) [35]
[170]    0.0    0.00    0.00      79         SymTab::~SymTab() [170]
                0.00    0.00      79/89          SymTable::~SymTable() [160]
                0.00    0.00      50/50          SymTab::deltree(SymTable::entry*) [187]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [145]
[171]    0.0    0.00    0.00      78         sStmtList::object() const [171]
-----------------------------------------------
                0.00    0.00       4/76          sSubscript::sSubscript(sVar*, sExprList*) [346]
                0.00    0.00       4/76          sUnOp::sUnOp(sExpr*) [354]
                0.00    0.00       4/76          sListFunct::sListFunct(ObjType, sExprList*) [342]
                0.00    0.00      18/76          sBinOp::sBinOp(sExpr*, sExpr*) [276]
                0.00    0.00      46/76          sVar::sVar(std::string*) [191]
[172]    0.0    0.00    0.00      76         sExpr::sExpr() [172]
                0.00    0.00      76/521         sObject::sObject(unsigned int) [123]
                0.00    0.00      76/1498        tType::tType(BaseType) [109]
                0.00    0.00      76/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       3/75          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00      36/75          sRoutDef::~sRoutDef() [229]
                0.00    0.00      36/75          sRoutDef::typecheck(SymTable*, SymTable*) [35]
[173]    0.0    0.00    0.00      75         sObject::isExtern() const [173]
                0.00    0.00      75/177         sObject::isSet(ObjFlag) const [147]
-----------------------------------------------
                                  51             quSubString::quSubString(int, int, quState&) <cycle 5> [182]
                0.00    0.00       1/51          tValue::tValue(quState&, BaseType) [44]
                0.00    0.00       1/51          sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00      18/51          tValue::assign(tValue const&) [29]
[174]    0.0    0.00    0.00      71         quState::newclone() <cycle 5> [174]
                0.00    0.00      71/64874       quState::mapbits() const [75]
                                  51             quBaseState::newsubstring(int, int) <cycle 5> [153]
                                  20             quSubString::newsubstring(int, int) <cycle 5> [23]
-----------------------------------------------
                0.00    0.00       2/70          QuHeap::QuHeap(int, int) [30]
                0.00    0.00      68/70          operator~(bitvec const&) [176]
[175]    0.0    0.00    0.00      70         bitvec::qnot() [175]
-----------------------------------------------
                0.00    0.00       1/68          QuHeap::qualloc(int, BaseType) [43]
                0.00    0.00      30/68          opElementary::apply(quState&) const [9]
                0.00    0.00      37/68          quState::mapmask() const [227]
[176]    0.0    0.00    0.00      68         operator~(bitvec const&) [176]
                0.00    0.00      68/150629      bitvec::bitvec(bitvec const&) [72]
                0.00    0.00      68/70          bitvec::qnot() [175]
-----------------------------------------------
                0.00    0.00       3/65          sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       3/65          sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00      21/65          sConst::sConst(tValue const&) [39]
                0.00    0.00      38/65          sConst::typecheck(SymTable*, SymTable*) [267]
[177]    0.0    0.00    0.00      65         tValue::type() const [177]
                0.00    0.00      65/545         tType::tType(tType const&) [122]
-----------------------------------------------
                0.00    0.00       2/60          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       6/60          sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00      52/60          sVar::typecheck(SymTable*, SymTable*) [190]
[178]    0.0    0.00    0.00      60         sVar::id() const [178]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [211]
                0.00    0.00       2/58          sObject::isValueDef() const [129]
                0.00    0.00       3/58          sObject::isProcDef() const [293]
                0.00    0.00       3/58          sObject::isQuOpDef() const [253]
                0.00    0.00       4/58          sObject::isFunctDef() const [136]
                0.00    0.00       6/58          sObject::isDef() const [131]
                0.00    0.00       7/58          sObject::isQuFunDef() const [240]
                0.00    0.00      32/58          sObject::isRoutDef() const [145]
[179]    0.0    0.00    0.00      58         sProcDef::object() const [179]
-----------------------------------------------
                0.00    0.00       1/52          quBaseState::quBaseState(int, int) [31]
                0.00    0.00      51/52          quSubState::quSubState(int) [181]
[180]    0.0    0.00    0.00      52         quState::quState(int) [180]
-----------------------------------------------
                0.00    0.00      51/51          quSubString::quSubString(int, int, quState&) <cycle 5> [182]
[181]    0.0    0.00    0.00      51         quSubState::quSubState(int) [181]
                0.00    0.00      51/52          quState::quState(int) [180]
-----------------------------------------------
                                  51             quBaseState::newsubstring(int, int) <cycle 5> [153]
[182]    0.0    0.00    0.00      51         quSubString::quSubString(int, int, quState&) <cycle 5> [182]
                0.00    0.00      51/51          quSubState::quSubState(int) [181]
                                  51             quState::newclone() <cycle 5> [174]
-----------------------------------------------
                0.00    0.00       1/51          quBaseState::~quBaseState() [493]
                0.00    0.00      50/51          quSubState::~quSubState() [184]
[183]    0.0    0.00    0.00      51         quState::~quState() [183]
-----------------------------------------------
                0.00    0.00      50/50          quSubString::~quSubString() [186]
[184]    0.0    0.00    0.00      50         quSubState::~quSubState() [184]
                0.00    0.00      50/50          quBaseState::isbasestate() const [188]
                0.00    0.00      50/51          quState::~quState() [183]
-----------------------------------------------
                0.00    0.00      20/50          tValue::delpointer() [117]
                0.00    0.00      30/50          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[185]    0.0    0.00    0.00      50         quSubString::~quSubString() [185]
                0.00    0.00      50/50          quSubString::~quSubString() [186]
-----------------------------------------------
                0.00    0.00      50/50          quSubString::~quSubString() [185]
[186]    0.0    0.00    0.00      50         quSubString::~quSubString() [186]
                0.00    0.00      50/50          quSubState::~quSubState() [184]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [187]
                0.00    0.00      50/50          SymTab::~SymTab() [170]
[187]    0.0    0.00    0.00      50+276     SymTab::deltree(SymTable::entry*) [187]
                0.00    0.00     282/677         tValue::~tValue() [120]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [269]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [290]
                0.00    0.00       3/5           sConstDef::~sConstDef() [335]
                0.00    0.00       1/1           sProcDef::~sProcDef() [508]
                0.00    0.00       1/7           sVarDef::~sVarDef() [323]
                                 276             SymTab::deltree(SymTable::entry*) [187]
-----------------------------------------------
                0.00    0.00      50/50          quSubState::~quSubState() [184]
[188]    0.0    0.00    0.00      50         quBaseState::isbasestate() const [188]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [331]
                0.00    0.00       3/48          sObject::isInclude() const [211]
                0.00    0.00      16/48          sObject::isDef() const [131]
                0.00    0.00      26/48          sObject::isValueDef() const [129]
[189]    0.0    0.00    0.00      48         sConstDef::object() const [189]
-----------------------------------------------
                0.00    0.00       2/46          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       4/46          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       4/46          sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       4/46          sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       6/46          sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      12/46          sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      14/46          sCall::typecheck(SymTable*, SymTable*) [285]
[190]    0.0    0.00    0.00      46         sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00      52/60          sVar::id() const [178]
                0.00    0.00      46/378         sObject::isValueDef() const [129]
                0.00    0.00      46/380         sDef::type() const [127]
                0.00    0.00      46/113         sExpr::settype(tType const&) [152]
                0.00    0.00      36/143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [243]
                0.00    0.00       6/6           sObject::isConstDef() const [331]
                0.00    0.00       3/7           sObject::isGlobal() const [325]
-----------------------------------------------
                0.00    0.00      46/46          yyparse() [42]
[191]    0.0    0.00    0.00      46         sVar::sVar(std::string*) [191]
                0.00    0.00      46/76          sExpr::sExpr() [172]
-----------------------------------------------
                0.00    0.00       2/46          sFor::~sFor() <cycle 2> [399]
                0.00    0.00       4/46          sSubscript::~sSubscript() <cycle 1> [348]
                0.00    0.00       4/46          sUnOp::~sUnOp() [355]
                0.00    0.00       4/46          sVarDef::~sVarDef() [324]
                0.00    0.00      12/46          sBinOp::~sBinOp() <cycle 1> [277]
                0.00    0.00      20/46          sList<sExpr>::~sList() <cycle 1> [249]
[192]    0.0    0.00    0.00      46         sVar::~sVar() [192]
                0.00    0.00      46/46          sVar::~sVar() [193]
-----------------------------------------------
                0.00    0.00      46/46          sVar::~sVar() [192]
[193]    0.0    0.00    0.00      46         sVar::~sVar() [193]
                0.00    0.00      46/97          sExpr::~sExpr() [156]
-----------------------------------------------
                0.00    0.00       6/45          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      39/45          sCall::typecheck(SymTable*, SymTable*) [285]
[194]    0.0    0.00    0.00      45         sRoutDef::args() [194]
-----------------------------------------------
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [196]
[195]    0.0    0.00    0.00      45         std::list<sObject*, std::allocator<sObject*> >::end() const [195]
                0.00    0.00      45/90          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [158]
-----------------------------------------------
                0.00    0.00      45/45          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[196]    0.0    0.00    0.00      45         std::list<sObject*, std::allocator<sObject*> >::size() const [196]
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::begin() const [197]
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::end() const [195]
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [200]
-----------------------------------------------
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [196]
[197]    0.0    0.00    0.00      45         std::list<sObject*, std::allocator<sObject*> >::begin() const [197]
                0.00    0.00      45/90          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [158]
-----------------------------------------------
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [200]
[198]    0.0    0.00    0.00      45         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [198]
                0.00    0.00     835/835         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [115]
                0.00    0.00     790/790         std::_List_const_iterator<sObject*>::operator++() [116]
-----------------------------------------------
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [200]
[199]    0.0    0.00    0.00      45         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [199]
-----------------------------------------------
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [196]
[200]    0.0    0.00    0.00      45         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [200]
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [199]
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [198]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [203]
[201]    0.0    0.00    0.00      44         sList<sDef>::sList() [201]
                0.00    0.00      44/521         sObject::sObject(unsigned int) [123]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [205]
[202]    0.0    0.00    0.00      44         sList<sDef>::~sList() [202]
                0.00    0.00     263/263         sArgDef::~sArgDef() [141]
                0.00    0.00      44/521         sObject::~sObject() [124]
                0.00    0.00       6/7           sVarDef::~sVarDef() [323]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [42]
[203]    0.0    0.00    0.00      44         sDefList::sDefList() [203]
                0.00    0.00      44/44          sList<sDef>::sList() [201]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [229]
[204]    0.0    0.00    0.00      44         sDefList::~sDefList() [204]
                0.00    0.00      44/44          sDefList::~sDefList() [205]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [204]
[205]    0.0    0.00    0.00      44         sDefList::~sDefList() [205]
                0.00    0.00      44/44          sList<sDef>::~sList() [202]
-----------------------------------------------
                0.00    0.00       1/44          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [58]
                0.00    0.00      43/44          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [208]
[206]    0.0    0.00    0.00      44         operator new(unsigned long, void*) [206]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
[207]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [207]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
[208]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [208]
                0.00    0.00      43/44          operator new(unsigned long, void*) [206]
-----------------------------------------------
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [215]
[209]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [209]
-----------------------------------------------
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [214]
[210]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [210]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [212]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[211]    0.0    0.00    0.00      43         sObject::isInclude() const [211]
                0.00    0.00      19/379         sQuOpDef::object() const [128]
                0.00    0.00      16/369         sQuFunDef::object() const [132]
                0.00    0.00       3/18          sCall::object() const [282]
                0.00    0.00       3/48          sConstDef::object() const [189]
                0.00    0.00       1/91          sVarDef::object() const [157]
                0.00    0.00       1/58          sProcDef::object() const [179]
-----------------------------------------------
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [210]
[212]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [212]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::front() [218]
[213]    0.0    0.00    0.00      43         std::_List_iterator<sObject*>::operator*() const [213]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
[214]    0.0    0.00    0.00      43         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [214]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [210]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
[215]    0.0    0.00    0.00      43         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [215]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [209]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [220]
[216]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [214]
                0.00    0.00      43/86          sObject** std::__addressof<sObject*>(sObject*&) [168]
                0.00    0.00      43/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [163]
                0.00    0.00      43/86          std::allocator<sObject*>::~allocator() [166]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [208]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [222]
[217]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() [217]
                0.00    0.00      43/129         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [151]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[218]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::front() [218]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() [167]
                0.00    0.00      43/43          std::_List_iterator<sObject*>::operator*() const [213]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::pop_front() [221]
[219]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
                0.00    0.00      43/86          sObject** std::__addressof<sObject*>(sObject*&) [168]
                0.00    0.00      43/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [163]
                0.00    0.00      43/86          std::allocator<sObject*>::~allocator() [166]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [207]
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [215]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [222]
[220]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [220]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [216]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[221]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::pop_front() [221]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() [167]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [219]
-----------------------------------------------
                0.00    0.00      43/43          yyparse() [42]
[222]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [222]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() [217]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [220]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [298]
[223]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [223]
-----------------------------------------------
                0.00    0.00       3/40          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/40          sListFunct::sListFunct(ObjType, sExprList*) [342]
                0.00    0.00       4/40          sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       6/40          sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      23/40          sCall::typecheck(SymTable*, SymTable*) [285]
[224]    0.0    0.00    0.00      40         sList<sExpr>::next(void*&) const [224]
-----------------------------------------------
                0.00    0.00       3/39          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/39          sSubscript::sSubscript(sVar*, sExprList*) [346]
                0.00    0.00       4/39          sListFunct::sListFunct(ObjType, sExprList*) [342]
                0.00    0.00       4/39          sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       8/39          sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      16/39          sCall::typecheck(SymTable*, SymTable*) [285]
[225]    0.0    0.00    0.00      39         sList<sExpr>::first(void*&) const [225]
-----------------------------------------------
                0.00    0.00       2/37          termlist::termlist(int, int) [32]
                0.00    0.00       4/37          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [12]
                0.00    0.00      31/37          quBaseState::opbegin() [234]
[226]    0.0    0.00    0.00      37         termlist::clear() [226]
-----------------------------------------------
                0.00    0.00       1/37          QuHeap::qualloc(int, BaseType) [43]
                0.00    0.00       6/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      30/37          opElementary::apply(quState&) const [9]
[227]    0.0    0.00    0.00      37         quState::mapmask() const [227]
                0.00    0.00      74/240435      bitvec::~bitvec() [70]
                0.00    0.00      37/64874       quState::mapbits() const [75]
                0.00    0.00      37/89806       bitvec::bitvec(int, unsigned long) [74]
                0.00    0.00      37/68          operator~(bitvec const&) [176]
                0.00    0.00      37/43043       quSubString::unmap(bitvec const&) const [84]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [507]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [289]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [268]
[228]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228]
                0.00    0.00     144/178         sObject::setFlag(ObjFlag, int) [146]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [134]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [509]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [291]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [270]
[229]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [229]
                0.00    0.00      44/44          sDefList::~sDefList() [204]
                0.00    0.00      36/75          sObject::isExtern() const [173]
                0.00    0.00      36/312         sDef::~sDef() [135]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [280]
-----------------------------------------------
                0.00    0.00       3/34          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       3/34          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/34          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       8/34          sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00      16/34          sCall::typecheck(SymTable*, SymTable*) [285]
[230]    0.0    0.00    0.00      34         sObject::isCondDef() const [230]
                0.00    0.00      34/177         sObject::isSet(ObjFlag) const [147]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [145]
[231]    0.0    0.00    0.00      34         sDefList::object() const [231]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00      14/32          tType::isCond() const [297]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
[232]    0.0    0.00    0.00      32         tType::isQuCond() const [232]
                0.00    0.00      32/129         tType::isQuExpr() const [150]
-----------------------------------------------
                0.00    0.00       1/31          quBaseState::reset(bitvec const&) [63]
                0.00    0.00      30/31          quSubState::opend() [235]
[233]    0.0    0.00    0.00      31         quBaseState::opend() [233]
-----------------------------------------------
                0.00    0.00       1/31          quBaseState::reset(bitvec const&) [63]
                0.00    0.00      30/31          quSubState::opbegin() [236]
[234]    0.0    0.00    0.00      31         quBaseState::opbegin() [234]
                0.00    0.00      31/37          termlist::clear() [226]
-----------------------------------------------
                0.00    0.00      30/30          opElementary::apply(quState&) const [9]
[235]    0.0    0.00    0.00      30         quSubState::opend() [235]
                0.00    0.00      30/31          quBaseState::opend() [233]
-----------------------------------------------
                0.00    0.00      30/30          opElementary::apply(quState&) const [9]
[236]    0.0    0.00    0.00      30         quSubState::opbegin() [236]
                0.00    0.00      30/31          quBaseState::opbegin() [234]
-----------------------------------------------
                0.00    0.00      30/30          opElementary::apply(quState&) const [9]
[237]    0.0    0.00    0.00      30         quSubState::baseterms() const [237]
                0.00    0.00      30/30          quBaseState::baseterms() const [238]
-----------------------------------------------
                0.00    0.00      30/30          quSubState::baseterms() const [237]
[238]    0.0    0.00    0.00      30         quBaseState::baseterms() const [238]
                0.00    0.00      30/30          termlist::nterms() const [241]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [298]
[239]    0.0    0.00    0.00      30         tType::isNumber() const [239]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [35]
                0.00    0.00       9/30          sObject::isQuDef() const [266]
                0.00    0.00      13/30          sObject::inQuFunDef() const [292]
[240]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [240]
                0.00    0.00      13/369         sQuFunDef::object() const [132]
                0.00    0.00      10/379         sQuOpDef::object() const [128]
                0.00    0.00       7/58          sProcDef::object() const [179]
-----------------------------------------------
                0.00    0.00      30/30          quBaseState::baseterms() const [238]
[241]    0.0    0.00    0.00      30         termlist::nterms() const [241]
-----------------------------------------------
                0.00    0.00      29/29          yyparse() [42]
[242]    0.0    0.00    0.00      29         sList<sExpr>::append(sExpr*) [242]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [190]
[243]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [243]
                0.00    0.00      53/143         SymTab::getDef(std::string const&) const [149]
-----------------------------------------------
                0.00    0.00      27/27          sCall::typecheck(SymTable*, SymTable*) [285]
[244]    0.0    0.00    0.00      27         tType::isQuConst() const [244]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [41]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [306]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [284]
[245]    0.0    0.00    0.00      26         yy_load_buffer_state() [245]
-----------------------------------------------
                0.00    0.00       1/26          sExit::sExit(sExpr*) [499]
                0.00    0.00       2/26          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [397]
                0.00    0.00       7/26          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [320]
                0.00    0.00      16/26          sCall::sCall(std::string*, sExprList*, int) [286]
[246]    0.0    0.00    0.00      26         sStmt::sStmt(int) [246]
                0.00    0.00      26/521         sObject::sObject(unsigned int) [123]
                0.00    0.00      26/178         sObject::setFlag(ObjFlag, int) [146]
-----------------------------------------------
                0.00    0.00       1/26          sExit::~sExit() [501]
                0.00    0.00       2/26          sFor::~sFor() <cycle 2> [399]
                0.00    0.00       7/26          sIf::~sIf() <cycle 2> [322]
                0.00    0.00      16/26          sCall::~sCall() [288]
[247]    0.0    0.00    0.00      26         sStmt::~sStmt() [247]
                0.00    0.00      26/521         sObject::~sObject() [124]
-----------------------------------------------
                0.00    0.00      24/24          sExprList::sExprList() [250]
[248]    0.0    0.00    0.00      24         sList<sExpr>::sList() [248]
                0.00    0.00      24/521         sObject::sObject(unsigned int) [123]
-----------------------------------------------
                                  24             sExprList::~sExprList() <cycle 1> [252]
[249]    0.0    0.00    0.00      24         sList<sExpr>::~sList() <cycle 1> [249]
                0.00    0.00      24/521         sObject::~sObject() [124]
                0.00    0.00      20/46          sVar::~sVar() [192]
                                   4             sSubscript::~sSubscript() <cycle 1> [347]
                                   3             sMult::~sMult() <cycle 1> [328]
                                   2             sConcat::~sConcat() <cycle 1> [408]
-----------------------------------------------
                0.00    0.00      24/24          yyparse() [42]
[250]    0.0    0.00    0.00      24         sExprList::sExprList() [250]
                0.00    0.00      24/24          sList<sExpr>::sList() [248]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [348]
                                   4             sListFunct::~sListFunct() <cycle 1> [344]
                0.00    0.00      16/25          sCall::~sCall() [288]
[251]    0.0    0.00    0.00      24         sExprList::~sExprList() <cycle 1> [251]
                                  24             sExprList::~sExprList() <cycle 1> [252]
-----------------------------------------------
                                  24             sExprList::~sExprList() <cycle 1> [251]
[252]    0.0    0.00    0.00      24         sExprList::~sExprList() <cycle 1> [252]
                                  24             sList<sExpr>::~sList() <cycle 1> [249]
-----------------------------------------------
                0.00    0.00       4/24          sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      20/24          sObject::isQuDef() const [266]
[253]    0.0    0.00    0.00      24         sObject::isQuOpDef() const [253]
                0.00    0.00      11/379         sQuOpDef::object() const [128]
                0.00    0.00      10/369         sQuFunDef::object() const [132]
                0.00    0.00       3/58          sProcDef::object() const [179]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [42]
[254]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [254]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
[255]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [255]
-----------------------------------------------
                0.00    0.00      23/23          sCall::typecheck(SymTable*, SymTable*) [285]
[256]    0.0    0.00    0.00      23         tType::isConv(tType const&) const [256]
                0.00    0.00       2/129         tType::isQuExpr() const [150]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                0.00    0.00      14/23          tType::isCond() const [297]
[257]    0.0    0.00    0.00      23         tType::isBoolean() const [257]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [39]
[258]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [258]
                0.00    0.00      21/521         sObject::sObject(unsigned int) [123]
                0.00    0.00      21/1498        tType::tType(BaseType) [109]
                0.00    0.00      21/862         tType::operator=(tType const&) [114]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [501]
                0.00    0.00       1/21          sVarDef::~sVarDef() [324]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [399]
                0.00    0.00       5/21          sConstDef::~sConstDef() [336]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [277]
[259]    0.0    0.00    0.00      21         sConst::~sConst() [259]
                0.00    0.00      21/21          sConst::~sConst() [260]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [259]
[260]    0.0    0.00    0.00      21         sConst::~sConst() [260]
                0.00    0.00      21/97          sExpr::~sExpr() [156]
                0.00    0.00      21/677         tValue::~tValue() [120]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [145]
[261]    0.0    0.00    0.00      21         sIf::object() const [261]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       2/21          tValue::isInt() const [418]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       8/21          tType::isOrdered() const [317]
[262]    0.0    0.00    0.00      21         tType::isInt() const [262]
-----------------------------------------------
                0.00    0.00       5/21          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      16/21          sCall::typecheck(SymTable*, SymTable*) [285]
[263]    0.0    0.00    0.00      21         sObject::inFunctDef() const [263]
                0.00    0.00      21/175         sObject::def() const [148]
                0.00    0.00      17/296         sObject::isFunctDef() const [136]
-----------------------------------------------
                0.00    0.00      20/20          tValue::delpointer() [117]
[264]    0.0    0.00    0.00      20         quSubState::isbasestate() const [264]
-----------------------------------------------
                0.00    0.00       4/20          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00      16/20          sCall::typecheck(SymTable*, SymTable*) [285]
[265]    0.0    0.00    0.00      20         sObject::inQuDef() const [265]
                0.00    0.00      20/175         sObject::def() const [148]
                0.00    0.00      17/20          sObject::isQuDef() const [266]
-----------------------------------------------
                0.00    0.00       3/20          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/20          sObject::inQuDef() const [265]
[266]    0.0    0.00    0.00      20         sObject::isQuDef() const [266]
                0.00    0.00      20/24          sObject::isQuOpDef() const [253]
                0.00    0.00       9/30          sObject::isQuFunDef() const [240]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [50]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [498]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [298]
[267]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00      38/65          tValue::type() const [177]
                0.00    0.00      19/19          tType::isDefined() const [272]
                0.00    0.00      19/113         sExpr::settype(tType const&) [152]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [42]
[268]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [268]
                0.00    0.00      19/1498        tType::tType(BaseType) [109]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [187]
[269]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [269]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [270]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [269]
[270]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [270]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [229]
-----------------------------------------------
                0.00    0.00       3/19          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      16/19          sCall::typecheck(SymTable*, SymTable*) [285]
[271]    0.0    0.00    0.00      19         sCall::id() const [271]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [267]
[272]    0.0    0.00    0.00      19         tType::isDefined() const [272]
-----------------------------------------------
                0.00    0.00       3/19          ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       3/19          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      13/19          tValue::qustate() const [299]
[273]    0.0    0.00    0.00      19         tValue::isQuExpr() const [273]
                0.00    0.00      19/129         tType::isQuExpr() const [150]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [279]
[274]    0.0    0.00    0.00      18         sList<sStmt>::sList() [274]
                0.00    0.00      18/521         sObject::sObject(unsigned int) [123]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [281]
[275]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [275]
                0.00    0.00      18/521         sObject::~sObject() [124]
                0.00    0.00      13/16          sCall::~sCall() [287]
                0.00    0.00       1/1           sExit::~sExit() [500]
                                   7             sIf::~sIf() <cycle 2> [321]
                                   2             sFor::~sFor() <cycle 2> [398]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [494]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [400]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [407]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [376]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [350]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [327]
[276]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [276]
                0.00    0.00      18/76          sExpr::sExpr() [172]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [409]
                                   4             sLess::~sLess() <cycle 1> [352]
                                   6             sMult::~sMult() <cycle 1> [329]
                0.00    0.00       1/25          sOr::~sOr() [496]
                0.00    0.00       2/25          sSub::~sSub() [402]
                0.00    0.00       3/25          sEqual::~sEqual() [378]
[277]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [277]
                0.00    0.00      18/97          sExpr::~sExpr() [156]
                0.00    0.00      12/21          sConst::~sConst() [259]
                0.00    0.00      12/46          sVar::~sVar() [192]
                0.00    0.00       4/4           sLength::~sLength() [357]
                                   3             sMult::~sMult() <cycle 1> [328]
                                   3             sListFunct::~sListFunct() <cycle 1> [343]
                                   2             sLess::~sLess() <cycle 1> [351]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [35]
[278]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
                0.00    0.00      23/457         sObject::setParent(sObject*) [126]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [255]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [283]
                0.00    0.00      13/16          sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [498]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [42]
[279]    0.0    0.00    0.00      18         sStmtList::sStmtList() [279]
                0.00    0.00      18/18          sList<sStmt>::sList() [274]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [399]
                                   8             sIf::~sIf() <cycle 2> [322]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [229]
[280]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [280]
                                  18             sStmtList::~sStmtList() <cycle 2> [281]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [280]
[281]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [281]
                                  18             sList<sStmt>::~sList() <cycle 2> [275]
-----------------------------------------------
                0.00    0.00       3/18          sObject::isDef() const [131]
                0.00    0.00       3/18          sObject::isInclude() const [211]
                0.00    0.00       6/18          sObject::isRoutDef() const [145]
                0.00    0.00       6/18          sObject::isStmt() const [390]
[282]    0.0    0.00    0.00      18         sCall::object() const [282]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
[283]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [283]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [396]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [339]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [303]
[284]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [284]
                0.00    0.00      15/26          yy_load_buffer_state() [245]
-----------------------------------------------
                0.00    0.00       3/16          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/16          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
[285]    0.0    0.00    0.00      16         sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00      46/862         tType::operator=(tType const&) [114]
                0.00    0.00      41/380         sDef::type() const [127]
                0.00    0.00      39/45          sRoutDef::args() [194]
                0.00    0.00      32/1498        tType::tType(BaseType) [109]
                0.00    0.00      27/27          tType::isQuConst() const [244]
                0.00    0.00      23/457         sObject::setParent(sObject*) [126]
                0.00    0.00      23/100         sExpr::type() [154]
                0.00    0.00      23/23          tType::isConv(tType const&) const [256]
                0.00    0.00      23/129         tType::isQuExpr() const [150]
                0.00    0.00      23/40          sList<sExpr>::next(void*&) const [224]
                0.00    0.00      23/558         sList<sDef>::next(void*&) const [121]
                0.00    0.00      18/113         sExpr::settype(tType const&) [152]
                0.00    0.00      16/19          sCall::id() const [271]
                0.00    0.00      16/257         sObject::isRoutDef() const [145]
                0.00    0.00      16/296         sObject::isFunctDef() const [136]
                0.00    0.00      16/21          sObject::inFunctDef() const [263]
                0.00    0.00      16/20          sObject::inQuDef() const [265]
                0.00    0.00      16/34          sObject::isCondDef() const [230]
                0.00    0.00      16/16          sObject::inQuFunDef() const [292]
                0.00    0.00      16/39          sList<sExpr>::first(void*&) const [225]
                0.00    0.00      16/99          sList<sDef>::first(void*&) const [155]
                0.00    0.00      15/15          sObject::isSetRec(ObjFlag) [295]
                0.00    0.00      14/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [243]
                0.00    0.00      10/16          sObject::isProcDef() const [293]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       4/24          sObject::isQuOpDef() const [253]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       3/143         SymTab::getDef(std::string const&) const [149]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [42]
[286]    0.0    0.00    0.00      16         sCall::sCall(std::string*, sExprList*, int) [286]
                0.00    0.00      16/26          sStmt::sStmt(int) [246]
-----------------------------------------------
                0.00    0.00       3/16          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/16          sList<sStmt>::~sList() <cycle 2> [275]
[287]    0.0    0.00    0.00      16         sCall::~sCall() [287]
                0.00    0.00      16/16          sCall::~sCall() [288]
-----------------------------------------------
                0.00    0.00      16/16          sCall::~sCall() [287]
[288]    0.0    0.00    0.00      16         sCall::~sCall() [288]
                0.00    0.00      16/25          sExprList::~sExprList() <cycle 1> [251]
                0.00    0.00      16/26          sStmt::~sStmt() [247]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [42]
[289]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [289]
                0.00    0.00      16/1498        tType::tType(BaseType) [109]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [187]
[290]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [290]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [291]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [290]
[291]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [291]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [229]
-----------------------------------------------
                0.00    0.00      16/16          sCall::typecheck(SymTable*, SymTable*) [285]
[292]    0.0    0.00    0.00      16         sObject::inQuFunDef() const [292]
                0.00    0.00      16/175         sObject::def() const [148]
                0.00    0.00      13/30          sObject::isQuFunDef() const [240]
-----------------------------------------------
                0.00    0.00       3/16          sObject::isGlobal() const [325]
                0.00    0.00       3/16          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      10/16          sCall::typecheck(SymTable*, SymTable*) [285]
[293]    0.0    0.00    0.00      16         sObject::isProcDef() const [293]
                0.00    0.00       8/379         sQuOpDef::object() const [128]
                0.00    0.00       5/369         sQuFunDef::object() const [132]
                0.00    0.00       3/58          sProcDef::object() const [179]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [41]
[294]    0.0    0.00    0.00      15         tValue::tValue(long) [294]
                0.00    0.00      15/1498        tType::tType(BaseType) [109]
                0.00    0.00      15/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [295]
                0.00    0.00      15/15          sCall::typecheck(SymTable*, SymTable*) [285]
[295]    0.0    0.00    0.00      15+42      sObject::isSetRec(ObjFlag) [295]
                0.00    0.00      99/897         sObject::parent() const [113]
                0.00    0.00      57/177         sObject::isSet(ObjFlag) const [147]
                                  42             sObject::isSetRec(ObjFlag) [295]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [145]
[296]    0.0    0.00    0.00      15         sFor::object() const [296]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [298]
[297]    0.0    0.00    0.00      14         tType::isCond() const [297]
                0.00    0.00      14/32          tType::isQuCond() const [232]
                0.00    0.00      14/23          tType::isBoolean() const [257]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [285]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
[298]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      52/1498        tType::tType(BaseType) [109]
                0.00    0.00      36/457         sObject::setParent(sObject*) [126]
                0.00    0.00      36/100         sExpr::type() [154]
                0.00    0.00      36/862         tType::operator=(tType const&) [114]
                0.00    0.00      36/1084        tType::ord() const [111]
                0.00    0.00      30/30          tType::isNumber() const [239]
                0.00    0.00      26/129         tType::isQuExpr() const [150]
                0.00    0.00      25/41          tType::operator==(BaseType) const [223]
                0.00    0.00      18/113         sExpr::settype(tType const&) [152]
                0.00    0.00      14/14          tType::isCond() const [297]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00      12/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00       8/8           tType::isOrdered() const [317]
                0.00    0.00       6/9           sMult::object() const [311]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       4/4           sLess::object() const [362]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       3/3           sEqual::object() const [388]
                0.00    0.00       2/2           sSub::object() const [417]
                0.00    0.00       2/2           sConcat::object() const [420]
                0.00    0.00       2/23          tType::isBoolean() const [257]
                0.00    0.00       2/11          tType::operator==(tType const&) const [304]
                0.00    0.00       1/1           sOr::object() const [523]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [298]
-----------------------------------------------
                0.00    0.00       1/13          sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/13          ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       9/13          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[299]    0.0    0.00    0.00      13         tValue::qustate() const [299]
                0.00    0.00      13/19          tValue::isQuExpr() const [273]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [41]
[300]    0.0    0.00    0.00      12         yy_get_next_buffer() [300]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [306]
-----------------------------------------------
                0.00    0.00      12/12          std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [302]
[301]    0.0    0.00    0.00      12         std::complex<double>::operator*=(double) [301]
-----------------------------------------------
                0.00    0.00      12/12          opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
[302]    0.0    0.00    0.00      12         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [302]
                0.00    0.00      12/12          std::complex<double>::operator*=(double) [301]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [464]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [306]
[303]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [303]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [284]
-----------------------------------------------
                0.00    0.00       2/11          sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       3/11          tValue::conv(tType const&) const [57]
                0.00    0.00       3/11          sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
                0.00    0.00       3/11          sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
[304]    0.0    0.00    0.00      11         tType::operator==(tType const&) const [304]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [489]
                0.00    0.00      10/11          openqclfile(std::string) [340]
[305]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [305]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [396]
                0.00    0.00       4/10          yy_get_next_buffer() [300]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [339]
[306]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [306]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [303]
                0.00    0.00      10/26          yy_load_buffer_state() [245]
                0.00    0.00       1/1           yyensure_buffer_stack() [491]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [464]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [35]
[307]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [307]
                0.00    0.00      10/89          SymTable::SymTable() [159]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [35]
[308]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [308]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [309]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [308]
[309]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [309]
                0.00    0.00      10/89          SymTable::~SymTable() [160]
-----------------------------------------------
                0.00    0.00      10/10          QuHeap::qualloc(int, BaseType) [43]
[310]    0.0    0.00    0.00      10         bitvec::operator[](int) const [310]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [145]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [298]
[311]    0.0    0.00    0.00       9         sMult::object() const [311]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [41]
[312]    0.0    0.00    0.00       8         yy_get_previous_state() [312]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [467]
                0.00    0.00       7/8           yyparse() [42]
[313]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [313]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [134]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [341]
[314]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       8/39          sList<sExpr>::first(void*&) const [225]
                0.00    0.00       6/457         sObject::setParent(sObject*) [126]
                0.00    0.00       6/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00       6/40          sList<sExpr>::next(void*&) const [224]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [361]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [341]
[315]    0.0    0.00    0.00       8         sList<sExpr>::n() const [315]
-----------------------------------------------
                0.00    0.00       8/8           tValue::isError() const [318]
[316]    0.0    0.00    0.00       8         tType::isError() const [316]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [298]
[317]    0.0    0.00    0.00       8         tType::isOrdered() const [317]
                0.00    0.00       8/21          tType::isInt() const [262]
-----------------------------------------------
                0.00    0.00       2/8           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/8           sConstDef::define(SymTable*, SymTable*, QuHeap*) [48]
                0.00    0.00       3/8           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[318]    0.0    0.00    0.00       8         tValue::isError() const [318]
                0.00    0.00       8/8           tType::isError() const [316]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
[319]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                0.00    0.00      15/457         sObject::setParent(sObject*) [126]
                0.00    0.00      14/32          tType::isQuCond() const [232]
                0.00    0.00       7/23          tType::isBoolean() const [257]
                0.00    0.00       7/100         sExpr::type() [154]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [341]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [42]
[320]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [320]
                0.00    0.00       7/26          sStmt::sStmt(int) [246]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [275]
[321]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [321]
                                   7             sIf::~sIf() <cycle 2> [322]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [321]
[322]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [322]
                0.00    0.00       7/26          sStmt::~sStmt() [247]
                0.00    0.00       3/3           sEqual::~sEqual() [377]
                0.00    0.00       2/25          sLess::~sLess() <cycle 1> [351]
                0.00    0.00       1/25          sListFunct::~sListFunct() <cycle 1> [343]
                0.00    0.00       1/1           sOr::~sOr() [495]
                                   8             sStmtList::~sStmtList() <cycle 2> [280]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [187]
                0.00    0.00       6/7           sList<sDef>::~sList() [202]
[323]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [323]
                0.00    0.00       7/7           sVarDef::~sVarDef() [324]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [323]
[324]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [324]
                0.00    0.00       8/312         sDef::~sDef() [135]
                0.00    0.00       4/46          sVar::~sVar() [192]
                0.00    0.00       1/21          sConst::~sConst() [259]
-----------------------------------------------
                0.00    0.00       1/7           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
                0.00    0.00       3/7           sObject::isLocal() const [391]
                0.00    0.00       3/7           sVar::typecheck(SymTable*, SymTable*) [190]
[325]    0.0    0.00    0.00       7         sObject::isGlobal() const [325]
                0.00    0.00       7/175         sObject::def() const [148]
                0.00    0.00       3/16          sObject::isProcDef() const [293]
-----------------------------------------------
                0.00    0.00       6/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[326]    0.0    0.00    0.00       6         zero(bitvec const&) [326]
                0.00    0.00       6/6           bitvec::testzero() const [330]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [42]
[327]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [327]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [276]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [277]
                                   3             sList<sExpr>::~sList() <cycle 1> [249]
[328]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [328]
                                   6             sMult::~sMult() <cycle 1> [329]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [328]
[329]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [329]
                                   6             sBinOp::~sBinOp() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00       6/6           zero(bitvec const&) [326]
[330]    0.0    0.00    0.00       6         bitvec::testzero() const [330]
-----------------------------------------------
                0.00    0.00       6/6           sVar::typecheck(SymTable*, SymTable*) [190]
[331]    0.0    0.00    0.00       6         sObject::isConstDef() const [331]
                0.00    0.00       3/91          sVarDef::object() const [157]
                0.00    0.00       3/48          sConstDef::object() const [189]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [340]
[332]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [332]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [381]
[333]    0.0    0.00    0.00       5         sDef::settype(tType const&) [333]
                0.00    0.00       5/862         tType::operator=(tType const&) [114]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/5           yyparse() [42]
[334]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [334]
                0.00    0.00       5/1498        tType::tType(BaseType) [109]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [134]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [187]
[335]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [335]
                0.00    0.00       5/5           sConstDef::~sConstDef() [336]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [335]
[336]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [336]
                0.00    0.00       5/21          sConst::~sConst() [259]
                0.00    0.00       5/312         sDef::~sDef() [135]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
[337]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [337]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [340]
[338]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [337]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [46]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[339]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [339]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [284]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [306]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[340]    0.0    0.00    0.00       4         openqclfile(std::string) [340]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [305]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [332]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [319]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [298]
[341]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [341]
                0.00    0.00       8/1498        tType::tType(BaseType) [109]
                0.00    0.00       4/361         tValue::tValue() [133]
                0.00    0.00       4/457         sObject::setParent(sObject*) [126]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       4/8           sList<sExpr>::n() const [315]
                0.00    0.00       4/4           sListFunct::object() const [360]
                0.00    0.00       4/113         sExpr::settype(tType const&) [152]
                0.00    0.00       4/677         tValue::~tValue() [120]
                0.00    0.00       3/100         sExpr::type() [154]
                0.00    0.00       3/3           sObject::isLocal() const [391]
                0.00    0.00       2/21          tType::isInt() const [262]
                0.00    0.00       1/862         tType::operator=(tType const&) [114]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [42]
[342]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [342]
                0.00    0.00       4/76          sExpr::sExpr() [172]
                0.00    0.00       4/39          sList<sExpr>::first(void*&) const [225]
                0.00    0.00       4/40          sList<sExpr>::next(void*&) const [224]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [277]
                0.00    0.00       1/25          sIf::~sIf() <cycle 2> [322]
[343]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [343]
                                   4             sListFunct::~sListFunct() <cycle 1> [344]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [343]
[344]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [344]
                0.00    0.00       4/97          sExpr::~sExpr() [156]
                                   4             sExprList::~sExprList() <cycle 1> [251]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [285]
[345]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [345]
                0.00    0.00       8/457         sObject::setParent(sObject*) [126]
                0.00    0.00       8/100         sExpr::type() [154]
                0.00    0.00       8/129         tType::isQuExpr() const [150]
                0.00    0.00       8/1084        tType::ord() const [111]
                0.00    0.00       4/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       4/4           sSubscript::nargs() const [361]
                0.00    0.00       4/39          sList<sExpr>::first(void*&) const [225]
                0.00    0.00       4/21          tType::isInt() const [262]
                0.00    0.00       4/40          sList<sExpr>::next(void*&) const [224]
                0.00    0.00       4/32          tType::isQuCond() const [232]
                0.00    0.00       4/4           sExpr::basetype() [349]
                0.00    0.00       4/1498        tType::tType(BaseType) [109]
                0.00    0.00       4/113         sExpr::settype(tType const&) [152]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [42]
[346]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [346]
                0.00    0.00       4/76          sExpr::sExpr() [172]
                0.00    0.00       4/39          sList<sExpr>::first(void*&) const [225]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [249]
[347]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [347]
                                   4             sSubscript::~sSubscript() <cycle 1> [348]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [347]
[348]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [348]
                0.00    0.00       4/46          sVar::~sVar() [192]
                0.00    0.00       4/97          sExpr::~sExpr() [156]
                                   4             sExprList::~sExprList() <cycle 1> [251]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [345]
[349]    0.0    0.00    0.00       4         sExpr::basetype() [349]
                0.00    0.00       4/1045        tType::basetype() const [112]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [42]
[350]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [350]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [276]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [277]
                0.00    0.00       2/25          sIf::~sIf() <cycle 2> [322]
[351]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [351]
                                   4             sLess::~sLess() <cycle 1> [352]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [351]
[352]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [352]
                                   4             sBinOp::~sBinOp() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [298]
[353]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [353]
                0.00    0.00       4/457         sObject::setParent(sObject*) [126]
                0.00    0.00       4/46          sVar::typecheck(SymTable*, SymTable*) [190]
                0.00    0.00       4/100         sExpr::type() [154]
                0.00    0.00       4/4           sLength::object() const [363]
                0.00    0.00       4/129         tType::isQuExpr() const [150]
                0.00    0.00       4/1498        tType::tType(BaseType) [109]
                0.00    0.00       4/113         sExpr::settype(tType const&) [152]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [356]
[354]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [354]
                0.00    0.00       4/76          sExpr::sExpr() [172]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [358]
[355]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [355]
                0.00    0.00       4/46          sVar::~sVar() [192]
                0.00    0.00       4/97          sExpr::~sExpr() [156]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [42]
[356]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [356]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [354]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [277]
[357]    0.0    0.00    0.00       4         sLength::~sLength() [357]
                0.00    0.00       4/4           sLength::~sLength() [358]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [357]
[358]    0.0    0.00    0.00       4         sLength::~sLength() [358]
                0.00    0.00       4/4           sUnOp::~sUnOp() [355]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [425]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [424]
[359]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [359]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [341]
[360]    0.0    0.00    0.00       4         sListFunct::object() const [360]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [345]
[361]    0.0    0.00    0.00       4         sSubscript::nargs() const [361]
                0.00    0.00       4/8           sList<sExpr>::n() const [315]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [298]
[362]    0.0    0.00    0.00       4         sLess::object() const [362]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [353]
[363]    0.0    0.00    0.00       4         sLength::object() const [363]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [521]
[364]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [364]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [416]
[365]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [365]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [525]
[366]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [366]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[367]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [367]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [491]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [464]
[368]    0.0    0.00    0.00       3         yyalloc(unsigned long) [368]
-----------------------------------------------
                0.00    0.00       3/3           opElementary::opElementary(int) [371]
[369]    0.0    0.00    0.00       3         opOperator::opOperator(int) [369]
-----------------------------------------------
                0.00    0.00       3/3           opElementary::~opElementary() [372]
[370]    0.0    0.00    0.00       3         opOperator::~opOperator() [370]
-----------------------------------------------
                0.00    0.00       3/3           opMatrix::opMatrix(int) [379]
[371]    0.0    0.00    0.00       3         opElementary::opElementary(int) [371]
                0.00    0.00       3/3           opOperator::opOperator(int) [369]
-----------------------------------------------
                0.00    0.00       3/3           opMatrix::~opMatrix() [380]
[372]    0.0    0.00    0.00       3         opElementary::~opElementary() [372]
                0.00    0.00       3/3           opOperator::~opOperator() [370]
-----------------------------------------------
                0.00    0.00       3/3           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[373]    0.0    0.00    0.00       3         opBit::~opBit() [373]
                0.00    0.00       3/3           opBit::~opBit() [374]
-----------------------------------------------
                0.00    0.00       3/3           opBit::~opBit() [373]
[374]    0.0    0.00    0.00       3         opBit::~opBit() [374]
                0.00    0.00       3/3           opMatrix::~opMatrix() [380]
-----------------------------------------------
                0.00    0.00       3/3           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[375]    0.0    0.00    0.00       3         SymTab::~SymTab() [375]
                0.00    0.00       3/79          SymTab::~SymTab() [170]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [42]
[376]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [376]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [276]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [322]
[377]    0.0    0.00    0.00       3         sEqual::~sEqual() [377]
                0.00    0.00       3/3           sEqual::~sEqual() [378]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [377]
[378]    0.0    0.00    0.00       3         sEqual::~sEqual() [378]
                0.00    0.00       3/25          sBinOp::~sBinOp() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00       3/3           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [51]
[379]    0.0    0.00    0.00       3         opMatrix::opMatrix(int) [379]
                0.00    0.00       3/3           opElementary::opElementary(int) [371]
-----------------------------------------------
                0.00    0.00       3/3           opBit::~opBit() [374]
[380]    0.0    0.00    0.00       3         opMatrix::~opMatrix() [380]
                0.00    0.00      18/25135       term::~term() [88]
                0.00    0.00       3/3           opElementary::~opElementary() [372]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[381]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [381]
                0.00    0.00       6/175         sObject::def() const [148]
                0.00    0.00       6/100         sExpr::type() [154]
                0.00    0.00       3/457         sObject::setParent(sObject*) [126]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00       3/21585       sDef::id() const [89]
                0.00    0.00       3/143         SymTab::getDef(std::string const&) const [149]
                0.00    0.00       3/129         tType::isQuExpr() const [150]
                0.00    0.00       3/5           sDef::settype(tType const&) [333]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[382]    0.0    0.00    0.00       3         sStmt::isInv() const [382]
                0.00    0.00       3/177         sObject::isSet(ObjFlag) const [147]
-----------------------------------------------
                0.00    0.00       3/3           tValue::isExpr() const [389]
[383]    0.0    0.00    0.00       3         tType::isExpr() const [383]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[384]    0.0    0.00    0.00       3         QuHeap::cond() const [384]
                0.00    0.00       3/3           QuHeap::ncond() const [387]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[385]    0.0    0.00    0.00       3         QuHeap::cmask() const [385]
                0.00    0.00       3/64516       bitvec::length() const [77]
                0.00    0.00       3/89806       bitvec::bitvec(int, unsigned long) [74]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[386]    0.0    0.00    0.00       3         QuHeap::nBits() const [386]
-----------------------------------------------
                0.00    0.00       3/3           QuHeap::cond() const [384]
[387]    0.0    0.00    0.00       3         QuHeap::ncond() const [387]
                0.00    0.00       3/64516       bitvec::length() const [77]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [298]
[388]    0.0    0.00    0.00       3         sEqual::object() const [388]
-----------------------------------------------
                0.00    0.00       3/3           sVar::eval(SymTable*, SymTable*, QuHeap*) [47]
[389]    0.0    0.00    0.00       3         tValue::isExpr() const [389]
                0.00    0.00       3/3           tType::isExpr() const [383]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[390]    0.0    0.00    0.00       3         sObject::isStmt() const [390]
                0.00    0.00       6/18          sCall::object() const [282]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [341]
[391]    0.0    0.00    0.00       3         sObject::isLocal() const [391]
                0.00    0.00       3/7           sObject::isGlobal() const [325]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [35]
[392]    0.0    0.00    0.00       3         sObject::isBennet() const [392]
                0.00    0.00       3/177         sObject::isSet(ObjFlag) const [147]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [512]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [427]
[393]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [393]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [489]
[394]    0.0    0.00    0.00       2         irqOn() [394]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [32]
[395]    0.0    0.00    0.00       2         duallog(int) [395]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [46]
[396]    0.0    0.00    0.00       2         yyCleanUp() [396]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [306]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [284]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [42]
[397]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [397]
                0.00    0.00       2/26          sStmt::sStmt(int) [246]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [275]
[398]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [398]
                                   2             sFor::~sFor() <cycle 2> [399]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [398]
[399]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [399]
                0.00    0.00       2/46          sVar::~sVar() [192]
                0.00    0.00       2/21          sConst::~sConst() [259]
                0.00    0.00       2/2           sSub::~sSub() [401]
                0.00    0.00       2/26          sStmt::~sStmt() [247]
                                   2             sStmtList::~sStmtList() <cycle 2> [280]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [42]
[400]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [400]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [276]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [399]
[401]    0.0    0.00    0.00       2         sSub::~sSub() [401]
                0.00    0.00       2/2           sSub::~sSub() [402]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [401]
[402]    0.0    0.00    0.00       2         sSub::~sSub() [402]
                0.00    0.00       2/25          sBinOp::~sBinOp() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [42]
[403]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [403]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [41]
[404]    0.0    0.00    0.00       2         tValue::tValue(double) [404]
                0.00    0.00       2/1498        tType::tType(BaseType) [109]
                0.00    0.00       2/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [55]
[405]    0.0    0.00    0.00       2         tValue::tValue(int) [405]
                0.00    0.00       2/1498        tType::tType(BaseType) [109]
                0.00    0.00       2/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [42]
[406]    0.0    0.00    0.00       2         objlist::objlist() [406]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [435]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [42]
[407]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [407]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [276]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [249]
[408]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [408]
                                   2             sConcat::~sConcat() <cycle 1> [409]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [408]
[409]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [409]
                                   2             sBinOp::~sBinOp() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00       2/2           termlist::~termlist() [411]
[410]    0.0    0.00    0.00       2         termlist::dellist() [410]
                0.00    0.00    2048/25135       term::~term() [88]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::~quBaseState() [493]
[411]    0.0    0.00    0.00       2         termlist::~termlist() [411]
                0.00    0.00       2/2           termlist::dellist() [410]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [428]
[412]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [412]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [557]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [558]
[413]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [413]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [526]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [527]
[414]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [414]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [529]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [530]
[415]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [415]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [426]
[416]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [416]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [365]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [298]
[417]    0.0    0.00    0.00       2         sSub::object() const [417]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [419]
[418]    0.0    0.00    0.00       2         tValue::isInt() const [418]
                0.00    0.00       2/21          tType::isInt() const [262]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
[419]    0.0    0.00    0.00       2         tValue::toInt() const [419]
                0.00    0.00       2/2           tValue::isInt() const [418]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [298]
[420]    0.0    0.00    0.00       2         sConcat::object() const [420]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [519]
[421]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [421]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [520]
[422]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [422]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [427]
[423]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [423]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [426]
[424]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [424]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [359]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [426]
[425]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [425]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [359]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [503]
[426]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [426]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [424]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [425]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [416]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [525]
[427]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [427]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [393]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [423]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [429]
[428]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [428]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [412]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [431]
[429]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [429]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [428]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [431]
[430]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [430]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [435]
[431]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [431]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [430]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [429]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [439]
[432]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [432]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [544]
[433]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [433]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [510]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [436]
[434]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [434]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [406]
[435]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [435]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [431]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [437]
[436]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [436]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [434]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [438]
[437]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [437]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [436]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[438]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [438]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [437]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [440]
[439]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [439]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [432]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[440]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [440]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [439]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[441]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [441]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[442]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [442]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[443]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [443]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[444]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [444]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[445]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [445]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[446]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [446]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[447]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [447]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[448]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [448]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[449]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [449]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[450]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [450]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[451]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [451]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[452]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [452]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[453]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [453]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [466]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[454]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [454]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[455]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [455]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[456]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [456]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[457]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [457]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[458]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qc_check_txt [458]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[459]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [459]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[462]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [462]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[463]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [463]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [306]
[464]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [464]
                0.00    0.00       2/3           yyalloc(unsigned long) [368]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [303]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[465]    0.0    0.00    0.00       1         initialize_readline() [465]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [453]
[466]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [466]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [441]
[467]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [467]
                0.00    0.00       1/1498        tType::tType(BaseType) [109]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [313]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [447]
[468]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [446]
[469]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [450]
[470]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [463]
[471]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [462]
[472]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [449]
[473]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [451]
[474]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [442]
[475]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [445]
[476]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [444]
[477]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [461]
[478]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [459]
[479]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [460]
[480]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [448]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [443]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [457]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [452]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [458]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [456]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [455]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [454]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[489]    0.0    0.00    0.00       1         parseopt(int, char**) [489]
                0.00    0.00       2/2           irqOn() [394]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [305]
                0.00    0.00       1/1           qc_srand(long) [490]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [489]
[490]    0.0    0.00    0.00       1         qc_srand(long) [490]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [306]
[491]    0.0    0.00    0.00       1         yyensure_buffer_stack() [491]
                0.00    0.00       1/3           yyalloc(unsigned long) [368]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[492]    0.0    0.00    0.00       1         quBaseState::~quBaseState() [492]
                0.00    0.00       1/1           quBaseState::~quBaseState() [493]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::~quBaseState() [492]
[493]    0.0    0.00    0.00       1         quBaseState::~quBaseState() [493]
                0.00    0.00       2/2           termlist::~termlist() [411]
                0.00    0.00       1/51          quState::~quState() [183]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [42]
[494]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [494]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [276]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [322]
[495]    0.0    0.00    0.00       1         sOr::~sOr() [495]
                0.00    0.00       1/1           sOr::~sOr() [496]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [495]
[496]    0.0    0.00    0.00       1         sOr::~sOr() [496]
                0.00    0.00       1/25          sBinOp::~sBinOp() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [36]
[497]    0.0    0.00    0.00       1         sDef::basetype() [497]
                0.00    0.00       1/1045        tType::basetype() const [112]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [278]
[498]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [498]
                0.00    0.00       1/457         sObject::setParent(sObject*) [126]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [267]
                0.00    0.00       1/100         sExpr::type() [154]
                0.00    0.00       1/1           tType::isString() const [524]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [42]
[499]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [499]
                0.00    0.00       1/26          sStmt::sStmt(int) [246]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [275]
[500]    0.0    0.00    0.00       1         sExit::~sExit() [500]
                0.00    0.00       1/1           sExit::~sExit() [501]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [500]
[501]    0.0    0.00    0.00       1         sExit::~sExit() [501]
                0.00    0.00       1/21          sConst::~sConst() [259]
                0.00    0.00       1/26          sStmt::~sStmt() [247]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [30]
[502]    0.0    0.00    0.00       1         QuHeap::init() [502]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[503]    0.0    0.00    0.00       1         QuHeap::~QuHeap() [503]
                0.00    0.00       5/240435      bitvec::~bitvec() [70]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [426]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [531]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [528]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [559]
                0.00    0.00       1/1           quBaseState::~quBaseState() [492]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [43]
[504]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [504]
                0.00    0.00       1/1498        tType::tType(BaseType) [109]
                0.00    0.00       1/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [41]
[505]    0.0    0.00    0.00       1         tValue::tValue(char const*) [505]
                0.00    0.00       1/1498        tType::tType(BaseType) [109]
                0.00    0.00       1/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [41]
[506]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [506]
                0.00    0.00       1/1498        tType::tType(BaseType) [109]
                0.00    0.00       1/460         tType::operator=(BaseType) [125]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [42]
[507]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [507]
                0.00    0.00       1/1498        tType::tType(BaseType) [109]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [187]
[508]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [508]
                0.00    0.00       1/1           sProcDef::~sProcDef() [509]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [508]
[509]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [509]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [229]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [433]
[510]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [510]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [559]
[511]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [511]
                0.00    0.00       1/677         tValue::~tValue() [120]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [540]
[512]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [512]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [393]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [532]
[513]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [513]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [533]
[514]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [514]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [534]
[515]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [515]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [535]
[516]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [516]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [536]
[517]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [517]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [537]
[518]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [518]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [528]
[519]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [519]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [421]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [531]
[520]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [520]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [422]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[521]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [521]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [364]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [63]
[522]    0.0    0.00    0.00       1         quBaseState::basebits() const [522]
                0.00    0.00       1/64874       quState::mapbits() const [75]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [298]
[523]    0.0    0.00    0.00       1         sOr::object() const [523]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [498]
[524]    0.0    0.00    0.00       1         tType::isString() const [524]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[525]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [525]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [366]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [427]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [566]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [528]
[526]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [526]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [414]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [528]
[527]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [527]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [414]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[528]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [528]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [526]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [527]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [519]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [531]
[529]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [529]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [415]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [531]
[530]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [530]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [415]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[531]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [531]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [529]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [530]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [520]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [541]
[532]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [532]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [513]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [542]
[533]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [533]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [514]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [545]
[534]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [534]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [515]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [546]
[535]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [535]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [516]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [551]
[536]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [536]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [517]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [552]
[537]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [537]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [518]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [567]
[538]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [538]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [569]
[539]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [539]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[540]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [540]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [512]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [543]
[541]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [541]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [532]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [544]
[542]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [542]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [533]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [560]
[543]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [543]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [541]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [561]
[544]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [544]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [433]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [542]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [549]
[545]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [545]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [534]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [550]
[546]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [546]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [535]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [550]
[547]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [547]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
[548]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [548]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [562]
[549]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [549]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
[550]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [550]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [547]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [546]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [555]
[551]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [551]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [536]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [556]
[552]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [552]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [537]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [556]
[553]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [553]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
[554]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [554]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [564]
[555]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [555]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [551]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
[556]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [556]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [553]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [552]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [60]
[557]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [557]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [413]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [59]
[558]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [558]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [413]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[559]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [559]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [511]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [30]
[560]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [560]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [543]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[561]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [561]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [367]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [544]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [440]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [30]
[562]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [562]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [549]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[563]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [548]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [550]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [568]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [30]
[564]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [564]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [555]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [503]
[565]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [554]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [570]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [556]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [525]
[566]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [566]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [568]
[567]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [567]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [538]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [563]
[568]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [568]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [567]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [570]
[569]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [569]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [539]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [565]
[570]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [570]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [569]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [441] _GLOBAL__sub_I_CONDDEF (syntax.cc) [175] bitvec::qnot() [139] SymTab::getRef(std::string const&, ObjType*) const
 [442] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [18] bitvec::setlen(int) [56] SymTab::getVal(std::string const&, ObjType*) const
 [443] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [81] bitvec::setbits(int, bitvec const&) [130] SymTab::getentry(SymTable::entry*, std::string const&) const
 [444] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [82] bitvec::setbits(int, int, unsigned long) [77] bitvec::length() const
 [445] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [74] bitvec::bitvec(int, unsigned long) [100] bitvec::testeq(bitvec const&) const
 [446] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [72] bitvec::bitvec(bitvec const&) [97] bitvec::getbits(int, int) const
 [447] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [70] bitvec::~bitvec() [98] bitvec::getword() const
 [448] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [91] bitvec::operator&=(bitvec const&) [330] bitvec::testzero() const
 [449] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [15] bitvec::operator=(bitvec const&) [19] bitvec::hashfunct() const
 [450] _GLOBAL__sub_I_isErrorReported (error.cc) [85] bitvec::operator|=(bitvec const&) [310] bitvec::operator[](int) const
 [451] _GLOBAL__sub_I_isStateModified (quheap.cc) [298] sBinOp::typecheck(SymTable*, SymTable*) [388] sEqual::object() const
 [452] _GLOBAL__sub_I_main (qcl.cc) [276] sBinOp::sBinOp(sExpr*, sExpr*) [118] tValue::ord() const
 [453] _GLOBAL__sub_I_n_object (types.cc) [277] sBinOp::~sBinOp() [57] tValue::conv(tType const&) const
 [454] _GLOBAL__sub_I_noperators (operator.cc) [53] sConst::eval(SymTable*, SymTable*, QuHeap*) [177] tValue::type() const
 [455] _GLOBAL__sub_I_nstates (qustates.cc) [267] sConst::typecheck(SymTable*, SymTable*) [418] tValue::isInt() const
 [456] _GLOBAL__sub_I_nterms (terms.cc) [39] sConst::sConst(tValue const&) [419] tValue::toInt() const
 [457] _GLOBAL__sub_I_plotfile (plot.cc) [259] sConst::~sConst() [389] tValue::isExpr() const
 [458] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [260] sConst::~sConst() [318] tValue::isError() const
 [459] _GLOBAL__sub_I_qcl_options (options.cc) [376] sEqual::sEqual(sExpr*, sExpr*) [299] tValue::qustate() const
 [460] _GLOBAL__sub_I_shell_depth (debug.cc) [377] sEqual::~sEqual() [119] tValue::basetype() const
 [461] _GLOBAL__sub_I_yyObjList (parse.cc) [378] sEqual::~sEqual() [273] tValue::isQuExpr() const
 [462] _GLOBAL__sub_I_yydebug (yacc.cc) [117] tValue::delpointer() [75] quState::mapbits() const
 [463] _GLOBAL__sub_I_yyleng (qcl.lex) [29] tValue::assign(tValue const&) [227] quState::mapmask() const
 [339] yyScanFile(_IO_FILE*) [504] tValue::tValue(quState*, BaseType) [110] sArgDef::object() const
 [340] openqclfile(std::string) [505] tValue::tValue(char const*) [420] sConcat::object() const
 [284] yy_flush_buffer(yy_buffer_state*) [44] tValue::tValue(quState&, BaseType) [363] sLength::object() const
 [464] yy_create_buffer(_IO_FILE*, int) [33] tValue::tValue(tValue const&) [263] sObject::inFunctDef() const
 [465] initialize_readline() [404] tValue::tValue(double) [292] sObject::inQuFunDef() const
 [466] __static_initialization_and_destruction_0(int, int) (types.cc) [405] tValue::tValue(int) [331] sObject::isConstDef() const
 [467] __static_initialization_and_destruction_0(int, int) (syntax.cc) [294] tValue::tValue(long) [136] sObject::isFunctDef() const
 [468] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [506] tValue::tValue(std::complex<double> const&) [240] sObject::isQuFunDef() const
 [469] __static_initialization_and_destruction_0(int, int) (symbols.cc) [133] tValue::tValue() [129] sObject::isValueDef() const
 [470] __static_initialization_and_destruction_0(int, int) (error.cc) [120] tValue::~tValue() [148] sObject::def() const
 [471] __static_initialization_and_destruction_0(int, int) (qcl.lex) [37] tValue::operator=(tValue const&) [131] sObject::isDef() const
 [472] __static_initialization_and_destruction_0(int, int) (yacc.cc) [406] objlist::objlist() [147] sObject::isSet(ObjFlag) const
 [473] __static_initialization_and_destruction_0(int, int) (print.cc) [174] quState::newclone() [390] sObject::isStmt() const
 [474] __static_initialization_and_destruction_0(int, int) (quheap.cc) [180] quState::quState(int) [113] sObject::parent() const
 [475] __static_initialization_and_destruction_0(int, int) (extern.cc) [183] quState::~quState() [265] sObject::inQuDef() const
 [476] __static_initialization_and_destruction_0(int, int) (eval.cc) [140] sArgDef::sArgDef(tType const&, std::string*) [391] sObject::isLocal() const
 [477] __static_initialization_and_destruction_0(int, int) (exec.cc) [141] sArgDef::~sArgDef() [266] sObject::isQuDef() const
 [478] __static_initialization_and_destruction_0(int, int) (parse.cc) [142] sArgDef::~sArgDef() [392] sObject::isBennet() const
 [479] __static_initialization_and_destruction_0(int, int) (options.cc) [407] sConcat::sConcat(sExpr*, sExpr*) [173] sObject::isExtern() const
 [480] __static_initialization_and_destruction_0(int, int) (debug.cc) [408] sConcat::~sConcat() [325] sObject::isGlobal() const
 [481] __static_initialization_and_destruction_0(int, int) (cond.cc) [409] sConcat::~sConcat() [230] sObject::isCondDef() const
 [482] __static_initialization_and_destruction_0(int, int) (dump.cc) [356] sLength::sLength(sExpr*) [211] sObject::isInclude() const
 [483] __static_initialization_and_destruction_0(int, int) (plot.cc) [357] sLength::~sLength() [293] sObject::isProcDef() const
 [484] __static_initialization_and_destruction_0(int, int) (qcl.cc) [358] sLength::~sLength() [253] sObject::isQuOpDef() const
 [485] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [146] sObject::setFlag(ObjFlag, int) [145] sObject::isRoutDef() const
 [486] __static_initialization_and_destruction_0(int, int) (terms.cc) [295] sObject::isSetRec(ObjFlag) [157] sVarDef::object() const
 [487] __static_initialization_and_destruction_0(int, int) (qustates.cc) [126] sObject::setParent(sObject*) [10] opMatrix::addterms(terminfo const&) const
 [488] __static_initialization_and_destruction_0(int, int) (operator.cc) [143] sObject::typecheck(SymTable*, SymTable*) [231] sDefList::object() const
 [326] zero(bitvec const&)   [123] sObject::sObject(unsigned int) [179] sProcDef::object() const
 [394] irqOn()               [124] sObject::~sObject()   [128] sQuOpDef::object() const
  [41] yylex()                [36] sVarDef::define(SymTable*, SymTable*, QuHeap*) [16] termlist::hashfunct1(bitvec const&) const
 [395] duallog(int)           [50] sVarDef::typecheck(SymTable*, SymTable*) [62] termlist::hashfunct2(bitvec const&) const
   [5] ext_bit(sRoutDef const*, SymTable const*, int) [313] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [241] termlist::nterms() const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [323] sVarDef::~sVarDef() [99] termlist::operator[](int) const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [324] sVarDef::~sVarDef() [393] __gnu_cxx::new_allocator<tValue>::max_size() const
 [368] yyalloc(unsigned long) [159] SymTable::SymTable() [212] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  [42] yyparse()             [160] SymTable::~SymTable() [364] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  [45] parseobj()            [379] opMatrix::opMatrix(int) [365] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [489] parseopt(int, char**) [380] opMatrix::~opMatrix() [421] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [490] qc_srand(long)         [52] sDefList::typecheck(SymTable*, SymTable*) [422] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  [46] chksyntax(_IO_FILE*)  [203] sDefList::sDefList()  [189] sConstDef::object() const
 [396] yyCleanUp()           [204] sDefList::~sDefList() [132] sQuFunDef::object() const
 [306] yyrestart(_IO_FILE*)  [205] sDefList::~sDefList() [171] sStmtList::object() const
 [303] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [507] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [163] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [300] yy_get_next_buffer() (lex.cc) [508] sProcDef::~sProcDef() [164] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [245] yy_load_buffer_state() (lex.cc) [509] sProcDef::~sProcDef() [423] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [312] yy_get_previous_state() (lex.cc) [268] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [213] std::_List_iterator<sObject*>::operator*() const
 [491] yyensure_buffer_stack() (lex.cc) [269] sQuOpDef::~sQuOpDef() [115] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [307] SymTabComb::SymTabComb(SymTable*, SymTable*) [270] sQuOpDef::~sQuOpDef() [195] std::list<sObject*, std::allocator<sObject*> >::end() const
 [308] SymTabComb::~SymTabComb() [194] sRoutDef::args()  [196] std::list<sObject*, std::allocator<sObject*> >::size() const
 [309] SymTabComb::~SymTabComb() [38] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [197] std::list<sObject*, std::allocator<sObject*> >::begin() const
 [369] opOperator::opOperator(int) [8] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [525] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [370] opOperator::~opOperator() [35] sRoutDef::typecheck(SymTable*, SymTable*) [424] std::vector<tValue, std::allocator<tValue> >::end() const
  [14] quSubState::opadd(bitvec const&, std::complex<double> const&) [228] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [366] std::vector<tValue, std::allocator<tValue> >::size() const
 [235] quSubState::opend()   [229] sRoutDef::~sRoutDef() [425] std::vector<tValue, std::allocator<tValue> >::begin() const
 [236] quSubState::opbegin()  [28] terminfo::terminfo(terminfo const&) [426] std::vector<tValue, std::allocator<tValue> >::empty() const
 [181] quSubState::quSubState(int) [49] terminfo::terminfo() [427] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [184] quSubState::~quSubState() [90] terminfo::~terminfo() [526] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [341] sListFunct::typecheck(SymTable*, SymTable*) [108] termlist::add(term const&) [527] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [342] sListFunct::sListFunct(ObjType, sExprList*) [12] termlist::add(bitvec const&, std::complex<double> const&) [528] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [343] sListFunct::~sListFunct() [226] termlist::clear() [529] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [344] sListFunct::~sListFunct() [410] termlist::dellist() [530] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [345] sSubscript::typecheck(SymTable*, SymTable*) [24] termlist::newlist() [531] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [346] sSubscript::sSubscript(sVar*, sExprList*) [32] termlist::termlist(int, int) [78] std::complex<double>::imag() const
 [347] sSubscript::~sSubscript() [411] termlist::~termlist() [79] std::complex<double>::real() const
 [348] sSubscript::~sSubscript() [510] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [532] std::allocator<tValue>::allocator()
 [153] quBaseState::newsubstring(int, int) [511] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [533] std::allocator<tValue>::~allocator()
  [13] quBaseState::opadd(bitvec const&, std::complex<double> const&) [512] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [534] std::allocator<QuHeap::centry>::allocator()
 [233] quBaseState::opend()   [58] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [535] std::allocator<QuHeap::centry>::~allocator()
  [63] quBaseState::reset(bitvec const&) [513] __gnu_cxx::new_allocator<tValue>::new_allocator() [536] std::allocator<QuHeap::quentry>::allocator()
 [234] quBaseState::opbegin() [514] __gnu_cxx::new_allocator<tValue>::~new_allocator() [537] std::allocator<QuHeap::quentry>::~allocator()
  [31] quBaseState::quBaseState(int, int) [515] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [165] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
 [492] quBaseState::~quBaseState() [516] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [166] std::allocator<sObject*>::~allocator()
 [493] quBaseState::~quBaseState() [517] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [428] std::allocator<std::_List_node<sObject*> >::allocator()
  [23] quSubString::newsubstring(int, int) [518] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [429] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [182] quSubString::quSubString(int, int, quState&) [207] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [214] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [185] quSubString::~quSubString() [208] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [215] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [186] quSubString::~quSubString() [161] __gnu_cxx::new_allocator<sObject*>::new_allocator() [430] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [371] opElementary::opElementary(int) [162] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [431] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [372] opElementary::~opElementary() [209] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [107] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [319] sIf::typecheck(SymTable*, SymTable*) [210] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [432] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [320] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [412] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [538] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [321] sIf::~sIf()           [413] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [539] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [322] sIf::~sIf()           [359] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [540] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [494] sOr::sOr(sExpr*, sExpr*) [414] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [541] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [495] sOr::~sOr()           [415] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [542] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [496] sOr::~sOr()           [416] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [433] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [333] sDef::settype(tType const&) [519] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [367] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [497] sDef::basetype()      [520] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [543] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [134] sDef::sDef(tType const&, std::string*) [521] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [544] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [135] sDef::~sDef()          [48] sConstDef::define(SymTable*, SymTable*, QuHeap*) [545] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  [55] sFor::typecheck(SymTable*, SymTable*) [381] sConstDef::typecheck(SymTable*, SymTable*) [546] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [397] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [334] sConstDef::sConstDef(std::string*, sExpr*) [547] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [398] sFor::~sFor()         [335] sConstDef::~sConstDef() [548] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [399] sFor::~sFor()         [336] sConstDef::~sConstDef() [549] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [400] sSub::sSub(sExpr*, sExpr*) [314] sExprList::typecheck(SymTable*, SymTable*) [550] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [401] sSub::~sSub()         [250] sExprList::sExprList() [551] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [402] sSub::~sSub()         [251] sExprList::~sExprList() [552] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  [47] sVar::eval(SymTable*, SymTable*, QuHeap*) [252] sExprList::~sExprList() [553] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [190] sVar::typecheck(SymTable*, SymTable*) [289] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [554] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [191] sVar::sVar(std::string*) [290] sQuFunDef::~sQuFunDef() [555] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [192] sVar::~sVar()         [291] sQuFunDef::~sQuFunDef() [556] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
 [193] sVar::~sVar()         [278] sStmtList::typecheck(SymTable*, SymTable*) [151] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  [61] term::set(bitvec const&, std::complex<double> const&) [279] sStmtList::sStmtList() [158] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [20] term::setampl(std::complex<double> const&) [280] sStmtList::~sStmtList() [116] std::_List_const_iterator<sObject*>::operator++()
  [25] term::setvect(bitvec const&) [281] sStmtList::~sStmtList() [434] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [22] term::term()          [243] SymTabComb::getDef(std::string const&) const [216] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [26] term::term(term const&) [264] quSubState::isbasestate() const [217] std::list<sObject*, std::allocator<sObject*> >::end()
  [88] term::~term()          [93] quSubState::baseterm(int) const [167] std::list<sObject*, std::allocator<sObject*> >::begin()
  [27] term::operator=(term const&) [237] quSubState::baseterms() const [218] std::list<sObject*, std::allocator<sObject*> >::front()
  [51] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [360] sListFunct::object() const [219] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
 [373] opBit::~opBit()       [361] sSubscript::nargs() const [220] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [374] opBit::~opBit()       [188] quBaseState::isbasestate() const [221] std::list<sObject*, std::allocator<sObject*> >::pop_front()
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [94] quBaseState::map(bitvec const&) const [222] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [285] sCall::typecheck(SymTable*, SymTable*) [83] quBaseState::unmap(bitvec const&) const [435] std::list<sObject*, std::allocator<sObject*> >::list()
 [286] sCall::sCall(std::string*, sExprList*, int) [522] quBaseState::basebits() const [59] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [287] sCall::~sCall()        [95] quBaseState::baseterm(int) const [557] std::vector<tValue, std::allocator<tValue> >::end()
 [288] sCall::~sCall()       [238] quBaseState::baseterms() const [558] std::vector<tValue, std::allocator<tValue> >::begin()
 [498] sExit::typecheck(SymTable*, SymTable*) [96] quSubString::map(bitvec const&) const [559] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [499] sExit::sExit(sExpr*)   [84] quSubString::unmap(bitvec const&) const [60] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [500] sExit::~sExit()        [76] quSubString::mapoffs() const [560] std::vector<tValue, std::allocator<tValue> >::vector()
 [501] sExit::~sExit()         [9] opElementary::apply(quState&) const [561] std::vector<tValue, std::allocator<tValue> >::~vector()
 [154] sExpr::type()         [261] sIf::object() const   [562] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [152] sExpr::settype(tType const&) [523] sOr::object() const [563] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [349] sExpr::basetype()      [89] sDef::id() const      [564] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [258] sExpr::sExpr(tType const&) [127] sDef::type() const [565] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [172] sExpr::sExpr()        [296] sFor::object() const   [80] std::complex<double>::complex(double, double)
 [156] sExpr::~sExpr()       [417] sSub::object() const  [301] std::complex<double>::operator*=(double)
 [350] sLess::sLess(sExpr*, sExpr*) [178] sVar::id() const [86] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [351] sLess::~sLess()        [73] term::ampl() const    [102] std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
 [352] sLess::~sLess()        [71] term::vect() const    [198] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [138] sList<sDef>::append(sDef*) [271] sCall::id() const [168] sObject** std::__addressof<sObject*>(sObject*&)
 [201] sList<sDef>::sList()  [282] sCall::object() const [436] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [202] sList<sDef>::~sList() [362] sLess::object() const [199] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [242] sList<sExpr>::append(sExpr*) [121] sList<sDef>::next(void*&) const [437] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [248] sList<sExpr>::sList() [155] sList<sDef>::first(void*&) const [438] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [249] sList<sExpr>::~sList() [315] sList<sExpr>::n() const [566] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [254] sList<sStmt>::append(sStmt*) [224] sList<sExpr>::next(void*&) const [439] void std::_Destroy<tValue*>(tValue*, tValue*)
 [274] sList<sStmt>::sList() [225] sList<sExpr>::first(void*&) const [440] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [275] sList<sStmt>::~sList() [255] sList<sStmt>::next(void*&) const [567] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [327] sMult::sMult(sExpr*, sExpr*) [283] sList<sStmt>::first(void*&) const [568] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [328] sMult::~sMult()       [311] sMult::object() const [569] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [329] sMult::~sMult()       [382] sStmt::isInv() const  [570] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [246] sStmt::sStmt(int)     [111] tType::ord() const    [200] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [247] sStmt::~sStmt()       [262] tType::isInt() const  [105] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [353] sUnOp::typecheck(SymTable*, SymTable*) [297] tType::isCond() const [337] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [354] sUnOp::sUnOp(sExpr*)  [256] tType::isConv(tType const&) const [104] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [355] sUnOp::~sUnOp()       [383] tType::isExpr() const [106] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [109] tType::tType(BaseType) [316] tType::isError() const [302] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
 [403] tType::tType(BaseType, int) [144] tType::isQuReg() const [21] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [122] tType::tType(tType const&) [112] tType::basetype() const [338] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [125] tType::operator=(BaseType) [239] tType::isNumber() const [305] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [114] tType::operator=(tType const&) [232] tType::isQuCond() const [332] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [6] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [150] tType::isQuExpr() const [103] std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
 [502] QuHeap::init()        [524] tType::isString() const [92] operator&(bitvec const&, bitvec const&)
  [40] QuHeap::addReg(quState*) [257] tType::isBoolean() const [176] operator~(bitvec const&)
  [43] QuHeap::qualloc(int, BaseType) [272] tType::isDefined() const [101] operator==(bitvec const&, bitvec const&)
   [7] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [317] tType::isOrdered() const [206] operator new(unsigned long, void*)
  [30] QuHeap::QuHeap(int, int) [244] tType::isQuConst() const [87] operator|(bitvec const&, bitvec const&)
 [503] QuHeap::~QuHeap()     [223] tType::operator==(BaseType) const [64] <cycle 1>
  [34] SymTab::put(sDef*, tValue const&) [304] tType::operator==(tType const&) const [65] <cycle 2>
 [187] SymTab::deltree(SymTable::entry*) [384] QuHeap::cond() const [54] <cycle 3>
 [137] SymTab::putentry(SymTable::entry*, SymTable::entry*) [385] QuHeap::cmask() const [11] <cycle 4>
 [169] SymTab::SymTab(int)   [386] QuHeap::nBits() const  [17] <cycle 5>
 [375] SymTab::~SymTab()     [387] QuHeap::ncond() const
 [170] SymTab::~SymTab()     [149] SymTab::getDef(std::string const&) const
