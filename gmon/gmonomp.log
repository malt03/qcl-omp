Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  9.68      0.51     0.51  3037491     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  8.35      0.95     0.44   558406     0.00     0.00  opMatrix::addterms(terminfo const&) const
  4.93      1.21     0.26  3911138     0.00     0.00  term::~term()
  4.55      1.45     0.24       46     0.01     0.01  termlist::clear()
  3.80      1.65     0.20       20     0.01     0.01  terminfo::terminfo()
  3.61      1.84     0.19  5454770     0.00     0.00  bitvec::setlen(int)
  3.23      2.01     0.17  1257690     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  3.04      2.17     0.16  3042721     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  2.85      2.32     0.15  5732742     0.00     0.00  bitvec::bitvec(int, unsigned long)
  2.85      2.47     0.15  3066266     0.00     0.00  term::setampl(std::complex<double> const&)
  2.66      2.61     0.14 10737213     0.00     0.00  bitvec::~bitvec()
  2.66      2.75     0.14  4352133     0.00     0.00  std::complex<double>::complex(double, double)
  2.47      2.88     0.13  5398789     0.00     0.00  bitvec::operator=(bitvec const&)
  2.28      3.00     0.12        4     0.03     1.00  _GLOBAL__sub_I_noperators
  1.90      3.10     0.10  4742654     0.00     0.00  bitvec::bitvec(bitvec const&)
  1.90      3.20     0.10   560205     0.00     0.00  quSubString::map(bitvec const&) const
  1.90      3.30     0.10                             bitvec::testless(bitvec const&) const
  1.80      3.40     0.10  1296963     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  1.71      3.49     0.09  1308614     0.00     0.00  quSubString::unmap(bitvec const&) const
  1.71      3.58     0.09  4516309     0.00     0.00  term::ampl() const
  1.61      3.66     0.09   571302     0.00     0.00  quBaseState::map(bitvec const&) const
  1.52      3.74     0.08   668258     0.00     0.00  term::term(term const&)
  1.52      3.82     0.08   568455     0.00     0.00  operator&(bitvec const&, bitvec const&)
  1.23      3.89     0.07  1290296     0.00     0.00  std::complex<double>::real() const
  1.14      3.95     0.06  3626216     0.00     0.00  term::setvect(bitvec const&)
  1.14      4.01     0.06  3114505     0.00     0.00  bitvec::hashfunct() const
  1.14      4.07     0.06       20     0.00     0.01  quSubState::opbegin()
  1.14      4.13     0.06       20     0.00     0.00  quBaseState::baseterms() const
  1.14      4.19     0.06       20     0.00     0.00  bitvec::operator[](int) const
  0.95      4.24     0.05  8064922     0.00     0.00  term::vect() const
  0.95      4.29     0.05  1905782     0.00     0.00  quState::mapbits() const
  0.95      4.34     0.05   716886     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.95      4.39     0.05        1     0.05     0.05  _GLOBAL__sub_I_qc_check_txt
  0.95      4.44     0.05       30     0.00     0.00  quSubString::newsubstring(int, int)
  0.95      4.49     0.05                             std::pow(double, int)
  0.85      4.53     0.05  1369247     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  0.85      4.58     0.05                             std::complex<double>::real()
  0.76      4.62     0.04  1385011     0.00     0.00  operator|(bitvec const&, bitvec const&)
  0.76      4.66     0.04   551029     0.00     0.00  termlist::operator[](int) const
  0.76      4.70     0.04       31     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.66      4.73     0.04  1347001     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.57      4.76     0.03  3145242     0.00     0.00  term::term()
  0.57      4.79     0.03       23     0.00     0.01  termlist::newlist()
  0.57      4.82     0.03                             bitvec::operator=(unsigned long)
  0.57      4.85     0.03                             opMatrix::~opMatrix()
  0.47      4.88     0.03                             std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.38      4.90     0.02  2179036     0.00     0.00  bitvec::length() const
  0.38      4.92     0.02  1895045     0.00     0.00  quSubString::mapoffs() const
  0.38      4.94     0.02  1572352     0.00     0.00  termlist::add(term const&)
  0.38      4.96     0.02  1444153     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.38      4.98     0.02  1423231     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  0.38      5.00     0.02  1406909     0.00     0.00  bitvec::setbits(int, bitvec const&)
  0.38      5.02     0.02  1288536     0.00     0.00  std::complex<double>::imag() const
  0.38      5.04     0.02   534230     0.00     0.00  term::operator=(term const&)
  0.38      5.06     0.02       32     0.00     0.00  quState::quState(int)
  0.38      5.08     0.02       21     0.00     0.00  quBaseState::opend()
  0.38      5.10     0.02       20     0.00     0.00  quSubState::baseterms() const
  0.38      5.12     0.02                             termlist::operator=(termlist const&)
  0.38      5.14     0.02                             termlist::nbits() const
  0.28      5.15     0.02                             bitvec::setbit(int, int)
  0.19      5.16     0.01  1416905     0.00     0.00  bitvec::operator|=(bitvec const&)
  0.19      5.17     0.01   564373     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.19      5.18     0.01   525941     0.00     0.00  quSubState::baseterm(int) const
  0.19      5.19     0.01    99365     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.19      5.20     0.01      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.19      5.21     0.01       44     0.00     0.00  operator~(bitvec const&)
  0.19      5.22     0.01       21     0.00     0.01  quBaseState::opbegin()
  0.19      5.23     0.01        2     0.01     0.07  termlist::dellist()
  0.19      5.24     0.01        1     0.01     0.01  _GLOBAL__sub_I_nterms
  0.19      5.25     0.01                             term::nbits() const
  0.19      5.26     0.01                             bitvec::getword(int, int) const
  0.19      5.27     0.01                             std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      5.27     0.00   789785     0.00     0.00  terminfo::~terminfo()
  0.00      5.27     0.00   591604     0.00     0.00  bitvec::getword() const
  0.00      5.27     0.00   562855     0.00     0.00  bitvec::getbits(int, int) const
  0.00      5.27     0.00   525387     0.00     0.00  quBaseState::baseterm(int) const
  0.00      5.27     0.00    98419     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.00      5.27     0.00    96973     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.00      5.27     0.00    21427     0.00     0.00  sDef::id() const
  0.00      5.27     0.00     6456     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      5.27     0.00     4125     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      5.27     0.00     3876     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      5.27     0.00     2906     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      5.27     0.00     2338     0.00     0.00  yylex()
  0.00      5.27     0.00     1478     0.00     0.00  tType::tType(BaseType)
  0.00      5.27     0.00     1104     0.00     0.00  sArgDef::object() const
  0.00      5.27     0.00     1052     0.00     0.00  tType::ord() const
  0.00      5.27     0.00     1013     0.00     0.00  tType::basetype() const
  0.00      5.27     0.00      881     0.00     0.00  sObject::parent() const
  0.00      5.27     0.00      842     0.00     0.00  tType::operator=(tType const&)
  0.00      5.27     0.00      826     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      5.27     0.00      783     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      5.27     0.00      692     0.00     0.00  tValue::delpointer()
  0.00      5.27     0.00      692     0.00     0.00  tValue::ord() const
  0.00      5.27     0.00      692     0.00     0.00  tValue::basetype() const
  0.00      5.27     0.00      663     0.00     0.00  tValue::~tValue()
  0.00      5.27     0.00      554     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      5.27     0.00      531     0.00     0.00  tType::tType(tType const&)
  0.00      5.27     0.00      515     0.00     0.00  sObject::sObject(unsigned int)
  0.00      5.27     0.00      515     0.00     0.00  sObject::~sObject()
  0.00      5.27     0.00      455     0.00     0.00  sObject::setParent(sObject*)
  0.00      5.27     0.00      450     0.00     0.00  tType::operator=(BaseType)
  0.00      5.27     0.00      372     0.00     0.00  sDef::type() const
  0.00      5.27     0.00      370     0.00     0.00  sObject::isValueDef() const
  0.00      5.27     0.00      369     0.00     0.00  sQuOpDef::object() const
  0.00      5.27     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      5.27     0.00      365     0.00     0.00  sObject::isDef() const
  0.00      5.27     0.00      362     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      5.27     0.00      353     0.00     0.00  tValue::tValue()
  0.00      5.27     0.00      324     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      5.27     0.00      316     0.00     0.00  tValue::assign(tValue const&)
  0.00      5.27     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      5.27     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      5.27     0.00      294     0.00     0.00  sObject::isFunctDef() const
  0.00      5.27     0.00      287     0.00     0.00  tValue::tValue(tValue const&)
  0.00      5.27     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      5.27     0.00      264     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      5.27     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      5.27     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      5.27     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      5.27     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      5.27     0.00      253     0.00     0.00  sObject::isRoutDef() const
  0.00      5.27     0.00      176     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      5.27     0.00      167     0.00     0.00  sObject::def() const
  0.00      5.27     0.00      165     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      5.27     0.00      135     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      5.27     0.00      123     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      5.27     0.00      115     0.00     0.00  tType::isQuExpr() const
  0.00      5.27     0.00      109     0.00     0.00  sExpr::settype(tType const&)
  0.00      5.27     0.00       96     0.00     0.00  sExpr::type()
  0.00      5.27     0.00       95     0.00     0.00  sExpr::~sExpr()
  0.00      5.27     0.00       95     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      5.27     0.00       87     0.00     0.00  SymTable::SymTable()
  0.00      5.27     0.00       87     0.00     0.00  SymTable::~SymTable()
  0.00      5.27     0.00       86     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      5.27     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      5.27     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      5.27     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      5.27     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      5.27     0.00       82     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      5.27     0.00       82     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      5.27     0.00       82     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      5.27     0.00       82     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      5.27     0.00       79     0.00     0.00  sVarDef::object() const
  0.00      5.27     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      5.27     0.00       77     0.00     0.00  SymTab::SymTab(int)
  0.00      5.27     0.00       77     0.00     0.00  SymTab::~SymTab()
  0.00      5.27     0.00       74     0.00     0.00  sExpr::sExpr()
  0.00      5.27     0.00       73     0.00     0.00  sObject::isExtern() const
  0.00      5.27     0.00       63     0.00     0.00  tValue::type() const
  0.00      5.27     0.00       62     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      5.27     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      5.27     0.00       52     0.00     0.00  sVar::id() const
  0.00      5.27     0.00       48     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      5.27     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      5.27     0.00       46     0.00     0.00  bitvec::qnot()
  0.00      5.27     0.00       44     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       44     0.00     0.00  sVar::sVar(std::string*)
  0.00      5.27     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      5.27     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      5.27     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      5.27     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      5.27     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      5.27     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      5.27     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      5.27     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      5.27     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      5.27     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      5.27     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      5.27     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      5.27     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      5.27     0.00       42     0.00     0.00  operator new(unsigned long, void*)
  0.00      5.27     0.00       41     0.00     0.00  quState::newclone()
  0.00      5.27     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      5.27     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      5.27     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      5.27     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      5.27     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      5.27     0.00       41     0.00     0.00  sObject::isInclude() const
  0.00      5.27     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      5.27     0.00       41     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      5.27     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      5.27     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      5.27     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      5.27     0.00       37     0.00     0.00  sRoutDef::args()
  0.00      5.27     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      5.27     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      5.27     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      5.27     0.00       36     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      5.27     0.00       35     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      5.27     0.00       34     0.00     0.00  sDefList::object() const
  0.00      5.27     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      5.27     0.00       31     0.00     0.00  quSubState::quSubState(int)
  0.00      5.27     0.00       31     0.00     0.00  quState::~quState()
  0.00      5.27     0.00       30     0.00     0.00  quSubState::~quSubState()
  0.00      5.27     0.00       30     0.00     0.00  quSubString::~quSubString()
  0.00      5.27     0.00       30     0.00     0.00  quSubString::~quSubString()
  0.00      5.27     0.00       30     0.00     0.00  quBaseState::isbasestate() const
  0.00      5.27     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      5.27     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      5.27     0.00       29     0.00     0.00  tValue::operator=(tValue const&)
  0.00      5.27     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      5.27     0.00       28     0.00     0.00  sObject::isCondDef() const
  0.00      5.27     0.00       27     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      5.27     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      5.27     0.00       25     0.00     0.00  tType::isQuConst() const
  0.00      5.27     0.00       24     0.00     0.00  sStmt::sStmt(int)
  0.00      5.27     0.00       24     0.00     0.00  sStmt::~sStmt()
  0.00      5.27     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      5.27     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      5.27     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      5.27     0.00       23     0.00     0.00  quState::mapmask() const
  0.00      5.27     0.00       22     0.00     0.00  sList<sExpr>::sList()
  0.00      5.27     0.00       22     0.00     0.00  sList<sExpr>::~sList()
  0.00      5.27     0.00       22     0.00     0.00  sExprList::sExprList()
  0.00      5.27     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      5.27     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      5.27     0.00       22     0.00     0.00  sObject::isQuOpDef() const
  0.00      5.27     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      5.27     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      5.27     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      5.27     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      5.27     0.00       21     0.00     0.00  sIf::object() const
  0.00      5.27     0.00       21     0.00     0.00  tType::isInt() const
  0.00      5.27     0.00       21     0.00     0.00  tType::isConv(tType const&) const
  0.00      5.27     0.00       20     0.00     0.00  quSubState::opend()
  0.00      5.27     0.00       20     0.00     0.17  opElementary::apply(quState&) const
  0.00      5.27     0.00       20     0.00     0.00  termlist::nterms() const
  0.00      5.27     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      5.27     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      5.27     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      5.27     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      5.27     0.00       19     0.00     0.00  sObject::inFunctDef() const
  0.00      5.27     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      5.27     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      5.27     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      5.27     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      5.27     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      5.27     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      5.27     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      5.27     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      5.27     0.00       18     0.00     0.00  sObject::inQuDef() const
  0.00      5.27     0.00       18     0.00     0.00  sObject::isQuDef() const
  0.00      5.27     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      5.27     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      5.27     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      5.27     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      5.27     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      5.27     0.00       15     0.00     0.00  sFor::object() const
  0.00      5.27     0.00       15     0.00     0.00  sCall::id() const
  0.00      5.27     0.00       14     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       14     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      5.27     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      5.27     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      5.27     0.00       14     0.00     0.00  tType::isCond() const
  0.00      5.27     0.00       14     0.00     0.00  sObject::inQuFunDef() const
  0.00      5.27     0.00       14     0.00     0.00  sObject::isProcDef() const
  0.00      5.27     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00       13     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      5.27     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      5.27     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      5.27     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      5.27     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      5.27     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      5.27     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      5.27     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      5.27     0.00       10     0.00     0.00  quSubState::isbasestate() const
  0.00      5.27     0.00        9     0.00     0.00  sMult::object() const
  0.00      5.27     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      5.27     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      5.27     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        8     0.00     0.00  sCall::object() const
  0.00      5.27     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      5.27     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      5.27     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      5.27     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      5.27     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      5.27     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      5.27     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      5.27     0.00        7     0.00     0.00  tType::operator==(tType const&) const
  0.00      5.27     0.00        7     0.00     0.00  tValue::isQuExpr() const
  0.00      5.27     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      5.27     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      5.27     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      5.27     0.00        6     0.00     0.00  tType::isError() const
  0.00      5.27     0.00        6     0.00     0.00  tValue::isError() const
  0.00      5.27     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      5.27     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      5.27     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      5.27     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      5.27     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      5.27     0.00        5     0.00     0.00  tValue::qustate() const
  0.00      5.27     0.00        5     0.00     0.00  sObject::isGlobal() const
  0.00      5.27     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      5.27     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      5.27     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      5.27     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      5.27     0.00        4     0.00     0.00  yyparse()
  0.00      5.27     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      5.27     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      5.27     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      5.27     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      5.27     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      5.27     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      5.27     0.00        4     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      5.27     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      5.27     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      5.27     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      5.27     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      5.27     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      5.27     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      5.27     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      5.27     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      5.27     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      5.27     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      5.27     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      5.27     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      5.27     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      5.27     0.00        4     0.00     0.00  sLess::object() const
  0.00      5.27     0.00        4     0.00     0.00  sLength::object() const
  0.00      5.27     0.00        4     0.00     0.00  sObject::isConstDef() const
  0.00      5.27     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      5.27     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      5.27     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      5.27     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      5.27     0.00        4     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      5.27     0.00        4     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      5.27     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      5.27     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      5.27     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      5.27     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      5.27     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      5.27     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        3     0.00     0.00  sEqual::object() const
  0.00      5.27     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      5.27     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      5.27     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      5.27     0.00        2     0.00     0.00  zero(bitvec const&)
  0.00      5.27     0.00        2     0.00     0.00  irqOn()
  0.00      5.27     0.00        2     0.00     0.00  duallog(int)
  0.00      5.27     0.00        2     0.00     1.83  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      5.27     0.00        2     0.00     1.83  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      5.27     0.00        2     0.00     0.00  parseobj()
  0.00      5.27     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      5.27     0.00        2     0.00     0.00  yyCleanUp()
  0.00      5.27     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      5.27     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      5.27     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      5.27     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      5.27     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      5.27     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      5.27     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      5.27     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      5.27     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      5.27     0.00        2     0.00     0.00  objlist::objlist()
  0.00      5.27     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      5.27     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      5.27     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      5.27     0.00        2     0.00     0.02  termlist::termlist(int, int)
  0.00      5.27     0.00        2     0.00     0.07  termlist::~termlist()
  0.00      5.27     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      5.27     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      5.27     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      5.27     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      5.27     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      5.27     0.00        2     0.00     0.00  sSub::object() const
  0.00      5.27     0.00        2     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      5.27     0.00        2     0.00     0.00  bitvec::testzero() const
  0.00      5.27     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      5.27     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      5.27     0.00        2     0.00     0.00  sConcat::object() const
  0.00      5.27     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      5.27     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      5.27     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      5.27     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      5.27     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      5.27     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      5.27     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      5.27     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      5.27     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      5.27     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      5.27     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      5.27     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      5.27     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      5.27     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      5.27     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      5.27     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      5.27     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      5.27     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      5.27     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      5.27     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      5.27     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      5.27     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      5.27     0.00        1     0.00     0.00  initialize_readline()
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      5.27     0.00        1     0.00     3.56  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      5.27     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      5.27     0.00        1     0.00     0.00  qc_srand(long)
  0.00      5.27     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      5.27     0.00        1     0.00     0.00  opOperator::opOperator(int)
  0.00      5.27     0.00        1     0.00     0.00  opOperator::~opOperator()
  0.00      5.27     0.00        1     0.00     0.01  quBaseState::reset(bitvec const&)
  0.00      5.27     0.00        1     0.00     0.04  quBaseState::quBaseState(int, int)
  0.00      5.27     0.00        1     0.00     0.13  quBaseState::~quBaseState()
  0.00      5.27     0.00        1     0.00     0.13  quBaseState::~quBaseState()
  0.00      5.27     0.00        1     0.00     0.00  opElementary::opElementary(int)
  0.00      5.27     0.00        1     0.00     0.00  opElementary::~opElementary()
  0.00      5.27     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      5.27     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      5.27     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      5.27     0.00        1     0.00     0.00  sDef::basetype()
  0.00      5.27     0.00        1     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      5.27     0.00        1     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      5.27     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      5.27     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      5.27     0.00        1     0.00     3.56  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      5.27     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      5.27     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      5.27     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      5.27     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      5.27     0.00        1     0.00     3.56  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      5.27     0.00        1     0.00     0.00  QuHeap::init()
  0.00      5.27     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      5.27     0.00        1     0.00     0.06  QuHeap::qualloc(int, BaseType)
  0.00      5.27     0.00        1     0.00     3.56  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      5.27     0.00        1     0.00     0.04  QuHeap::QuHeap(int, int)
  0.00      5.27     0.00        1     0.00     0.13  QuHeap::~QuHeap()
  0.00      5.27     0.00        1     0.00     0.00  SymTab::~SymTab()
  0.00      5.27     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      5.27     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      5.27     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      5.27     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      5.27     0.00        1     0.00     0.07  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      5.27     0.00        1     0.00     0.00  opMatrix::opMatrix(int)
  0.00      5.27     0.00        1     0.00     0.00  opMatrix::~opMatrix()
  0.00      5.27     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      5.27     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      5.27     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      5.27     0.00        1     0.00     3.56  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      5.27     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      5.27     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      5.27     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      5.27     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      5.27     0.00        1     0.00     0.00  sOr::object() const
  0.00      5.27     0.00        1     0.00     0.00  sStmt::isInv() const
  0.00      5.27     0.00        1     0.00     0.00  tType::isExpr() const
  0.00      5.27     0.00        1     0.00     0.00  tType::isString() const
  0.00      5.27     0.00        1     0.00     0.00  QuHeap::cond() const
  0.00      5.27     0.00        1     0.00     0.00  QuHeap::cmask() const
  0.00      5.27     0.00        1     0.00     0.00  QuHeap::nBits() const
  0.00      5.27     0.00        1     0.00     0.00  QuHeap::ncond() const
  0.00      5.27     0.00        1     0.00     0.00  tValue::conv(tType const&) const
  0.00      5.27     0.00        1     0.00     0.00  tValue::isExpr() const
  0.00      5.27     0.00        1     0.00     0.00  sObject::isStmt() const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      5.27     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      5.27     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      5.27     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      5.27     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      5.27     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      5.27     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      5.27     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      5.27     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      5.27     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      5.27     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.19% of 5.27 seconds

index % time    self  children    called     name
                0.03    0.97       1/4           __libc_csu_init [16]
                0.09    2.92       3/4           opElementary::apply(quState&) const [10]
[1]     76.1    0.12    3.89       4         _GLOBAL__sub_I_noperators [1]
                0.44    2.59  558406/558406      opMatrix::addterms(terminfo const&) const [11]
                0.10    0.14  560205/560205      quSubString::map(bitvec const&) const [23]
                0.05    0.19  716886/716886      terminfo::terminfo(terminfo const&) [25]
                0.08    0.02  568454/568455      operator&(bitvec const&, bitvec const&) [44]
                0.00    0.07  789765/789785      terminfo::~terminfo() [52]
                0.02    0.05  534230/534230      term::operator=(term const&) [53]
                0.01    0.04  525941/525941      quSubState::baseterm(int) const [65]
                0.01    0.03  574727/3626216     term::setvect(bitvec const&) [21]
                0.01    0.02  542793/5398789     bitvec::operator=(bitvec const&) [19]
                0.01    0.00 1082199/10737213     bitvec::~bitvec() [35]
                0.01    0.00 1119388/8064922     term::vect() const [63]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                                                 <spontaneous>
[2]     72.9    0.00    3.84                 main [2]
                0.00    3.67       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.13       1/1           QuHeap::~QuHeap() [37]
                0.00    0.04       1/1           QuHeap::QuHeap(int, int) [73]
                0.00    0.00       2/77          SymTab::SymTab(int) [210]
                0.00    0.00       2/77          SymTab::~SymTab() [211]
                0.00    0.00       1/1           initialize_readline() [469]
                0.00    0.00       1/1           parseopt(int, char**) [493]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [359]
-----------------------------------------------
                0.00    3.67       2/2           main [2]
[3]     69.6    0.00    3.67       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    3.67       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [116]
                0.00    0.00       4/4           openqclfile(std::string) [361]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [360]
-----------------------------------------------
                0.00    3.67       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     69.6    0.00    3.67       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
                0.00    3.56       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.07       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.03      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [106]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       2/2           parseobj() [115]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [230]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [248]
                0.00    0.00      41/41          sObject::isInclude() const [241]
                0.00    0.00      41/365         sObject::isDef() const [173]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [251]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       1/14          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       1/1           sObject::isStmt() const [535]
                0.00    0.00       1/14          sCall::~sCall() [316]
-----------------------------------------------
                0.00    3.56       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[5]     67.6    0.00    3.56       1         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    3.56       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [7]
                0.00    0.00       2/23          quState::mapmask() const [105]
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00       1/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       1/1           tValue::conv(tType const&) const [125]
                0.00    0.00       1/568455      operator&(bitvec const&, bitvec const&) [44]
                0.00    0.00       5/10737213     bitvec::~bitvec() [35]
                0.00    0.00       1/1           QuHeap::cmask() const [135]
                0.00    0.00       1/1905782     quState::mapbits() const [64]
                0.00    0.00       1/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00       1/1           QuHeap::cond() const [137]
                0.00    0.00       1/1416905     bitvec::operator|=(bitvec const&) [95]
                0.00    0.00       3/663         tValue::~tValue() [162]
                0.00    0.00       3/5           tValue::qustate() const [356]
                0.00    0.00       2/37          sRoutDef::args() [253]
                0.00    0.00       2/2           zero(bitvec const&) [401]
                0.00    0.00       1/1           QuHeap::nBits() const [533]
                0.00    0.00       1/353         tValue::tValue() [175]
                0.00    0.00       1/15          sCall::id() const [313]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00       1/14          sObject::isProcDef() const [320]
                0.00    0.00       1/18          sObject::isQuDef() const [306]
                0.00    0.00       1/77          SymTab::SymTab(int) [210]
                0.00    0.00       1/35          sList<sExpr>::first(void*&) const [257]
                0.00    0.00       1/95          sList<sDef>::first(void*&) const [196]
                0.00    0.00       1/372         sDef::type() const [169]
                0.00    0.00       1/6           tValue::isError() const [350]
                0.00    0.00       1/7           tValue::isQuExpr() const [345]
                0.00    0.00       1/36          sList<sExpr>::next(void*&) const [256]
                0.00    0.00       1/554         sList<sDef>::next(void*&) const [163]
                0.00    0.00       1/28          sObject::isCondDef() const [268]
                0.00    0.00       1/1           sStmt::isInv() const [530]
-----------------------------------------------
                0.00    3.56       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [9]
[6]     67.5    0.00    3.56       1         ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    3.49      20/20          opElementary::apply(quState&) const [10]
                0.06    0.01      20/31          quSubString::newsubstring(int, int) <cycle 5> [67]
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
                0.00    0.00      21/1905782     quState::mapbits() const [64]
                0.00    0.00       1/1           opBit::~opBit() [131]
                0.00    0.00       6/4352133     std::complex<double>::complex(double, double) [36]
                0.00    0.00      20/30          quSubString::~quSubString() [262]
                0.00    0.00       2/21427       sDef::id() const [146]
                0.00    0.00       1/264         SymTab::getRef(std::string const&, ObjType*) const [180]
                0.00    0.00       1/7           tValue::isQuExpr() const [345]
                0.00    0.00       1/5           tValue::qustate() const [356]
-----------------------------------------------
                0.00    3.56       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[7]     67.5    0.00    3.56       1         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [7]
                0.00    3.56       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [8]
                0.00    0.00       1/28          sObject::isCondDef() const [268]
-----------------------------------------------
                0.00    3.56       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [7]
[8]     67.5    0.00    3.56       1         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [8]
                0.00    3.56       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [9]
                0.00    0.00       1/1           SymTab::~SymTab() [509]
-----------------------------------------------
                0.00    3.56       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [8]
[9]     67.5    0.00    3.56       1         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [9]
                0.00    3.56       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    0.00       1/353         tValue::tValue() [175]
                0.00    0.00       1/73          sObject::isExtern() const [213]
                0.00    0.00       1/663         tValue::~tValue() [162]
-----------------------------------------------
                0.00    3.49      20/20          ext_bit(sRoutDef const*, SymTable const*, int) [6]
[10]    66.2    0.00    3.49      20         opElementary::apply(quState&) const [10]
                0.09    2.92       3/4           _GLOBAL__sub_I_noperators [1]
                0.20    0.00      20/20          terminfo::terminfo() [28]
                0.06    0.11      20/20          quSubState::opbegin() [31]
                0.02    0.06      20/20          quSubState::baseterms() const [50]
                0.00    0.02      20/20          quSubState::opend() [91]
                0.00    0.00      20/23          quState::mapmask() const [105]
                0.00    0.00      20/44          operator~(bitvec const&) [94]
                0.00    0.00      20/789785      terminfo::~terminfo() [52]
                0.00    0.00      20/5398789     bitvec::operator=(bitvec const&) [19]
                0.00    0.00      60/10737213     bitvec::~bitvec() [35]
                0.00    0.00      20/1905782     quState::mapbits() const [64]
                0.00    0.00      20/5732742     bitvec::bitvec(int, unsigned long) [33]
-----------------------------------------------
                0.44    2.59  558406/558406      _GLOBAL__sub_I_noperators [1]
[11]    57.4    0.44    2.59  558406         opMatrix::addterms(terminfo const&) const [11]
                0.02    1.67 1423231/1423231     quSubState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.17    0.18 1257690/1257690     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [17]
                0.09    0.23 1308591/1308614     quSubString::unmap(bitvec const&) const [18]
                0.04    0.04 1385011/1385011     operator|(bitvec const&, bitvec const&) [49]
                0.04    0.00 3107276/10737213     bitvec::~bitvec() [35]
                0.04    0.00 1848121/4516309     term::ampl() const [48]
                0.03    0.00 4083914/8064922     term::vect() const [63]
                0.02    0.00 2179033/2179036     bitvec::length() const [83]
                0.02    0.00  573821/4352133     std::complex<double>::complex(double, double) [36]
                0.00    0.00  591604/591604      bitvec::getword() const [145]
-----------------------------------------------
                0.02    1.67 1423231/1423231     opMatrix::addterms(terminfo const&) const [11]
[12]    32.1    0.02    1.67 1423231         quSubState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.02    1.65 1444152/1444153     quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
-----------------------------------------------
                0.00    0.00       1/1444153     quBaseState::reset(bitvec const&) [104]
                0.02    1.65 1444152/1444153     quSubState::opadd(bitvec const&, std::complex<double> const&) [12]
[13]    31.7    0.02    1.65 1444153         quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.53    1.12 1465139/1465139     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
-----------------------------------------------
[14]    31.3    0.53    1.12 1465139+3144704 <cycle 4 as a whole> [14]
                0.51    1.08 3037491+23          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.02    0.04 1572352             termlist::add(term const&) <cycle 4> [58]
-----------------------------------------------
                                  23             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                             1572352             termlist::add(term const&) <cycle 4> [58]
                0.53    1.12 1465139/1465139     quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
[15]    30.2    0.51    1.08 3037491+23      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.05    0.18 3051489/3626216     term::setvect(bitvec const&) [21]
                0.03    0.19      21/23          termlist::newlist() [22]
                0.16    0.06 3042721/3042721     termlist::hashfunct1(bitvec const&) const [26]
                0.15    0.00 3066266/3066266     term::setampl(std::complex<double> const&) [34]
                0.10    0.02 1572352/3911138     term::~term() [20]
                0.12    0.00      23/46          termlist::clear() [24]
                0.00    0.01   96973/96973       operator==(bitvec const&, bitvec const&) [98]
                0.00    0.00   98419/98419       termlist::hashfunct2(bitvec const&) const [110]
                0.00    0.00   94286/8064922     term::vect() const [63]
                             1572352             termlist::add(term const&) <cycle 4> [58]
                                  23             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
-----------------------------------------------
                                                 <spontaneous>
[16]    20.2    0.00    1.06                 __libc_csu_init [16]
                0.03    0.97       1/4           _GLOBAL__sub_I_noperators [1]
                0.05    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [66]
                0.01    0.00       1/1           _GLOBAL__sub_I_nterms [100]
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [461]
                0.00    0.00       1/1           _GLOBAL__sub_I_main [459]
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [462]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [450]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [455]
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [464]
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [463]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [465]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [451]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [452]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [449]
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [458]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [456]
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [466]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [467]
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [457]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [453]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [454]
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [448]
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [460]
-----------------------------------------------
                0.17    0.18 1257690/1257690     opMatrix::addterms(terminfo const&) const [11]
[17]     6.6    0.17    0.18 1257690         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [17]
                0.10    0.09 1296963/1296963     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [30]
-----------------------------------------------
                0.00    0.00      23/1308614     quState::mapmask() const [105]
                0.09    0.23 1308591/1308614     opMatrix::addterms(terminfo const&) const [11]
[18]     6.1    0.09    0.23 1308614         quSubString::unmap(bitvec const&) const [18]
                0.02    0.05 1406909/1406909     bitvec::setbits(int, bitvec const&) [54]
                0.04    0.03 1347001/1347001     quBaseState::unmap(bitvec const&) const [56]
                0.04    0.00 1350820/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.04    0.00 1336289/1905782     quState::mapbits() const [64]
                0.02    0.00 1385793/10737213     bitvec::~bitvec() [35]
                0.01    0.00 1325875/1895045     quSubString::mapoffs() const [84]
-----------------------------------------------
                0.00    0.00       3/5398789     QuHeap::QuHeap(int, int) [73]
                0.00    0.00       4/5398789     term::set(bitvec const&, std::complex<double> const&) [134]
                0.00    0.00      20/5398789     opElementary::apply(quState&) const [10]
                0.01    0.02  542793/5398789     _GLOBAL__sub_I_noperators [1]
                0.01    0.02  570918/5398789     term::operator=(term const&) [53]
                0.02    0.02  633395/5398789     term::term(term const&) [32]
                0.09    0.13 3651656/5398789     term::setvect(bitvec const&) [21]
[19]     6.1    0.13    0.19 5398789         bitvec::operator=(bitvec const&) [19]
                0.19    0.00 5454770/5454770     bitvec::setlen(int) [29]
-----------------------------------------------
                0.00    0.00       6/3911138     opMatrix::~opMatrix() [133]
                0.05    0.01  765916/3911138     terminfo::~terminfo() [52]
                0.10    0.02 1572352/3911138     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.10    0.02 1572864/3911138     termlist::dellist() [38]
[20]     5.9    0.26    0.05 3911138         term::~term() [20]
                0.05    0.00 3878949/10737213     bitvec::~bitvec() [35]
-----------------------------------------------
                0.01    0.03  574727/3626216     _GLOBAL__sub_I_noperators [1]
                0.05    0.18 3051489/3626216     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[21]     5.2    0.06    0.22 3626216         term::setvect(bitvec const&) [21]
                0.09    0.13 3651656/5398789     bitvec::operator=(bitvec const&) [19]
-----------------------------------------------
                0.00    0.02       2/23          termlist::termlist(int, int) [76]
                0.03    0.19      21/23          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[22]     4.6    0.03    0.21      23         termlist::newlist() [22]
                0.03    0.18 3145216/3145242     term::term() [27]
-----------------------------------------------
                0.10    0.14  560205/560205      _GLOBAL__sub_I_noperators [1]
[23]     4.6    0.10    0.14  560205         quSubString::map(bitvec const&) const [23]
                0.09    0.01  571302/571302      quBaseState::map(bitvec const&) const [47]
                0.00    0.02  562855/562855      bitvec::getbits(int, int) const [92]
                0.01    0.00  569293/1905782     quState::mapbits() const [64]
                0.01    0.00  556589/10737213     bitvec::~bitvec() [35]
                0.01    0.00  569170/1895045     quSubString::mapoffs() const [84]
-----------------------------------------------
                0.01    0.00       2/46          termlist::termlist(int, int) [76]
                0.11    0.00      21/46          quBaseState::opbegin() [42]
                0.12    0.00      23/46          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[24]     4.6    0.24    0.00      46         termlist::clear() [24]
-----------------------------------------------
                0.05    0.19  716886/716886      _GLOBAL__sub_I_noperators [1]
[25]     4.5    0.05    0.19  716886         terminfo::terminfo(terminfo const&) [25]
                0.08    0.09  668258/668258      term::term(term const&) [32]
                0.01    0.00  705450/4742654     bitvec::bitvec(bitvec const&) [45]
-----------------------------------------------
                0.16    0.06 3042721/3042721     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[26]     4.1    0.16    0.06 3042721         termlist::hashfunct1(bitvec const&) const [26]
                0.06    0.00 3014461/3114505     bitvec::hashfunct() const [59]
-----------------------------------------------
                0.00    0.00       6/3145242     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
                0.00    0.00      20/3145242     terminfo::terminfo() [28]
                0.03    0.18 3145216/3145242     termlist::newlist() [22]
[27]     4.1    0.03    0.18 3145242         term::term() [27]
                0.10    0.00 3145242/4352133     std::complex<double>::complex(double, double) [36]
                0.08    0.00 3145242/5732742     bitvec::bitvec(int, unsigned long) [33]
-----------------------------------------------
                0.20    0.00      20/20          opElementary::apply(quState&) const [10]
[28]     3.8    0.20    0.00      20         terminfo::terminfo() [28]
                0.00    0.00      20/3145242     term::term() [27]
                0.00    0.00      20/5732742     bitvec::bitvec(int, unsigned long) [33]
-----------------------------------------------
                0.19    0.00 5454770/5454770     bitvec::operator=(bitvec const&) [19]
[29]     3.6    0.19    0.00 5454770         bitvec::setlen(int) [29]
-----------------------------------------------
                0.10    0.09 1296963/1296963     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [17]
[30]     3.4    0.10    0.09 1296963         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [30]
                0.07    0.00 1290296/1290296     std::complex<double>::real() const [55]
                0.02    0.00 1288536/1288536     std::complex<double>::imag() const [85]
-----------------------------------------------
                0.06    0.11      20/20          opElementary::apply(quState&) const [10]
[31]     3.3    0.06    0.11      20         quSubState::opbegin() [31]
                0.01    0.10      20/21          quBaseState::opbegin() [42]
-----------------------------------------------
                0.08    0.09  668258/668258      terminfo::terminfo(terminfo const&) [25]
[32]     3.2    0.08    0.09  668258         term::term(term const&) [32]
                0.02    0.02  633395/5398789     bitvec::operator=(bitvec const&) [19]
                0.02    0.00  633062/4352133     std::complex<double>::complex(double, double) [36]
                0.02    0.00  662747/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.01    0.00  560542/4516309     term::ampl() const [48]
                0.00    0.00  622403/8064922     term::vect() const [63]
-----------------------------------------------
                0.00    0.00       1/5732742     QuHeap::cmask() const [135]
                0.00    0.00       1/5732742     sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       1/5732742     quBaseState::reset(bitvec const&) [104]
                0.00    0.00       1/5732742     quBaseState::quBaseState(int, int) [74]
                0.00    0.00       4/5732742     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
                0.00    0.00       8/5732742     QuHeap::QuHeap(int, int) [73]
                0.00    0.00      20/5732742     opElementary::apply(quState&) const [10]
                0.00    0.00      20/5732742     terminfo::terminfo() [28]
                0.00    0.00      23/5732742     quState::mapmask() const [105]
                0.02    0.00  573854/5732742     bitvec::getbits(int, int) const [92]
                0.02    0.00  662747/5732742     term::term(term const&) [32]
                0.04    0.00 1350820/5732742     quSubString::unmap(bitvec const&) const [18]
                0.08    0.00 3145242/5732742     term::term() [27]
[33]     2.8    0.15    0.00 5732742         bitvec::bitvec(int, unsigned long) [33]
-----------------------------------------------
                0.15    0.00 3066266/3066266     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[34]     2.8    0.15    0.00 3066266         term::setampl(std::complex<double> const&) [34]
-----------------------------------------------
                0.00    0.00       1/10737213     quBaseState::reset(bitvec const&) [104]
                0.00    0.00       1/10737213     quBaseState::quBaseState(int, int) [74]
                0.00    0.00       2/10737213     QuHeap::qualloc(int, BaseType) [57]
                0.00    0.00       3/10737213     QuHeap::QuHeap(int, int) [73]
                0.00    0.00       4/10737213     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
                0.00    0.00       5/10737213     QuHeap::~QuHeap() [37]
                0.00    0.00       5/10737213     sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      46/10737213     quState::mapmask() const [105]
                0.00    0.00      60/10737213     opElementary::apply(quState&) const [10]
                0.01    0.00  556589/10737213     quSubString::map(bitvec const&) const [23]
                0.01    0.00  726280/10737213     terminfo::~terminfo() [52]
                0.01    0.00 1082199/10737213     _GLOBAL__sub_I_noperators [1]
                0.02    0.00 1385793/10737213     quSubString::unmap(bitvec const&) const [18]
                0.04    0.00 3107276/10737213     opMatrix::addterms(terminfo const&) const [11]
                0.05    0.00 3878949/10737213     term::~term() [20]
[35]     2.7    0.14    0.00 10737213         bitvec::~bitvec() [35]
-----------------------------------------------
                0.00    0.00       1/4352133     yylex() [112]
                0.00    0.00       1/4352133     quBaseState::reset(bitvec const&) [104]
                0.00    0.00       6/4352133     ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.02    0.00  573821/4352133     opMatrix::addterms(terminfo const&) const [11]
                0.02    0.00  633062/4352133     term::term(term const&) [32]
                0.10    0.00 3145242/4352133     term::term() [27]
[36]     2.7    0.14    0.00 4352133         std::complex<double>::complex(double, double) [36]
-----------------------------------------------
                0.00    0.13       1/1           main [2]
[37]     2.6    0.00    0.13       1         QuHeap::~QuHeap() [37]
                0.00    0.13       1/1           quBaseState::~quBaseState() [40]
                0.00    0.00       5/10737213     bitvec::~bitvec() [35]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [433]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [542]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [539]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [570]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [572]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [576]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [574]
-----------------------------------------------
                0.01    0.12       2/2           termlist::~termlist() [39]
[38]     2.6    0.01    0.12       2         termlist::dellist() [38]
                0.10    0.02 1572864/3911138     term::~term() [20]
-----------------------------------------------
                0.00    0.13       2/2           quBaseState::~quBaseState() [41]
[39]     2.6    0.00    0.13       2         termlist::~termlist() [39]
                0.01    0.12       2/2           termlist::dellist() [38]
-----------------------------------------------
                0.00    0.13       1/1           QuHeap::~QuHeap() [37]
[40]     2.6    0.00    0.13       1         quBaseState::~quBaseState() [40]
                0.00    0.13       1/1           quBaseState::~quBaseState() [41]
-----------------------------------------------
                0.00    0.13       1/1           quBaseState::~quBaseState() [40]
[41]     2.6    0.00    0.13       1         quBaseState::~quBaseState() [41]
                0.00    0.13       2/2           termlist::~termlist() [39]
                0.00    0.00       1/31          quState::~quState() [260]
-----------------------------------------------
                0.00    0.01       1/21          quBaseState::reset(bitvec const&) [104]
                0.01    0.10      20/21          quSubState::opbegin() [31]
[42]     2.3    0.01    0.11      21         quBaseState::opbegin() [42]
                0.11    0.00      21/46          termlist::clear() [24]
-----------------------------------------------
[43]     2.1    0.09    0.02      31+133     <cycle 5 as a whole> [43]
                0.04    0.02      31             quSubString::quSubString(int, int, quState&) <cycle 5> [62]
                0.05    0.00      30             quSubString::newsubstring(int, int) <cycle 5> [67]
                0.00    0.00      62             quBaseState::newsubstring(int, int) <cycle 5> [128]
                0.00    0.00      41             quState::newclone() <cycle 5> [129]
-----------------------------------------------
                0.00    0.00       1/568455      sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.08    0.02  568454/568455      _GLOBAL__sub_I_noperators [1]
[44]     1.9    0.08    0.02  568455         operator&(bitvec const&, bitvec const&) [44]
                0.01    0.00  588833/4742654     bitvec::bitvec(bitvec const&) [45]
                0.01    0.00  564372/564373      bitvec::operator&=(bitvec const&) [96]
-----------------------------------------------
                0.00    0.00      44/4742654     operator~(bitvec const&) [94]
                0.01    0.00  586876/4742654     quBaseState::map(bitvec const&) const [47]
                0.01    0.00  588833/4742654     operator&(bitvec const&, bitvec const&) [44]
                0.01    0.00  705450/4742654     terminfo::terminfo(terminfo const&) [25]
                0.03    0.00 1404852/4742654     quBaseState::unmap(bitvec const&) const [56]
                0.03    0.00 1456599/4742654     operator|(bitvec const&, bitvec const&) [49]
[45]     1.9    0.10    0.00 4742654         bitvec::bitvec(bitvec const&) [45]
-----------------------------------------------
                                                 <spontaneous>
[46]     1.9    0.10    0.00                 bitvec::testless(bitvec const&) const [46]
-----------------------------------------------
                0.09    0.01  571302/571302      quSubString::map(bitvec const&) const [23]
[47]     1.8    0.09    0.01  571302         quBaseState::map(bitvec const&) const [47]
                0.01    0.00  586876/4742654     bitvec::bitvec(bitvec const&) [45]
-----------------------------------------------
                0.01    0.00  535294/4516309     term::operator=(term const&) [53]
                0.01    0.00  560542/4516309     term::term(term const&) [32]
                0.03    0.00 1572352/4516309     termlist::add(term const&) <cycle 4> [58]
                0.04    0.00 1848121/4516309     opMatrix::addterms(terminfo const&) const [11]
[48]     1.7    0.09    0.00 4516309         term::ampl() const [48]
-----------------------------------------------
                0.04    0.04 1385011/1385011     opMatrix::addterms(terminfo const&) const [11]
[49]     1.5    0.04    0.04 1385011         operator|(bitvec const&, bitvec const&) [49]
                0.03    0.00 1456599/4742654     bitvec::bitvec(bitvec const&) [45]
                0.01    0.00 1416904/1416905     bitvec::operator|=(bitvec const&) [95]
-----------------------------------------------
                0.02    0.06      20/20          opElementary::apply(quState&) const [10]
[50]     1.5    0.02    0.06      20         quSubState::baseterms() const [50]
                0.06    0.00      20/20          quBaseState::baseterms() const [60]
-----------------------------------------------
                0.00    0.07       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[51]     1.4    0.00    0.07       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.06       1/1           QuHeap::qualloc(int, BaseType) [57]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [107]
                0.00    0.00       1/31          quState::newclone() <cycle 5> [129]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       4/663         tValue::~tValue() [162]
                0.00    0.00       2/353         tValue::tValue() [175]
                0.00    0.00       2/6           tValue::isError() const [350]
                0.00    0.00       2/2           tValue::toInt() const [426]
                0.00    0.00       1/115         tType::isQuExpr() const [192]
                0.00    0.00       1/372         sDef::type() const [169]
                0.00    0.00       1/1           sDef::basetype() [503]
                0.00    0.00       1/5           sObject::isGlobal() const [357]
                0.00    0.00       1/5           tValue::qustate() const [356]
                0.00    0.00       1/167         sObject::def() const [188]
-----------------------------------------------
                0.00    0.00      20/789785      opElementary::apply(quState&) const [10]
                0.00    0.07  789765/789785      _GLOBAL__sub_I_noperators [1]
[52]     1.3    0.00    0.07  789785         terminfo::~terminfo() [52]
                0.05    0.01  765916/3911138     term::~term() [20]
                0.01    0.00  726280/10737213     bitvec::~bitvec() [35]
-----------------------------------------------
                0.02    0.05  534230/534230      _GLOBAL__sub_I_noperators [1]
[53]     1.3    0.02    0.05  534230         term::operator=(term const&) [53]
                0.01    0.02  570918/5398789     bitvec::operator=(bitvec const&) [19]
                0.01    0.00  535294/4516309     term::ampl() const [48]
                0.00    0.00  572579/8064922     term::vect() const [63]
-----------------------------------------------
                0.02    0.05 1406909/1406909     quSubString::unmap(bitvec const&) const [18]
[54]     1.2    0.02    0.05 1406909         bitvec::setbits(int, bitvec const&) [54]
                0.05    0.00 1369247/1369247     bitvec::setbits(int, int, unsigned long) [69]
-----------------------------------------------
                0.07    0.00 1290296/1290296     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [30]
[55]     1.2    0.07    0.00 1290296         std::complex<double>::real() const [55]
-----------------------------------------------
                0.04    0.03 1347001/1347001     quSubString::unmap(bitvec const&) const [18]
[56]     1.2    0.04    0.03 1347001         quBaseState::unmap(bitvec const&) const [56]
                0.03    0.00 1404852/4742654     bitvec::bitvec(bitvec const&) [45]
-----------------------------------------------
                0.00    0.06       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
[57]     1.2    0.00    0.06       1         QuHeap::qualloc(int, BaseType) [57]
                0.06    0.00      20/20          bitvec::operator[](int) const [61]
                0.00    0.00       1/31          quBaseState::newsubstring(int, int) <cycle 5> [128]
                0.00    0.00       1/23          quState::mapmask() const [105]
                0.00    0.00       1/44          operator~(bitvec const&) [94]
                0.00    0.00       2/10737213     bitvec::~bitvec() [35]
                0.00    0.00       1/564373      bitvec::operator&=(bitvec const&) [96]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [510]
-----------------------------------------------
                             1572352             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[58]     1.2    0.02    0.04 1572352         termlist::add(term const&) <cycle 4> [58]
                0.03    0.00 1572352/4516309     term::ampl() const [48]
                0.01    0.00 1572352/8064922     term::vect() const [63]
                             1572352             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
-----------------------------------------------
                0.00    0.00  100044/3114505     termlist::hashfunct2(bitvec const&) const [110]
                0.06    0.00 3014461/3114505     termlist::hashfunct1(bitvec const&) const [26]
[59]     1.1    0.06    0.00 3114505         bitvec::hashfunct() const [59]
-----------------------------------------------
                0.06    0.00      20/20          quSubState::baseterms() const [50]
[60]     1.1    0.06    0.00      20         quBaseState::baseterms() const [60]
                0.00    0.00      20/20          termlist::nterms() const [289]
-----------------------------------------------
                0.06    0.00      20/20          QuHeap::qualloc(int, BaseType) [57]
[61]     1.1    0.06    0.00      20         bitvec::operator[](int) const [61]
-----------------------------------------------
                                  31             quBaseState::newsubstring(int, int) <cycle 5> [128]
[62]     1.1    0.04    0.02      31         quSubString::quSubString(int, int, quState&) <cycle 5> [62]
                0.00    0.02      31/31          quSubState::quSubState(int) [90]
                                  31             quState::newclone() <cycle 5> [129]
-----------------------------------------------
                0.00    0.00   94286/8064922     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
                0.00    0.00  572579/8064922     term::operator=(term const&) [53]
                0.00    0.00  622403/8064922     term::term(term const&) [32]
                0.01    0.00 1119388/8064922     _GLOBAL__sub_I_noperators [1]
                0.01    0.00 1572352/8064922     termlist::add(term const&) <cycle 4> [58]
                0.03    0.00 4083914/8064922     opMatrix::addterms(terminfo const&) const [11]
[63]     0.9    0.05    0.00 8064922         term::vect() const [63]
-----------------------------------------------
                0.00    0.00       1/1905782     sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       1/1905782     quBaseState::basebits() const [136]
                0.00    0.00      20/1905782     opElementary::apply(quState&) const [10]
                0.00    0.00      21/1905782     ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    0.00      23/1905782     quState::mapmask() const [105]
                0.00    0.00      41/1905782     quState::newclone() <cycle 5> [129]
                0.00    0.00      93/1905782     quBaseState::newsubstring(int, int) <cycle 5> [128]
                0.01    0.00  569293/1905782     quSubString::map(bitvec const&) const [23]
                0.04    0.00 1336289/1905782     quSubString::unmap(bitvec const&) const [18]
[64]     0.9    0.05    0.00 1905782         quState::mapbits() const [64]
-----------------------------------------------
                0.01    0.04  525941/525941      _GLOBAL__sub_I_noperators [1]
[65]     0.9    0.01    0.04  525941         quSubState::baseterm(int) const [65]
                0.00    0.04  525387/525387      quBaseState::baseterm(int) const [72]
-----------------------------------------------
                0.05    0.00       1/1           __libc_csu_init [16]
[66]     0.9    0.05    0.00       1         _GLOBAL__sub_I_qc_check_txt [66]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                                  10             quState::newclone() <cycle 5> [129]
                0.06    0.01      20/31          ext_bit(sRoutDef const*, SymTable const*, int) [6]
[67]     0.9    0.05    0.00      30         quSubString::newsubstring(int, int) <cycle 5> [67]
                                  30             quBaseState::newsubstring(int, int) <cycle 5> [128]
-----------------------------------------------
                                                 <spontaneous>
[68]     0.9    0.05    0.00                 std::pow(double, int) [68]
-----------------------------------------------
                0.05    0.00 1369247/1369247     bitvec::setbits(int, bitvec const&) [54]
[69]     0.9    0.05    0.00 1369247         bitvec::setbits(int, int, unsigned long) [69]
-----------------------------------------------
                                                 <spontaneous>
[70]     0.9    0.05    0.00                 std::complex<double>::real() [70]
-----------------------------------------------
                0.04    0.00  551029/551029      quBaseState::baseterm(int) const [72]
[71]     0.8    0.04    0.00  551029         termlist::operator[](int) const [71]
-----------------------------------------------
                0.00    0.04  525387/525387      quSubState::baseterm(int) const [65]
[72]     0.8    0.00    0.04  525387         quBaseState::baseterm(int) const [72]
                0.04    0.00  551029/551029      termlist::operator[](int) const [71]
-----------------------------------------------
                0.00    0.04       1/1           main [2]
[73]     0.7    0.00    0.04       1         QuHeap::QuHeap(int, int) [73]
                0.00    0.04       1/1           quBaseState::quBaseState(int, int) [74]
                0.00    0.00       8/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00       3/5398789     bitvec::operator=(bitvec const&) [19]
                0.00    0.00       3/10737213     bitvec::~bitvec() [35]
                0.00    0.00       2/46          bitvec::qnot() [219]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [573]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [575]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [571]
                0.00    0.00       1/1           QuHeap::init() [508]
-----------------------------------------------
                0.00    0.04       1/1           QuHeap::QuHeap(int, int) [73]
[74]     0.7    0.00    0.04       1         quBaseState::quBaseState(int, int) [74]
                0.00    0.03       2/2           termlist::termlist(int, int) [76]
                0.00    0.01       1/1           quBaseState::reset(bitvec const&) [104]
                0.00    0.00       1/32          quState::quState(int) [86]
                0.00    0.00       1/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00       1/10737213     bitvec::~bitvec() [35]
-----------------------------------------------
                0.00    0.00       1/324         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       1/324         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       2/324         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       3/324         sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       6/324         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      36/324         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [106]
                0.00    0.03     275/324         sRoutDef::typecheck(SymTable*, SymTable*) [77]
[75]     0.7    0.00    0.04     324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.03     280/287         tValue::tValue(tValue const&) [81]
                0.01    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
                0.00    0.00     324/365         sObject::isDef() const [173]
                0.00    0.00     324/370         sObject::isValueDef() const [170]
-----------------------------------------------
                0.00    0.03       2/2           quBaseState::quBaseState(int, int) [74]
[76]     0.6    0.00    0.03       2         termlist::termlist(int, int) [76]
                0.00    0.02       2/23          termlist::newlist() [22]
                0.01    0.00       2/46          termlist::clear() [24]
                0.00    0.00       2/2           duallog(int) [403]
-----------------------------------------------
                0.00    0.03      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[77]     0.6    0.00    0.03      36         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.03     275/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00     734/21427       sDef::id() const [146]
                0.00    0.00     435/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [148]
                0.00    0.00     275/353         tValue::tValue() [175]
                0.00    0.00     275/663         tValue::~tValue() [162]
                0.00    0.00     263/264         SymTab::getRef(std::string const&, ObjType*) const [180]
                0.00    0.00     263/294         sObject::isFunctDef() const [178]
                0.00    0.00     263/372         sDef::type() const [169]
                0.00    0.00     263/263         tType::isQuReg() const [185]
                0.00    0.00     263/554         sList<sDef>::next(void*&) const [163]
                0.00    0.00      72/77          SymTab::SymTab(int) [210]
                0.00    0.00      72/77          SymTab::~SymTab() [211]
                0.00    0.00      52/455         sObject::setParent(sObject*) [167]
                0.00    0.00      36/135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00      36/167         sObject::def() const [188]
                0.00    0.00      36/95          sList<sDef>::first(void*&) const [196]
                0.00    0.00      36/73          sObject::isExtern() const [213]
                0.00    0.00       8/253         sObject::isRoutDef() const [186]
                0.00    0.00       8/28          sObject::isCondDef() const [268]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00       8/30          sObject::isQuFunDef() const [266]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [328]
                0.00    0.00       3/3           sObject::isBennet() const [399]
-----------------------------------------------
                                                 <spontaneous>
[78]     0.6    0.03    0.00                 bitvec::operator=(unsigned long) [78]
-----------------------------------------------
                                                 <spontaneous>
[79]     0.6    0.03    0.00                 opMatrix::~opMatrix() [79]
-----------------------------------------------
                0.00    0.00      29/316         tValue::operator=(tValue const&) [109]
                0.00    0.03     287/316         tValue::tValue(tValue const&) [81]
[80]     0.5    0.00    0.03     316         tValue::assign(tValue const&) [80]
                0.02    0.01       8/31          quState::newclone() <cycle 5> [129]
                0.00    0.00     316/842         tType::operator=(tType const&) [156]
                0.00    0.00     316/1052        tType::ord() const [153]
                0.00    0.00     316/1013        tType::basetype() const [154]
-----------------------------------------------
                0.00    0.00       1/287         tValue::conv(tType const&) const [125]
                0.00    0.00       1/287         SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00       1/287         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [124]
                0.00    0.00       4/287         sConst::eval(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.03     280/287         SymTab::put(sDef*, tValue const&) [75]
[81]     0.5    0.00    0.03     287         tValue::tValue(tValue const&) [81]
                0.00    0.03     287/316         tValue::assign(tValue const&) [80]
                0.00    0.00     287/1478        tType::tType(BaseType) [151]
-----------------------------------------------
                                                 <spontaneous>
[82]     0.5    0.03    0.00                 std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [82]
-----------------------------------------------
                0.00    0.00       1/2179036     QuHeap::ncond() const [138]
                0.00    0.00       1/2179036     QuHeap::cmask() const [135]
                0.00    0.00       1/2179036     quBaseState::reset(bitvec const&) [104]
                0.02    0.00 2179033/2179036     opMatrix::addterms(terminfo const&) const [11]
[83]     0.4    0.02    0.00 2179036         bitvec::length() const [83]
-----------------------------------------------
                0.01    0.00  569170/1895045     quSubString::map(bitvec const&) const [23]
                0.01    0.00 1325875/1895045     quSubString::unmap(bitvec const&) const [18]
[84]     0.4    0.02    0.00 1895045         quSubString::mapoffs() const [84]
-----------------------------------------------
                0.02    0.00 1288536/1288536     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [30]
[85]     0.4    0.02    0.00 1288536         std::complex<double>::imag() const [85]
-----------------------------------------------
                0.00    0.00       1/32          quBaseState::quBaseState(int, int) [74]
                0.02    0.00      31/32          quSubState::quSubState(int) [90]
[86]     0.4    0.02    0.00      32         quState::quState(int) [86]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::reset(bitvec const&) [104]
                0.02    0.00      20/21          quSubState::opend() [91]
[87]     0.4    0.02    0.00      21         quBaseState::opend() [87]
-----------------------------------------------
                                                 <spontaneous>
[88]     0.4    0.02    0.00                 termlist::operator=(termlist const&) [88]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.4    0.02    0.00                 termlist::nbits() const [89]
-----------------------------------------------
                0.00    0.02      31/31          quSubString::quSubString(int, int, quState&) <cycle 5> [62]
[90]     0.4    0.00    0.02      31         quSubState::quSubState(int) [90]
                0.02    0.00      31/32          quState::quState(int) [86]
-----------------------------------------------
                0.00    0.02      20/20          opElementary::apply(quState&) const [10]
[91]     0.4    0.00    0.02      20         quSubState::opend() [91]
                0.02    0.00      20/21          quBaseState::opend() [87]
-----------------------------------------------
                0.00    0.02  562855/562855      quSubString::map(bitvec const&) const [23]
[92]     0.3    0.00    0.02  562855         bitvec::getbits(int, int) const [92]
                0.02    0.00  573854/5732742     bitvec::bitvec(int, unsigned long) [33]
-----------------------------------------------
                                                 <spontaneous>
[93]     0.3    0.02    0.00                 bitvec::setbit(int, int) [93]
-----------------------------------------------
                0.00    0.00       1/44          QuHeap::qualloc(int, BaseType) [57]
                0.00    0.00      20/44          opElementary::apply(quState&) const [10]
                0.01    0.00      23/44          quState::mapmask() const [105]
[94]     0.2    0.01    0.00      44         operator~(bitvec const&) [94]
                0.00    0.00      44/4742654     bitvec::bitvec(bitvec const&) [45]
                0.00    0.00      44/46          bitvec::qnot() [219]
-----------------------------------------------
                0.00    0.00       1/1416905     sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.01    0.00 1416904/1416905     operator|(bitvec const&, bitvec const&) [49]
[95]     0.2    0.01    0.00 1416905         bitvec::operator|=(bitvec const&) [95]
-----------------------------------------------
                0.00    0.00       1/564373      QuHeap::qualloc(int, BaseType) [57]
                0.01    0.00  564372/564373      operator&(bitvec const&, bitvec const&) [44]
[96]     0.2    0.01    0.00  564373         bitvec::operator&=(bitvec const&) [96]
-----------------------------------------------
                0.01    0.00   99365/99365       operator==(bitvec const&, bitvec const&) [98]
[97]     0.2    0.01    0.00   99365         bitvec::testeq(bitvec const&) const [97]
-----------------------------------------------
                0.00    0.01   96973/96973       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[98]     0.2    0.00    0.01   96973         operator==(bitvec const&, bitvec const&) [98]
                0.01    0.00   99365/99365       bitvec::testeq(bitvec const&) const [97]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
                0.01    0.00     276/276         SymTab::put(sDef*, tValue const&) [75]
[99]     0.2    0.01    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
                0.00    0.00   13314/21427       sDef::id() const [146]
                0.00    0.00    3403/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [149]
                0.00    0.00    3254/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [147]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
-----------------------------------------------
                0.01    0.00       1/1           __libc_csu_init [16]
[100]    0.2    0.01    0.00       1         _GLOBAL__sub_I_nterms [100]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                                                 <spontaneous>
[101]    0.2    0.01    0.00                 term::nbits() const [101]
-----------------------------------------------
                                                 <spontaneous>
[102]    0.2    0.01    0.00                 bitvec::getword(int, int) const [102]
-----------------------------------------------
                                                 <spontaneous>
[103]    0.2    0.01    0.00                 std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [103]
-----------------------------------------------
                0.00    0.01       1/1           quBaseState::quBaseState(int, int) [74]
[104]    0.1    0.00    0.01       1         quBaseState::reset(bitvec const&) [104]
                0.00    0.01       1/21          quBaseState::opbegin() [42]
                0.00    0.00       1/21          quBaseState::opend() [87]
                0.00    0.00       1/1444153     quBaseState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.00    0.00       1/4352133     std::complex<double>::complex(double, double) [36]
                0.00    0.00       1/1           quBaseState::basebits() const [136]
                0.00    0.00       1/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00       1/10737213     bitvec::~bitvec() [35]
                0.00    0.00       1/2179036     bitvec::length() const [83]
-----------------------------------------------
                0.00    0.00       1/23          QuHeap::qualloc(int, BaseType) [57]
                0.00    0.00       2/23          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      20/23          opElementary::apply(quState&) const [10]
[105]    0.1    0.00    0.01      23         quState::mapmask() const [105]
                0.01    0.00      23/44          operator~(bitvec const&) [94]
                0.00    0.00      23/1308614     quSubString::unmap(bitvec const&) const [18]
                0.00    0.00      23/1905782     quState::mapbits() const [64]
                0.00    0.00      23/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00      46/10737213     bitvec::~bitvec() [35]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[106]    0.1    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [106]
                0.00    0.00      36/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00      36/167         sObject::def() const [188]
                0.00    0.00      36/353         tValue::tValue() [175]
                0.00    0.00      36/663         tValue::~tValue() [162]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
[107]    0.1    0.00    0.00       1         QuHeap::addReg(quState*) [107]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [108]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [127]
                0.00    0.00       1/663         tValue::~tValue() [162]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [107]
[108]    0.1    0.00    0.00       1         tValue::tValue(quState&, BaseType) [108]
                0.00    0.00       1/31          quState::newclone() <cycle 5> [129]
                0.00    0.00       1/1478        tType::tType(BaseType) [151]
                0.00    0.00       1/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       1/29          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       2/29          sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       2/29          sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/29          sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00      21/29          sConst::sConst(tValue const&) [111]
[109]    0.0    0.00    0.00      29         tValue::operator=(tValue const&) [109]
                0.00    0.00      29/316         tValue::assign(tValue const&) [80]
                0.00    0.00      29/692         tValue::delpointer() [159]
-----------------------------------------------
                0.00    0.00   98419/98419       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [15]
[110]    0.0    0.00    0.00   98419         termlist::hashfunct2(bitvec const&) const [110]
                0.00    0.00  100044/3114505     bitvec::hashfunct() const [59]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00      19/21          yylex() [112]
[111]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [111]
                0.00    0.00      21/29          tValue::operator=(tValue const&) [109]
                0.00    0.00      21/63          tValue::type() const [214]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [283]
                0.00    0.00      21/353         tValue::tValue() [175]
-----------------------------------------------
                0.00    0.00    2338/2338        yyparse() [113]
[112]    0.0    0.00    0.00    2338         yylex() [112]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [111]
                0.00    0.00       1/4352133     std::complex<double>::complex(double, double) [36]
                0.00    0.00      19/663         tValue::~tValue() [162]
                0.00    0.00      15/15          tValue::tValue(long) [311]
                0.00    0.00      12/12          yy_get_next_buffer() [323]
                0.00    0.00       8/8           yy_get_previous_state() [332]
                0.00    0.00       2/2           tValue::tValue(double) [412]
                0.00    0.00       1/26          yy_load_buffer_state() [270]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [512]
                0.00    0.00       1/1           tValue::tValue(char const*) [511]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [116]
                0.00    0.00       2/4           parseobj() [115]
[113]    0.0    0.00    0.00       4         yyparse() [113]
                0.00    0.00    2338/2338        yylex() [112]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [179]
                0.00    0.00     268/1478        tType::tType(BaseType) [151]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [181]
                0.00    0.00      44/44          sVar::sVar(std::string*) [221]
                0.00    0.00      44/44          sDefList::sDefList() [226]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [252]
                0.00    0.00      27/27          sList<sExpr>::append(sExpr*) [269]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [274]
                0.00    0.00      22/22          sExprList::sExprList() [279]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
                0.00    0.00      18/18          sStmtList::sStmtList() [301]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      14/14          sCall::sCall(std::string*, sExprList*, int) [315]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [339]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [346]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [187]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [367]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [377]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [371]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [363]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [393]
                0.00    0.00       2/2           objlist::objlist() [414]
                0.00    0.00       2/2           tType::tType(BaseType, int) [411]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [405]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [408]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [415]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [514]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [505]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [500]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[114]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       3/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00       3/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       6/663         tValue::~tValue() [162]
                0.00    0.00       3/353         tValue::tValue() [175]
                0.00    0.00       3/6           tValue::isError() const [350]
                0.00    0.00       3/63          tValue::type() const [214]
                0.00    0.00       3/372         sDef::type() const [169]
                0.00    0.00       3/7           tType::operator==(tType const&) const [344]
                0.00    0.00       3/167         sObject::def() const [188]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[115]    0.0    0.00    0.00       2         parseobj() [115]
                0.00    0.00       2/4           yyparse() [113]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[116]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [116]
                0.00    0.00       2/4           yyparse() [113]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [360]
                0.00    0.00       2/2           yyCleanUp() [404]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [118]
[117]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       6/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00      29/167         sObject::def() const [188]
                0.00    0.00      23/372         sDef::type() const [169]
                0.00    0.00      16/41          tType::operator==(BaseType) const [240]
                0.00    0.00      11/115         tType::isQuExpr() const [192]
                0.00    0.00       7/21427       sDef::id() const [146]
                0.00    0.00       7/135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00       6/353         tValue::tValue() [175]
                0.00    0.00       6/663         tValue::~tValue() [162]
                0.00    0.00       5/455         sObject::setParent(sObject*) [167]
                0.00    0.00       5/19          sObject::inFunctDef() const [295]
                0.00    0.00       5/96          sExpr::type() [194]
                0.00    0.00       5/165         sObject::isSet(ObjFlag) const [189]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       4/18          sObject::inQuDef() const [305]
                0.00    0.00       4/28          sObject::isCondDef() const [268]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [187]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       1/21          tType::isInt() const [287]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [77]
[118]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00     269/455         sObject::setParent(sObject*) [167]
                0.00    0.00     269/554         sList<sDef>::next(void*&) const [163]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [184]
                0.00    0.00      44/95          sList<sDef>::first(void*&) const [196]
-----------------------------------------------
[119]    0.0    0.00    0.00       8+19      <cycle 3 as a whole> [119]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[120]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       2/324         SymTab::put(sDef*, tValue const&) [75]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [111]
                0.00    0.00       8/455         sObject::setParent(sObject*) [167]
                0.00    0.00       4/96          sExpr::type() [194]
                0.00    0.00       4/21          tType::isInt() const [287]
                0.00    0.00       4/663         tValue::~tValue() [162]
                0.00    0.00       2/77          SymTab::SymTab(int) [210]
                0.00    0.00       2/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       2/52          sVar::id() const [216]
                0.00    0.00       2/135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00       2/79          sVarDef::object() const [208]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       2/21427       sDef::id() const [146]
                0.00    0.00       2/2           tValue::tValue(int) [413]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       2/1478        tType::tType(BaseType) [151]
                0.00    0.00       2/353         tValue::tValue() [175]
                0.00    0.00       2/5           sDef::settype(tType const&) [352]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [328]
                0.00    0.00       2/5           sConstDef::~sConstDef() [354]
                0.00    0.00       2/77          SymTab::~SymTab() [211]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
[121]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       4/287         tValue::tValue(tValue const&) [81]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[122]    0.0    0.00    0.00       1         sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       2/2           SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00       2/52          sVar::id() const [216]
                0.00    0.00       2/663         tValue::~tValue() [162]
                0.00    0.00       1/353         tValue::tValue() [175]
                0.00    0.00       1/1           tValue::isExpr() const [534]
                0.00    0.00       1/96          sExpr::type() [194]
                0.00    0.00       1/63          tValue::type() const [214]
                0.00    0.00       1/7           tType::operator==(tType const&) const [344]
-----------------------------------------------
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
[123]    0.0    0.00    0.00       2         SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [81]
                0.00    0.00       1/353         tValue::tValue() [175]
                0.00    0.00       1/362         SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00       1/370         sObject::isValueDef() const [170]
                0.00    0.00       1/79          sVarDef::object() const [208]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[124]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [124]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [81]
                0.00    0.00       1/42          operator new(unsigned long, void*) [235]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[125]    0.0    0.00    0.00       1         tValue::conv(tType const&) const [125]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [81]
                0.00    0.00       1/7           tType::operator==(tType const&) const [344]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [127]
[126]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [124]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [389]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [386]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [445]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [536]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [569]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [528]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [551]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [447]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [440]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [107]
[127]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [127]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [568]
-----------------------------------------------
                                  30             quSubString::newsubstring(int, int) <cycle 5> [67]
                                  31             quState::newclone() <cycle 5> [129]
                0.00    0.00       1/31          QuHeap::qualloc(int, BaseType) [57]
[128]    0.0    0.00    0.00      62         quBaseState::newsubstring(int, int) <cycle 5> [128]
                0.00    0.00      93/1905782     quState::mapbits() const [64]
                                  31             quSubString::quSubString(int, int, quState&) <cycle 5> [62]
-----------------------------------------------
                                  31             quSubString::quSubString(int, int, quState&) <cycle 5> [62]
                0.00    0.00       1/31          tValue::tValue(quState&, BaseType) [108]
                0.00    0.00       1/31          sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.02    0.01       8/31          tValue::assign(tValue const&) [80]
[129]    0.0    0.00    0.00      41         quState::newclone() <cycle 5> [129]
                0.00    0.00      41/1905782     quState::mapbits() const [64]
                                  31             quBaseState::newsubstring(int, int) <cycle 5> [128]
                                  10             quSubString::newsubstring(int, int) <cycle 5> [67]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [6]
[130]    0.0    0.00    0.00       1         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
                0.00    0.00       6/3145242     term::term() [27]
                0.00    0.00       4/4           term::set(bitvec const&, std::complex<double> const&) [134]
                0.00    0.00       4/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00       4/10737213     bitvec::~bitvec() [35]
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [391]
                0.00    0.00       1/1           opMatrix::opMatrix(int) [513]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [6]
[131]    0.0    0.00    0.00       1         opBit::~opBit() [131]
                0.00    0.00       1/1           opBit::~opBit() [132]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [131]
[132]    0.0    0.00    0.00       1         opBit::~opBit() [132]
                0.00    0.00       1/1           opMatrix::~opMatrix() [133]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [132]
[133]    0.0    0.00    0.00       1         opMatrix::~opMatrix() [133]
                0.00    0.00       6/3911138     term::~term() [20]
                0.00    0.00       1/1           opElementary::~opElementary() [499]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
[134]    0.0    0.00    0.00       4         term::set(bitvec const&, std::complex<double> const&) [134]
                0.00    0.00       4/5398789     bitvec::operator=(bitvec const&) [19]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[135]    0.0    0.00    0.00       1         QuHeap::cmask() const [135]
                0.00    0.00       1/5732742     bitvec::bitvec(int, unsigned long) [33]
                0.00    0.00       1/2179036     bitvec::length() const [83]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [104]
[136]    0.0    0.00    0.00       1         quBaseState::basebits() const [136]
                0.00    0.00       1/1905782     quState::mapbits() const [64]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[137]    0.0    0.00    0.00       1         QuHeap::cond() const [137]
                0.00    0.00       1/1           QuHeap::ncond() const [138]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::cond() const [137]
[138]    0.0    0.00    0.00       1         QuHeap::ncond() const [138]
                0.00    0.00       1/2179036     bitvec::length() const [83]
-----------------------------------------------
[139]    0.0    0.00    0.00      23+101     <cycle 1 as a whole> [139]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [281]
                0.00    0.00      22             sList<sExpr>::~sList() <cycle 1> [278]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [280]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [347]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [348]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [364]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [365]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [372]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [373]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [368]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [369]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [416]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [417]
-----------------------------------------------
[140]    0.0    0.00    0.00       8+64      <cycle 2 as a whole> [140]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [303]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [297]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [302]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [340]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [341]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [406]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [407]
-----------------------------------------------
                0.00    0.00  591604/591604      opMatrix::addterms(terminfo const&) const [11]
[145]    0.0    0.00    0.00  591604         bitvec::getword() const [145]
-----------------------------------------------
                0.00    0.00       2/21427       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       2/21427       ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    0.00       3/21427       sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       7/21427       sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00     734/21427       sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00    7365/21427       SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00   13314/21427       SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
[146]    0.0    0.00    0.00   21427         sDef::id() const [146]
-----------------------------------------------
                0.00    0.00    3202/6456        SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00    3254/6456        SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
[147]    0.0    0.00    0.00    6456         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [147]
-----------------------------------------------
                0.00    0.00     435/4125        sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00    3690/4125        SymTab::getentry(SymTable::entry*, std::string const&) const [174]
[148]    0.0    0.00    0.00    4125         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [148]
                0.00    0.00    2906/2906        std::char_traits<char>::compare(char const*, char const*, unsigned long) [150]
-----------------------------------------------
                0.00    0.00     473/3876        SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00    3403/3876        SymTab::putentry(SymTable::entry*, SymTable::entry*) [99]
[149]    0.0    0.00    0.00    3876         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [149]
-----------------------------------------------
                0.00    0.00    2906/2906        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [148]
[150]    0.0    0.00    0.00    2906         std::char_traits<char>::compare(char const*, char const*, unsigned long) [150]
-----------------------------------------------
                0.00    0.00       1/1478        tValue::tValue(std::complex<double> const&) [512]
                0.00    0.00       1/1478        tValue::tValue(char const*) [511]
                0.00    0.00       1/1478        tValue::tValue(quState&, BaseType) [108]
                0.00    0.00       1/1478        tValue::tValue(quState*, BaseType) [510]
                0.00    0.00       1/1478        __static_initialization_and_destruction_0(int, int) [471]
                0.00    0.00       1/1478        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [514]
                0.00    0.00       2/1478        tValue::tValue(int) [413]
                0.00    0.00       2/1478        tValue::tValue(double) [412]
                0.00    0.00       2/1478        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       4/1478        sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       4/1478        sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       5/1478        sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       8/1478        sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00      15/1478        tValue::tValue(long) [311]
                0.00    0.00      16/1478        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      19/1478        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
                0.00    0.00      21/1478        sExpr::sExpr(tType const&) [283]
                0.00    0.00      28/1478        sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      52/1478        sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      74/1478        sExpr::sExpr() [212]
                0.00    0.00     268/1478        yyparse() [113]
                0.00    0.00     287/1478        tValue::tValue(tValue const&) [81]
                0.00    0.00     312/1478        sDef::sDef(tType const&, std::string*) [176]
                0.00    0.00     353/1478        tValue::tValue() [175]
[151]    0.0    0.00    0.00    1478         tType::tType(BaseType) [151]
-----------------------------------------------
                0.00    0.00     528/1104        sObject::isDef() const [173]
                0.00    0.00     576/1104        sObject::isValueDef() const [170]
[152]    0.0    0.00    0.00    1104         sArgDef::object() const [152]
-----------------------------------------------
                0.00    0.00       8/1052        sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00      36/1052        sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00     316/1052        tValue::assign(tValue const&) [80]
                0.00    0.00     692/1052        tValue::ord() const [160]
[153]    0.0    0.00    0.00    1052         tType::ord() const [153]
-----------------------------------------------
                0.00    0.00       1/1013        sDef::basetype() [503]
                0.00    0.00       4/1013        sExpr::basetype() [370]
                0.00    0.00     316/1013        tValue::assign(tValue const&) [80]
                0.00    0.00     692/1013        tValue::basetype() const [161]
[154]    0.0    0.00    0.00    1013         tType::basetype() const [154]
-----------------------------------------------
                0.00    0.00      97/881         sObject::isSetRec(ObjFlag) [322]
                0.00    0.00     784/881         sObject::def() const [188]
[155]    0.0    0.00    0.00     881         sObject::parent() const [155]
-----------------------------------------------
                0.00    0.00       1/842         sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       5/842         sDef::settype(tType const&) [352]
                0.00    0.00      21/842         sExpr::sExpr(tType const&) [283]
                0.00    0.00      36/842         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      42/842         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00     109/842         sExpr::settype(tType const&) [193]
                0.00    0.00     312/842         sDef::sDef(tType const&, std::string*) [176]
                0.00    0.00     316/842         tValue::assign(tValue const&) [80]
[156]    0.0    0.00    0.00     842         tType::operator=(tType const&) [156]
-----------------------------------------------
                0.00    0.00     826/826         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [232]
[157]    0.0    0.00    0.00     826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [157]
-----------------------------------------------
                0.00    0.00     783/783         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [232]
[158]    0.0    0.00    0.00     783         std::_List_const_iterator<sObject*>::operator++() [158]
-----------------------------------------------
                0.00    0.00      29/692         tValue::operator=(tValue const&) [109]
                0.00    0.00     663/692         tValue::~tValue() [162]
[159]    0.0    0.00    0.00     692         tValue::delpointer() [159]
                0.00    0.00     692/692         tValue::ord() const [160]
                0.00    0.00     692/692         tValue::basetype() const [161]
                0.00    0.00      10/10          quSubState::isbasestate() const [330]
                0.00    0.00      10/30          quSubString::~quSubString() [262]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [159]
[160]    0.0    0.00    0.00     692         tValue::ord() const [160]
                0.00    0.00     692/1052        tType::ord() const [153]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [159]
[161]    0.0    0.00    0.00     692         tValue::basetype() const [161]
                0.00    0.00     692/1013        tType::basetype() const [154]
-----------------------------------------------
                0.00    0.00       1/663         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [9]
                0.00    0.00       1/663         QuHeap::addReg(quState*) [107]
                0.00    0.00       1/663         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [518]
                0.00    0.00       2/663         sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       3/663         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       4/663         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       4/663         sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       4/663         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       6/663         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       6/663         sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00      19/663         yylex() [112]
                0.00    0.00      21/663         sConst::~sConst() [285]
                0.00    0.00      36/663         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [106]
                0.00    0.00     275/663         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00     280/663         SymTab::deltree(SymTable::entry*) [217]
[162]    0.0    0.00    0.00     663         tValue::~tValue() [162]
                0.00    0.00     663/692         tValue::delpointer() [159]
-----------------------------------------------
                0.00    0.00       1/554         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      21/554         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00     263/554         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00     269/554         sDefList::typecheck(SymTable*, SymTable*) [118]
[163]    0.0    0.00    0.00     554         sList<sDef>::next(void*&) const [163]
-----------------------------------------------
                0.00    0.00      63/531         tValue::type() const [214]
                0.00    0.00      96/531         sExpr::type() [194]
                0.00    0.00     372/531         sDef::type() const [169]
[164]    0.0    0.00    0.00     531         tType::tType(tType const&) [164]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::sList() [296]
                0.00    0.00      21/515         sExpr::sExpr(tType const&) [283]
                0.00    0.00      22/515         sList<sExpr>::sList() [277]
                0.00    0.00      24/515         sStmt::sStmt(int) [272]
                0.00    0.00      44/515         sList<sDef>::sList() [224]
                0.00    0.00      74/515         sExpr::sExpr() [212]
                0.00    0.00     312/515         sDef::sDef(tType const&, std::string*) [176]
[165]    0.0    0.00    0.00     515         sObject::sObject(unsigned int) [165]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::~sList() <cycle 2> [297]
                0.00    0.00      22/515         sList<sExpr>::~sList() <cycle 1> [278]
                0.00    0.00      24/515         sStmt::~sStmt() [273]
                0.00    0.00      44/515         sList<sDef>::~sList() [225]
                0.00    0.00      95/515         sExpr::~sExpr() [195]
                0.00    0.00     312/515         sDef::~sDef() [177]
[166]    0.0    0.00    0.00     515         sObject::~sObject() [166]
-----------------------------------------------
                0.00    0.00       1/455         sExit::typecheck(SymTable*, SymTable*) [504]
                0.00    0.00       3/455         sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       4/455         sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/455         sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       5/455         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       6/455         sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       8/455         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       8/455         sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00      15/455         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00      21/455         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      23/455         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00      36/455         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      52/455         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00     269/455         sDefList::typecheck(SymTable*, SymTable*) [118]
[167]    0.0    0.00    0.00     455         sObject::setParent(sObject*) [167]
-----------------------------------------------
                0.00    0.00       1/450         tValue::tValue(std::complex<double> const&) [512]
                0.00    0.00       1/450         tValue::tValue(char const*) [511]
                0.00    0.00       1/450         tValue::tValue(quState&, BaseType) [108]
                0.00    0.00       1/450         tValue::tValue(quState*, BaseType) [510]
                0.00    0.00       2/450         tValue::tValue(int) [413]
                0.00    0.00       2/450         tValue::tValue(double) [412]
                0.00    0.00      15/450         tValue::tValue(long) [311]
                0.00    0.00      74/450         sExpr::sExpr() [212]
                0.00    0.00     353/450         tValue::tValue() [175]
[168]    0.0    0.00    0.00     450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       1/372         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       1/372         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       3/372         sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00      23/372         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      37/372         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      44/372         sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00     263/372         sRoutDef::typecheck(SymTable*, SymTable*) [77]
[169]    0.0    0.00    0.00     372         sDef::type() const [169]
                0.00    0.00     372/531         tType::tType(tType const&) [164]
-----------------------------------------------
                0.00    0.00       1/370         SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00       1/370         SymTab::getRef(std::string const&, ObjType*) const [180]
                0.00    0.00      44/370         sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00     324/370         SymTab::put(sDef*, tValue const&) [75]
[170]    0.0    0.00    0.00     370         sObject::isValueDef() const [170]
                0.00    0.00     576/1104        sArgDef::object() const [152]
                0.00    0.00      50/79          sVarDef::object() const [208]
                0.00    0.00      26/48          sConstDef::object() const [218]
                0.00    0.00      23/369         sQuOpDef::object() const [171]
                0.00    0.00      19/369         sQuFunDef::object() const [172]
                0.00    0.00       2/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00       6/369         sObject::isProcDef() const [320]
                0.00    0.00       9/369         sObject::isQuOpDef() const [282]
                0.00    0.00      10/369         sObject::isQuFunDef() const [266]
                0.00    0.00      19/369         sObject::isInclude() const [241]
                0.00    0.00      23/369         sObject::isValueDef() const [170]
                0.00    0.00      84/369         sObject::isDef() const [173]
                0.00    0.00      90/369         sObject::isRoutDef() const [186]
                0.00    0.00     128/369         sObject::isFunctDef() const [178]
[171]    0.0    0.00    0.00     369         sQuOpDef::object() const [171]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [320]
                0.00    0.00      10/369         sObject::isQuOpDef() const [282]
                0.00    0.00      13/369         sObject::isQuFunDef() const [266]
                0.00    0.00      16/369         sObject::isInclude() const [241]
                0.00    0.00      19/369         sObject::isValueDef() const [170]
                0.00    0.00      70/369         sObject::isDef() const [173]
                0.00    0.00      74/369         sObject::isRoutDef() const [186]
                0.00    0.00     162/369         sObject::isFunctDef() const [178]
[172]    0.0    0.00    0.00     369         sQuFunDef::object() const [172]
-----------------------------------------------
                0.00    0.00      41/365         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
                0.00    0.00     324/365         SymTab::put(sDef*, tValue const&) [75]
[173]    0.0    0.00    0.00     365         sObject::isDef() const [173]
                0.00    0.00     528/1104        sArgDef::object() const [152]
                0.00    0.00      84/369         sQuOpDef::object() const [171]
                0.00    0.00      70/369         sQuFunDef::object() const [172]
                0.00    0.00      24/79          sVarDef::object() const [208]
                0.00    0.00      16/48          sConstDef::object() const [218]
                0.00    0.00       6/58          sProcDef::object() const [215]
                0.00    0.00       1/8           sCall::object() const [335]
-----------------------------------------------
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00       1/362         SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00     133/362         SymTab::getDef(std::string const&) const [190]
                0.00    0.00     228/362         SymTab::getRef(std::string const&, ObjType*) const [180]
[174]    0.0    0.00    0.00     362+3328    SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00    7365/21427       sDef::id() const [146]
                0.00    0.00    3690/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [148]
                0.00    0.00    3202/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [147]
                0.00    0.00     473/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [149]
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [174]
-----------------------------------------------
                0.00    0.00       1/353         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [9]
                0.00    0.00       1/353         SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00       1/353         sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       1/353         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       2/353         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       2/353         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/353         sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       4/353         sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       6/353         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      21/353         sConst::sConst(tValue const&) [111]
                0.00    0.00      36/353         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [106]
                0.00    0.00     275/353         sRoutDef::typecheck(SymTable*, SymTable*) [77]
[175]    0.0    0.00    0.00     353         tValue::tValue() [175]
                0.00    0.00     353/1478        tType::tType(BaseType) [151]
                0.00    0.00     353/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [254]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [181]
[176]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [176]
                0.00    0.00     312/515         sObject::sObject(unsigned int) [165]
                0.00    0.00     312/1478        tType::tType(BaseType) [151]
                0.00    0.00     312/842         tType::operator=(tType const&) [156]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [355]
                0.00    0.00       8/312         sVarDef::~sVarDef() [343]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [255]
                0.00    0.00     263/312         sArgDef::~sArgDef() [183]
[177]    0.0    0.00    0.00     312         sDef::~sDef() [177]
                0.00    0.00     312/515         sObject::~sObject() [166]
-----------------------------------------------
                0.00    0.00      14/294         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      17/294         sObject::inFunctDef() const [295]
                0.00    0.00     263/294         sRoutDef::typecheck(SymTable*, SymTable*) [77]
[178]    0.0    0.00    0.00     294         sObject::isFunctDef() const [178]
                0.00    0.00     162/369         sQuFunDef::object() const [172]
                0.00    0.00     128/369         sQuOpDef::object() const [171]
                0.00    0.00       4/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [113]
[179]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [179]
-----------------------------------------------
                0.00    0.00       1/264         ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    0.00     263/264         sRoutDef::typecheck(SymTable*, SymTable*) [77]
[180]    0.0    0.00    0.00     264         SymTab::getRef(std::string const&, ObjType*) const [180]
                0.00    0.00     228/362         SymTab::getentry(SymTable::entry*, std::string const&) const [174]
                0.00    0.00       1/370         sObject::isValueDef() const [170]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [113]
[181]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [181]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [176]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [225]
[182]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [182]
                0.00    0.00     263/263         sArgDef::~sArgDef() [183]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [182]
[183]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [183]
                0.00    0.00     263/312         sDef::~sDef() [177]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [118]
[184]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [184]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [77]
[185]    0.0    0.00    0.00     263         tType::isQuReg() const [185]
-----------------------------------------------
                0.00    0.00       8/253         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      14/253         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00     231/253         sObject::def() const [188]
[186]    0.0    0.00    0.00     253         sObject::isRoutDef() const [186]
                0.00    0.00      90/369         sQuOpDef::object() const [171]
                0.00    0.00      78/78          sStmtList::object() const [209]
                0.00    0.00      74/369         sQuFunDef::object() const [172]
                0.00    0.00      34/34          sDefList::object() const [258]
                0.00    0.00      32/58          sProcDef::object() const [215]
                0.00    0.00      21/21          sIf::object() const [286]
                0.00    0.00      15/15          sFor::object() const [312]
                0.00    0.00       4/8           sCall::object() const [335]
                0.00    0.00       3/9           sMult::object() const [331]
-----------------------------------------------
                0.00    0.00       4/176         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       4/176         yyparse() [113]
                0.00    0.00      24/176         sStmt::sStmt(int) [272]
                0.00    0.00     144/176         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [254]
[187]    0.0    0.00    0.00     176         sObject::setFlag(ObjFlag, int) [187]
-----------------------------------------------
                                 155             sObject::def() const [188]
                0.00    0.00       1/167         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/167         sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00       5/167         sObject::isGlobal() const [357]
                0.00    0.00       6/167         sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00      14/167         sObject::inQuFunDef() const [319]
                0.00    0.00      18/167         sObject::inQuDef() const [305]
                0.00    0.00      19/167         sObject::inFunctDef() const [295]
                0.00    0.00      29/167         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      36/167         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      36/167         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [106]
[188]    0.0    0.00    0.00     167+155     sObject::def() const [188]
                0.00    0.00     784/881         sObject::parent() const [155]
                0.00    0.00     231/253         sObject::isRoutDef() const [186]
                                 155             sObject::def() const [188]
-----------------------------------------------
                0.00    0.00       1/165         sStmt::isInv() const [530]
                0.00    0.00       3/165         sObject::isBennet() const [399]
                0.00    0.00       5/165         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      28/165         sObject::isCondDef() const [268]
                0.00    0.00      55/165         sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      73/165         sObject::isExtern() const [213]
[189]    0.0    0.00    0.00     165         sObject::isSet(ObjFlag) const [189]
-----------------------------------------------
                0.00    0.00       1/135         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       1/135         sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       2/135         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       3/135         sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       7/135         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      32/135         sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00      36/135         sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      53/135         SymTabComb::getDef(std::string const&) const [267]
[190]    0.0    0.00    0.00     135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00     133/362         SymTab::getentry(SymTable::entry*, std::string const&) const [174]
-----------------------------------------------
                0.00    0.00      41/123         std::list<sObject*, std::allocator<sObject*> >::end() [247]
                0.00    0.00      82/123         std::list<sObject*, std::allocator<sObject*> >::begin() [206]
[191]    0.0    0.00    0.00     123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00       1/115         sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       2/115         tType::isConv(tType const&) const [288]
                0.00    0.00       3/115         sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       4/115         sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       7/115         tValue::isQuExpr() const [345]
                0.00    0.00       8/115         sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00      11/115         sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      21/115         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      26/115         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      32/115         tType::isQuCond() const [259]
[192]    0.0    0.00    0.00     115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00       4/109         sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       4/109         sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/109         sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00      16/109         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      18/109         sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      19/109         sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00      44/109         sVar::typecheck(SymTable*, SymTable*) [220]
[193]    0.0    0.00    0.00     109         sExpr::settype(tType const&) [193]
                0.00    0.00     109/842         tType::operator=(tType const&) [156]
-----------------------------------------------
                0.00    0.00       1/96          sExit::typecheck(SymTable*, SymTable*) [504]
                0.00    0.00       1/96          sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       3/96          sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       4/96          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       4/96          sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       5/96          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       6/96          sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       7/96          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00       8/96          sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00      21/96          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      36/96          sBinOp::typecheck(SymTable*, SymTable*) [321]
[194]    0.0    0.00    0.00      96         sExpr::type() [194]
                0.00    0.00      96/531         tType::tType(tType const&) [164]
-----------------------------------------------
                0.00    0.00       4/95          sSubscript::~sSubscript() <cycle 1> [369]
                0.00    0.00       4/95          sUnOp::~sUnOp() [376]
                0.00    0.00       4/95          sListFunct::~sListFunct() <cycle 1> [365]
                0.00    0.00      18/95          sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00      21/95          sConst::~sConst() [285]
                0.00    0.00      44/95          sVar::~sVar() [223]
[195]    0.0    0.00    0.00      95         sExpr::~sExpr() [195]
                0.00    0.00      95/515         sObject::~sObject() [166]
-----------------------------------------------
                0.00    0.00       1/95          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      14/95          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      36/95          sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      44/95          sDefList::typecheck(SymTable*, SymTable*) [118]
[196]    0.0    0.00    0.00      95         sList<sDef>::first(void*&) const [196]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00      77/87          SymTab::SymTab(int) [210]
[197]    0.0    0.00    0.00      87         SymTable::SymTable() [197]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::~SymTabComb() [329]
                0.00    0.00      77/87          SymTab::~SymTab() [211]
[198]    0.0    0.00    0.00      87         SymTable::~SymTable() [198]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() const [231]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::end() const [229]
[199]    0.0    0.00    0.00      86         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [199]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
[200]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::new_allocator() [200]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::~allocator() [205]
[201]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
[202]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [203]
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
[203]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [203]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
[204]    0.0    0.00    0.00      82         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::new_allocator() [200]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
[205]    0.0    0.00    0.00      82         std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::front() [248]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::pop_front() [251]
[206]    0.0    0.00    0.00      82         std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      82/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
[207]    0.0    0.00    0.00      82         sObject** std::__addressof<sObject*>(sObject*&) [207]
-----------------------------------------------
                0.00    0.00       1/79          sObject::isConstDef() const [385]
                0.00    0.00       1/79          sObject::isInclude() const [241]
                0.00    0.00       1/79          SymTab::getVal(std::string const&, ObjType*) const [123]
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00      24/79          sObject::isDef() const [173]
                0.00    0.00      50/79          sObject::isValueDef() const [170]
[208]    0.0    0.00    0.00      79         sVarDef::object() const [208]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [186]
[209]    0.0    0.00    0.00      78         sStmtList::object() const [209]
-----------------------------------------------
                0.00    0.00       1/77          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       2/77          main [2]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [77]
[210]    0.0    0.00    0.00      77         SymTab::SymTab(int) [210]
                0.00    0.00      77/87          SymTable::SymTable() [197]
-----------------------------------------------
                0.00    0.00       1/77          SymTab::~SymTab() [509]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       2/77          main [2]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [77]
[211]    0.0    0.00    0.00      77         SymTab::~SymTab() [211]
                0.00    0.00      77/87          SymTable::~SymTable() [198]
                0.00    0.00      48/48          SymTab::deltree(SymTable::entry*) [217]
-----------------------------------------------
                0.00    0.00       4/74          sSubscript::sSubscript(sVar*, sExprList*) [367]
                0.00    0.00       4/74          sUnOp::sUnOp(sExpr*) [375]
                0.00    0.00       4/74          sListFunct::sListFunct(ObjType, sExprList*) [363]
                0.00    0.00      18/74          sBinOp::sBinOp(sExpr*, sExpr*) [298]
                0.00    0.00      44/74          sVar::sVar(std::string*) [221]
[212]    0.0    0.00    0.00      74         sExpr::sExpr() [212]
                0.00    0.00      74/515         sObject::sObject(unsigned int) [165]
                0.00    0.00      74/1478        tType::tType(BaseType) [151]
                0.00    0.00      74/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       1/73          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [9]
                0.00    0.00      36/73          sRoutDef::~sRoutDef() [255]
                0.00    0.00      36/73          sRoutDef::typecheck(SymTable*, SymTable*) [77]
[213]    0.0    0.00    0.00      73         sObject::isExtern() const [213]
                0.00    0.00      73/165         sObject::isSet(ObjFlag) const [189]
-----------------------------------------------
                0.00    0.00       1/63          sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       3/63          sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
                0.00    0.00      21/63          sConst::sConst(tValue const&) [111]
                0.00    0.00      38/63          sConst::typecheck(SymTable*, SymTable*) [290]
[214]    0.0    0.00    0.00      63         tValue::type() const [214]
                0.00    0.00      63/531         tType::tType(tType const&) [164]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [241]
                0.00    0.00       2/58          sObject::isValueDef() const [170]
                0.00    0.00       3/58          sObject::isProcDef() const [320]
                0.00    0.00       3/58          sObject::isQuOpDef() const [282]
                0.00    0.00       4/58          sObject::isFunctDef() const [178]
                0.00    0.00       6/58          sObject::isDef() const [173]
                0.00    0.00       7/58          sObject::isQuFunDef() const [266]
                0.00    0.00      32/58          sObject::isRoutDef() const [186]
[215]    0.0    0.00    0.00      58         sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00       2/52          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       2/52          sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00      48/52          sVar::typecheck(SymTable*, SymTable*) [220]
[216]    0.0    0.00    0.00      52         sVar::id() const [216]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [217]
                0.00    0.00      48/48          SymTab::~SymTab() [211]
[217]    0.0    0.00    0.00      48+276     SymTab::deltree(SymTable::entry*) [217]
                0.00    0.00     280/663         tValue::~tValue() [162]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [292]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [309]
                0.00    0.00       3/5           sConstDef::~sConstDef() [354]
                0.00    0.00       1/1           sProcDef::~sProcDef() [515]
                0.00    0.00       1/7           sVarDef::~sVarDef() [342]
                                 276             SymTab::deltree(SymTable::entry*) [217]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [385]
                0.00    0.00       3/48          sObject::isInclude() const [241]
                0.00    0.00      16/48          sObject::isDef() const [173]
                0.00    0.00      26/48          sObject::isValueDef() const [170]
[218]    0.0    0.00    0.00      48         sConstDef::object() const [218]
-----------------------------------------------
                0.00    0.00       2/46          QuHeap::QuHeap(int, int) [73]
                0.00    0.00      44/46          operator~(bitvec const&) [94]
[219]    0.0    0.00    0.00      46         bitvec::qnot() [219]
-----------------------------------------------
                0.00    0.00       2/44          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       4/44          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       4/44          sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       4/44          sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       6/44          sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      12/44          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      12/44          sBinOp::typecheck(SymTable*, SymTable*) [321]
[220]    0.0    0.00    0.00      44         sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00      48/52          sVar::id() const [216]
                0.00    0.00      44/370         sObject::isValueDef() const [170]
                0.00    0.00      44/372         sDef::type() const [169]
                0.00    0.00      44/109         sExpr::settype(tType const&) [193]
                0.00    0.00      32/135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [267]
                0.00    0.00       4/4           sObject::isConstDef() const [385]
                0.00    0.00       1/5           sObject::isGlobal() const [357]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [113]
[221]    0.0    0.00    0.00      44         sVar::sVar(std::string*) [221]
                0.00    0.00      44/74          sExpr::sExpr() [212]
-----------------------------------------------
                0.00    0.00       2/44          sFor::~sFor() <cycle 2> [407]
                0.00    0.00       4/44          sSubscript::~sSubscript() <cycle 1> [369]
                0.00    0.00       4/44          sUnOp::~sUnOp() [376]
                0.00    0.00       4/44          sVarDef::~sVarDef() [343]
                0.00    0.00      12/44          sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00      18/44          sList<sExpr>::~sList() <cycle 1> [278]
[222]    0.0    0.00    0.00      44         sVar::~sVar() [222]
                0.00    0.00      44/44          sVar::~sVar() [223]
-----------------------------------------------
                0.00    0.00      44/44          sVar::~sVar() [222]
[223]    0.0    0.00    0.00      44         sVar::~sVar() [223]
                0.00    0.00      44/95          sExpr::~sExpr() [195]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [226]
[224]    0.0    0.00    0.00      44         sList<sDef>::sList() [224]
                0.00    0.00      44/515         sObject::sObject(unsigned int) [165]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [228]
[225]    0.0    0.00    0.00      44         sList<sDef>::~sList() [225]
                0.00    0.00     263/263         sArgDef::~sArgDef() [182]
                0.00    0.00      44/515         sObject::~sObject() [166]
                0.00    0.00       6/7           sVarDef::~sVarDef() [342]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [113]
[226]    0.0    0.00    0.00      44         sDefList::sDefList() [226]
                0.00    0.00      44/44          sList<sDef>::sList() [224]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [255]
[227]    0.0    0.00    0.00      44         sDefList::~sDefList() [227]
                0.00    0.00      44/44          sDefList::~sDefList() [228]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [227]
[228]    0.0    0.00    0.00      44         sDefList::~sDefList() [228]
                0.00    0.00      44/44          sList<sDef>::~sList() [225]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [230]
[229]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() const [229]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [199]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[230]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::size() const [230]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::begin() const [231]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() const [229]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [234]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [230]
[231]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::begin() const [231]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [199]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [234]
[232]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [232]
                0.00    0.00     826/826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [157]
                0.00    0.00     783/783         std::_List_const_iterator<sObject*>::operator++() [158]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [234]
[233]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [233]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [230]
[234]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [234]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [233]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [232]
-----------------------------------------------
                0.00    0.00       1/42          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [124]
                0.00    0.00      41/42          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [237]
[235]    0.0    0.00    0.00      42         operator new(unsigned long, void*) [235]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
[236]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [236]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
[237]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [237]
                0.00    0.00      41/42          operator new(unsigned long, void*) [235]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [245]
[238]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [238]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [244]
[239]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [239]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [242]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [321]
[240]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [240]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[241]    0.0    0.00    0.00      41         sObject::isInclude() const [241]
                0.00    0.00      19/369         sQuOpDef::object() const [171]
                0.00    0.00      16/369         sQuFunDef::object() const [172]
                0.00    0.00       3/48          sConstDef::object() const [218]
                0.00    0.00       1/8           sCall::object() const [335]
                0.00    0.00       1/79          sVarDef::object() const [208]
                0.00    0.00       1/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [239]
[242]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [242]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [248]
[243]    0.0    0.00    0.00      41         std::_List_iterator<sObject*>::operator*() const [243]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
[244]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [244]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [239]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
[245]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [245]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [238]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [250]
[246]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [244]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [207]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [237]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [252]
[247]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::end() [247]
                0.00    0.00      41/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[248]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::front() [248]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      41/41          std::_List_iterator<sObject*>::operator*() const [243]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [251]
[249]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [207]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [236]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [245]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [252]
[250]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [250]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [246]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[251]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::pop_front() [251]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [249]
-----------------------------------------------
                0.00    0.00      41/41          yyparse() [113]
[252]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [252]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::end() [247]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [250]
-----------------------------------------------
                0.00    0.00       2/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      35/37          sCall::typecheck(SymTable*, SymTable*) [314]
[253]    0.0    0.00    0.00      37         sRoutDef::args() [253]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [514]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
[254]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [254]
                0.00    0.00     144/176         sObject::setFlag(ObjFlag, int) [187]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [176]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [516]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [310]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [293]
[255]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [255]
                0.00    0.00      44/44          sDefList::~sDefList() [227]
                0.00    0.00      36/73          sObject::isExtern() const [213]
                0.00    0.00      36/312         sDef::~sDef() [177]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [302]
-----------------------------------------------
                0.00    0.00       1/36          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       4/36          sListFunct::sListFunct(ObjType, sExprList*) [363]
                0.00    0.00       4/36          sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       6/36          sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      21/36          sCall::typecheck(SymTable*, SymTable*) [314]
[256]    0.0    0.00    0.00      36         sList<sExpr>::next(void*&) const [256]
-----------------------------------------------
                0.00    0.00       1/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       4/35          sSubscript::sSubscript(sVar*, sExprList*) [367]
                0.00    0.00       4/35          sListFunct::sListFunct(ObjType, sExprList*) [363]
                0.00    0.00       4/35          sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       8/35          sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00      14/35          sCall::typecheck(SymTable*, SymTable*) [314]
[257]    0.0    0.00    0.00      35         sList<sExpr>::first(void*&) const [257]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [186]
[258]    0.0    0.00    0.00      34         sDefList::object() const [258]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00      14/32          tType::isCond() const [318]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
[259]    0.0    0.00    0.00      32         tType::isQuCond() const [259]
                0.00    0.00      32/115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00       1/31          quBaseState::~quBaseState() [41]
                0.00    0.00      30/31          quSubState::~quSubState() [261]
[260]    0.0    0.00    0.00      31         quState::~quState() [260]
-----------------------------------------------
                0.00    0.00      30/30          quSubString::~quSubString() [263]
[261]    0.0    0.00    0.00      30         quSubState::~quSubState() [261]
                0.00    0.00      30/30          quBaseState::isbasestate() const [264]
                0.00    0.00      30/31          quState::~quState() [260]
-----------------------------------------------
                0.00    0.00      10/30          tValue::delpointer() [159]
                0.00    0.00      20/30          ext_bit(sRoutDef const*, SymTable const*, int) [6]
[262]    0.0    0.00    0.00      30         quSubString::~quSubString() [262]
                0.00    0.00      30/30          quSubString::~quSubString() [263]
-----------------------------------------------
                0.00    0.00      30/30          quSubString::~quSubString() [262]
[263]    0.0    0.00    0.00      30         quSubString::~quSubString() [263]
                0.00    0.00      30/30          quSubState::~quSubState() [261]
-----------------------------------------------
                0.00    0.00      30/30          quSubState::~quSubState() [261]
[264]    0.0    0.00    0.00      30         quBaseState::isbasestate() const [264]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [321]
[265]    0.0    0.00    0.00      30         tType::isNumber() const [265]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       9/30          sObject::isQuDef() const [306]
                0.00    0.00      13/30          sObject::inQuFunDef() const [319]
[266]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [266]
                0.00    0.00      13/369         sQuFunDef::object() const [172]
                0.00    0.00      10/369         sQuOpDef::object() const [171]
                0.00    0.00       7/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [220]
[267]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [267]
                0.00    0.00      53/135         SymTab::getDef(std::string const&) const [190]
-----------------------------------------------
                0.00    0.00       1/28          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [7]
                0.00    0.00       1/28          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       4/28          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       8/28          sRoutDef::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      14/28          sCall::typecheck(SymTable*, SymTable*) [314]
[268]    0.0    0.00    0.00      28         sObject::isCondDef() const [268]
                0.00    0.00      28/165         sObject::isSet(ObjFlag) const [189]
-----------------------------------------------
                0.00    0.00      27/27          yyparse() [113]
[269]    0.0    0.00    0.00      27         sList<sExpr>::append(sExpr*) [269]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [112]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [326]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [307]
[270]    0.0    0.00    0.00      26         yy_load_buffer_state() [270]
-----------------------------------------------
                0.00    0.00      25/25          sCall::typecheck(SymTable*, SymTable*) [314]
[271]    0.0    0.00    0.00      25         tType::isQuConst() const [271]
-----------------------------------------------
                0.00    0.00       1/24          sExit::sExit(sExpr*) [505]
                0.00    0.00       2/24          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [405]
                0.00    0.00       7/24          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [339]
                0.00    0.00      14/24          sCall::sCall(std::string*, sExprList*, int) [315]
[272]    0.0    0.00    0.00      24         sStmt::sStmt(int) [272]
                0.00    0.00      24/515         sObject::sObject(unsigned int) [165]
                0.00    0.00      24/176         sObject::setFlag(ObjFlag, int) [187]
-----------------------------------------------
                0.00    0.00       1/24          sExit::~sExit() [507]
                0.00    0.00       2/24          sFor::~sFor() <cycle 2> [407]
                0.00    0.00       7/24          sIf::~sIf() <cycle 2> [341]
                0.00    0.00      14/24          sCall::~sCall() [317]
[273]    0.0    0.00    0.00      24         sStmt::~sStmt() [273]
                0.00    0.00      24/515         sObject::~sObject() [166]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [113]
[274]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [274]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[275]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [275]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00      14/23          tType::isCond() const [318]
[276]    0.0    0.00    0.00      23         tType::isBoolean() const [276]
-----------------------------------------------
                0.00    0.00      22/22          sExprList::sExprList() [279]
[277]    0.0    0.00    0.00      22         sList<sExpr>::sList() [277]
                0.00    0.00      22/515         sObject::sObject(unsigned int) [165]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [281]
[278]    0.0    0.00    0.00      22         sList<sExpr>::~sList() <cycle 1> [278]
                0.00    0.00      22/515         sObject::~sObject() [166]
                0.00    0.00      18/44          sVar::~sVar() [222]
                                   4             sSubscript::~sSubscript() <cycle 1> [368]
                                   3             sMult::~sMult() <cycle 1> [347]
                                   2             sConcat::~sConcat() <cycle 1> [416]
-----------------------------------------------
                0.00    0.00      22/22          yyparse() [113]
[279]    0.0    0.00    0.00      22         sExprList::sExprList() [279]
                0.00    0.00      22/22          sList<sExpr>::sList() [277]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [369]
                                   4             sListFunct::~sListFunct() <cycle 1> [365]
                0.00    0.00      14/23          sCall::~sCall() [317]
[280]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [280]
                                  22             sExprList::~sExprList() <cycle 1> [281]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [280]
[281]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [281]
                                  22             sList<sExpr>::~sList() <cycle 1> [278]
-----------------------------------------------
                0.00    0.00       4/22          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      18/22          sObject::isQuDef() const [306]
[282]    0.0    0.00    0.00      22         sObject::isQuOpDef() const [282]
                0.00    0.00      10/369         sQuFunDef::object() const [172]
                0.00    0.00       9/369         sQuOpDef::object() const [171]
                0.00    0.00       3/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [111]
[283]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [283]
                0.00    0.00      21/515         sObject::sObject(unsigned int) [165]
                0.00    0.00      21/1478        tType::tType(BaseType) [151]
                0.00    0.00      21/842         tType::operator=(tType const&) [156]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [507]
                0.00    0.00       1/21          sVarDef::~sVarDef() [343]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [407]
                0.00    0.00       5/21          sConstDef::~sConstDef() [355]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [299]
[284]    0.0    0.00    0.00      21         sConst::~sConst() [284]
                0.00    0.00      21/21          sConst::~sConst() [285]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [284]
[285]    0.0    0.00    0.00      21         sConst::~sConst() [285]
                0.00    0.00      21/95          sExpr::~sExpr() [195]
                0.00    0.00      21/663         tValue::~tValue() [162]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [186]
[286]    0.0    0.00    0.00      21         sIf::object() const [286]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       2/21          tValue::isInt() const [425]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       8/21          tType::isOrdered() const [337]
[287]    0.0    0.00    0.00      21         tType::isInt() const [287]
-----------------------------------------------
                0.00    0.00      21/21          sCall::typecheck(SymTable*, SymTable*) [314]
[288]    0.0    0.00    0.00      21         tType::isConv(tType const&) const [288]
                0.00    0.00       2/115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00      20/20          quBaseState::baseterms() const [60]
[289]    0.0    0.00    0.00      20         termlist::nterms() const [289]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [504]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [321]
[290]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00      38/63          tValue::type() const [214]
                0.00    0.00      19/19          tType::isDefined() const [294]
                0.00    0.00      19/109         sExpr::settype(tType const&) [193]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [113]
[291]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [291]
                0.00    0.00      19/1478        tType::tType(BaseType) [151]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [254]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [217]
[292]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [292]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [293]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [292]
[293]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [293]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [255]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [290]
[294]    0.0    0.00    0.00      19         tType::isDefined() const [294]
-----------------------------------------------
                0.00    0.00       5/19          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      14/19          sCall::typecheck(SymTable*, SymTable*) [314]
[295]    0.0    0.00    0.00      19         sObject::inFunctDef() const [295]
                0.00    0.00      19/167         sObject::def() const [188]
                0.00    0.00      17/294         sObject::isFunctDef() const [178]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [301]
[296]    0.0    0.00    0.00      18         sList<sStmt>::sList() [296]
                0.00    0.00      18/515         sObject::sObject(unsigned int) [165]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [303]
[297]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [297]
                0.00    0.00      18/515         sObject::~sObject() [166]
                0.00    0.00      13/14          sCall::~sCall() [316]
                0.00    0.00       1/1           sExit::~sExit() [506]
                                   7             sIf::~sIf() <cycle 2> [340]
                                   2             sFor::~sFor() <cycle 2> [406]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [500]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [408]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [415]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [393]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [371]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [346]
[298]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [298]
                0.00    0.00      18/74          sExpr::sExpr() [212]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [417]
                                   4             sLess::~sLess() <cycle 1> [373]
                                   6             sMult::~sMult() <cycle 1> [348]
                0.00    0.00       1/23          sOr::~sOr() [502]
                0.00    0.00       2/23          sSub::~sSub() [410]
                0.00    0.00       3/23          sEqual::~sEqual() [395]
[299]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00      18/95          sExpr::~sExpr() [195]
                0.00    0.00      12/21          sConst::~sConst() [284]
                0.00    0.00      12/44          sVar::~sVar() [222]
                0.00    0.00       4/4           sLength::~sLength() [378]
                                   3             sMult::~sMult() <cycle 1> [347]
                                   3             sListFunct::~sListFunct() <cycle 1> [364]
                                   2             sLess::~sLess() <cycle 1> [372]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [77]
[300]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
                0.00    0.00      23/455         sObject::setParent(sObject*) [167]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [275]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [304]
                0.00    0.00      13/14          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [504]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [113]
[301]    0.0    0.00    0.00      18         sStmtList::sStmtList() [301]
                0.00    0.00      18/18          sList<sStmt>::sList() [296]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [407]
                                   8             sIf::~sIf() <cycle 2> [341]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [255]
[302]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [302]
                                  18             sStmtList::~sStmtList() <cycle 2> [303]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [302]
[303]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [303]
                                  18             sList<sStmt>::~sList() <cycle 2> [297]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[304]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [304]
-----------------------------------------------
                0.00    0.00       4/18          sVarDef::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00      14/18          sCall::typecheck(SymTable*, SymTable*) [314]
[305]    0.0    0.00    0.00      18         sObject::inQuDef() const [305]
                0.00    0.00      18/167         sObject::def() const [188]
                0.00    0.00      17/18          sObject::isQuDef() const [306]
-----------------------------------------------
                0.00    0.00       1/18          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      17/18          sObject::inQuDef() const [305]
[306]    0.0    0.00    0.00      18         sObject::isQuDef() const [306]
                0.00    0.00      18/22          sObject::isQuOpDef() const [282]
                0.00    0.00       9/30          sObject::isQuFunDef() const [266]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [404]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [360]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
[307]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [307]
                0.00    0.00      15/26          yy_load_buffer_state() [270]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [113]
[308]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [308]
                0.00    0.00      16/1478        tType::tType(BaseType) [151]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [254]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [217]
[309]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [309]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [310]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [309]
[310]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [310]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [255]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [112]
[311]    0.0    0.00    0.00      15         tValue::tValue(long) [311]
                0.00    0.00      15/1478        tType::tType(BaseType) [151]
                0.00    0.00      15/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [186]
[312]    0.0    0.00    0.00      15         sFor::object() const [312]
-----------------------------------------------
                0.00    0.00       1/15          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00      14/15          sCall::typecheck(SymTable*, SymTable*) [314]
[313]    0.0    0.00    0.00      15         sCall::id() const [313]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
                0.00    0.00      13/14          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[314]    0.0    0.00    0.00      14         sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00      42/842         tType::operator=(tType const&) [156]
                0.00    0.00      37/372         sDef::type() const [169]
                0.00    0.00      35/37          sRoutDef::args() [253]
                0.00    0.00      28/1478        tType::tType(BaseType) [151]
                0.00    0.00      25/25          tType::isQuConst() const [271]
                0.00    0.00      21/455         sObject::setParent(sObject*) [167]
                0.00    0.00      21/96          sExpr::type() [194]
                0.00    0.00      21/21          tType::isConv(tType const&) const [288]
                0.00    0.00      21/115         tType::isQuExpr() const [192]
                0.00    0.00      21/36          sList<sExpr>::next(void*&) const [256]
                0.00    0.00      21/554         sList<sDef>::next(void*&) const [163]
                0.00    0.00      16/109         sExpr::settype(tType const&) [193]
                0.00    0.00      14/15          sCall::id() const [313]
                0.00    0.00      14/253         sObject::isRoutDef() const [186]
                0.00    0.00      14/294         sObject::isFunctDef() const [178]
                0.00    0.00      14/19          sObject::inFunctDef() const [295]
                0.00    0.00      14/18          sObject::inQuDef() const [305]
                0.00    0.00      14/28          sObject::isCondDef() const [268]
                0.00    0.00      14/14          sObject::inQuFunDef() const [319]
                0.00    0.00      14/35          sList<sExpr>::first(void*&) const [257]
                0.00    0.00      14/95          sList<sDef>::first(void*&) const [196]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [267]
                0.00    0.00      13/13          sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00      10/14          sObject::isProcDef() const [320]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       4/22          sObject::isQuOpDef() const [282]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [190]
-----------------------------------------------
                0.00    0.00      14/14          yyparse() [113]
[315]    0.0    0.00    0.00      14         sCall::sCall(std::string*, sExprList*, int) [315]
                0.00    0.00      14/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
                0.00    0.00      13/14          sList<sStmt>::~sList() <cycle 2> [297]
[316]    0.0    0.00    0.00      14         sCall::~sCall() [316]
                0.00    0.00      14/14          sCall::~sCall() [317]
-----------------------------------------------
                0.00    0.00      14/14          sCall::~sCall() [316]
[317]    0.0    0.00    0.00      14         sCall::~sCall() [317]
                0.00    0.00      14/23          sExprList::~sExprList() <cycle 1> [280]
                0.00    0.00      14/24          sStmt::~sStmt() [273]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [321]
[318]    0.0    0.00    0.00      14         tType::isCond() const [318]
                0.00    0.00      14/32          tType::isQuCond() const [259]
                0.00    0.00      14/23          tType::isBoolean() const [276]
-----------------------------------------------
                0.00    0.00      14/14          sCall::typecheck(SymTable*, SymTable*) [314]
[319]    0.0    0.00    0.00      14         sObject::inQuFunDef() const [319]
                0.00    0.00      14/167         sObject::def() const [188]
                0.00    0.00      13/30          sObject::isQuFunDef() const [266]
-----------------------------------------------
                0.00    0.00       1/14          sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       3/14          sObject::isGlobal() const [357]
                0.00    0.00      10/14          sCall::typecheck(SymTable*, SymTable*) [314]
[320]    0.0    0.00    0.00      14         sObject::isProcDef() const [320]
                0.00    0.00       6/369         sQuOpDef::object() const [171]
                0.00    0.00       5/369         sQuFunDef::object() const [172]
                0.00    0.00       3/58          sProcDef::object() const [215]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [314]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
[321]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00      52/1478        tType::tType(BaseType) [151]
                0.00    0.00      36/455         sObject::setParent(sObject*) [167]
                0.00    0.00      36/96          sExpr::type() [194]
                0.00    0.00      36/842         tType::operator=(tType const&) [156]
                0.00    0.00      36/1052        tType::ord() const [153]
                0.00    0.00      30/30          tType::isNumber() const [265]
                0.00    0.00      26/115         tType::isQuExpr() const [192]
                0.00    0.00      25/41          tType::operator==(BaseType) const [240]
                0.00    0.00      18/109         sExpr::settype(tType const&) [193]
                0.00    0.00      14/14          tType::isCond() const [318]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       8/8           tType::isOrdered() const [337]
                0.00    0.00       6/9           sMult::object() const [331]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/4           sLess::object() const [383]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       3/3           sEqual::object() const [397]
                0.00    0.00       2/2           sSub::object() const [423]
                0.00    0.00       2/2           sConcat::object() const [427]
                0.00    0.00       2/23          tType::isBoolean() const [276]
                0.00    0.00       2/7           tType::operator==(tType const&) const [344]
                0.00    0.00       1/1           sOr::object() const [529]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [321]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      13/13          sCall::typecheck(SymTable*, SymTable*) [314]
[322]    0.0    0.00    0.00      13+42      sObject::isSetRec(ObjFlag) [322]
                0.00    0.00      97/881         sObject::parent() const [155]
                0.00    0.00      55/165         sObject::isSet(ObjFlag) const [189]
                                  42             sObject::isSetRec(ObjFlag) [322]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [112]
[323]    0.0    0.00    0.00      12         yy_get_next_buffer() [323]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [326]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [468]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [326]
[324]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [307]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [493]
                0.00    0.00      10/11          openqclfile(std::string) [361]
[325]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [325]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [404]
                0.00    0.00       4/10          yy_get_next_buffer() [323]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [360]
[326]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [326]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
                0.00    0.00      10/26          yy_load_buffer_state() [270]
                0.00    0.00       1/1           yyensure_buffer_stack() [495]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [468]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [77]
[327]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [327]
                0.00    0.00      10/87          SymTable::SymTable() [197]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [77]
[328]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [328]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [329]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [328]
[329]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [329]
                0.00    0.00      10/87          SymTable::~SymTable() [198]
-----------------------------------------------
                0.00    0.00      10/10          tValue::delpointer() [159]
[330]    0.0    0.00    0.00      10         quSubState::isbasestate() const [330]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [186]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [321]
[331]    0.0    0.00    0.00       9         sMult::object() const [331]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [112]
[332]    0.0    0.00    0.00       8         yy_get_previous_state() [332]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [471]
                0.00    0.00       7/8           yyparse() [113]
[333]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [176]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [362]
[334]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       8/35          sList<sExpr>::first(void*&) const [257]
                0.00    0.00       6/455         sObject::setParent(sObject*) [167]
                0.00    0.00       6/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       6/36          sList<sExpr>::next(void*&) const [256]
-----------------------------------------------
                0.00    0.00       1/8           sObject::isDef() const [173]
                0.00    0.00       1/8           sObject::isInclude() const [241]
                0.00    0.00       2/8           sObject::isStmt() const [535]
                0.00    0.00       4/8           sObject::isRoutDef() const [186]
[335]    0.0    0.00    0.00       8         sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [382]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [362]
[336]    0.0    0.00    0.00       8         sList<sExpr>::n() const [336]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [321]
[337]    0.0    0.00    0.00       8         tType::isOrdered() const [337]
                0.00    0.00       8/21          tType::isInt() const [287]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[338]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00      15/455         sObject::setParent(sObject*) [167]
                0.00    0.00      14/32          tType::isQuCond() const [259]
                0.00    0.00       7/23          tType::isBoolean() const [276]
                0.00    0.00       7/96          sExpr::type() [194]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [362]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [113]
[339]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [339]
                0.00    0.00       7/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [297]
[340]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [340]
                                   7             sIf::~sIf() <cycle 2> [341]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [340]
[341]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [341]
                0.00    0.00       7/24          sStmt::~sStmt() [273]
                0.00    0.00       3/3           sEqual::~sEqual() [394]
                0.00    0.00       2/23          sLess::~sLess() <cycle 1> [372]
                0.00    0.00       1/23          sListFunct::~sListFunct() <cycle 1> [364]
                0.00    0.00       1/1           sOr::~sOr() [501]
                                   8             sStmtList::~sStmtList() <cycle 2> [302]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [217]
                0.00    0.00       6/7           sList<sDef>::~sList() [225]
[342]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [342]
                0.00    0.00       7/7           sVarDef::~sVarDef() [343]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [342]
[343]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [343]
                0.00    0.00       8/312         sDef::~sDef() [177]
                0.00    0.00       4/44          sVar::~sVar() [222]
                0.00    0.00       1/21          sConst::~sConst() [284]
-----------------------------------------------
                0.00    0.00       1/7           tValue::conv(tType const&) const [125]
                0.00    0.00       1/7           sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
                0.00    0.00       2/7           sBinOp::typecheck(SymTable*, SymTable*) [321]
                0.00    0.00       3/7           sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
[344]    0.0    0.00    0.00       7         tType::operator==(tType const&) const [344]
-----------------------------------------------
                0.00    0.00       1/7           ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    0.00       1/7           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       5/7           tValue::qustate() const [356]
[345]    0.0    0.00    0.00       7         tValue::isQuExpr() const [345]
                0.00    0.00       7/115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [113]
[346]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [346]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [299]
                                   3             sList<sExpr>::~sList() <cycle 1> [278]
[347]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [347]
                                   6             sMult::~sMult() <cycle 1> [348]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [347]
[348]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [348]
                                   6             sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       6/6           tValue::isError() const [350]
[349]    0.0    0.00    0.00       6         tType::isError() const [349]
-----------------------------------------------
                0.00    0.00       1/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
                0.00    0.00       2/6           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/6           sConstDef::define(SymTable*, SymTable*, QuHeap*) [114]
[350]    0.0    0.00    0.00       6         tValue::isError() const [350]
                0.00    0.00       6/6           tType::isError() const [349]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [361]
[351]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [351]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [396]
[352]    0.0    0.00    0.00       5         sDef::settype(tType const&) [352]
                0.00    0.00       5/842         tType::operator=(tType const&) [156]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       3/5           yyparse() [113]
[353]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [353]
                0.00    0.00       5/1478        tType::tType(BaseType) [151]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [176]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [217]
[354]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [354]
                0.00    0.00       5/5           sConstDef::~sConstDef() [355]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [354]
[355]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [355]
                0.00    0.00       5/21          sConst::~sConst() [284]
                0.00    0.00       5/312         sDef::~sDef() [177]
-----------------------------------------------
                0.00    0.00       1/5           ext_bit(sRoutDef const*, SymTable const*, int) [6]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/5           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[356]    0.0    0.00    0.00       5         tValue::qustate() const [356]
                0.00    0.00       5/7           tValue::isQuExpr() const [345]
-----------------------------------------------
                0.00    0.00       1/5           sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
                0.00    0.00       3/5           sObject::isLocal() const [398]
[357]    0.0    0.00    0.00       5         sObject::isGlobal() const [357]
                0.00    0.00       5/167         sObject::def() const [188]
                0.00    0.00       3/14          sObject::isProcDef() const [320]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [359]
[358]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
-----------------------------------------------
                0.00    0.00       1/5           main [2]
                0.00    0.00       4/5           openqclfile(std::string) [361]
[359]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [359]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [116]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[360]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [360]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [307]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [326]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[361]    0.0    0.00    0.00       4         openqclfile(std::string) [361]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [325]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [351]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [359]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [338]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [321]
[362]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [362]
                0.00    0.00       8/1478        tType::tType(BaseType) [151]
                0.00    0.00       4/353         tValue::tValue() [175]
                0.00    0.00       4/455         sObject::setParent(sObject*) [167]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/8           sList<sExpr>::n() const [336]
                0.00    0.00       4/4           sListFunct::object() const [381]
                0.00    0.00       4/109         sExpr::settype(tType const&) [193]
                0.00    0.00       4/663         tValue::~tValue() [162]
                0.00    0.00       3/96          sExpr::type() [194]
                0.00    0.00       3/3           sObject::isLocal() const [398]
                0.00    0.00       2/21          tType::isInt() const [287]
                0.00    0.00       1/842         tType::operator=(tType const&) [156]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[363]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [363]
                0.00    0.00       4/74          sExpr::sExpr() [212]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [257]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [256]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00       1/23          sIf::~sIf() <cycle 2> [341]
[364]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [364]
                                   4             sListFunct::~sListFunct() <cycle 1> [365]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [364]
[365]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [365]
                0.00    0.00       4/95          sExpr::~sExpr() [195]
                                   4             sExprList::~sExprList() <cycle 1> [280]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [314]
[366]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [366]
                0.00    0.00       8/455         sObject::setParent(sObject*) [167]
                0.00    0.00       8/96          sExpr::type() [194]
                0.00    0.00       8/115         tType::isQuExpr() const [192]
                0.00    0.00       8/1052        tType::ord() const [153]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [334]
                0.00    0.00       4/4           sSubscript::nargs() const [382]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [257]
                0.00    0.00       4/21          tType::isInt() const [287]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [256]
                0.00    0.00       4/32          tType::isQuCond() const [259]
                0.00    0.00       4/4           sExpr::basetype() [370]
                0.00    0.00       4/1478        tType::tType(BaseType) [151]
                0.00    0.00       4/109         sExpr::settype(tType const&) [193]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[367]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [367]
                0.00    0.00       4/74          sExpr::sExpr() [212]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [257]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [278]
[368]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [368]
                                   4             sSubscript::~sSubscript() <cycle 1> [369]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [368]
[369]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [369]
                0.00    0.00       4/44          sVar::~sVar() [222]
                0.00    0.00       4/95          sExpr::~sExpr() [195]
                                   4             sExprList::~sExprList() <cycle 1> [280]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [366]
[370]    0.0    0.00    0.00       4         sExpr::basetype() [370]
                0.00    0.00       4/1013        tType::basetype() const [154]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[371]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [371]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [299]
                0.00    0.00       2/23          sIf::~sIf() <cycle 2> [341]
[372]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [372]
                                   4             sLess::~sLess() <cycle 1> [373]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [372]
[373]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [373]
                                   4             sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [321]
[374]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/455         sObject::setParent(sObject*) [167]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [220]
                0.00    0.00       4/96          sExpr::type() [194]
                0.00    0.00       4/4           sLength::object() const [384]
                0.00    0.00       4/115         tType::isQuExpr() const [192]
                0.00    0.00       4/1478        tType::tType(BaseType) [151]
                0.00    0.00       4/109         sExpr::settype(tType const&) [193]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [377]
[375]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [375]
                0.00    0.00       4/74          sExpr::sExpr() [212]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [379]
[376]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [376]
                0.00    0.00       4/44          sVar::~sVar() [222]
                0.00    0.00       4/95          sExpr::~sExpr() [195]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[377]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [377]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [375]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [299]
[378]    0.0    0.00    0.00       4         sLength::~sLength() [378]
                0.00    0.00       4/4           sLength::~sLength() [379]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [378]
[379]    0.0    0.00    0.00       4         sLength::~sLength() [379]
                0.00    0.00       4/4           sUnOp::~sUnOp() [376]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [432]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [431]
[380]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [380]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [362]
[381]    0.0    0.00    0.00       4         sListFunct::object() const [381]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [366]
[382]    0.0    0.00    0.00       4         sSubscript::nargs() const [382]
                0.00    0.00       4/8           sList<sExpr>::n() const [336]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [321]
[383]    0.0    0.00    0.00       4         sLess::object() const [383]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [374]
[384]    0.0    0.00    0.00       4         sLength::object() const [384]
-----------------------------------------------
                0.00    0.00       4/4           sVar::typecheck(SymTable*, SymTable*) [220]
[385]    0.0    0.00    0.00       4         sObject::isConstDef() const [385]
                0.00    0.00       3/48          sConstDef::object() const [218]
                0.00    0.00       1/79          sVarDef::object() const [208]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [528]
[386]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [386]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [422]
[387]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [387]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [536]
[388]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [388]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [572]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[389]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [389]
-----------------------------------------------
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [391]
[390]    0.0    0.00    0.00       4         std::complex<double>::operator*=(double) [390]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
[391]    0.0    0.00    0.00       4         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [391]
                0.00    0.00       4/4           std::complex<double>::operator*=(double) [390]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [495]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [468]
[392]    0.0    0.00    0.00       3         yyalloc(unsigned long) [392]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [113]
[393]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [393]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [341]
[394]    0.0    0.00    0.00       3         sEqual::~sEqual() [394]
                0.00    0.00       3/3           sEqual::~sEqual() [395]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [394]
[395]    0.0    0.00    0.00       3         sEqual::~sEqual() [395]
                0.00    0.00       3/23          sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[396]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [396]
                0.00    0.00       6/167         sObject::def() const [188]
                0.00    0.00       6/96          sExpr::type() [194]
                0.00    0.00       3/455         sObject::setParent(sObject*) [167]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       3/21427       sDef::id() const [146]
                0.00    0.00       3/135         SymTab::getDef(std::string const&) const [190]
                0.00    0.00       3/115         tType::isQuExpr() const [192]
                0.00    0.00       3/5           sDef::settype(tType const&) [352]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [321]
[397]    0.0    0.00    0.00       3         sEqual::object() const [397]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [362]
[398]    0.0    0.00    0.00       3         sObject::isLocal() const [398]
                0.00    0.00       3/5           sObject::isGlobal() const [357]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [77]
[399]    0.0    0.00    0.00       3         sObject::isBennet() const [399]
                0.00    0.00       3/165         sObject::isSet(ObjFlag) const [189]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [519]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [434]
[400]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [400]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[401]    0.0    0.00    0.00       2         zero(bitvec const&) [401]
                0.00    0.00       2/2           bitvec::testzero() const [424]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [493]
[402]    0.0    0.00    0.00       2         irqOn() [402]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [76]
[403]    0.0    0.00    0.00       2         duallog(int) [403]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [116]
[404]    0.0    0.00    0.00       2         yyCleanUp() [404]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [326]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [307]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[405]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [405]
                0.00    0.00       2/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [297]
[406]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [406]
                                   2             sFor::~sFor() <cycle 2> [407]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [406]
[407]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [407]
                0.00    0.00       2/44          sVar::~sVar() [222]
                0.00    0.00       2/21          sConst::~sConst() [284]
                0.00    0.00       2/2           sSub::~sSub() [409]
                0.00    0.00       2/24          sStmt::~sStmt() [273]
                                   2             sStmtList::~sStmtList() <cycle 2> [302]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[408]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [408]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [407]
[409]    0.0    0.00    0.00       2         sSub::~sSub() [409]
                0.00    0.00       2/2           sSub::~sSub() [410]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [409]
[410]    0.0    0.00    0.00       2         sSub::~sSub() [410]
                0.00    0.00       2/23          sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[411]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [411]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [112]
[412]    0.0    0.00    0.00       2         tValue::tValue(double) [412]
                0.00    0.00       2/1478        tType::tType(BaseType) [151]
                0.00    0.00       2/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [120]
[413]    0.0    0.00    0.00       2         tValue::tValue(int) [413]
                0.00    0.00       2/1478        tType::tType(BaseType) [151]
                0.00    0.00       2/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[414]    0.0    0.00    0.00       2         objlist::objlist() [414]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [442]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[415]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [415]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [278]
[416]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [416]
                                   2             sConcat::~sConcat() <cycle 1> [417]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [416]
[417]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [417]
                                   2             sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [435]
[418]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [418]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [568]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [569]
[419]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [419]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [537]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [538]
[420]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [420]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [540]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [541]
[421]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [421]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [433]
[422]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [422]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [387]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [321]
[423]    0.0    0.00    0.00       2         sSub::object() const [423]
-----------------------------------------------
                0.00    0.00       2/2           zero(bitvec const&) [401]
[424]    0.0    0.00    0.00       2         bitvec::testzero() const [424]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [426]
[425]    0.0    0.00    0.00       2         tValue::isInt() const [425]
                0.00    0.00       2/21          tType::isInt() const [287]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
[426]    0.0    0.00    0.00       2         tValue::toInt() const [426]
                0.00    0.00       2/2           tValue::isInt() const [425]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [321]
[427]    0.0    0.00    0.00       2         sConcat::object() const [427]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [526]
[428]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [428]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [527]
[429]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [429]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [434]
[430]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [430]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [433]
[431]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [431]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [380]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [433]
[432]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [432]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [380]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [37]
[433]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [433]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [431]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [432]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [422]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [536]
[434]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [434]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [400]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [430]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [436]
[435]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [435]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [418]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [438]
[436]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [436]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [435]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [438]
[437]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [437]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [442]
[438]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [438]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [437]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [436]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [446]
[439]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [439]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [555]
[440]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [440]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [517]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [443]
[441]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [441]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [414]
[442]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [442]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [438]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [444]
[443]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [443]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [441]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [445]
[444]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [444]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [443]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[445]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [445]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [444]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [447]
[446]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [446]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [439]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [572]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[447]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [447]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [446]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[448]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [448]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[449]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [449]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[450]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [450]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[451]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [451]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[452]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [452]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[453]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [453]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[454]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [454]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[455]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [455]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[456]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [456]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[457]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [457]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[458]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [458]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[459]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [459]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[462]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [462]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[463]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [463]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[464]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [464]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[465]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [465]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[466]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [466]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [16]
[467]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [467]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [326]
[468]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [468]
                0.00    0.00       2/3           yyalloc(unsigned long) [392]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [324]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[469]    0.0    0.00    0.00       1         initialize_readline() [469]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [460]
[470]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [448]
[471]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [471]
                0.00    0.00       1/1478        tType::tType(BaseType) [151]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [333]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [454]
[472]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [453]
[473]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [457]
[474]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [467]
[475]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [466]
[476]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [456]
[477]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [458]
[478]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [449]
[479]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [452]
[480]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [451]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [465]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [463]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [464]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [455]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [450]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [462]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [459]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [66]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [100]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [461]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [1]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[493]    0.0    0.00    0.00       1         parseopt(int, char**) [493]
                0.00    0.00       2/2           irqOn() [402]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [325]
                0.00    0.00       1/1           qc_srand(long) [494]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [493]
[494]    0.0    0.00    0.00       1         qc_srand(long) [494]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [326]
[495]    0.0    0.00    0.00       1         yyensure_buffer_stack() [495]
                0.00    0.00       1/3           yyalloc(unsigned long) [392]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::opElementary(int) [498]
[496]    0.0    0.00    0.00       1         opOperator::opOperator(int) [496]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::~opElementary() [499]
[497]    0.0    0.00    0.00       1         opOperator::~opOperator() [497]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::opMatrix(int) [513]
[498]    0.0    0.00    0.00       1         opElementary::opElementary(int) [498]
                0.00    0.00       1/1           opOperator::opOperator(int) [496]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::~opMatrix() [133]
[499]    0.0    0.00    0.00       1         opElementary::~opElementary() [499]
                0.00    0.00       1/1           opOperator::~opOperator() [497]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [113]
[500]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [500]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [298]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [341]
[501]    0.0    0.00    0.00       1         sOr::~sOr() [501]
                0.00    0.00       1/1           sOr::~sOr() [502]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [501]
[502]    0.0    0.00    0.00       1         sOr::~sOr() [502]
                0.00    0.00       1/23          sBinOp::~sBinOp() <cycle 1> [299]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [51]
[503]    0.0    0.00    0.00       1         sDef::basetype() [503]
                0.00    0.00       1/1013        tType::basetype() const [154]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [300]
[504]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [504]
                0.00    0.00       1/455         sObject::setParent(sObject*) [167]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [290]
                0.00    0.00       1/96          sExpr::type() [194]
                0.00    0.00       1/1           tType::isString() const [532]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [113]
[505]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [505]
                0.00    0.00       1/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [297]
[506]    0.0    0.00    0.00       1         sExit::~sExit() [506]
                0.00    0.00       1/1           sExit::~sExit() [507]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [506]
[507]    0.0    0.00    0.00       1         sExit::~sExit() [507]
                0.00    0.00       1/21          sConst::~sConst() [284]
                0.00    0.00       1/24          sStmt::~sStmt() [273]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [73]
[508]    0.0    0.00    0.00       1         QuHeap::init() [508]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [8]
[509]    0.0    0.00    0.00       1         SymTab::~SymTab() [509]
                0.00    0.00       1/77          SymTab::~SymTab() [211]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [57]
[510]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [510]
                0.00    0.00       1/1478        tType::tType(BaseType) [151]
                0.00    0.00       1/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [112]
[511]    0.0    0.00    0.00       1         tValue::tValue(char const*) [511]
                0.00    0.00       1/1478        tType::tType(BaseType) [151]
                0.00    0.00       1/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [112]
[512]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [512]
                0.00    0.00       1/1478        tType::tType(BaseType) [151]
                0.00    0.00       1/450         tType::operator=(BaseType) [168]
-----------------------------------------------
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [130]
[513]    0.0    0.00    0.00       1         opMatrix::opMatrix(int) [513]
                0.00    0.00       1/1           opElementary::opElementary(int) [498]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [113]
[514]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [514]
                0.00    0.00       1/1478        tType::tType(BaseType) [151]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [254]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [217]
[515]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [515]
                0.00    0.00       1/1           sProcDef::~sProcDef() [516]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [515]
[516]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [516]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [255]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [440]
[517]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [517]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [570]
[518]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [518]
                0.00    0.00       1/663         tValue::~tValue() [162]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [551]
[519]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [519]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [400]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [543]
[520]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [520]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [544]
[521]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [521]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [545]
[522]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [522]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [546]
[523]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [523]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [547]
[524]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [524]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [548]
[525]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [525]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [539]
[526]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [526]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [428]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [542]
[527]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [527]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [429]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[528]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [528]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [386]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [321]
[529]    0.0    0.00    0.00       1         sOr::object() const [529]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[530]    0.0    0.00    0.00       1         sStmt::isInv() const [530]
                0.00    0.00       1/165         sObject::isSet(ObjFlag) const [189]
-----------------------------------------------
                0.00    0.00       1/1           tValue::isExpr() const [534]
[531]    0.0    0.00    0.00       1         tType::isExpr() const [531]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [504]
[532]    0.0    0.00    0.00       1         tType::isString() const [532]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [5]
[533]    0.0    0.00    0.00       1         QuHeap::nBits() const [533]
-----------------------------------------------
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [122]
[534]    0.0    0.00    0.00       1         tValue::isExpr() const [534]
                0.00    0.00       1/1           tType::isExpr() const [531]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [4]
[535]    0.0    0.00    0.00       1         sObject::isStmt() const [535]
                0.00    0.00       2/8           sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[536]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [536]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [388]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [434]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [577]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [539]
[537]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [537]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [420]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [539]
[538]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [538]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [420]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [37]
[539]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [539]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [537]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [538]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [526]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [542]
[540]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [540]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [421]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [542]
[541]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [541]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [421]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [37]
[542]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [542]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [540]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [541]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [527]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [552]
[543]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [543]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [520]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [553]
[544]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [544]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [521]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [556]
[545]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [545]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [522]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [557]
[546]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [546]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [523]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [562]
[547]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [547]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [524]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [563]
[548]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [548]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [525]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [578]
[549]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [549]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [580]
[550]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [550]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[551]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [551]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [519]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [554]
[552]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [552]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [543]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [555]
[553]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [553]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [544]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [571]
[554]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [554]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [552]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [572]
[555]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [555]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [440]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [553]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [560]
[556]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [556]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [561]
[557]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [557]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [546]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [561]
[558]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [558]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [574]
[559]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [559]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [573]
[560]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [560]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [556]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [574]
[561]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [561]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [558]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [557]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [566]
[562]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [562]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [547]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [567]
[563]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [563]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [548]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [567]
[564]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [564]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [576]
[565]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [565]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [575]
[566]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [566]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [562]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [576]
[567]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [567]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [564]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [563]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [127]
[568]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [568]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [419]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [126]
[569]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [569]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [419]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [37]
[570]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [570]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [518]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [73]
[571]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [571]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [554]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [37]
[572]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [572]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [389]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [555]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [447]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [73]
[573]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [573]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [560]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [37]
[574]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [574]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [559]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [561]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [579]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [73]
[575]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [575]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [566]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [37]
[576]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [576]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [565]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [581]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [567]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [536]
[577]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [577]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [579]
[578]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [578]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [574]
[579]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [579]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [578]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [581]
[580]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [580]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [550]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [576]
[581]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [581]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [580]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [448] _GLOBAL__sub_I_CONDDEF (syntax.cc) [54] bitvec::setbits(int, bitvec const&) [123] SymTab::getVal(std::string const&, ObjType*) const
 [449] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [69] bitvec::setbits(int, int, unsigned long) [174] SymTab::getentry(SymTable::entry*, std::string const&) const
 [450] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [33] bitvec::bitvec(int, unsigned long) [83] bitvec::length() const
 [451] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [45] bitvec::bitvec(bitvec const&) [97] bitvec::testeq(bitvec const&) const
 [452] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [35] bitvec::~bitvec() [92] bitvec::getbits(int, int) const
 [453] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [96] bitvec::operator&=(bitvec const&) [102] bitvec::getword(int, int) const
 [454] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [19] bitvec::operator=(bitvec const&) [145] bitvec::getword() const
 [455] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [78] bitvec::operator=(unsigned long) [46] bitvec::testless(bitvec const&) const
 [456] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [95] bitvec::operator|=(bitvec const&) [424] bitvec::testzero() const
 [457] _GLOBAL__sub_I_isErrorReported (error.cc) [321] sBinOp::typecheck(SymTable*, SymTable*) [59] bitvec::hashfunct() const
 [458] _GLOBAL__sub_I_isStateModified (quheap.cc) [298] sBinOp::sBinOp(sExpr*, sExpr*) [61] bitvec::operator[](int) const
 [459] _GLOBAL__sub_I_main (qcl.cc) [299] sBinOp::~sBinOp() [397] sEqual::object() const
 [460] _GLOBAL__sub_I_n_object (types.cc) [121] sConst::eval(SymTable*, SymTable*, QuHeap*) [160] tValue::ord() const
   [1] _GLOBAL__sub_I_noperators (operator.cc) [290] sConst::typecheck(SymTable*, SymTable*) [125] tValue::conv(tType const&) const
 [461] _GLOBAL__sub_I_nstates (qustates.cc) [111] sConst::sConst(tValue const&) [214] tValue::type() const
 [100] _GLOBAL__sub_I_nterms (terms.cc) [284] sConst::~sConst() [425] tValue::isInt() const
 [462] _GLOBAL__sub_I_plotfile (plot.cc) [285] sConst::~sConst() [426] tValue::toInt() const
  [66] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [393] sEqual::sEqual(sExpr*, sExpr*) [534] tValue::isExpr() const
 [463] _GLOBAL__sub_I_qcl_options (options.cc) [394] sEqual::~sEqual() [350] tValue::isError() const
 [464] _GLOBAL__sub_I_shell_depth (debug.cc) [395] sEqual::~sEqual() [356] tValue::qustate() const
 [465] _GLOBAL__sub_I_yyObjList (parse.cc) [159] tValue::delpointer() [161] tValue::basetype() const
 [466] _GLOBAL__sub_I_yydebug (yacc.cc) [80] tValue::assign(tValue const&) [345] tValue::isQuExpr() const
 [467] _GLOBAL__sub_I_yyleng (qcl.lex) [510] tValue::tValue(quState*, BaseType) [64] quState::mapbits() const
 [360] yyScanFile(_IO_FILE*) [511] tValue::tValue(char const*) [105] quState::mapmask() const
 [361] openqclfile(std::string) [108] tValue::tValue(quState&, BaseType) [152] sArgDef::object() const
 [307] yy_flush_buffer(yy_buffer_state*) [81] tValue::tValue(tValue const&) [427] sConcat::object() const
 [468] yy_create_buffer(_IO_FILE*, int) [412] tValue::tValue(double) [384] sLength::object() const
 [469] initialize_readline() [413] tValue::tValue(int)   [295] sObject::inFunctDef() const
 [470] __static_initialization_and_destruction_0(int, int) (types.cc) [311] tValue::tValue(long) [319] sObject::inQuFunDef() const
 [471] __static_initialization_and_destruction_0(int, int) (syntax.cc) [512] tValue::tValue(std::complex<double> const&) [385] sObject::isConstDef() const
 [472] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [175] tValue::tValue() [178] sObject::isFunctDef() const
 [473] __static_initialization_and_destruction_0(int, int) (symbols.cc) [162] tValue::~tValue() [266] sObject::isQuFunDef() const
 [474] __static_initialization_and_destruction_0(int, int) (error.cc) [109] tValue::operator=(tValue const&) [170] sObject::isValueDef() const
 [475] __static_initialization_and_destruction_0(int, int) (qcl.lex) [414] objlist::objlist() [188] sObject::def() const
 [476] __static_initialization_and_destruction_0(int, int) (yacc.cc) [129] quState::newclone() [173] sObject::isDef() const
 [477] __static_initialization_and_destruction_0(int, int) (print.cc) [86] quState::quState(int) [189] sObject::isSet(ObjFlag) const
 [478] __static_initialization_and_destruction_0(int, int) (quheap.cc) [260] quState::~quState() [535] sObject::isStmt() const
 [479] __static_initialization_and_destruction_0(int, int) (extern.cc) [181] sArgDef::sArgDef(tType const&, std::string*) [155] sObject::parent() const
 [480] __static_initialization_and_destruction_0(int, int) (eval.cc) [182] sArgDef::~sArgDef() [305] sObject::inQuDef() const
 [481] __static_initialization_and_destruction_0(int, int) (exec.cc) [183] sArgDef::~sArgDef() [398] sObject::isLocal() const
 [482] __static_initialization_and_destruction_0(int, int) (parse.cc) [415] sConcat::sConcat(sExpr*, sExpr*) [306] sObject::isQuDef() const
 [483] __static_initialization_and_destruction_0(int, int) (options.cc) [416] sConcat::~sConcat() [399] sObject::isBennet() const
 [484] __static_initialization_and_destruction_0(int, int) (debug.cc) [417] sConcat::~sConcat() [213] sObject::isExtern() const
 [485] __static_initialization_and_destruction_0(int, int) (cond.cc) [377] sLength::sLength(sExpr*) [357] sObject::isGlobal() const
 [486] __static_initialization_and_destruction_0(int, int) (dump.cc) [378] sLength::~sLength() [268] sObject::isCondDef() const
 [487] __static_initialization_and_destruction_0(int, int) (plot.cc) [379] sLength::~sLength() [241] sObject::isInclude() const
 [488] __static_initialization_and_destruction_0(int, int) (qcl.cc) [187] sObject::setFlag(ObjFlag, int) [320] sObject::isProcDef() const
 [489] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [322] sObject::isSetRec(ObjFlag) [282] sObject::isQuOpDef() const
 [490] __static_initialization_and_destruction_0(int, int) (terms.cc) [167] sObject::setParent(sObject*) [186] sObject::isRoutDef() const
 [491] __static_initialization_and_destruction_0(int, int) (qustates.cc) [184] sObject::typecheck(SymTable*, SymTable*) [208] sVarDef::object() const
 [492] __static_initialization_and_destruction_0(int, int) (operator.cc) [165] sObject::sObject(unsigned int) [11] opMatrix::addterms(terminfo const&) const
 [401] zero(bitvec const&)   [166] sObject::~sObject()   [258] sDefList::object() const
 [402] irqOn()                [51] sVarDef::define(SymTable*, SymTable*, QuHeap*) [215] sProcDef::object() const
 [112] yylex()               [117] sVarDef::typecheck(SymTable*, SymTable*) [171] sQuOpDef::object() const
 [403] duallog(int)          [333] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [26] termlist::hashfunct1(bitvec const&) const
   [6] ext_bit(sRoutDef const*, SymTable const*, int) [342] sVarDef::~sVarDef() [110] termlist::hashfunct2(bitvec const&) const
   [3] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [343] sVarDef::~sVarDef() [89] termlist::nbits() const
   [4] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [197] SymTable::SymTable() [289] termlist::nterms() const
 [392] yyalloc(unsigned long) [198] SymTable::~SymTable() [71] termlist::operator[](int) const
 [113] yyparse()             [513] opMatrix::opMatrix(int) [400] __gnu_cxx::new_allocator<tValue>::max_size() const
 [115] parseobj()             [79] opMatrix::~opMatrix() [242] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [493] parseopt(int, char**) [133] opMatrix::~opMatrix() [386] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [494] qc_srand(long)        [118] sDefList::typecheck(SymTable*, SymTable*) [387] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [116] chksyntax(_IO_FILE*)  [226] sDefList::sDefList()  [428] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [404] yyCleanUp()           [227] sDefList::~sDefList() [429] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [326] yyrestart(_IO_FILE*)  [228] sDefList::~sDefList() [218] sConstDef::object() const
 [324] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [514] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [172] sQuFunDef::object() const
 [323] yy_get_next_buffer() (lex.cc) [515] sProcDef::~sProcDef() [209] sStmtList::object() const
 [270] yy_load_buffer_state() (lex.cc) [516] sProcDef::~sProcDef() [202] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [332] yy_get_previous_state() (lex.cc) [291] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [203] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [495] yyensure_buffer_stack() (lex.cc) [292] sQuOpDef::~sQuOpDef() [430] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [327] SymTabComb::SymTabComb(SymTable*, SymTable*) [293] sQuOpDef::~sQuOpDef() [243] std::_List_iterator<sObject*>::operator*() const
 [328] SymTabComb::~SymTabComb() [253] sRoutDef::args()  [157] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [329] SymTabComb::~SymTabComb() [106] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [229] std::list<sObject*, std::allocator<sObject*> >::end() const
 [496] opOperator::opOperator(int) [9] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [230] std::list<sObject*, std::allocator<sObject*> >::size() const
 [497] opOperator::~opOperator() [77] sRoutDef::typecheck(SymTable*, SymTable*) [231] std::list<sObject*, std::allocator<sObject*> >::begin() const
  [12] quSubState::opadd(bitvec const&, std::complex<double> const&) [254] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [536] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  [91] quSubState::opend()   [255] sRoutDef::~sRoutDef() [431] std::vector<tValue, std::allocator<tValue> >::end() const
  [31] quSubState::opbegin()  [25] terminfo::terminfo(terminfo const&) [388] std::vector<tValue, std::allocator<tValue> >::size() const
  [90] quSubState::quSubState(int) [28] terminfo::terminfo() [432] std::vector<tValue, std::allocator<tValue> >::begin() const
 [261] quSubState::~quSubState() [52] terminfo::~terminfo() [433] std::vector<tValue, std::allocator<tValue> >::empty() const
 [362] sListFunct::typecheck(SymTable*, SymTable*) [58] termlist::add(term const&) [434] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [363] sListFunct::sListFunct(ObjType, sExprList*) [15] termlist::add(bitvec const&, std::complex<double> const&) [537] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [364] sListFunct::~sListFunct() [24] termlist::clear()  [538] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [365] sListFunct::~sListFunct() [38] termlist::dellist() [539] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [366] sSubscript::typecheck(SymTable*, SymTable*) [22] termlist::newlist() [540] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [367] sSubscript::sSubscript(sVar*, sExprList*) [76] termlist::termlist(int, int) [541] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [368] sSubscript::~sSubscript() [39] termlist::~termlist() [542] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [369] sSubscript::~sSubscript() [88] termlist::operator=(termlist const&) [85] std::complex<double>::imag() const
 [128] quBaseState::newsubstring(int, int) [517] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [55] std::complex<double>::real() const
  [13] quBaseState::opadd(bitvec const&, std::complex<double> const&) [518] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [543] std::allocator<tValue>::allocator()
  [87] quBaseState::opend()  [519] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [544] std::allocator<tValue>::~allocator()
 [104] quBaseState::reset(bitvec const&) [124] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [545] std::allocator<QuHeap::centry>::allocator()
  [42] quBaseState::opbegin() [520] __gnu_cxx::new_allocator<tValue>::new_allocator() [546] std::allocator<QuHeap::centry>::~allocator()
  [74] quBaseState::quBaseState(int, int) [521] __gnu_cxx::new_allocator<tValue>::~new_allocator() [547] std::allocator<QuHeap::quentry>::allocator()
  [40] quBaseState::~quBaseState() [522] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [548] std::allocator<QuHeap::quentry>::~allocator()
  [41] quBaseState::~quBaseState() [523] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [204] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  [67] quSubString::newsubstring(int, int) [524] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [205] std::allocator<sObject*>::~allocator()
  [62] quSubString::quSubString(int, int, quState&) [525] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [435] std::allocator<std::_List_node<sObject*> >::allocator()
 [262] quSubString::~quSubString() [236] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [436] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [263] quSubString::~quSubString() [237] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [244] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [498] opElementary::opElementary(int) [200] __gnu_cxx::new_allocator<sObject*>::new_allocator() [245] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [499] opElementary::~opElementary() [201] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [437] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [338] sIf::typecheck(SymTable*, SymTable*) [238] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [438] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [339] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [239] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [150] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [340] sIf::~sIf()           [418] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [439] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [341] sIf::~sIf()           [419] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [549] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [500] sOr::sOr(sExpr*, sExpr*) [380] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [550] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [501] sOr::~sOr()           [420] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [551] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [502] sOr::~sOr()           [421] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [552] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [352] sDef::settype(tType const&) [422] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [553] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [503] sDef::basetype()      [526] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [440] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [176] sDef::sDef(tType const&, std::string*) [527] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [389] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [177] sDef::~sDef()         [528] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [554] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [120] sFor::typecheck(SymTable*, SymTable*) [114] sConstDef::define(SymTable*, SymTable*, QuHeap*) [555] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [405] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [396] sConstDef::typecheck(SymTable*, SymTable*) [556] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [406] sFor::~sFor()         [353] sConstDef::sConstDef(std::string*, sExpr*) [557] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [407] sFor::~sFor()         [354] sConstDef::~sConstDef() [558] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [408] sSub::sSub(sExpr*, sExpr*) [355] sConstDef::~sConstDef() [559] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [409] sSub::~sSub()         [334] sExprList::typecheck(SymTable*, SymTable*) [560] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [410] sSub::~sSub()         [279] sExprList::sExprList() [561] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [122] sVar::eval(SymTable*, SymTable*, QuHeap*) [280] sExprList::~sExprList() [562] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [220] sVar::typecheck(SymTable*, SymTable*) [281] sExprList::~sExprList() [563] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [221] sVar::sVar(std::string*) [308] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [564] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [222] sVar::~sVar()         [309] sQuFunDef::~sQuFunDef() [565] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [223] sVar::~sVar()         [310] sQuFunDef::~sQuFunDef() [566] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [134] term::set(bitvec const&, std::complex<double> const&) [300] sStmtList::typecheck(SymTable*, SymTable*) [567] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  [34] term::setampl(std::complex<double> const&) [301] sStmtList::sStmtList() [191] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  [21] term::setvect(bitvec const&) [302] sStmtList::~sStmtList() [199] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [27] term::term()          [303] sStmtList::~sStmtList() [158] std::_List_const_iterator<sObject*>::operator++()
  [32] term::term(term const&) [267] SymTabComb::getDef(std::string const&) const [441] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [20] term::~term()         [330] quSubState::isbasestate() const [246] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [53] term::operator=(term const&) [65] quSubState::baseterm(int) const [247] std::list<sObject*, std::allocator<sObject*> >::end()
 [130] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [50] quSubState::baseterms() const [206] std::list<sObject*, std::allocator<sObject*> >::begin()
 [131] opBit::~opBit()       [381] sListFunct::object() const [248] std::list<sObject*, std::allocator<sObject*> >::front()
 [132] opBit::~opBit()       [382] sSubscript::nargs() const [249] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
   [5] sCall::exec(SymTable*, SymTable*, QuHeap*) [264] quBaseState::isbasestate() const [250] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [314] sCall::typecheck(SymTable*, SymTable*) [47] quBaseState::map(bitvec const&) const [251] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [315] sCall::sCall(std::string*, sExprList*, int) [56] quBaseState::unmap(bitvec const&) const [252] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [316] sCall::~sCall()       [136] quBaseState::basebits() const [442] std::list<sObject*, std::allocator<sObject*> >::list()
 [317] sCall::~sCall()        [72] quBaseState::baseterm(int) const [126] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [504] sExit::typecheck(SymTable*, SymTable*) [60] quBaseState::baseterms() const [568] std::vector<tValue, std::allocator<tValue> >::end()
 [505] sExit::sExit(sExpr*)   [23] quSubString::map(bitvec const&) const [569] std::vector<tValue, std::allocator<tValue> >::begin()
 [506] sExit::~sExit()        [18] quSubString::unmap(bitvec const&) const [570] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [507] sExit::~sExit()        [84] quSubString::mapoffs() const [127] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [194] sExpr::type()          [10] opElementary::apply(quState&) const [571] std::vector<tValue, std::allocator<tValue> >::vector()
 [193] sExpr::settype(tType const&) [286] sIf::object() const [572] std::vector<tValue, std::allocator<tValue> >::~vector()
 [370] sExpr::basetype()     [529] sOr::object() const   [573] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [283] sExpr::sExpr(tType const&) [146] sDef::id() const [574] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [212] sExpr::sExpr()        [169] sDef::type() const    [575] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [195] sExpr::~sExpr()       [312] sFor::object() const  [576] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [371] sLess::sLess(sExpr*, sExpr*) [423] sSub::object() const [70] std::complex<double>::real()
 [372] sLess::~sLess()       [216] sVar::id() const       [36] std::complex<double>::complex(double, double)
 [373] sLess::~sLess()        [48] term::ampl() const     [82] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
 [179] sList<sDef>::append(sDef*) [63] term::vect() const [390] std::complex<double>::operator*=(double)
 [224] sList<sDef>::sList()  [101] term::nbits() const    [30] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [225] sList<sDef>::~sList() [313] sCall::id() const     [232] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [269] sList<sExpr>::append(sExpr*) [335] sCall::object() const [207] sObject** std::__addressof<sObject*>(sObject*&)
 [277] sList<sExpr>::sList() [383] sLess::object() const [443] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [278] sList<sExpr>::~sList() [163] sList<sDef>::next(void*&) const [233] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [274] sList<sStmt>::append(sStmt*) [196] sList<sDef>::first(void*&) const [444] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [296] sList<sStmt>::sList() [336] sList<sExpr>::n() const [445] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [297] sList<sStmt>::~sList() [256] sList<sExpr>::next(void*&) const [577] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [346] sMult::sMult(sExpr*, sExpr*) [257] sList<sExpr>::first(void*&) const [68] std::pow(double, int)
 [347] sMult::~sMult()       [275] sList<sStmt>::next(void*&) const [446] void std::_Destroy<tValue*>(tValue*, tValue*)
 [348] sMult::~sMult()       [304] sList<sStmt>::first(void*&) const [447] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [272] sStmt::sStmt(int)     [331] sMult::object() const [578] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [273] sStmt::~sStmt()       [530] sStmt::isInv() const  [579] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [374] sUnOp::typecheck(SymTable*, SymTable*) [153] tType::ord() const [580] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [375] sUnOp::sUnOp(sExpr*)  [287] tType::isInt() const  [581] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [376] sUnOp::~sUnOp()       [318] tType::isCond() const [234] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [151] tType::tType(BaseType) [288] tType::isConv(tType const&) const [148] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [411] tType::tType(BaseType, int) [531] tType::isExpr() const [358] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [164] tType::tType(tType const&) [349] tType::isError() const [147] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [168] tType::operator=(BaseType) [185] tType::isQuReg() const [149] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [156] tType::operator=(tType const&) [154] tType::basetype() const [103] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
   [7] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [265] tType::isNumber() const [391] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
 [508] QuHeap::init()        [259] tType::isQuCond() const [17] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [107] QuHeap::addReg(quState*) [192] tType::isQuExpr() const [359] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [57] QuHeap::qualloc(int, BaseType) [532] tType::isString() const [325] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
   [8] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [276] tType::isBoolean() const [351] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [73] QuHeap::QuHeap(int, int) [294] tType::isDefined() const [44] operator&(bitvec const&, bitvec const&)
  [37] QuHeap::~QuHeap()     [337] tType::isOrdered() const [94] operator~(bitvec const&)
  [75] SymTab::put(sDef*, tValue const&) [271] tType::isQuConst() const [98] operator==(bitvec const&, bitvec const&)
 [217] SymTab::deltree(SymTable::entry*) [240] tType::operator==(BaseType) const [235] operator new(unsigned long, void*)
  [99] SymTab::putentry(SymTable::entry*, SymTable::entry*) [344] tType::operator==(tType const&) const [49] operator|(bitvec const&, bitvec const&)
 [210] SymTab::SymTab(int)   [137] QuHeap::cond() const  [139] <cycle 1>
 [509] SymTab::~SymTab()     [135] QuHeap::cmask() const [140] <cycle 2>
 [211] SymTab::~SymTab()     [533] QuHeap::nBits() const [119] <cycle 3>
 [219] bitvec::qnot()        [138] QuHeap::ncond() const  [14] <cycle 4>
  [93] bitvec::setbit(int, int) [190] SymTab::getDef(std::string const&) const [43] <cycle 5>
  [29] bitvec::setlen(int)   [180] SymTab::getRef(std::string const&, ObjType*) const
