Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 15.71      1.20     1.20  3669503     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  8.64      1.86     0.66 14679737     0.00     0.00  bitvec::~bitvec()
  7.59      2.44     0.58  7339644     0.00     0.00  bitvec::bitvec(int, unsigned long)
  6.68      2.95     0.51  1048575     0.00     0.00  opMatrix::addterms(terminfo const&) const
  5.76      3.39     0.44  7863830     0.00     0.00  bitvec::setlen(int)
  4.84      3.76     0.37  7340093     0.00     0.00  bitvec::bitvec(bitvec const&)
  3.14      4.00     0.24  2097173     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  3.01      4.23     0.23  7863830     0.00     0.00  bitvec::operator=(bitvec const&)
  2.88      4.45     0.22       46     0.00     0.00  termlist::clear()
  2.49      4.64     0.19 12576771     0.00     0.00  term::vect() const
  2.49      4.83     0.19  2097173     0.00     0.00  quSubString::unmap(bitvec const&) const
  2.36      5.01     0.18  2097150     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  2.09      5.17     0.16  2097150     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  2.09      5.33     0.16       20     0.01     0.37  opElementary::apply(quState&) const
  1.83      5.47     0.14  5242400     0.00     0.00  std::complex<double>::complex(double, double)
  1.83      5.61     0.14  2097150     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  1.70      5.74     0.13  3669503     0.00     0.00  term::setampl(std::complex<double> const&)
  1.57      5.86     0.12  4718078     0.00     0.00  term::setvect(bitvec const&)
  1.44      5.97     0.11  4188195     0.00     0.00  bitvec::hashfunct() const
  1.31      6.07     0.10  3669526     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  1.18      6.16     0.09  1048575     0.00     0.00  bitvec::getbits(int, int) const
  1.11      6.25     0.09  2097151     0.00     0.00  bitvec::operator|=(bitvec const&)
  1.05      6.33     0.08  6815227     0.00     0.00  term::ampl() const
  1.05      6.41     0.08  3145242     0.00     0.00  term::term()
  1.05      6.49     0.08  1048575     0.00     0.00  quSubString::map(bitvec const&) const
  0.92      6.56     0.07  3145748     0.00     0.00  quSubString::mapoffs() const
  0.92      6.63     0.07  1048575     0.00     0.00  term::term(term const&)
  0.79      6.69     0.06  4193817     0.00     0.00  term::~term()
  0.79      6.75     0.06  2097173     0.00     0.00  bitvec::setbits(int, bitvec const&)
  0.79      6.81     0.06  1048575     0.00     0.00  quSubState::baseterm(int) const
  0.72      6.86     0.06  1048577     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.65      6.91     0.05  2097151     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.52      6.95     0.04  2097150     0.00     0.00  operator|(bitvec const&, bitvec const&)
  0.52      6.99     0.04   518669     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.52      7.03     0.04       25     0.00     0.02  termlist::newlist()
  0.52      7.07     0.04        2     0.02     0.07  termlist::dellist()
  0.46      7.11     0.04  2097150     0.00     0.00  std::complex<double>::real() const
  0.46      7.14     0.04  1572352     0.00     0.00  termlist::add(term const&)
  0.39      7.17     0.03  3145728     0.00     0.00  bitvec::length() const
  0.39      7.20     0.03  1048595     0.00     0.00  terminfo::~terminfo()
  0.39      7.23     0.03  1048575     0.00     0.00  term::operator=(term const&)
  0.39      7.26     0.03  1048575     0.00     0.00  quBaseState::map(bitvec const&) const
  0.39      7.29     0.03   518669     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.33      7.32     0.03  1048575     0.00     0.00  bitvec::getword() const
  0.26      7.34     0.02  3145948     0.00     0.00  quState::mapbits() const
  0.26      7.36     0.02  2097173     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.26      7.38     0.02  1048576     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.26      7.40     0.02  1048575     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.26      7.42     0.02  1048575     0.00     0.00  termlist::operator[](int) const
  0.26      7.44     0.02       44     0.00     0.00  operator~(bitvec const&)
  0.26      7.46     0.02       31     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.26      7.48     0.02       20     0.00     0.00  terminfo::terminfo()
  0.26      7.50     0.02                             bitvec::operator=(unsigned long)
  0.13      7.51     0.01  2097150     0.00     0.00  std::complex<double>::imag() const
  0.13      7.52     0.01  1048575     0.00     0.00  quBaseState::baseterm(int) const
  0.13      7.53     0.01   518669     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.13      7.54     0.01       30     0.00     0.00  quSubString::newsubstring(int, int)
  0.13      7.55     0.01       21     0.00     0.01  quBaseState::opbegin()
  0.13      7.56     0.01       20     0.00     0.00  bitvec::operator[](int) const
  0.13      7.57     0.01        1     0.01     0.01  _GLOBAL__sub_I_nbitvecs
  0.13      7.58     0.01                             termlist::operator=(termlist const&)
  0.13      7.59     0.01                             bitvec::nset() const
  0.13      7.60     0.01                             bitvec::testless(bitvec const&) const
  0.13      7.61     0.01                             termlist::nbits() const
  0.13      7.62     0.01                             std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.07      7.62     0.01     4125     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.07      7.63     0.01     2906     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.07      7.63     0.01                             bitvec::getword(int, int) const
  0.07      7.64     0.01                             termlist::search(bitvec const&) const
  0.07      7.64     0.01                             std::complex<double>::real()
  0.00      7.64     0.00    21427     0.00     0.00  sDef::id() const
  0.00      7.64     0.00     6456     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.64     0.00     3876     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.64     0.00     2338     0.00     0.00  yylex()
  0.00      7.64     0.00     1478     0.00     0.00  tType::tType(BaseType)
  0.00      7.64     0.00     1104     0.00     0.00  sArgDef::object() const
  0.00      7.64     0.00     1052     0.00     0.00  tType::ord() const
  0.00      7.64     0.00     1013     0.00     0.00  tType::basetype() const
  0.00      7.64     0.00      881     0.00     0.00  sObject::parent() const
  0.00      7.64     0.00      842     0.00     0.00  tType::operator=(tType const&)
  0.00      7.64     0.00      826     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      7.64     0.00      783     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      7.64     0.00      692     0.00     0.00  tValue::delpointer()
  0.00      7.64     0.00      692     0.00     0.00  tValue::ord() const
  0.00      7.64     0.00      692     0.00     0.00  tValue::basetype() const
  0.00      7.64     0.00      663     0.00     0.00  tValue::~tValue()
  0.00      7.64     0.00      554     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      7.64     0.00      531     0.00     0.00  tType::tType(tType const&)
  0.00      7.64     0.00      515     0.00     0.00  sObject::sObject(unsigned int)
  0.00      7.64     0.00      515     0.00     0.00  sObject::~sObject()
  0.00      7.64     0.00      455     0.00     0.00  sObject::setParent(sObject*)
  0.00      7.64     0.00      450     0.00     0.00  tType::operator=(BaseType)
  0.00      7.64     0.00      372     0.00     0.00  sDef::type() const
  0.00      7.64     0.00      370     0.00     0.00  sObject::isValueDef() const
  0.00      7.64     0.00      369     0.00     0.00  sQuOpDef::object() const
  0.00      7.64     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      7.64     0.00      365     0.00     0.00  sObject::isDef() const
  0.00      7.64     0.00      362     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      7.64     0.00      353     0.00     0.00  tValue::tValue()
  0.00      7.64     0.00      324     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      7.64     0.00      316     0.00     0.00  tValue::assign(tValue const&)
  0.00      7.64     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      7.64     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      7.64     0.00      294     0.00     0.00  sObject::isFunctDef() const
  0.00      7.64     0.00      287     0.00     0.00  tValue::tValue(tValue const&)
  0.00      7.64     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      7.64     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      7.64     0.00      264     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      7.64     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      7.64     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      7.64     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      7.64     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      7.64     0.00      253     0.00     0.00  sObject::isRoutDef() const
  0.00      7.64     0.00      176     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      7.64     0.00      167     0.00     0.00  sObject::def() const
  0.00      7.64     0.00      165     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      7.64     0.00      135     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      7.64     0.00      123     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      7.64     0.00      115     0.00     0.00  tType::isQuExpr() const
  0.00      7.64     0.00      109     0.00     0.00  sExpr::settype(tType const&)
  0.00      7.64     0.00       96     0.00     0.00  sExpr::type()
  0.00      7.64     0.00       95     0.00     0.00  sExpr::~sExpr()
  0.00      7.64     0.00       95     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      7.64     0.00       87     0.00     0.00  SymTable::SymTable()
  0.00      7.64     0.00       87     0.00     0.00  SymTable::~SymTable()
  0.00      7.64     0.00       86     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      7.64     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      7.64     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      7.64     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      7.64     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      7.64     0.00       82     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      7.64     0.00       82     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      7.64     0.00       82     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      7.64     0.00       82     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      7.64     0.00       79     0.00     0.00  sVarDef::object() const
  0.00      7.64     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      7.64     0.00       77     0.00     0.00  SymTab::SymTab(int)
  0.00      7.64     0.00       77     0.00     0.00  SymTab::~SymTab()
  0.00      7.64     0.00       74     0.00     0.00  sExpr::sExpr()
  0.00      7.64     0.00       73     0.00     0.00  sObject::isExtern() const
  0.00      7.64     0.00       63     0.00     0.00  tValue::type() const
  0.00      7.64     0.00       62     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      7.64     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      7.64     0.00       52     0.00     0.00  sVar::id() const
  0.00      7.64     0.00       48     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      7.64     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      7.64     0.00       46     0.00     0.00  bitvec::qnot()
  0.00      7.64     0.00       44     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       44     0.00     0.00  sVar::sVar(std::string*)
  0.00      7.64     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      7.64     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      7.64     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      7.64     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      7.64     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      7.64     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      7.64     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      7.64     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      7.64     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      7.64     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      7.64     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      7.64     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      7.64     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      7.64     0.00       42     0.00     0.00  operator new(unsigned long, void*)
  0.00      7.64     0.00       41     0.00     0.00  quState::newclone()
  0.00      7.64     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      7.64     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      7.64     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      7.64     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      7.64     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      7.64     0.00       41     0.00     0.00  sObject::isInclude() const
  0.00      7.64     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      7.64     0.00       41     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      7.64     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      7.64     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      7.64     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      7.64     0.00       37     0.00     0.00  sRoutDef::args()
  0.00      7.64     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      7.64     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      7.64     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      7.64     0.00       36     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      7.64     0.00       35     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      7.64     0.00       34     0.00     0.00  sDefList::object() const
  0.00      7.64     0.00       32     0.00     0.00  quState::quState(int)
  0.00      7.64     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      7.64     0.00       31     0.00     0.00  quSubState::quSubState(int)
  0.00      7.64     0.00       31     0.00     0.00  quState::~quState()
  0.00      7.64     0.00       30     0.00     0.00  quSubState::~quSubState()
  0.00      7.64     0.00       30     0.00     0.00  quSubString::~quSubString()
  0.00      7.64     0.00       30     0.00     0.00  quSubString::~quSubString()
  0.00      7.64     0.00       30     0.00     0.00  quBaseState::isbasestate() const
  0.00      7.64     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      7.64     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      7.64     0.00       29     0.00     0.00  tValue::operator=(tValue const&)
  0.00      7.64     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      7.64     0.00       28     0.00     0.00  sObject::isCondDef() const
  0.00      7.64     0.00       27     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      7.64     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      7.64     0.00       25     0.00     0.00  tType::isQuConst() const
  0.00      7.64     0.00       24     0.00     0.00  sStmt::sStmt(int)
  0.00      7.64     0.00       24     0.00     0.00  sStmt::~sStmt()
  0.00      7.64     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      7.64     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      7.64     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      7.64     0.00       23     0.00     0.00  quState::mapmask() const
  0.00      7.64     0.00       22     0.00     0.00  sList<sExpr>::sList()
  0.00      7.64     0.00       22     0.00     0.00  sList<sExpr>::~sList()
  0.00      7.64     0.00       22     0.00     0.00  sExprList::sExprList()
  0.00      7.64     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      7.64     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      7.64     0.00       22     0.00     0.00  sObject::isQuOpDef() const
  0.00      7.64     0.00       21     0.00     0.00  quBaseState::opend()
  0.00      7.64     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      7.64     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      7.64     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      7.64     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      7.64     0.00       21     0.00     0.00  sIf::object() const
  0.00      7.64     0.00       21     0.00     0.00  tType::isInt() const
  0.00      7.64     0.00       21     0.00     0.00  tType::isConv(tType const&) const
  0.00      7.64     0.00       20     0.00     0.00  quSubState::opend()
  0.00      7.64     0.00       20     0.00     0.01  quSubState::opbegin()
  0.00      7.64     0.00       20     0.00     0.00  quSubState::baseterms() const
  0.00      7.64     0.00       20     0.00     0.00  quBaseState::baseterms() const
  0.00      7.64     0.00       20     0.00     0.00  termlist::nterms() const
  0.00      7.64     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      7.64     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      7.64     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      7.64     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      7.64     0.00       19     0.00     0.00  sObject::inFunctDef() const
  0.00      7.64     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      7.64     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      7.64     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      7.64     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      7.64     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      7.64     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      7.64     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      7.64     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      7.64     0.00       18     0.00     0.00  sObject::inQuDef() const
  0.00      7.64     0.00       18     0.00     0.00  sObject::isQuDef() const
  0.00      7.64     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      7.64     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      7.64     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      7.64     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      7.64     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      7.64     0.00       15     0.00     0.00  sFor::object() const
  0.00      7.64     0.00       15     0.00     0.00  sCall::id() const
  0.00      7.64     0.00       14     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       14     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      7.64     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      7.64     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      7.64     0.00       14     0.00     0.00  tType::isCond() const
  0.00      7.64     0.00       14     0.00     0.00  sObject::inQuFunDef() const
  0.00      7.64     0.00       14     0.00     0.00  sObject::isProcDef() const
  0.00      7.64     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00       13     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      7.64     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      7.64     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      7.64     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      7.64     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      7.64     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      7.64     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      7.64     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      7.64     0.00       10     0.00     0.00  quSubState::isbasestate() const
  0.00      7.64     0.00        9     0.00     0.00  sMult::object() const
  0.00      7.64     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      7.64     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      7.64     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        8     0.00     0.00  sCall::object() const
  0.00      7.64     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      7.64     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      7.64     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      7.64     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      7.64     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      7.64     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      7.64     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      7.64     0.00        7     0.00     0.00  tType::operator==(tType const&) const
  0.00      7.64     0.00        7     0.00     0.00  tValue::isQuExpr() const
  0.00      7.64     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      7.64     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      7.64     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      7.64     0.00        6     0.00     0.00  tType::isError() const
  0.00      7.64     0.00        6     0.00     0.00  tValue::isError() const
  0.00      7.64     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.64     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      7.64     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      7.64     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      7.64     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      7.64     0.00        5     0.00     0.00  tValue::qustate() const
  0.00      7.64     0.00        5     0.00     0.00  sObject::isGlobal() const
  0.00      7.64     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      7.64     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      7.64     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      7.64     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      7.64     0.00        4     0.00     0.00  yyparse()
  0.00      7.64     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      7.64     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      7.64     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      7.64     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      7.64     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      7.64     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      7.64     0.00        4     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      7.64     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      7.64     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      7.64     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      7.64     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      7.64     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      7.64     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      7.64     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      7.64     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      7.64     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      7.64     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      7.64     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      7.64     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      7.64     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      7.64     0.00        4     0.00     0.00  sLess::object() const
  0.00      7.64     0.00        4     0.00     0.00  sLength::object() const
  0.00      7.64     0.00        4     0.00     0.00  sObject::isConstDef() const
  0.00      7.64     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      7.64     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      7.64     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      7.64     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      7.64     0.00        4     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      7.64     0.00        4     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      7.64     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      7.64     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      7.64     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      7.64     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      7.64     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      7.64     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        3     0.00     0.00  sEqual::object() const
  0.00      7.64     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      7.64     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      7.64     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      7.64     0.00        2     0.00     0.00  zero(bitvec const&)
  0.00      7.64     0.00        2     0.00     0.00  irqOn()
  0.00      7.64     0.00        2     0.00     0.00  duallog(int)
  0.00      7.64     0.00        2     0.00     3.68  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      7.64     0.00        2     0.00     3.68  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      7.64     0.00        2     0.00     0.00  parseobj()
  0.00      7.64     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      7.64     0.00        2     0.00     0.00  yyCleanUp()
  0.00      7.64     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      7.64     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      7.64     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      7.64     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      7.64     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      7.64     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      7.64     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      7.64     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      7.64     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      7.64     0.00        2     0.00     0.00  objlist::objlist()
  0.00      7.64     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      7.64     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      7.64     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      7.64     0.00        2     0.00     0.02  termlist::termlist(int, int)
  0.00      7.64     0.00        2     0.00     0.07  termlist::~termlist()
  0.00      7.64     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      7.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      7.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      7.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      7.64     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      7.64     0.00        2     0.00     0.00  sSub::object() const
  0.00      7.64     0.00        2     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      7.64     0.00        2     0.00     0.00  bitvec::testzero() const
  0.00      7.64     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      7.64     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      7.64     0.00        2     0.00     0.00  sConcat::object() const
  0.00      7.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      7.64     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      7.64     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      7.64     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      7.64     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      7.64     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      7.64     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      7.64     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      7.64     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      7.64     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      7.64     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      7.64     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      7.64     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      7.64     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      7.64     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      7.64     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      7.64     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      7.64     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      7.64     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      7.64     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      7.64     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      7.64     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      7.64     0.00        1     0.00     0.00  initialize_readline()
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.64     0.00        1     0.00     7.33  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      7.64     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      7.64     0.00        1     0.00     0.00  qc_srand(long)
  0.00      7.64     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      7.64     0.00        1     0.00     0.00  opOperator::opOperator(int)
  0.00      7.64     0.00        1     0.00     0.00  opOperator::~opOperator()
  0.00      7.64     0.00        1     0.00     0.01  quBaseState::reset(bitvec const&)
  0.00      7.64     0.00        1     0.00     0.05  quBaseState::quBaseState(int, int)
  0.00      7.64     0.00        1     0.00     0.13  quBaseState::~quBaseState()
  0.00      7.64     0.00        1     0.00     0.13  quBaseState::~quBaseState()
  0.00      7.64     0.00        1     0.00     0.00  opElementary::opElementary(int)
  0.00      7.64     0.00        1     0.00     0.00  opElementary::~opElementary()
  0.00      7.64     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      7.64     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      7.64     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      7.64     0.00        1     0.00     0.00  sDef::basetype()
  0.00      7.64     0.00        1     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      7.64     0.00        1     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      7.64     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      7.64     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      7.64     0.00        1     0.00     7.33  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      7.64     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      7.64     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      7.64     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      7.64     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      7.64     0.00        1     0.00     7.33  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      7.64     0.00        1     0.00     0.00  QuHeap::init()
  0.00      7.64     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      7.64     0.00        1     0.00     0.01  QuHeap::qualloc(int, BaseType)
  0.00      7.64     0.00        1     0.00     7.33  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      7.64     0.00        1     0.00     0.05  QuHeap::QuHeap(int, int)
  0.00      7.64     0.00        1     0.00     0.13  QuHeap::~QuHeap()
  0.00      7.64     0.00        1     0.00     0.00  SymTab::~SymTab()
  0.00      7.64     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      7.64     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      7.64     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      7.64     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      7.64     0.00        1     0.00     0.01  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      7.64     0.00        1     0.00     0.00  opMatrix::opMatrix(int)
  0.00      7.64     0.00        1     0.00     0.00  opMatrix::~opMatrix()
  0.00      7.64     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      7.64     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      7.64     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      7.64     0.00        1     0.00     7.33  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      7.64     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      7.64     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      7.64     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      7.64     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      7.64     0.00        1     0.00     0.00  sOr::object() const
  0.00      7.64     0.00        1     0.00     0.00  sStmt::isInv() const
  0.00      7.64     0.00        1     0.00     0.00  tType::isExpr() const
  0.00      7.64     0.00        1     0.00     0.00  tType::isString() const
  0.00      7.64     0.00        1     0.00     0.00  QuHeap::cond() const
  0.00      7.64     0.00        1     0.00     0.00  QuHeap::cmask() const
  0.00      7.64     0.00        1     0.00     0.00  QuHeap::nBits() const
  0.00      7.64     0.00        1     0.00     0.00  QuHeap::ncond() const
  0.00      7.64     0.00        1     0.00     0.00  tValue::conv(tType const&) const
  0.00      7.64     0.00        1     0.00     0.00  tValue::isExpr() const
  0.00      7.64     0.00        1     0.00     0.00  sObject::isStmt() const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      7.64     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      7.64     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      7.64     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      7.64     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      7.64     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      7.64     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      7.64     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      7.64     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      7.64     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      7.64     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.13% of 7.64 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     98.8    0.00    7.55                 main [1]
                0.00    7.36       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.13       1/1           QuHeap::~QuHeap() [40]
                0.00    0.05       1/1           QuHeap::QuHeap(int, int) [58]
                0.00    0.00       2/77          SymTab::SymTab(int) [210]
                0.00    0.00       2/77          SymTab::~SymTab() [211]
                0.00    0.00       1/1           initialize_readline() [466]
                0.00    0.00       1/1           parseopt(int, char**) [490]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
-----------------------------------------------
                0.00    7.36       2/2           main [1]
[2]     96.3    0.00    7.36       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    7.36       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [120]
                0.00    0.00       4/4           openqclfile(std::string) [360]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [359]
-----------------------------------------------
                0.00    7.36       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     96.3    0.00    7.36       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    7.33       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.02      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.01       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00       2/2           parseobj() [119]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       1/14          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [247]
                0.00    0.00      41/41          sObject::isInclude() const [240]
                0.00    0.00      41/365         sObject::isDef() const [175]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [250]
                0.00    0.00       1/1           sObject::isStmt() const [532]
                0.00    0.00       1/14          sCall::~sCall() [318]
-----------------------------------------------
                0.00    7.33       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     95.9    0.00    7.33       1         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    7.33       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       2/23          quState::mapmask() const [78]
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       1/1           tValue::conv(tType const&) const [130]
                0.00    0.00       1/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.00       5/14679737     bitvec::~bitvec() [17]
                0.00    0.00       1/1048576     operator&(bitvec const&, bitvec const&) [46]
                0.00    0.00       1/1           QuHeap::cmask() const [140]
                0.00    0.00       1/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00       1/2097151     bitvec::operator|=(bitvec const&) [52]
                0.00    0.00       1/1           QuHeap::cond() const [141]
                0.00    0.00       1/3145948     quState::mapbits() const [71]
                0.00    0.00       3/663         tValue::~tValue() [164]
                0.00    0.00       3/5           tValue::qustate() const [355]
                0.00    0.00       2/37          sRoutDef::args() [252]
                0.00    0.00       2/2           zero(bitvec const&) [396]
                0.00    0.00       1/1           QuHeap::nBits() const [530]
                0.00    0.00       1/353         tValue::tValue() [176]
                0.00    0.00       1/15          sCall::id() const [316]
                0.00    0.00       1/14          sObject::isProcDef() const [322]
                0.00    0.00       1/18          sObject::isQuDef() const [309]
                0.00    0.00       1/77          SymTab::SymTab(int) [210]
                0.00    0.00       1/35          sList<sExpr>::first(void*&) const [256]
                0.00    0.00       1/95          sList<sDef>::first(void*&) const [196]
                0.00    0.00       1/372         sDef::type() const [171]
                0.00    0.00       1/6           tValue::isError() const [349]
                0.00    0.00       1/7           tValue::isQuExpr() const [344]
                0.00    0.00       1/36          sList<sExpr>::next(void*&) const [255]
                0.00    0.00       1/554         sList<sDef>::next(void*&) const [165]
                0.00    0.00       1/28          sObject::isCondDef() const [268]
                0.00    0.00       1/1           sStmt::isInv() const [527]
-----------------------------------------------
                0.00    7.33       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
[5]     95.9    0.00    7.33       1         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.16    7.15      20/20          opElementary::apply(quState&) const [9]
                0.02    0.00      20/31          quSubString::newsubstring(int, int) <cycle 5> [81]
                0.00    0.00       1/264         SymTab::getRef(std::string const&, ObjType*) const [94]
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
                0.00    0.00       1/1           opBit::~opBit() [135]
                0.00    0.00       6/5242400     std::complex<double>::complex(double, double) [38]
                0.00    0.00      21/3145948     quState::mapbits() const [71]
                0.00    0.00      20/30          quSubString::~quSubString() [263]
                0.00    0.00       2/21427       sDef::id() const [150]
                0.00    0.00       1/7           tValue::isQuExpr() const [344]
                0.00    0.00       1/5           tValue::qustate() const [355]
-----------------------------------------------
                0.00    7.33       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[6]     95.9    0.00    7.33       1         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    7.33       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.00       1/28          sObject::isCondDef() const [268]
-----------------------------------------------
                0.00    7.33       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
[7]     95.9    0.00    7.33       1         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    7.33       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/1           SymTab::~SymTab() [506]
-----------------------------------------------
                0.00    7.33       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[8]     95.9    0.00    7.33       1         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    7.33       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/353         tValue::tValue() [176]
                0.00    0.00       1/73          sObject::isExtern() const [213]
                0.00    0.00       1/663         tValue::~tValue() [164]
-----------------------------------------------
                0.16    7.15      20/20          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[9]     95.7    0.16    7.15      20         opElementary::apply(quState&) const [9]
                0.51    4.88 1048575/1048575     opMatrix::addterms(terminfo const&) const [10]
                0.08    0.33 1048575/1048575     quSubString::map(bitvec const&) const [22]
                0.02    0.35 1048575/1048575     terminfo::terminfo(terminfo const&) [25]
                0.03    0.12 1048575/1048575     term::operator=(term const&) [37]
                0.03    0.11 1048595/1048595     terminfo::~terminfo() [39]
                0.02    0.11 1048575/1048576     operator&(bitvec const&, bitvec const&) [46]
                0.03    0.09 1048575/4718078     term::setvect(bitvec const&) [19]
                0.00    0.11      20/20          quSubState::opbegin() [50]
                0.09    0.00 2097210/14679737     bitvec::~bitvec() [17]
                0.06    0.03 1048575/1048575     quSubState::baseterm(int) const [51]
                0.03    0.06 1048595/7863830     bitvec::operator=(bitvec const&) [16]
                0.03    0.00 2097150/12576771     term::vect() const [35]
                0.02    0.00      20/20          terminfo::terminfo() [69]
                0.00    0.01      20/23          quState::mapmask() const [78]
                0.01    0.00      20/44          operator~(bitvec const&) [70]
                0.00    0.00      20/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00      20/3145948     quState::mapbits() const [71]
                0.00    0.00      20/20          quSubState::baseterms() const [291]
                0.00    0.00      20/20          quSubState::opend() [290]
-----------------------------------------------
                0.51    4.88 1048575/1048575     opElementary::apply(quState&) const [9]
[10]    70.5    0.51    4.88 1048575         opMatrix::addterms(terminfo const&) const [10]
                0.14    2.78 2097150/2097150     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.19    0.75 2097150/2097173     quSubString::unmap(bitvec const&) const [15]
                0.18    0.21 2097150/2097150     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [24]
                0.04    0.19 2097150/2097150     operator|(bitvec const&, bitvec const&) [31]
                0.19    0.00 4194300/14679737     bitvec::~bitvec() [17]
                0.10    0.00 6291450/12576771     term::vect() const [35]
                0.04    0.00 3145725/6815227     term::ampl() const [54]
                0.03    0.00 3145725/3145728     bitvec::length() const [66]
                0.03    0.00 1048575/5242400     std::complex<double>::complex(double, double) [38]
                0.03    0.00 1048575/1048575     bitvec::getword() const [68]
-----------------------------------------------
                0.14    2.78 2097150/2097150     opMatrix::addterms(terminfo const&) const [10]
[11]    38.2    0.14    2.78 2097150         quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.05    2.73 2097150/2097151     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
-----------------------------------------------
                0.00    0.00       1/2097151     quBaseState::reset(bitvec const&) [95]
                0.05    2.73 2097150/2097151     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
[12]    36.4    0.05    2.73 2097151         quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                1.24    1.50 2097151/2097151     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
[13]    35.7    1.24    1.50 2097151+3144704 <cycle 4 as a whole> [13]
                1.20    1.45 3669503+23          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.04    0.04 1572352             termlist::add(term const&) <cycle 4> [55]
-----------------------------------------------
                                  23             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                             1572352             termlist::add(term const&) <cycle 4> [55]
                1.24    1.50 2097151/2097151     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
[14]    34.7    1.20    1.45 3669503+23      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.04    0.38      23/25          termlist::newlist() [20]
                0.09    0.31 3669503/4718078     term::setvect(bitvec const&) [19]
                0.10    0.10 3669526/3669526     termlist::hashfunct1(bitvec const&) const [34]
                0.13    0.00 3669503/3669503     term::setampl(std::complex<double> const&) [45]
                0.11    0.00      23/46          termlist::clear() [32]
                0.02    0.07 1572352/4193817     term::~term() [29]
                0.01    0.04  518669/518669      operator==(bitvec const&, bitvec const&) [60]
                0.03    0.01  518669/518669      termlist::hashfunct2(bitvec const&) const [62]
                0.01    0.00  518669/12576771     term::vect() const [35]
                             1572352             termlist::add(term const&) <cycle 4> [55]
                                  23             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00      23/2097173     quState::mapmask() const [78]
                0.19    0.75 2097150/2097173     opMatrix::addterms(terminfo const&) const [10]
[15]    12.2    0.19    0.75 2097173         quSubString::unmap(bitvec const&) const [15]
                0.06    0.24 2097173/2097173     bitvec::setbits(int, bitvec const&) [27]
                0.17    0.00 2097173/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.02    0.11 2097173/2097173     quBaseState::unmap(bitvec const&) const [47]
                0.09    0.00 2097173/14679737     bitvec::~bitvec() [17]
                0.05    0.00 2097173/3145748     quSubString::mapoffs() const [56]
                0.01    0.00 2097173/3145948     quState::mapbits() const [71]
-----------------------------------------------
                0.00    0.00       3/7863830     QuHeap::QuHeap(int, int) [58]
                0.00    0.00       4/7863830     term::set(bitvec const&, std::complex<double> const&) [138]
                0.03    0.06 1048575/7863830     term::term(term const&) [28]
                0.03    0.06 1048575/7863830     term::operator=(term const&) [37]
                0.03    0.06 1048595/7863830     opElementary::apply(quState&) const [9]
                0.14    0.26 4718078/7863830     term::setvect(bitvec const&) [19]
[16]     8.8    0.23    0.44 7863830         bitvec::operator=(bitvec const&) [16]
                0.44    0.00 7863830/7863830     bitvec::setlen(int) [21]
-----------------------------------------------
                0.00    0.00       1/14679737     quBaseState::reset(bitvec const&) [95]
                0.00    0.00       1/14679737     quBaseState::quBaseState(int, int) [59]
                0.00    0.00       2/14679737     QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00       3/14679737     QuHeap::QuHeap(int, int) [58]
                0.00    0.00       4/14679737     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
                0.00    0.00       5/14679737     QuHeap::~QuHeap() [40]
                0.00    0.00       5/14679737     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      46/14679737     quState::mapmask() const [78]
                0.05    0.00 1048575/14679737     quSubString::map(bitvec const&) const [22]
                0.05    0.00 1048595/14679737     terminfo::~terminfo() [39]
                0.09    0.00 2097173/14679737     quSubString::unmap(bitvec const&) const [15]
                0.09    0.00 2097210/14679737     opElementary::apply(quState&) const [9]
                0.19    0.00 4193817/14679737     term::~term() [29]
                0.19    0.00 4194300/14679737     opMatrix::addterms(terminfo const&) const [10]
[17]     8.6    0.66    0.00 14679737         bitvec::~bitvec() [17]
-----------------------------------------------
                0.00    0.00       1/7339644     QuHeap::cmask() const [140]
                0.00    0.00       1/7339644     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/7339644     quBaseState::reset(bitvec const&) [95]
                0.00    0.00       1/7339644     quBaseState::quBaseState(int, int) [59]
                0.00    0.00       4/7339644     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
                0.00    0.00       8/7339644     QuHeap::QuHeap(int, int) [58]
                0.00    0.00      20/7339644     opElementary::apply(quState&) const [9]
                0.00    0.00      20/7339644     terminfo::terminfo() [69]
                0.00    0.00      23/7339644     quState::mapmask() const [78]
                0.08    0.00 1048575/7339644     bitvec::getbits(int, int) const [36]
                0.08    0.00 1048575/7339644     term::term(term const&) [28]
                0.17    0.00 2097173/7339644     quSubString::unmap(bitvec const&) const [15]
                0.25    0.00 3145242/7339644     term::term() [23]
[18]     7.6    0.58    0.00 7339644         bitvec::bitvec(int, unsigned long) [18]
-----------------------------------------------
                0.03    0.09 1048575/4718078     opElementary::apply(quState&) const [9]
                0.09    0.31 3669503/4718078     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[19]     6.8    0.12    0.40 4718078         term::setvect(bitvec const&) [19]
                0.14    0.26 4718078/7863830     bitvec::operator=(bitvec const&) [16]
-----------------------------------------------
                0.00    0.03       2/25          termlist::termlist(int, int) [61]
                0.04    0.38      23/25          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[20]     5.9    0.04    0.41      25         termlist::newlist() [20]
                0.08    0.33 3145216/3145242     term::term() [23]
-----------------------------------------------
                0.44    0.00 7863830/7863830     bitvec::operator=(bitvec const&) [16]
[21]     5.8    0.44    0.00 7863830         bitvec::setlen(int) [21]
-----------------------------------------------
                0.08    0.33 1048575/1048575     opElementary::apply(quState&) const [9]
[22]     5.4    0.08    0.33 1048575         quSubString::map(bitvec const&) const [22]
                0.09    0.08 1048575/1048575     bitvec::getbits(int, int) const [36]
                0.03    0.05 1048575/1048575     quBaseState::map(bitvec const&) const [53]
                0.05    0.00 1048575/14679737     bitvec::~bitvec() [17]
                0.02    0.00 1048575/3145748     quSubString::mapoffs() const [56]
                0.01    0.00 1048575/3145948     quState::mapbits() const [71]
-----------------------------------------------
                0.00    0.00       6/3145242     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
                0.00    0.00      20/3145242     terminfo::terminfo() [69]
                0.08    0.33 3145216/3145242     termlist::newlist() [20]
[23]     5.4    0.08    0.33 3145242         term::term() [23]
                0.25    0.00 3145242/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.08    0.00 3145242/5242400     std::complex<double>::complex(double, double) [38]
-----------------------------------------------
                0.18    0.21 2097150/2097150     opMatrix::addterms(terminfo const&) const [10]
[24]     5.0    0.18    0.21 2097150         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [24]
                0.16    0.05 2097150/2097150     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
-----------------------------------------------
                0.02    0.35 1048575/1048575     opElementary::apply(quState&) const [9]
[25]     4.9    0.02    0.35 1048575         terminfo::terminfo(terminfo const&) [25]
                0.07    0.23 1048575/1048575     term::term(term const&) [28]
                0.05    0.00 1048575/7340093     bitvec::bitvec(bitvec const&) [26]
-----------------------------------------------
                0.00    0.00      44/7340093     operator~(bitvec const&) [70]
                0.05    0.00 1048575/7340093     quBaseState::map(bitvec const&) const [53]
                0.05    0.00 1048575/7340093     terminfo::terminfo(terminfo const&) [25]
                0.05    0.00 1048576/7340093     operator&(bitvec const&, bitvec const&) [46]
                0.11    0.00 2097150/7340093     operator|(bitvec const&, bitvec const&) [31]
                0.11    0.00 2097173/7340093     quBaseState::unmap(bitvec const&) const [47]
[26]     4.8    0.37    0.00 7340093         bitvec::bitvec(bitvec const&) [26]
-----------------------------------------------
                0.06    0.24 2097173/2097173     quSubString::unmap(bitvec const&) const [15]
[27]     3.9    0.06    0.24 2097173         bitvec::setbits(int, bitvec const&) [27]
                0.24    0.00 2097173/2097173     bitvec::setbits(int, int, unsigned long) [30]
-----------------------------------------------
                0.07    0.23 1048575/1048575     terminfo::terminfo(terminfo const&) [25]
[28]     3.9    0.07    0.23 1048575         term::term(term const&) [28]
                0.03    0.06 1048575/7863830     bitvec::operator=(bitvec const&) [16]
                0.08    0.00 1048575/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.03    0.00 1048575/5242400     std::complex<double>::complex(double, double) [38]
                0.02    0.00 1048575/12576771     term::vect() const [35]
                0.01    0.00 1048575/6815227     term::ampl() const [54]
-----------------------------------------------
                0.00    0.00       6/4193817     opMatrix::~opMatrix() [137]
                0.02    0.05 1048595/4193817     terminfo::~terminfo() [39]
                0.02    0.07 1572352/4193817     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.02    0.07 1572864/4193817     termlist::dellist() [41]
[29]     3.3    0.06    0.19 4193817         term::~term() [29]
                0.19    0.00 4193817/14679737     bitvec::~bitvec() [17]
-----------------------------------------------
                0.24    0.00 2097173/2097173     bitvec::setbits(int, bitvec const&) [27]
[30]     3.1    0.24    0.00 2097173         bitvec::setbits(int, int, unsigned long) [30]
-----------------------------------------------
                0.04    0.19 2097150/2097150     opMatrix::addterms(terminfo const&) const [10]
[31]     3.0    0.04    0.19 2097150         operator|(bitvec const&, bitvec const&) [31]
                0.11    0.00 2097150/7340093     bitvec::bitvec(bitvec const&) [26]
                0.09    0.00 2097150/2097151     bitvec::operator|=(bitvec const&) [52]
-----------------------------------------------
                0.01    0.00       2/46          termlist::termlist(int, int) [61]
                0.10    0.00      21/46          quBaseState::opbegin() [48]
                0.11    0.00      23/46          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[32]     2.9    0.22    0.00      46         termlist::clear() [32]
-----------------------------------------------
                0.16    0.05 2097150/2097150     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [24]
[33]     2.7    0.16    0.05 2097150         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
                0.04    0.00 2097150/2097150     std::complex<double>::real() const [64]
                0.01    0.00 2097150/2097150     std::complex<double>::imag() const [79]
-----------------------------------------------
                0.10    0.10 3669526/3669526     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[34]     2.6    0.10    0.10 3669526         termlist::hashfunct1(bitvec const&) const [34]
                0.10    0.00 3669526/4188195     bitvec::hashfunct() const [49]
-----------------------------------------------
                0.01    0.00  518669/12576771     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.02    0.00 1048575/12576771     term::term(term const&) [28]
                0.02    0.00 1048575/12576771     term::operator=(term const&) [37]
                0.02    0.00 1572352/12576771     termlist::add(term const&) <cycle 4> [55]
                0.03    0.00 2097150/12576771     opElementary::apply(quState&) const [9]
                0.10    0.00 6291450/12576771     opMatrix::addterms(terminfo const&) const [10]
[35]     2.5    0.19    0.00 12576771         term::vect() const [35]
-----------------------------------------------
                0.09    0.08 1048575/1048575     quSubString::map(bitvec const&) const [22]
[36]     2.3    0.09    0.08 1048575         bitvec::getbits(int, int) const [36]
                0.08    0.00 1048575/7339644     bitvec::bitvec(int, unsigned long) [18]
-----------------------------------------------
                0.03    0.12 1048575/1048575     opElementary::apply(quState&) const [9]
[37]     1.9    0.03    0.12 1048575         term::operator=(term const&) [37]
                0.03    0.06 1048575/7863830     bitvec::operator=(bitvec const&) [16]
                0.02    0.00 1048575/12576771     term::vect() const [35]
                0.01    0.00 1048575/6815227     term::ampl() const [54]
-----------------------------------------------
                0.00    0.00       1/5242400     yylex() [112]
                0.00    0.00       1/5242400     quBaseState::reset(bitvec const&) [95]
                0.00    0.00       6/5242400     ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.03    0.00 1048575/5242400     term::term(term const&) [28]
                0.03    0.00 1048575/5242400     opMatrix::addterms(terminfo const&) const [10]
                0.08    0.00 3145242/5242400     term::term() [23]
[38]     1.8    0.14    0.00 5242400         std::complex<double>::complex(double, double) [38]
-----------------------------------------------
                0.03    0.11 1048595/1048595     opElementary::apply(quState&) const [9]
[39]     1.8    0.03    0.11 1048595         terminfo::~terminfo() [39]
                0.02    0.05 1048595/4193817     term::~term() [29]
                0.05    0.00 1048595/14679737     bitvec::~bitvec() [17]
-----------------------------------------------
                0.00    0.13       1/1           main [1]
[40]     1.7    0.00    0.13       1         QuHeap::~QuHeap() [40]
                0.00    0.13       1/1           quBaseState::~quBaseState() [43]
                0.00    0.00       5/14679737     bitvec::~bitvec() [17]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [428]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [539]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [536]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [567]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [569]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [573]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [571]
-----------------------------------------------
                0.04    0.09       2/2           termlist::~termlist() [42]
[41]     1.7    0.04    0.09       2         termlist::dellist() [41]
                0.02    0.07 1572864/4193817     term::~term() [29]
-----------------------------------------------
                0.00    0.13       2/2           quBaseState::~quBaseState() [44]
[42]     1.7    0.00    0.13       2         termlist::~termlist() [42]
                0.04    0.09       2/2           termlist::dellist() [41]
-----------------------------------------------
                0.00    0.13       1/1           QuHeap::~QuHeap() [40]
[43]     1.7    0.00    0.13       1         quBaseState::~quBaseState() [43]
                0.00    0.13       1/1           quBaseState::~quBaseState() [44]
-----------------------------------------------
                0.00    0.13       1/1           quBaseState::~quBaseState() [43]
[44]     1.7    0.00    0.13       1         quBaseState::~quBaseState() [44]
                0.00    0.13       2/2           termlist::~termlist() [42]
                0.00    0.00       1/31          quState::~quState() [261]
-----------------------------------------------
                0.13    0.00 3669503/3669503     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[45]     1.7    0.13    0.00 3669503         term::setampl(std::complex<double> const&) [45]
-----------------------------------------------
                0.00    0.00       1/1048576     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.02    0.11 1048575/1048576     opElementary::apply(quState&) const [9]
[46]     1.7    0.02    0.11 1048576         operator&(bitvec const&, bitvec const&) [46]
                0.06    0.00 1048576/1048577     bitvec::operator&=(bitvec const&) [57]
                0.05    0.00 1048576/7340093     bitvec::bitvec(bitvec const&) [26]
-----------------------------------------------
                0.02    0.11 2097173/2097173     quSubString::unmap(bitvec const&) const [15]
[47]     1.6    0.02    0.11 2097173         quBaseState::unmap(bitvec const&) const [47]
                0.11    0.00 2097173/7340093     bitvec::bitvec(bitvec const&) [26]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::reset(bitvec const&) [95]
                0.01    0.10      20/21          quSubState::opbegin() [50]
[48]     1.4    0.01    0.10      21         quBaseState::opbegin() [48]
                0.10    0.00      21/46          termlist::clear() [32]
-----------------------------------------------
                0.01    0.00  518669/4188195     termlist::hashfunct2(bitvec const&) const [62]
                0.10    0.00 3669526/4188195     termlist::hashfunct1(bitvec const&) const [34]
[49]     1.4    0.11    0.00 4188195         bitvec::hashfunct() const [49]
-----------------------------------------------
                0.00    0.11      20/20          opElementary::apply(quState&) const [9]
[50]     1.4    0.00    0.11      20         quSubState::opbegin() [50]
                0.01    0.10      20/21          quBaseState::opbegin() [48]
-----------------------------------------------
                0.06    0.03 1048575/1048575     opElementary::apply(quState&) const [9]
[51]     1.2    0.06    0.03 1048575         quSubState::baseterm(int) const [51]
                0.01    0.02 1048575/1048575     quBaseState::baseterm(int) const [67]
-----------------------------------------------
                0.00    0.00       1/2097151     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.09    0.00 2097150/2097151     operator|(bitvec const&, bitvec const&) [31]
[52]     1.1    0.09    0.00 2097151         bitvec::operator|=(bitvec const&) [52]
-----------------------------------------------
                0.03    0.05 1048575/1048575     quSubString::map(bitvec const&) const [22]
[53]     1.1    0.03    0.05 1048575         quBaseState::map(bitvec const&) const [53]
                0.05    0.00 1048575/7340093     bitvec::bitvec(bitvec const&) [26]
-----------------------------------------------
                0.01    0.00 1048575/6815227     term::term(term const&) [28]
                0.01    0.00 1048575/6815227     term::operator=(term const&) [37]
                0.02    0.00 1572352/6815227     termlist::add(term const&) <cycle 4> [55]
                0.04    0.00 3145725/6815227     opMatrix::addterms(terminfo const&) const [10]
[54]     1.0    0.08    0.00 6815227         term::ampl() const [54]
-----------------------------------------------
                             1572352             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[55]     1.0    0.04    0.04 1572352         termlist::add(term const&) <cycle 4> [55]
                0.02    0.00 1572352/12576771     term::vect() const [35]
                0.02    0.00 1572352/6815227     term::ampl() const [54]
                             1572352             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.02    0.00 1048575/3145748     quSubString::map(bitvec const&) const [22]
                0.05    0.00 2097173/3145748     quSubString::unmap(bitvec const&) const [15]
[56]     0.9    0.07    0.00 3145748         quSubString::mapoffs() const [56]
-----------------------------------------------
                0.00    0.00       1/1048577     QuHeap::qualloc(int, BaseType) [77]
                0.06    0.00 1048576/1048577     operator&(bitvec const&, bitvec const&) [46]
[57]     0.7    0.06    0.00 1048577         bitvec::operator&=(bitvec const&) [57]
-----------------------------------------------
                0.00    0.05       1/1           main [1]
[58]     0.7    0.00    0.05       1         QuHeap::QuHeap(int, int) [58]
                0.00    0.05       1/1           quBaseState::quBaseState(int, int) [59]
                0.00    0.00       8/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00       3/7863830     bitvec::operator=(bitvec const&) [16]
                0.00    0.00       3/14679737     bitvec::~bitvec() [17]
                0.00    0.00       2/46          bitvec::qnot() [219]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [570]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [572]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [568]
                0.00    0.00       1/1           QuHeap::init() [505]
-----------------------------------------------
                0.00    0.05       1/1           QuHeap::QuHeap(int, int) [58]
[59]     0.7    0.00    0.05       1         quBaseState::quBaseState(int, int) [59]
                0.00    0.05       2/2           termlist::termlist(int, int) [61]
                0.00    0.01       1/1           quBaseState::reset(bitvec const&) [95]
                0.00    0.00       1/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00       1/14679737     bitvec::~bitvec() [17]
                0.00    0.00       1/32          quState::quState(int) [258]
-----------------------------------------------
                0.01    0.04  518669/518669      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[60]     0.7    0.01    0.04  518669         operator==(bitvec const&, bitvec const&) [60]
                0.04    0.00  518669/518669      bitvec::testeq(bitvec const&) const [63]
-----------------------------------------------
                0.00    0.05       2/2           quBaseState::quBaseState(int, int) [59]
[61]     0.6    0.00    0.05       2         termlist::termlist(int, int) [61]
                0.00    0.03       2/25          termlist::newlist() [20]
                0.01    0.00       2/46          termlist::clear() [32]
                0.00    0.00       2/2           duallog(int) [398]
-----------------------------------------------
                0.03    0.01  518669/518669      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[62]     0.6    0.03    0.01  518669         termlist::hashfunct2(bitvec const&) const [62]
                0.01    0.00  518669/4188195     bitvec::hashfunct() const [49]
-----------------------------------------------
                0.04    0.00  518669/518669      operator==(bitvec const&, bitvec const&) [60]
[63]     0.5    0.04    0.00  518669         bitvec::testeq(bitvec const&) const [63]
-----------------------------------------------
                0.04    0.00 2097150/2097150     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
[64]     0.5    0.04    0.00 2097150         std::complex<double>::real() const [64]
-----------------------------------------------
[65]     0.4    0.03    0.00      31+133     <cycle 5 as a whole> [65]
                0.02    0.00      31             quSubString::quSubString(int, int, quState&) <cycle 5> [73]
                0.01    0.00      30             quSubString::newsubstring(int, int) <cycle 5> [81]
                0.00    0.00      62             quBaseState::newsubstring(int, int) <cycle 5> [134]
                0.00    0.00      41             quState::newclone() <cycle 5> [139]
-----------------------------------------------
                0.00    0.00       1/3145728     QuHeap::ncond() const [142]
                0.00    0.00       1/3145728     QuHeap::cmask() const [140]
                0.00    0.00       1/3145728     quBaseState::reset(bitvec const&) [95]
                0.03    0.00 3145725/3145728     opMatrix::addterms(terminfo const&) const [10]
[66]     0.4    0.03    0.00 3145728         bitvec::length() const [66]
-----------------------------------------------
                0.01    0.02 1048575/1048575     quSubState::baseterm(int) const [51]
[67]     0.4    0.01    0.02 1048575         quBaseState::baseterm(int) const [67]
                0.02    0.00 1048575/1048575     termlist::operator[](int) const [72]
-----------------------------------------------
                0.03    0.00 1048575/1048575     opMatrix::addterms(terminfo const&) const [10]
[68]     0.3    0.03    0.00 1048575         bitvec::getword() const [68]
-----------------------------------------------
                0.02    0.00      20/20          opElementary::apply(quState&) const [9]
[69]     0.3    0.02    0.00      20         terminfo::terminfo() [69]
                0.00    0.00      20/3145242     term::term() [23]
                0.00    0.00      20/7339644     bitvec::bitvec(int, unsigned long) [18]
-----------------------------------------------
                0.00    0.00       1/44          QuHeap::qualloc(int, BaseType) [77]
                0.01    0.00      20/44          opElementary::apply(quState&) const [9]
                0.01    0.00      23/44          quState::mapmask() const [78]
[70]     0.3    0.02    0.00      44         operator~(bitvec const&) [70]
                0.00    0.00      44/7340093     bitvec::bitvec(bitvec const&) [26]
                0.00    0.00      44/46          bitvec::qnot() [219]
-----------------------------------------------
                0.00    0.00       1/3145948     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/3145948     quBaseState::basebits() const [143]
                0.00    0.00      20/3145948     opElementary::apply(quState&) const [9]
                0.00    0.00      21/3145948     ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      23/3145948     quState::mapmask() const [78]
                0.00    0.00      41/3145948     quState::newclone() <cycle 5> [139]
                0.00    0.00      93/3145948     quBaseState::newsubstring(int, int) <cycle 5> [134]
                0.01    0.00 1048575/3145948     quSubString::map(bitvec const&) const [22]
                0.01    0.00 2097173/3145948     quSubString::unmap(bitvec const&) const [15]
[71]     0.3    0.02    0.00 3145948         quState::mapbits() const [71]
-----------------------------------------------
                0.02    0.00 1048575/1048575     quBaseState::baseterm(int) const [67]
[72]     0.3    0.02    0.00 1048575         termlist::operator[](int) const [72]
-----------------------------------------------
                                  31             quBaseState::newsubstring(int, int) <cycle 5> [134]
[73]     0.3    0.02    0.00      31         quSubString::quSubString(int, int, quState&) <cycle 5> [73]
                0.00    0.00      31/31          quSubState::quSubState(int) [260]
                                  31             quState::newclone() <cycle 5> [139]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.3    0.02    0.00                 bitvec::operator=(unsigned long) [74]
-----------------------------------------------
                0.00    0.02      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[75]     0.2    0.00    0.02      36         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.01     275/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.01     263/264         SymTab::getRef(std::string const&, ObjType*) const [94]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
                0.00    0.00     435/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [80]
                0.00    0.00      36/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [115]
                0.00    0.00     734/21427       sDef::id() const [150]
                0.00    0.00     275/353         tValue::tValue() [176]
                0.00    0.00     275/663         tValue::~tValue() [164]
                0.00    0.00     263/294         sObject::isFunctDef() const [179]
                0.00    0.00     263/372         sDef::type() const [171]
                0.00    0.00     263/263         tType::isQuReg() const [186]
                0.00    0.00     263/554         sList<sDef>::next(void*&) const [165]
                0.00    0.00      72/77          SymTab::SymTab(int) [210]
                0.00    0.00      72/77          SymTab::~SymTab() [211]
                0.00    0.00      52/455         sObject::setParent(sObject*) [169]
                0.00    0.00      36/167         sObject::def() const [189]
                0.00    0.00      36/95          sList<sDef>::first(void*&) const [196]
                0.00    0.00      36/73          sObject::isExtern() const [213]
                0.00    0.00       8/253         sObject::isRoutDef() const [187]
                0.00    0.00       8/28          sObject::isCondDef() const [268]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [328]
                0.00    0.00       8/30          sObject::isQuFunDef() const [267]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [329]
                0.00    0.00       3/3           sObject::isBennet() const [394]
-----------------------------------------------
                0.00    0.01       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[76]     0.2    0.00    0.01       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.01       1/1           QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [106]
                0.00    0.00       1/31          quState::newclone() <cycle 5> [139]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [126]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.00       4/663         tValue::~tValue() [164]
                0.00    0.00       2/353         tValue::tValue() [176]
                0.00    0.00       2/6           tValue::isError() const [349]
                0.00    0.00       2/2           tValue::toInt() const [421]
                0.00    0.00       1/115         tType::isQuExpr() const [192]
                0.00    0.00       1/372         sDef::type() const [171]
                0.00    0.00       1/1           sDef::basetype() [500]
                0.00    0.00       1/5           sObject::isGlobal() const [356]
                0.00    0.00       1/5           tValue::qustate() const [355]
                0.00    0.00       1/167         sObject::def() const [189]
-----------------------------------------------
                0.00    0.01       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
[77]     0.2    0.00    0.01       1         QuHeap::qualloc(int, BaseType) [77]
                0.01    0.00      20/20          bitvec::operator[](int) const [82]
                0.00    0.00       1/31          quBaseState::newsubstring(int, int) <cycle 5> [134]
                0.00    0.00       1/23          quState::mapmask() const [78]
                0.00    0.00       1/44          operator~(bitvec const&) [70]
                0.00    0.00       2/14679737     bitvec::~bitvec() [17]
                0.00    0.00       1/1048577     bitvec::operator&=(bitvec const&) [57]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [507]
-----------------------------------------------
                0.00    0.00       1/23          QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00       2/23          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.01      20/23          opElementary::apply(quState&) const [9]
[78]     0.1    0.00    0.01      23         quState::mapmask() const [78]
                0.01    0.00      23/44          operator~(bitvec const&) [70]
                0.00    0.00      23/2097173     quSubString::unmap(bitvec const&) const [15]
                0.00    0.00      46/14679737     bitvec::~bitvec() [17]
                0.00    0.00      23/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00      23/3145948     quState::mapbits() const [71]
-----------------------------------------------
                0.01    0.00 2097150/2097150     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
[79]     0.1    0.01    0.00 2097150         std::complex<double>::imag() const [79]
-----------------------------------------------
                0.00    0.00     435/4125        sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00    3690/4125        SymTab::getentry(SymTable::entry*, std::string const&) const [90]
[80]     0.1    0.01    0.01    4125         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [80]
                0.01    0.00    2906/2906        std::char_traits<char>::compare(char const*, char const*, unsigned long) [96]
-----------------------------------------------
                                  10             quState::newclone() <cycle 5> [139]
                0.02    0.00      20/31          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[81]     0.1    0.01    0.00      30         quSubString::newsubstring(int, int) <cycle 5> [81]
                                  30             quBaseState::newsubstring(int, int) <cycle 5> [134]
-----------------------------------------------
                0.01    0.00      20/20          QuHeap::qualloc(int, BaseType) [77]
[82]     0.1    0.01    0.00      20         bitvec::operator[](int) const [82]
-----------------------------------------------
                0.01    0.00       1/1           __libc_csu_init [89]
[83]     0.1    0.01    0.00       1         _GLOBAL__sub_I_nbitvecs [83]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.1    0.01    0.00                 termlist::operator=(termlist const&) [84]
-----------------------------------------------
                                                 <spontaneous>
[85]     0.1    0.01    0.00                 bitvec::nset() const [85]
-----------------------------------------------
                                                 <spontaneous>
[86]     0.1    0.01    0.00                 bitvec::testless(bitvec const&) const [86]
-----------------------------------------------
                                                 <spontaneous>
[87]     0.1    0.01    0.00                 termlist::nbits() const [87]
-----------------------------------------------
                                                 <spontaneous>
[88]     0.1    0.01    0.00                 std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [88]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.1    0.00    0.01                 __libc_csu_init [89]
                0.01    0.00       1/1           _GLOBAL__sub_I_nbitvecs [83]
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [456]
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [457]
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [458]
                0.00    0.00       1/1           _GLOBAL__sub_I_main [454]
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [459]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [445]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [450]
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [461]
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [460]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [462]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [446]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [447]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [444]
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [453]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [451]
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [463]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [464]
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [452]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [448]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [449]
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [443]
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [455]
-----------------------------------------------
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00       1/362         SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00     133/362         SymTab::getDef(std::string const&) const [100]
                0.00    0.01     228/362         SymTab::getRef(std::string const&, ObjType*) const [94]
[90]     0.1    0.00    0.01     362+3328    SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00    3690/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [80]
                0.00    0.00    7365/21427       sDef::id() const [150]
                0.00    0.00    3202/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [151]
                0.00    0.00     473/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [152]
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [90]
-----------------------------------------------
                0.00    0.00      29/316         tValue::operator=(tValue const&) [109]
                0.00    0.01     287/316         tValue::tValue(tValue const&) [92]
[91]     0.1    0.00    0.01     316         tValue::assign(tValue const&) [91]
                0.01    0.00       8/31          quState::newclone() <cycle 5> [139]
                0.00    0.00     316/842         tType::operator=(tType const&) [158]
                0.00    0.00     316/1052        tType::ord() const [155]
                0.00    0.00     316/1013        tType::basetype() const [156]
-----------------------------------------------
                0.00    0.00       1/287         tValue::conv(tType const&) const [130]
                0.00    0.00       1/287         SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00       1/287         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [129]
                0.00    0.00       4/287         sConst::eval(SymTable*, SymTable*, QuHeap*) [126]
                0.00    0.01     280/287         SymTab::put(sDef*, tValue const&) [93]
[92]     0.1    0.00    0.01     287         tValue::tValue(tValue const&) [92]
                0.00    0.01     287/316         tValue::assign(tValue const&) [91]
                0.00    0.00     287/1478        tType::tType(BaseType) [153]
-----------------------------------------------
                0.00    0.00       1/324         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       1/324         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/324         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       3/324         sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       6/324         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      36/324         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.01     275/324         sRoutDef::typecheck(SymTable*, SymTable*) [75]
[93]     0.1    0.00    0.01     324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.01     280/287         tValue::tValue(tValue const&) [92]
                0.00    0.00     324/365         sObject::isDef() const [175]
                0.00    0.00     324/370         sObject::isValueDef() const [172]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
-----------------------------------------------
                0.00    0.00       1/264         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.01     263/264         sRoutDef::typecheck(SymTable*, SymTable*) [75]
[94]     0.1    0.00    0.01     264         SymTab::getRef(std::string const&, ObjType*) const [94]
                0.00    0.01     228/362         SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00       1/370         sObject::isValueDef() const [172]
-----------------------------------------------
                0.00    0.01       1/1           quBaseState::quBaseState(int, int) [59]
[95]     0.1    0.00    0.01       1         quBaseState::reset(bitvec const&) [95]
                0.00    0.00       1/21          quBaseState::opbegin() [48]
                0.00    0.00       1/2097151     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.00    0.00       1/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00       1/14679737     bitvec::~bitvec() [17]
                0.00    0.00       1/5242400     std::complex<double>::complex(double, double) [38]
                0.00    0.00       1/3145728     bitvec::length() const [66]
                0.00    0.00       1/1           quBaseState::basebits() const [143]
                0.00    0.00       1/21          quBaseState::opend() [283]
-----------------------------------------------
                0.01    0.00    2906/2906        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [80]
[96]     0.1    0.01    0.00    2906         std::char_traits<char>::compare(char const*, char const*, unsigned long) [96]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.1    0.01    0.00                 bitvec::getword(int, int) const [97]
-----------------------------------------------
                                                 <spontaneous>
[98]     0.1    0.01    0.00                 termlist::search(bitvec const&) const [98]
-----------------------------------------------
                                                 <spontaneous>
[99]     0.1    0.01    0.00                 std::complex<double>::real() [99]
-----------------------------------------------
                0.00    0.00       1/135         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00       1/135         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/135         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       3/135         sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       7/135         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      32/135         sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00      36/135         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00      53/135         SymTabComb::getDef(std::string const&) const [105]
[100]    0.0    0.00    0.00     135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00     133/362         SymTab::getentry(SymTable::entry*, std::string const&) const [90]
-----------------------------------------------
[101]    0.0    0.00    0.00       8+19      <cycle 3 as a whole> [101]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
-----------------------------------------------
                0.00    0.00       2/44          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       4/44          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       4/44          sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       4/44          sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       6/44          sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00      12/44          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      12/44          sBinOp::typecheck(SymTable*, SymTable*) [110]
[102]    0.0    0.00    0.00      44         sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00      32/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [105]
                0.00    0.00      48/52          sVar::id() const [216]
                0.00    0.00      44/370         sObject::isValueDef() const [172]
                0.00    0.00      44/372         sDef::type() const [171]
                0.00    0.00      44/109         sExpr::settype(tType const&) [193]
                0.00    0.00       4/4           sObject::isConstDef() const [381]
                0.00    0.00       1/5           sObject::isGlobal() const [356]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/14          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
[103]    0.0    0.00    0.00      14         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [105]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00      42/842         tType::operator=(tType const&) [158]
                0.00    0.00      37/372         sDef::type() const [171]
                0.00    0.00      35/37          sRoutDef::args() [252]
                0.00    0.00      28/1478        tType::tType(BaseType) [153]
                0.00    0.00      25/25          tType::isQuConst() const [271]
                0.00    0.00      21/455         sObject::setParent(sObject*) [169]
                0.00    0.00      21/96          sExpr::type() [194]
                0.00    0.00      21/21          tType::isConv(tType const&) const [289]
                0.00    0.00      21/115         tType::isQuExpr() const [192]
                0.00    0.00      21/36          sList<sExpr>::next(void*&) const [255]
                0.00    0.00      21/554         sList<sDef>::next(void*&) const [165]
                0.00    0.00      16/109         sExpr::settype(tType const&) [193]
                0.00    0.00      14/15          sCall::id() const [316]
                0.00    0.00      14/253         sObject::isRoutDef() const [187]
                0.00    0.00      14/294         sObject::isFunctDef() const [179]
                0.00    0.00      14/19          sObject::inFunctDef() const [299]
                0.00    0.00      14/18          sObject::inQuDef() const [308]
                0.00    0.00      14/28          sObject::isCondDef() const [268]
                0.00    0.00      14/14          sObject::inQuFunDef() const [321]
                0.00    0.00      14/35          sList<sExpr>::first(void*&) const [256]
                0.00    0.00      14/95          sList<sDef>::first(void*&) const [196]
                0.00    0.00      13/13          sObject::isSetRec(ObjFlag) [323]
                0.00    0.00      10/14          sObject::isProcDef() const [322]
                0.00    0.00       4/22          sObject::isQuOpDef() const [282]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [75]
[104]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
                0.00    0.00      13/14          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      23/455         sObject::setParent(sObject*) [169]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [275]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [307]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [501]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [102]
[105]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [105]
                0.00    0.00      53/135         SymTab::getDef(std::string const&) const [100]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
[106]    0.0    0.00    0.00       1         QuHeap::addReg(quState*) [106]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [107]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [132]
                0.00    0.00       1/663         tValue::~tValue() [164]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [106]
[107]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [107]
                0.00    0.00       1/31          quState::newclone() <cycle 5> [139]
                0.00    0.00       1/1478        tType::tType(BaseType) [153]
                0.00    0.00       1/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[108]    0.0    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00      36/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.00      36/167         sObject::def() const [189]
                0.00    0.00      36/353         tValue::tValue() [176]
                0.00    0.00      36/663         tValue::~tValue() [164]
-----------------------------------------------
                0.00    0.00       1/29          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/29          sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       2/29          sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/29          sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00      21/29          sConst::sConst(tValue const&) [111]
[109]    0.0    0.00    0.00      29         tValue::operator=(tValue const&) [109]
                0.00    0.00      29/316         tValue::assign(tValue const&) [91]
                0.00    0.00      29/692         tValue::delpointer() [161]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
[110]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00      52/1478        tType::tType(BaseType) [153]
                0.00    0.00      36/455         sObject::setParent(sObject*) [169]
                0.00    0.00      36/96          sExpr::type() [194]
                0.00    0.00      36/842         tType::operator=(tType const&) [158]
                0.00    0.00      36/1052        tType::ord() const [155]
                0.00    0.00      30/30          tType::isNumber() const [266]
                0.00    0.00      26/115         tType::isQuExpr() const [192]
                0.00    0.00      25/41          tType::operator==(BaseType) const [239]
                0.00    0.00      18/109         sExpr::settype(tType const&) [193]
                0.00    0.00      14/14          tType::isCond() const [320]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00       8/8           tType::isOrdered() const [337]
                0.00    0.00       6/9           sMult::object() const [332]
                0.00    0.00       4/4           sLess::object() const [379]
                0.00    0.00       3/3           sEqual::object() const [392]
                0.00    0.00       2/2           sSub::object() const [418]
                0.00    0.00       2/2           sConcat::object() const [422]
                0.00    0.00       2/23          tType::isBoolean() const [276]
                0.00    0.00       2/7           tType::operator==(tType const&) const [343]
                0.00    0.00       1/1           sOr::object() const [526]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [110]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00      19/21          yylex() [112]
[111]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [111]
                0.00    0.00      21/29          tValue::operator=(tValue const&) [109]
                0.00    0.00      21/63          tValue::type() const [214]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [284]
                0.00    0.00      21/353         tValue::tValue() [176]
-----------------------------------------------
                0.00    0.00    2338/2338        yyparse() [113]
[112]    0.0    0.00    0.00    2338         yylex() [112]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [111]
                0.00    0.00       1/5242400     std::complex<double>::complex(double, double) [38]
                0.00    0.00      19/663         tValue::~tValue() [164]
                0.00    0.00      15/15          tValue::tValue(long) [314]
                0.00    0.00      12/12          yy_get_next_buffer() [324]
                0.00    0.00       8/8           yy_get_previous_state() [333]
                0.00    0.00       2/2           tValue::tValue(double) [407]
                0.00    0.00       1/26          yy_load_buffer_state() [270]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [509]
                0.00    0.00       1/1           tValue::tValue(char const*) [508]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [120]
                0.00    0.00       2/4           parseobj() [119]
[113]    0.0    0.00    0.00       4         yyparse() [113]
                0.00    0.00    2338/2338        yylex() [112]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [181]
                0.00    0.00     268/1478        tType::tType(BaseType) [153]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [182]
                0.00    0.00      44/44          sVar::sVar(std::string*) [220]
                0.00    0.00      44/44          sDefList::sDefList() [225]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [251]
                0.00    0.00      27/27          sList<sExpr>::append(sExpr*) [269]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [274]
                0.00    0.00      22/22          sExprList::sExprList() [279]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [295]
                0.00    0.00      18/18          sStmtList::sStmtList() [304]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [311]
                0.00    0.00      14/14          sCall::sCall(std::string*, sExprList*, int) [317]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [334]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [338]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [345]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [188]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [364]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [373]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [368]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [352]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [389]
                0.00    0.00       2/2           objlist::objlist() [409]
                0.00    0.00       2/2           tType::tType(BaseType, int) [406]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [400]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [403]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [410]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [511]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [502]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [497]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [115]
[114]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       7/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       6/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.00      29/167         sObject::def() const [189]
                0.00    0.00      23/372         sDef::type() const [171]
                0.00    0.00      16/41          tType::operator==(BaseType) const [239]
                0.00    0.00      11/115         tType::isQuExpr() const [192]
                0.00    0.00       7/21427       sDef::id() const [150]
                0.00    0.00       6/353         tValue::tValue() [176]
                0.00    0.00       6/663         tValue::~tValue() [164]
                0.00    0.00       5/455         sObject::setParent(sObject*) [169]
                0.00    0.00       5/19          sObject::inFunctDef() const [299]
                0.00    0.00       5/96          sExpr::type() [194]
                0.00    0.00       5/165         sObject::isSet(ObjFlag) const [190]
                0.00    0.00       4/18          sObject::inQuDef() const [308]
                0.00    0.00       4/28          sObject::isCondDef() const [268]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [188]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00       1/21          tType::isInt() const [288]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [75]
[115]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [115]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00     269/455         sObject::setParent(sObject*) [169]
                0.00    0.00     269/554         sList<sDef>::next(void*&) const [165]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [185]
                0.00    0.00      44/95          sList<sDef>::first(void*&) const [196]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
[116]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00      15/455         sObject::setParent(sObject*) [169]
                0.00    0.00      14/32          tType::isQuCond() const [259]
                0.00    0.00       7/23          tType::isBoolean() const [276]
                0.00    0.00       7/96          sExpr::type() [194]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
[117]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       2/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [111]
                0.00    0.00       2/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00       2/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.00       8/455         sObject::setParent(sObject*) [169]
                0.00    0.00       4/96          sExpr::type() [194]
                0.00    0.00       4/21          tType::isInt() const [288]
                0.00    0.00       4/663         tValue::~tValue() [164]
                0.00    0.00       2/77          SymTab::SymTab(int) [210]
                0.00    0.00       2/52          sVar::id() const [216]
                0.00    0.00       2/79          sVarDef::object() const [208]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00       2/21427       sDef::id() const [150]
                0.00    0.00       2/2           tValue::tValue(int) [408]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [352]
                0.00    0.00       2/1478        tType::tType(BaseType) [153]
                0.00    0.00       2/353         tValue::tValue() [176]
                0.00    0.00       2/5           sDef::settype(tType const&) [351]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [328]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [329]
                0.00    0.00       2/5           sConstDef::~sConstDef() [353]
                0.00    0.00       2/77          SymTab::~SymTab() [211]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [103]
[118]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00       8/455         sObject::setParent(sObject*) [169]
                0.00    0.00       8/96          sExpr::type() [194]
                0.00    0.00       8/115         tType::isQuExpr() const [192]
                0.00    0.00       8/1052        tType::ord() const [155]
                0.00    0.00       4/4           sSubscript::nargs() const [378]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [256]
                0.00    0.00       4/21          tType::isInt() const [288]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [255]
                0.00    0.00       4/32          tType::isQuCond() const [259]
                0.00    0.00       4/4           sExpr::basetype() [367]
                0.00    0.00       4/1478        tType::tType(BaseType) [153]
                0.00    0.00       4/109         sExpr::settype(tType const&) [193]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[119]    0.0    0.00    0.00       2         parseobj() [119]
                0.00    0.00       2/4           yyparse() [113]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[120]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [120]
                0.00    0.00       2/4           yyparse() [113]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [359]
                0.00    0.00       2/2           yyCleanUp() [399]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[121]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [126]
                0.00    0.00       3/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       3/324         SymTab::put(sDef*, tValue const&) [93]
                0.00    0.00       6/663         tValue::~tValue() [164]
                0.00    0.00       3/353         tValue::tValue() [176]
                0.00    0.00       3/6           tValue::isError() const [349]
                0.00    0.00       3/63          tValue::type() const [214]
                0.00    0.00       3/372         sDef::type() const [171]
                0.00    0.00       3/7           tType::operator==(tType const&) const [343]
                0.00    0.00       3/167         sObject::def() const [189]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [124]
[122]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00       6/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       8/35          sList<sExpr>::first(void*&) const [256]
                0.00    0.00       6/455         sObject::setParent(sObject*) [169]
                0.00    0.00       6/36          sList<sExpr>::next(void*&) const [255]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [110]
[123]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       4/455         sObject::setParent(sObject*) [169]
                0.00    0.00       4/96          sExpr::type() [194]
                0.00    0.00       4/4           sLength::object() const [380]
                0.00    0.00       4/115         tType::isQuExpr() const [192]
                0.00    0.00       4/1478        tType::tType(BaseType) [153]
                0.00    0.00       4/109         sExpr::settype(tType const&) [193]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [110]
[124]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00       8/1478        tType::tType(BaseType) [153]
                0.00    0.00       4/353         tValue::tValue() [176]
                0.00    0.00       4/455         sObject::setParent(sObject*) [169]
                0.00    0.00       4/8           sList<sExpr>::n() const [336]
                0.00    0.00       4/4           sListFunct::object() const [377]
                0.00    0.00       4/109         sExpr::settype(tType const&) [193]
                0.00    0.00       4/663         tValue::~tValue() [164]
                0.00    0.00       3/96          sExpr::type() [194]
                0.00    0.00       3/3           sObject::isLocal() const [393]
                0.00    0.00       2/21          tType::isInt() const [288]
                0.00    0.00       1/842         tType::operator=(tType const&) [158]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[125]    0.0    0.00    0.00       1         sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       2/2           SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [109]
                0.00    0.00       2/52          sVar::id() const [216]
                0.00    0.00       2/663         tValue::~tValue() [164]
                0.00    0.00       1/353         tValue::tValue() [176]
                0.00    0.00       1/1           tValue::isExpr() const [531]
                0.00    0.00       1/96          sExpr::type() [194]
                0.00    0.00       1/63          tValue::type() const [214]
                0.00    0.00       1/7           tType::operator==(tType const&) const [343]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
[126]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [126]
                0.00    0.00       4/287         tValue::tValue(tValue const&) [92]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[127]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       3/135         SymTab::getDef(std::string const&) const [100]
                0.00    0.00       6/167         sObject::def() const [189]
                0.00    0.00       6/96          sExpr::type() [194]
                0.00    0.00       3/455         sObject::setParent(sObject*) [169]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00       3/21427       sDef::id() const [150]
                0.00    0.00       3/115         tType::isQuExpr() const [192]
                0.00    0.00       3/5           sDef::settype(tType const&) [351]
-----------------------------------------------
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
[128]    0.0    0.00    0.00       2         SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00       1/362         SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [92]
                0.00    0.00       1/353         tValue::tValue() [176]
                0.00    0.00       1/370         sObject::isValueDef() const [172]
                0.00    0.00       1/79          sVarDef::object() const [208]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[129]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [129]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [92]
                0.00    0.00       1/42          operator new(unsigned long, void*) [234]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[130]    0.0    0.00    0.00       1         tValue::conv(tType const&) const [130]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [92]
                0.00    0.00       1/7           tType::operator==(tType const&) const [343]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [132]
[131]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [129]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [385]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [382]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [440]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [533]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [566]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [525]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [548]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [442]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [435]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [106]
[132]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [132]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [565]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[133]    0.0    0.00    0.00       1         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
                0.00    0.00       6/3145242     term::term() [23]
                0.00    0.00       4/4           term::set(bitvec const&, std::complex<double> const&) [138]
                0.00    0.00       4/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00       4/14679737     bitvec::~bitvec() [17]
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [387]
                0.00    0.00       1/1           opMatrix::opMatrix(int) [510]
-----------------------------------------------
                                  30             quSubString::newsubstring(int, int) <cycle 5> [81]
                                  31             quState::newclone() <cycle 5> [139]
                0.00    0.00       1/31          QuHeap::qualloc(int, BaseType) [77]
[134]    0.0    0.00    0.00      62         quBaseState::newsubstring(int, int) <cycle 5> [134]
                0.00    0.00      93/3145948     quState::mapbits() const [71]
                                  31             quSubString::quSubString(int, int, quState&) <cycle 5> [73]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[135]    0.0    0.00    0.00       1         opBit::~opBit() [135]
                0.00    0.00       1/1           opBit::~opBit() [136]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [135]
[136]    0.0    0.00    0.00       1         opBit::~opBit() [136]
                0.00    0.00       1/1           opMatrix::~opMatrix() [137]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [136]
[137]    0.0    0.00    0.00       1         opMatrix::~opMatrix() [137]
                0.00    0.00       6/4193817     term::~term() [29]
                0.00    0.00       1/1           opElementary::~opElementary() [496]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
[138]    0.0    0.00    0.00       4         term::set(bitvec const&, std::complex<double> const&) [138]
                0.00    0.00       4/7863830     bitvec::operator=(bitvec const&) [16]
-----------------------------------------------
                                  31             quSubString::quSubString(int, int, quState&) <cycle 5> [73]
                0.00    0.00       1/31          tValue::tValue(quState&, BaseType) [107]
                0.00    0.00       1/31          sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.01    0.00       8/31          tValue::assign(tValue const&) [91]
[139]    0.0    0.00    0.00      41         quState::newclone() <cycle 5> [139]
                0.00    0.00      41/3145948     quState::mapbits() const [71]
                                  31             quBaseState::newsubstring(int, int) <cycle 5> [134]
                                  10             quSubString::newsubstring(int, int) <cycle 5> [81]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[140]    0.0    0.00    0.00       1         QuHeap::cmask() const [140]
                0.00    0.00       1/7339644     bitvec::bitvec(int, unsigned long) [18]
                0.00    0.00       1/3145728     bitvec::length() const [66]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[141]    0.0    0.00    0.00       1         QuHeap::cond() const [141]
                0.00    0.00       1/1           QuHeap::ncond() const [142]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::cond() const [141]
[142]    0.0    0.00    0.00       1         QuHeap::ncond() const [142]
                0.00    0.00       1/3145728     bitvec::length() const [66]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [95]
[143]    0.0    0.00    0.00       1         quBaseState::basebits() const [143]
                0.00    0.00       1/3145948     quState::mapbits() const [71]
-----------------------------------------------
[144]    0.0    0.00    0.00      23+101     <cycle 1 as a whole> [144]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [281]
                0.00    0.00      22             sList<sExpr>::~sList() <cycle 1> [278]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [280]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [303]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [346]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [347]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [362]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [369]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [370]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [365]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [366]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [411]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [412]
-----------------------------------------------
[145]    0.0    0.00    0.00       8+64      <cycle 2 as a whole> [145]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [306]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [301]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [305]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [339]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [340]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [401]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [402]
-----------------------------------------------
                0.00    0.00       2/21427       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       2/21427       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       3/21427       sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       7/21427       sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00     734/21427       sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00    7365/21427       SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00   13314/21427       SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
[150]    0.0    0.00    0.00   21427         sDef::id() const [150]
-----------------------------------------------
                0.00    0.00    3202/6456        SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00    3254/6456        SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
[151]    0.0    0.00    0.00    6456         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [151]
-----------------------------------------------
                0.00    0.00     473/3876        SymTab::getentry(SymTable::entry*, std::string const&) const [90]
                0.00    0.00    3403/3876        SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
[152]    0.0    0.00    0.00    3876         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [152]
-----------------------------------------------
                0.00    0.00       1/1478        tValue::tValue(std::complex<double> const&) [509]
                0.00    0.00       1/1478        tValue::tValue(char const*) [508]
                0.00    0.00       1/1478        tValue::tValue(quState&, BaseType) [107]
                0.00    0.00       1/1478        tValue::tValue(quState*, BaseType) [507]
                0.00    0.00       1/1478        __static_initialization_and_destruction_0(int, int) [468]
                0.00    0.00       1/1478        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [511]
                0.00    0.00       2/1478        tValue::tValue(int) [408]
                0.00    0.00       2/1478        tValue::tValue(double) [407]
                0.00    0.00       2/1478        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       4/1478        sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       4/1478        sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       5/1478        sConstDef::sConstDef(std::string*, sExpr*) [352]
                0.00    0.00       8/1478        sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00      15/1478        tValue::tValue(long) [314]
                0.00    0.00      16/1478        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [311]
                0.00    0.00      19/1478        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [295]
                0.00    0.00      21/1478        sExpr::sExpr(tType const&) [284]
                0.00    0.00      28/1478        sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      52/1478        sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00      74/1478        sExpr::sExpr() [212]
                0.00    0.00     268/1478        yyparse() [113]
                0.00    0.00     287/1478        tValue::tValue(tValue const&) [92]
                0.00    0.00     312/1478        sDef::sDef(tType const&, std::string*) [177]
                0.00    0.00     353/1478        tValue::tValue() [176]
[153]    0.0    0.00    0.00    1478         tType::tType(BaseType) [153]
-----------------------------------------------
                0.00    0.00     528/1104        sObject::isDef() const [175]
                0.00    0.00     576/1104        sObject::isValueDef() const [172]
[154]    0.0    0.00    0.00    1104         sArgDef::object() const [154]
-----------------------------------------------
                0.00    0.00       8/1052        sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00      36/1052        sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00     316/1052        tValue::assign(tValue const&) [91]
                0.00    0.00     692/1052        tValue::ord() const [162]
[155]    0.0    0.00    0.00    1052         tType::ord() const [155]
-----------------------------------------------
                0.00    0.00       1/1013        sDef::basetype() [500]
                0.00    0.00       4/1013        sExpr::basetype() [367]
                0.00    0.00     316/1013        tValue::assign(tValue const&) [91]
                0.00    0.00     692/1013        tValue::basetype() const [163]
[156]    0.0    0.00    0.00    1013         tType::basetype() const [156]
-----------------------------------------------
                0.00    0.00      97/881         sObject::isSetRec(ObjFlag) [323]
                0.00    0.00     784/881         sObject::def() const [189]
[157]    0.0    0.00    0.00     881         sObject::parent() const [157]
-----------------------------------------------
                0.00    0.00       1/842         sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       5/842         sDef::settype(tType const&) [351]
                0.00    0.00      21/842         sExpr::sExpr(tType const&) [284]
                0.00    0.00      36/842         sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00      42/842         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00     109/842         sExpr::settype(tType const&) [193]
                0.00    0.00     312/842         sDef::sDef(tType const&, std::string*) [177]
                0.00    0.00     316/842         tValue::assign(tValue const&) [91]
[158]    0.0    0.00    0.00     842         tType::operator=(tType const&) [158]
-----------------------------------------------
                0.00    0.00     826/826         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
[159]    0.0    0.00    0.00     826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [159]
-----------------------------------------------
                0.00    0.00     783/783         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
[160]    0.0    0.00    0.00     783         std::_List_const_iterator<sObject*>::operator++() [160]
-----------------------------------------------
                0.00    0.00      29/692         tValue::operator=(tValue const&) [109]
                0.00    0.00     663/692         tValue::~tValue() [164]
[161]    0.0    0.00    0.00     692         tValue::delpointer() [161]
                0.00    0.00     692/692         tValue::ord() const [162]
                0.00    0.00     692/692         tValue::basetype() const [163]
                0.00    0.00      10/10          quSubState::isbasestate() const [331]
                0.00    0.00      10/30          quSubString::~quSubString() [263]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [161]
[162]    0.0    0.00    0.00     692         tValue::ord() const [162]
                0.00    0.00     692/1052        tType::ord() const [155]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [161]
[163]    0.0    0.00    0.00     692         tValue::basetype() const [163]
                0.00    0.00     692/1013        tType::basetype() const [156]
-----------------------------------------------
                0.00    0.00       1/663         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/663         QuHeap::addReg(quState*) [106]
                0.00    0.00       1/663         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [515]
                0.00    0.00       2/663         sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       3/663         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/663         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       4/663         sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       4/663         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       6/663         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       6/663         sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00      19/663         yylex() [112]
                0.00    0.00      21/663         sConst::~sConst() [286]
                0.00    0.00      36/663         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00     275/663         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00     280/663         SymTab::deltree(SymTable::entry*) [217]
[164]    0.0    0.00    0.00     663         tValue::~tValue() [164]
                0.00    0.00     663/692         tValue::delpointer() [161]
-----------------------------------------------
                0.00    0.00       1/554         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      21/554         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00     263/554         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00     269/554         sDefList::typecheck(SymTable*, SymTable*) [115]
[165]    0.0    0.00    0.00     554         sList<sDef>::next(void*&) const [165]
-----------------------------------------------
                0.00    0.00      63/531         tValue::type() const [214]
                0.00    0.00      96/531         sExpr::type() [194]
                0.00    0.00     372/531         sDef::type() const [171]
[166]    0.0    0.00    0.00     531         tType::tType(tType const&) [166]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::sList() [300]
                0.00    0.00      21/515         sExpr::sExpr(tType const&) [284]
                0.00    0.00      22/515         sList<sExpr>::sList() [277]
                0.00    0.00      24/515         sStmt::sStmt(int) [272]
                0.00    0.00      44/515         sList<sDef>::sList() [223]
                0.00    0.00      74/515         sExpr::sExpr() [212]
                0.00    0.00     312/515         sDef::sDef(tType const&, std::string*) [177]
[167]    0.0    0.00    0.00     515         sObject::sObject(unsigned int) [167]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::~sList() <cycle 2> [301]
                0.00    0.00      22/515         sList<sExpr>::~sList() <cycle 1> [278]
                0.00    0.00      24/515         sStmt::~sStmt() [273]
                0.00    0.00      44/515         sList<sDef>::~sList() [224]
                0.00    0.00      95/515         sExpr::~sExpr() [195]
                0.00    0.00     312/515         sDef::~sDef() [178]
[168]    0.0    0.00    0.00     515         sObject::~sObject() [168]
-----------------------------------------------
                0.00    0.00       1/455         sExit::typecheck(SymTable*, SymTable*) [501]
                0.00    0.00       3/455         sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       4/455         sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       4/455         sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       5/455         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       6/455         sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00       8/455         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       8/455         sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00      15/455         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00      21/455         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      23/455         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
                0.00    0.00      36/455         sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00      52/455         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00     269/455         sDefList::typecheck(SymTable*, SymTable*) [115]
[169]    0.0    0.00    0.00     455         sObject::setParent(sObject*) [169]
-----------------------------------------------
                0.00    0.00       1/450         tValue::tValue(std::complex<double> const&) [509]
                0.00    0.00       1/450         tValue::tValue(char const*) [508]
                0.00    0.00       1/450         tValue::tValue(quState&, BaseType) [107]
                0.00    0.00       1/450         tValue::tValue(quState*, BaseType) [507]
                0.00    0.00       2/450         tValue::tValue(int) [408]
                0.00    0.00       2/450         tValue::tValue(double) [407]
                0.00    0.00      15/450         tValue::tValue(long) [314]
                0.00    0.00      74/450         sExpr::sExpr() [212]
                0.00    0.00     353/450         tValue::tValue() [176]
[170]    0.0    0.00    0.00     450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       1/372         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       1/372         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/372         sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00      23/372         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      37/372         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      44/372         sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00     263/372         sRoutDef::typecheck(SymTable*, SymTable*) [75]
[171]    0.0    0.00    0.00     372         sDef::type() const [171]
                0.00    0.00     372/531         tType::tType(tType const&) [166]
-----------------------------------------------
                0.00    0.00       1/370         SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00       1/370         SymTab::getRef(std::string const&, ObjType*) const [94]
                0.00    0.00      44/370         sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00     324/370         SymTab::put(sDef*, tValue const&) [93]
[172]    0.0    0.00    0.00     370         sObject::isValueDef() const [172]
                0.00    0.00     576/1104        sArgDef::object() const [154]
                0.00    0.00      50/79          sVarDef::object() const [208]
                0.00    0.00      26/48          sConstDef::object() const [218]
                0.00    0.00      23/369         sQuOpDef::object() const [173]
                0.00    0.00      19/369         sQuFunDef::object() const [174]
                0.00    0.00       2/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00       6/369         sObject::isProcDef() const [322]
                0.00    0.00       9/369         sObject::isQuOpDef() const [282]
                0.00    0.00      10/369         sObject::isQuFunDef() const [267]
                0.00    0.00      19/369         sObject::isInclude() const [240]
                0.00    0.00      23/369         sObject::isValueDef() const [172]
                0.00    0.00      84/369         sObject::isDef() const [175]
                0.00    0.00      90/369         sObject::isRoutDef() const [187]
                0.00    0.00     128/369         sObject::isFunctDef() const [179]
[173]    0.0    0.00    0.00     369         sQuOpDef::object() const [173]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [322]
                0.00    0.00      10/369         sObject::isQuOpDef() const [282]
                0.00    0.00      13/369         sObject::isQuFunDef() const [267]
                0.00    0.00      16/369         sObject::isInclude() const [240]
                0.00    0.00      19/369         sObject::isValueDef() const [172]
                0.00    0.00      70/369         sObject::isDef() const [175]
                0.00    0.00      74/369         sObject::isRoutDef() const [187]
                0.00    0.00     162/369         sObject::isFunctDef() const [179]
[174]    0.0    0.00    0.00     369         sQuFunDef::object() const [174]
-----------------------------------------------
                0.00    0.00      41/365         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     324/365         SymTab::put(sDef*, tValue const&) [93]
[175]    0.0    0.00    0.00     365         sObject::isDef() const [175]
                0.00    0.00     528/1104        sArgDef::object() const [154]
                0.00    0.00      84/369         sQuOpDef::object() const [173]
                0.00    0.00      70/369         sQuFunDef::object() const [174]
                0.00    0.00      24/79          sVarDef::object() const [208]
                0.00    0.00      16/48          sConstDef::object() const [218]
                0.00    0.00       6/58          sProcDef::object() const [215]
                0.00    0.00       1/8           sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       1/353         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/353         SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00       1/353         sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       1/353         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/353         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       2/353         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/353         sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       4/353         sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       6/353         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      21/353         sConst::sConst(tValue const&) [111]
                0.00    0.00      36/353         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [108]
                0.00    0.00     275/353         sRoutDef::typecheck(SymTable*, SymTable*) [75]
[176]    0.0    0.00    0.00     353         tValue::tValue() [176]
                0.00    0.00     353/1478        tType::tType(BaseType) [153]
                0.00    0.00     353/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [352]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [334]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [253]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [182]
[177]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [177]
                0.00    0.00     312/515         sObject::sObject(unsigned int) [167]
                0.00    0.00     312/1478        tType::tType(BaseType) [153]
                0.00    0.00     312/842         tType::operator=(tType const&) [158]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [354]
                0.00    0.00       8/312         sVarDef::~sVarDef() [342]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [254]
                0.00    0.00     263/312         sArgDef::~sArgDef() [184]
[178]    0.0    0.00    0.00     312         sDef::~sDef() [178]
                0.00    0.00     312/515         sObject::~sObject() [168]
-----------------------------------------------
                0.00    0.00      14/294         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      17/294         sObject::inFunctDef() const [299]
                0.00    0.00     263/294         sRoutDef::typecheck(SymTable*, SymTable*) [75]
[179]    0.0    0.00    0.00     294         sObject::isFunctDef() const [179]
                0.00    0.00     162/369         sQuFunDef::object() const [174]
                0.00    0.00     128/369         sQuOpDef::object() const [173]
                0.00    0.00       4/58          sProcDef::object() const [215]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [93]
[180]    0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
                0.00    0.00   13314/21427       sDef::id() const [150]
                0.00    0.00    3403/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [152]
                0.00    0.00    3254/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [151]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [180]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [113]
[181]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [181]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [113]
[182]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [182]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [177]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [224]
[183]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [183]
                0.00    0.00     263/263         sArgDef::~sArgDef() [184]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [183]
[184]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [184]
                0.00    0.00     263/312         sDef::~sDef() [178]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [115]
[185]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [185]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [75]
[186]    0.0    0.00    0.00     263         tType::isQuReg() const [186]
-----------------------------------------------
                0.00    0.00       8/253         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00      14/253         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00     231/253         sObject::def() const [189]
[187]    0.0    0.00    0.00     253         sObject::isRoutDef() const [187]
                0.00    0.00      90/369         sQuOpDef::object() const [173]
                0.00    0.00      78/78          sStmtList::object() const [209]
                0.00    0.00      74/369         sQuFunDef::object() const [174]
                0.00    0.00      34/34          sDefList::object() const [257]
                0.00    0.00      32/58          sProcDef::object() const [215]
                0.00    0.00      21/21          sIf::object() const [287]
                0.00    0.00      15/15          sFor::object() const [315]
                0.00    0.00       4/8           sCall::object() const [335]
                0.00    0.00       3/9           sMult::object() const [332]
-----------------------------------------------
                0.00    0.00       4/176         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       4/176         yyparse() [113]
                0.00    0.00      24/176         sStmt::sStmt(int) [272]
                0.00    0.00     144/176         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [253]
[188]    0.0    0.00    0.00     176         sObject::setFlag(ObjFlag, int) [188]
-----------------------------------------------
                                 155             sObject::def() const [189]
                0.00    0.00       1/167         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/167         sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00       5/167         sObject::isGlobal() const [356]
                0.00    0.00       6/167         sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00      14/167         sObject::inQuFunDef() const [321]
                0.00    0.00      18/167         sObject::inQuDef() const [308]
                0.00    0.00      19/167         sObject::inFunctDef() const [299]
                0.00    0.00      29/167         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      36/167         sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00      36/167         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [108]
[189]    0.0    0.00    0.00     167+155     sObject::def() const [189]
                0.00    0.00     784/881         sObject::parent() const [157]
                0.00    0.00     231/253         sObject::isRoutDef() const [187]
                                 155             sObject::def() const [189]
-----------------------------------------------
                0.00    0.00       1/165         sStmt::isInv() const [527]
                0.00    0.00       3/165         sObject::isBennet() const [394]
                0.00    0.00       5/165         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      28/165         sObject::isCondDef() const [268]
                0.00    0.00      55/165         sObject::isSetRec(ObjFlag) [323]
                0.00    0.00      73/165         sObject::isExtern() const [213]
[190]    0.0    0.00    0.00     165         sObject::isSet(ObjFlag) const [190]
-----------------------------------------------
                0.00    0.00      41/123         std::list<sObject*, std::allocator<sObject*> >::end() [246]
                0.00    0.00      82/123         std::list<sObject*, std::allocator<sObject*> >::begin() [206]
[191]    0.0    0.00    0.00     123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00       1/115         sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       2/115         tType::isConv(tType const&) const [289]
                0.00    0.00       3/115         sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       4/115         sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       7/115         tValue::isQuExpr() const [344]
                0.00    0.00       8/115         sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00      11/115         sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      21/115         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      26/115         sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00      32/115         tType::isQuCond() const [259]
[192]    0.0    0.00    0.00     115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00       4/109         sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       4/109         sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       4/109         sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00      16/109         sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      18/109         sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00      19/109         sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00      44/109         sVar::typecheck(SymTable*, SymTable*) [102]
[193]    0.0    0.00    0.00     109         sExpr::settype(tType const&) [193]
                0.00    0.00     109/842         tType::operator=(tType const&) [158]
-----------------------------------------------
                0.00    0.00       1/96          sExit::typecheck(SymTable*, SymTable*) [501]
                0.00    0.00       1/96          sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       3/96          sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       4/96          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       4/96          sUnOp::typecheck(SymTable*, SymTable*) [123]
                0.00    0.00       5/96          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       6/96          sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00       7/96          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00       8/96          sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00      21/96          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      36/96          sBinOp::typecheck(SymTable*, SymTable*) [110]
[194]    0.0    0.00    0.00      96         sExpr::type() [194]
                0.00    0.00      96/531         tType::tType(tType const&) [166]
-----------------------------------------------
                0.00    0.00       4/95          sSubscript::~sSubscript() <cycle 1> [366]
                0.00    0.00       4/95          sUnOp::~sUnOp() [372]
                0.00    0.00       4/95          sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00      18/95          sBinOp::~sBinOp() <cycle 1> [303]
                0.00    0.00      21/95          sConst::~sConst() [286]
                0.00    0.00      44/95          sVar::~sVar() [222]
[195]    0.0    0.00    0.00      95         sExpr::~sExpr() [195]
                0.00    0.00      95/515         sObject::~sObject() [168]
-----------------------------------------------
                0.00    0.00       1/95          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      14/95          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      36/95          sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00      44/95          sDefList::typecheck(SymTable*, SymTable*) [115]
[196]    0.0    0.00    0.00      95         sList<sDef>::first(void*&) const [196]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::SymTabComb(SymTable*, SymTable*) [328]
                0.00    0.00      77/87          SymTab::SymTab(int) [210]
[197]    0.0    0.00    0.00      87         SymTable::SymTable() [197]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::~SymTabComb() [330]
                0.00    0.00      77/87          SymTab::~SymTab() [211]
[198]    0.0    0.00    0.00      87         SymTable::~SymTable() [198]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() const [230]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::end() const [228]
[199]    0.0    0.00    0.00      86         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [199]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
[200]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::new_allocator() [200]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::~allocator() [205]
[201]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
[202]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [203]
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
[203]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [203]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
[204]    0.0    0.00    0.00      82         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::new_allocator() [200]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
[205]    0.0    0.00    0.00      82         std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::front() [247]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::pop_front() [250]
[206]    0.0    0.00    0.00      82         std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      82/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
[207]    0.0    0.00    0.00      82         sObject** std::__addressof<sObject*>(sObject*&) [207]
-----------------------------------------------
                0.00    0.00       1/79          sObject::isConstDef() const [381]
                0.00    0.00       1/79          sObject::isInclude() const [240]
                0.00    0.00       1/79          SymTab::getVal(std::string const&, ObjType*) const [128]
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00      24/79          sObject::isDef() const [175]
                0.00    0.00      50/79          sObject::isValueDef() const [172]
[208]    0.0    0.00    0.00      79         sVarDef::object() const [208]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [187]
[209]    0.0    0.00    0.00      78         sStmtList::object() const [209]
-----------------------------------------------
                0.00    0.00       1/77          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       2/77          main [1]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [75]
[210]    0.0    0.00    0.00      77         SymTab::SymTab(int) [210]
                0.00    0.00      77/87          SymTable::SymTable() [197]
-----------------------------------------------
                0.00    0.00       1/77          SymTab::~SymTab() [506]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       2/77          main [1]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [75]
[211]    0.0    0.00    0.00      77         SymTab::~SymTab() [211]
                0.00    0.00      77/87          SymTable::~SymTable() [198]
                0.00    0.00      48/48          SymTab::deltree(SymTable::entry*) [217]
-----------------------------------------------
                0.00    0.00       4/74          sSubscript::sSubscript(sVar*, sExprList*) [364]
                0.00    0.00       4/74          sUnOp::sUnOp(sExpr*) [371]
                0.00    0.00       4/74          sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00      18/74          sBinOp::sBinOp(sExpr*, sExpr*) [302]
                0.00    0.00      44/74          sVar::sVar(std::string*) [220]
[212]    0.0    0.00    0.00      74         sExpr::sExpr() [212]
                0.00    0.00      74/515         sObject::sObject(unsigned int) [167]
                0.00    0.00      74/1478        tType::tType(BaseType) [153]
                0.00    0.00      74/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       1/73          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00      36/73          sRoutDef::~sRoutDef() [254]
                0.00    0.00      36/73          sRoutDef::typecheck(SymTable*, SymTable*) [75]
[213]    0.0    0.00    0.00      73         sObject::isExtern() const [213]
                0.00    0.00      73/165         sObject::isSet(ObjFlag) const [190]
-----------------------------------------------
                0.00    0.00       1/63          sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       3/63          sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
                0.00    0.00      21/63          sConst::sConst(tValue const&) [111]
                0.00    0.00      38/63          sConst::typecheck(SymTable*, SymTable*) [294]
[214]    0.0    0.00    0.00      63         tValue::type() const [214]
                0.00    0.00      63/531         tType::tType(tType const&) [166]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [240]
                0.00    0.00       2/58          sObject::isValueDef() const [172]
                0.00    0.00       3/58          sObject::isProcDef() const [322]
                0.00    0.00       3/58          sObject::isQuOpDef() const [282]
                0.00    0.00       4/58          sObject::isFunctDef() const [179]
                0.00    0.00       6/58          sObject::isDef() const [175]
                0.00    0.00       7/58          sObject::isQuFunDef() const [267]
                0.00    0.00      32/58          sObject::isRoutDef() const [187]
[215]    0.0    0.00    0.00      58         sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00       2/52          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       2/52          sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00      48/52          sVar::typecheck(SymTable*, SymTable*) [102]
[216]    0.0    0.00    0.00      52         sVar::id() const [216]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [217]
                0.00    0.00      48/48          SymTab::~SymTab() [211]
[217]    0.0    0.00    0.00      48+276     SymTab::deltree(SymTable::entry*) [217]
                0.00    0.00     280/663         tValue::~tValue() [164]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [296]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [312]
                0.00    0.00       3/5           sConstDef::~sConstDef() [353]
                0.00    0.00       1/1           sProcDef::~sProcDef() [512]
                0.00    0.00       1/7           sVarDef::~sVarDef() [341]
                                 276             SymTab::deltree(SymTable::entry*) [217]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [381]
                0.00    0.00       3/48          sObject::isInclude() const [240]
                0.00    0.00      16/48          sObject::isDef() const [175]
                0.00    0.00      26/48          sObject::isValueDef() const [172]
[218]    0.0    0.00    0.00      48         sConstDef::object() const [218]
-----------------------------------------------
                0.00    0.00       2/46          QuHeap::QuHeap(int, int) [58]
                0.00    0.00      44/46          operator~(bitvec const&) [70]
[219]    0.0    0.00    0.00      46         bitvec::qnot() [219]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [113]
[220]    0.0    0.00    0.00      44         sVar::sVar(std::string*) [220]
                0.00    0.00      44/74          sExpr::sExpr() [212]
-----------------------------------------------
                0.00    0.00       2/44          sFor::~sFor() <cycle 2> [402]
                0.00    0.00       4/44          sSubscript::~sSubscript() <cycle 1> [366]
                0.00    0.00       4/44          sUnOp::~sUnOp() [372]
                0.00    0.00       4/44          sVarDef::~sVarDef() [342]
                0.00    0.00      12/44          sBinOp::~sBinOp() <cycle 1> [303]
                0.00    0.00      18/44          sList<sExpr>::~sList() <cycle 1> [278]
[221]    0.0    0.00    0.00      44         sVar::~sVar() [221]
                0.00    0.00      44/44          sVar::~sVar() [222]
-----------------------------------------------
                0.00    0.00      44/44          sVar::~sVar() [221]
[222]    0.0    0.00    0.00      44         sVar::~sVar() [222]
                0.00    0.00      44/95          sExpr::~sExpr() [195]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [225]
[223]    0.0    0.00    0.00      44         sList<sDef>::sList() [223]
                0.00    0.00      44/515         sObject::sObject(unsigned int) [167]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [227]
[224]    0.0    0.00    0.00      44         sList<sDef>::~sList() [224]
                0.00    0.00     263/263         sArgDef::~sArgDef() [183]
                0.00    0.00      44/515         sObject::~sObject() [168]
                0.00    0.00       6/7           sVarDef::~sVarDef() [341]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [113]
[225]    0.0    0.00    0.00      44         sDefList::sDefList() [225]
                0.00    0.00      44/44          sList<sDef>::sList() [223]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [254]
[226]    0.0    0.00    0.00      44         sDefList::~sDefList() [226]
                0.00    0.00      44/44          sDefList::~sDefList() [227]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [226]
[227]    0.0    0.00    0.00      44         sDefList::~sDefList() [227]
                0.00    0.00      44/44          sList<sDef>::~sList() [224]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
[228]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() const [228]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [199]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[229]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::size() const [229]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::begin() const [230]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() const [228]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
[230]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::begin() const [230]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [199]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
[231]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
                0.00    0.00     826/826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [159]
                0.00    0.00     783/783         std::_List_const_iterator<sObject*>::operator++() [160]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
[232]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [232]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
[233]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [232]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
-----------------------------------------------
                0.00    0.00       1/42          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [129]
                0.00    0.00      41/42          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [236]
[234]    0.0    0.00    0.00      42         operator new(unsigned long, void*) [234]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
[235]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [235]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
[236]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [236]
                0.00    0.00      41/42          operator new(unsigned long, void*) [234]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [244]
[237]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [237]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [243]
[238]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [238]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [241]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [110]
[239]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [239]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[240]    0.0    0.00    0.00      41         sObject::isInclude() const [240]
                0.00    0.00      19/369         sQuOpDef::object() const [173]
                0.00    0.00      16/369         sQuFunDef::object() const [174]
                0.00    0.00       3/48          sConstDef::object() const [218]
                0.00    0.00       1/8           sCall::object() const [335]
                0.00    0.00       1/79          sVarDef::object() const [208]
                0.00    0.00       1/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [238]
[241]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [241]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [247]
[242]    0.0    0.00    0.00      41         std::_List_iterator<sObject*>::operator*() const [242]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
[243]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [243]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [238]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
[244]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [244]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [237]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [249]
[245]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [243]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [207]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [236]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [251]
[246]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::end() [246]
                0.00    0.00      41/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[247]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::front() [247]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      41/41          std::_List_iterator<sObject*>::operator*() const [242]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [250]
[248]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [207]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [235]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [244]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [251]
[249]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [249]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [245]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[250]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::pop_front() [250]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [248]
-----------------------------------------------
                0.00    0.00      41/41          yyparse() [113]
[251]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [251]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::end() [246]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [249]
-----------------------------------------------
                0.00    0.00       2/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      35/37          sCall::typecheck(SymTable*, SymTable*) [103]
[252]    0.0    0.00    0.00      37         sRoutDef::args() [252]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [511]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [311]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [295]
[253]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [253]
                0.00    0.00     144/176         sObject::setFlag(ObjFlag, int) [188]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [177]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [513]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [313]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [297]
[254]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [254]
                0.00    0.00      44/44          sDefList::~sDefList() [226]
                0.00    0.00      36/73          sObject::isExtern() const [213]
                0.00    0.00      36/312         sDef::~sDef() [178]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [305]
-----------------------------------------------
                0.00    0.00       1/36          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/36          sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       4/36          sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       6/36          sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00      21/36          sCall::typecheck(SymTable*, SymTable*) [103]
[255]    0.0    0.00    0.00      36         sList<sExpr>::next(void*&) const [255]
-----------------------------------------------
                0.00    0.00       1/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/35          sSubscript::sSubscript(sVar*, sExprList*) [364]
                0.00    0.00       4/35          sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       4/35          sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       8/35          sExprList::typecheck(SymTable*, SymTable*) [122]
                0.00    0.00      14/35          sCall::typecheck(SymTable*, SymTable*) [103]
[256]    0.0    0.00    0.00      35         sList<sExpr>::first(void*&) const [256]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [187]
[257]    0.0    0.00    0.00      34         sDefList::object() const [257]
-----------------------------------------------
                0.00    0.00       1/32          quBaseState::quBaseState(int, int) [59]
                0.00    0.00      31/32          quSubState::quSubState(int) [260]
[258]    0.0    0.00    0.00      32         quState::quState(int) [258]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00      14/32          tType::isCond() const [320]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
[259]    0.0    0.00    0.00      32         tType::isQuCond() const [259]
                0.00    0.00      32/115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00      31/31          quSubString::quSubString(int, int, quState&) <cycle 5> [73]
[260]    0.0    0.00    0.00      31         quSubState::quSubState(int) [260]
                0.00    0.00      31/32          quState::quState(int) [258]
-----------------------------------------------
                0.00    0.00       1/31          quBaseState::~quBaseState() [44]
                0.00    0.00      30/31          quSubState::~quSubState() [262]
[261]    0.0    0.00    0.00      31         quState::~quState() [261]
-----------------------------------------------
                0.00    0.00      30/30          quSubString::~quSubString() [264]
[262]    0.0    0.00    0.00      30         quSubState::~quSubState() [262]
                0.00    0.00      30/30          quBaseState::isbasestate() const [265]
                0.00    0.00      30/31          quState::~quState() [261]
-----------------------------------------------
                0.00    0.00      10/30          tValue::delpointer() [161]
                0.00    0.00      20/30          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[263]    0.0    0.00    0.00      30         quSubString::~quSubString() [263]
                0.00    0.00      30/30          quSubString::~quSubString() [264]
-----------------------------------------------
                0.00    0.00      30/30          quSubString::~quSubString() [263]
[264]    0.0    0.00    0.00      30         quSubString::~quSubString() [264]
                0.00    0.00      30/30          quSubState::~quSubState() [262]
-----------------------------------------------
                0.00    0.00      30/30          quSubState::~quSubState() [262]
[265]    0.0    0.00    0.00      30         quBaseState::isbasestate() const [265]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [110]
[266]    0.0    0.00    0.00      30         tType::isNumber() const [266]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00       9/30          sObject::isQuDef() const [309]
                0.00    0.00      13/30          sObject::inQuFunDef() const [321]
[267]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [267]
                0.00    0.00      13/369         sQuFunDef::object() const [174]
                0.00    0.00      10/369         sQuOpDef::object() const [173]
                0.00    0.00       7/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00       1/28          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       1/28          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/28          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       8/28          sRoutDef::typecheck(SymTable*, SymTable*) [75]
                0.00    0.00      14/28          sCall::typecheck(SymTable*, SymTable*) [103]
[268]    0.0    0.00    0.00      28         sObject::isCondDef() const [268]
                0.00    0.00      28/165         sObject::isSet(ObjFlag) const [190]
-----------------------------------------------
                0.00    0.00      27/27          yyparse() [113]
[269]    0.0    0.00    0.00      27         sList<sExpr>::append(sExpr*) [269]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [112]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [327]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [310]
[270]    0.0    0.00    0.00      26         yy_load_buffer_state() [270]
-----------------------------------------------
                0.00    0.00      25/25          sCall::typecheck(SymTable*, SymTable*) [103]
[271]    0.0    0.00    0.00      25         tType::isQuConst() const [271]
-----------------------------------------------
                0.00    0.00       1/24          sExit::sExit(sExpr*) [502]
                0.00    0.00       2/24          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [400]
                0.00    0.00       7/24          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [338]
                0.00    0.00      14/24          sCall::sCall(std::string*, sExprList*, int) [317]
[272]    0.0    0.00    0.00      24         sStmt::sStmt(int) [272]
                0.00    0.00      24/515         sObject::sObject(unsigned int) [167]
                0.00    0.00      24/176         sObject::setFlag(ObjFlag, int) [188]
-----------------------------------------------
                0.00    0.00       1/24          sExit::~sExit() [504]
                0.00    0.00       2/24          sFor::~sFor() <cycle 2> [402]
                0.00    0.00       7/24          sIf::~sIf() <cycle 2> [340]
                0.00    0.00      14/24          sCall::~sCall() [319]
[273]    0.0    0.00    0.00      24         sStmt::~sStmt() [273]
                0.00    0.00      24/515         sObject::~sObject() [168]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [113]
[274]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [274]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
[275]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [275]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [116]
                0.00    0.00      14/23          tType::isCond() const [320]
[276]    0.0    0.00    0.00      23         tType::isBoolean() const [276]
-----------------------------------------------
                0.00    0.00      22/22          sExprList::sExprList() [279]
[277]    0.0    0.00    0.00      22         sList<sExpr>::sList() [277]
                0.00    0.00      22/515         sObject::sObject(unsigned int) [167]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [281]
[278]    0.0    0.00    0.00      22         sList<sExpr>::~sList() <cycle 1> [278]
                0.00    0.00      22/515         sObject::~sObject() [168]
                0.00    0.00      18/44          sVar::~sVar() [221]
                                   4             sSubscript::~sSubscript() <cycle 1> [365]
                                   3             sMult::~sMult() <cycle 1> [346]
                                   2             sConcat::~sConcat() <cycle 1> [411]
-----------------------------------------------
                0.00    0.00      22/22          yyparse() [113]
[279]    0.0    0.00    0.00      22         sExprList::sExprList() [279]
                0.00    0.00      22/22          sList<sExpr>::sList() [277]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [366]
                                   4             sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00      14/23          sCall::~sCall() [319]
[280]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [280]
                                  22             sExprList::~sExprList() <cycle 1> [281]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [280]
[281]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [281]
                                  22             sList<sExpr>::~sList() <cycle 1> [278]
-----------------------------------------------
                0.00    0.00       4/22          sCall::typecheck(SymTable*, SymTable*) [103]
                0.00    0.00      18/22          sObject::isQuDef() const [309]
[282]    0.0    0.00    0.00      22         sObject::isQuOpDef() const [282]
                0.00    0.00      10/369         sQuFunDef::object() const [174]
                0.00    0.00       9/369         sQuOpDef::object() const [173]
                0.00    0.00       3/58          sProcDef::object() const [215]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::reset(bitvec const&) [95]
                0.00    0.00      20/21          quSubState::opend() [290]
[283]    0.0    0.00    0.00      21         quBaseState::opend() [283]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [111]
[284]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [284]
                0.00    0.00      21/515         sObject::sObject(unsigned int) [167]
                0.00    0.00      21/1478        tType::tType(BaseType) [153]
                0.00    0.00      21/842         tType::operator=(tType const&) [158]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [504]
                0.00    0.00       1/21          sVarDef::~sVarDef() [342]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [402]
                0.00    0.00       5/21          sConstDef::~sConstDef() [354]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [303]
[285]    0.0    0.00    0.00      21         sConst::~sConst() [285]
                0.00    0.00      21/21          sConst::~sConst() [286]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [285]
[286]    0.0    0.00    0.00      21         sConst::~sConst() [286]
                0.00    0.00      21/95          sExpr::~sExpr() [195]
                0.00    0.00      21/663         tValue::~tValue() [164]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [187]
[287]    0.0    0.00    0.00      21         sIf::object() const [287]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       2/21          tValue::isInt() const [420]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [124]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [118]
                0.00    0.00       8/21          tType::isOrdered() const [337]
[288]    0.0    0.00    0.00      21         tType::isInt() const [288]
-----------------------------------------------
                0.00    0.00      21/21          sCall::typecheck(SymTable*, SymTable*) [103]
[289]    0.0    0.00    0.00      21         tType::isConv(tType const&) const [289]
                0.00    0.00       2/115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[290]    0.0    0.00    0.00      20         quSubState::opend() [290]
                0.00    0.00      20/21          quBaseState::opend() [283]
-----------------------------------------------
                0.00    0.00      20/20          opElementary::apply(quState&) const [9]
[291]    0.0    0.00    0.00      20         quSubState::baseterms() const [291]
                0.00    0.00      20/20          quBaseState::baseterms() const [292]
-----------------------------------------------
                0.00    0.00      20/20          quSubState::baseterms() const [291]
[292]    0.0    0.00    0.00      20         quBaseState::baseterms() const [292]
                0.00    0.00      20/20          termlist::nterms() const [293]
-----------------------------------------------
                0.00    0.00      20/20          quBaseState::baseterms() const [292]
[293]    0.0    0.00    0.00      20         termlist::nterms() const [293]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [501]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [127]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [110]
[294]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00      38/63          tValue::type() const [214]
                0.00    0.00      19/19          tType::isDefined() const [298]
                0.00    0.00      19/109         sExpr::settype(tType const&) [193]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [113]
[295]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [295]
                0.00    0.00      19/1478        tType::tType(BaseType) [153]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [253]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [217]
[296]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [296]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [297]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [296]
[297]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [297]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [254]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [294]
[298]    0.0    0.00    0.00      19         tType::isDefined() const [298]
-----------------------------------------------
                0.00    0.00       5/19          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      14/19          sCall::typecheck(SymTable*, SymTable*) [103]
[299]    0.0    0.00    0.00      19         sObject::inFunctDef() const [299]
                0.00    0.00      19/167         sObject::def() const [189]
                0.00    0.00      17/294         sObject::isFunctDef() const [179]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [304]
[300]    0.0    0.00    0.00      18         sList<sStmt>::sList() [300]
                0.00    0.00      18/515         sObject::sObject(unsigned int) [167]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [306]
[301]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [301]
                0.00    0.00      18/515         sObject::~sObject() [168]
                0.00    0.00      13/14          sCall::~sCall() [318]
                0.00    0.00       1/1           sExit::~sExit() [503]
                                   7             sIf::~sIf() <cycle 2> [339]
                                   2             sFor::~sFor() <cycle 2> [401]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [497]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [403]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [410]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [389]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [368]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [345]
[302]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [302]
                0.00    0.00      18/74          sExpr::sExpr() [212]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [412]
                                   4             sLess::~sLess() <cycle 1> [370]
                                   6             sMult::~sMult() <cycle 1> [347]
                0.00    0.00       1/23          sOr::~sOr() [499]
                0.00    0.00       2/23          sSub::~sSub() [405]
                0.00    0.00       3/23          sEqual::~sEqual() [391]
[303]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [303]
                0.00    0.00      18/95          sExpr::~sExpr() [195]
                0.00    0.00      12/21          sConst::~sConst() [285]
                0.00    0.00      12/44          sVar::~sVar() [221]
                0.00    0.00       4/4           sLength::~sLength() [374]
                                   3             sMult::~sMult() <cycle 1> [346]
                                   3             sListFunct::~sListFunct() <cycle 1> [362]
                                   2             sLess::~sLess() <cycle 1> [369]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [113]
[304]    0.0    0.00    0.00      18         sStmtList::sStmtList() [304]
                0.00    0.00      18/18          sList<sStmt>::sList() [300]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [402]
                                   8             sIf::~sIf() <cycle 2> [340]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [254]
[305]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [305]
                                  18             sStmtList::~sStmtList() <cycle 2> [306]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [305]
[306]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [306]
                                  18             sList<sStmt>::~sList() <cycle 2> [301]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
[307]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [307]
-----------------------------------------------
                0.00    0.00       4/18          sVarDef::typecheck(SymTable*, SymTable*) [114]
                0.00    0.00      14/18          sCall::typecheck(SymTable*, SymTable*) [103]
[308]    0.0    0.00    0.00      18         sObject::inQuDef() const [308]
                0.00    0.00      18/167         sObject::def() const [189]
                0.00    0.00      17/18          sObject::isQuDef() const [309]
-----------------------------------------------
                0.00    0.00       1/18          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/18          sObject::inQuDef() const [308]
[309]    0.0    0.00    0.00      18         sObject::isQuDef() const [309]
                0.00    0.00      18/22          sObject::isQuOpDef() const [282]
                0.00    0.00       9/30          sObject::isQuFunDef() const [267]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [399]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [359]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [325]
[310]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [310]
                0.00    0.00      15/26          yy_load_buffer_state() [270]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [113]
[311]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [311]
                0.00    0.00      16/1478        tType::tType(BaseType) [153]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [253]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [217]
[312]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [312]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [313]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [312]
[313]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [313]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [254]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [112]
[314]    0.0    0.00    0.00      15         tValue::tValue(long) [314]
                0.00    0.00      15/1478        tType::tType(BaseType) [153]
                0.00    0.00      15/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [187]
[315]    0.0    0.00    0.00      15         sFor::object() const [315]
-----------------------------------------------
                0.00    0.00       1/15          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      14/15          sCall::typecheck(SymTable*, SymTable*) [103]
[316]    0.0    0.00    0.00      15         sCall::id() const [316]
-----------------------------------------------
                0.00    0.00      14/14          yyparse() [113]
[317]    0.0    0.00    0.00      14         sCall::sCall(std::string*, sExprList*, int) [317]
                0.00    0.00      14/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/14          sList<sStmt>::~sList() <cycle 2> [301]
[318]    0.0    0.00    0.00      14         sCall::~sCall() [318]
                0.00    0.00      14/14          sCall::~sCall() [319]
-----------------------------------------------
                0.00    0.00      14/14          sCall::~sCall() [318]
[319]    0.0    0.00    0.00      14         sCall::~sCall() [319]
                0.00    0.00      14/23          sExprList::~sExprList() <cycle 1> [280]
                0.00    0.00      14/24          sStmt::~sStmt() [273]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [110]
[320]    0.0    0.00    0.00      14         tType::isCond() const [320]
                0.00    0.00      14/32          tType::isQuCond() const [259]
                0.00    0.00      14/23          tType::isBoolean() const [276]
-----------------------------------------------
                0.00    0.00      14/14          sCall::typecheck(SymTable*, SymTable*) [103]
[321]    0.0    0.00    0.00      14         sObject::inQuFunDef() const [321]
                0.00    0.00      14/167         sObject::def() const [189]
                0.00    0.00      13/30          sObject::isQuFunDef() const [267]
-----------------------------------------------
                0.00    0.00       1/14          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/14          sObject::isGlobal() const [356]
                0.00    0.00      10/14          sCall::typecheck(SymTable*, SymTable*) [103]
[322]    0.0    0.00    0.00      14         sObject::isProcDef() const [322]
                0.00    0.00       6/369         sQuOpDef::object() const [173]
                0.00    0.00       5/369         sQuFunDef::object() const [174]
                0.00    0.00       3/58          sProcDef::object() const [215]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [323]
                0.00    0.00      13/13          sCall::typecheck(SymTable*, SymTable*) [103]
[323]    0.0    0.00    0.00      13+42      sObject::isSetRec(ObjFlag) [323]
                0.00    0.00      97/881         sObject::parent() const [157]
                0.00    0.00      55/165         sObject::isSet(ObjFlag) const [190]
                                  42             sObject::isSetRec(ObjFlag) [323]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [112]
[324]    0.0    0.00    0.00      12         yy_get_next_buffer() [324]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [327]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [465]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [327]
[325]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [325]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [310]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [490]
                0.00    0.00      10/11          openqclfile(std::string) [360]
[326]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [326]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [399]
                0.00    0.00       4/10          yy_get_next_buffer() [324]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [359]
[327]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [327]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [325]
                0.00    0.00      10/26          yy_load_buffer_state() [270]
                0.00    0.00       1/1           yyensure_buffer_stack() [492]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [465]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [75]
[328]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [328]
                0.00    0.00      10/87          SymTable::SymTable() [197]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [75]
[329]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [329]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [330]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [329]
[330]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [330]
                0.00    0.00      10/87          SymTable::~SymTable() [198]
-----------------------------------------------
                0.00    0.00      10/10          tValue::delpointer() [161]
[331]    0.0    0.00    0.00      10         quSubState::isbasestate() const [331]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [187]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [110]
[332]    0.0    0.00    0.00       9         sMult::object() const [332]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [112]
[333]    0.0    0.00    0.00       8         yy_get_previous_state() [333]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [468]
                0.00    0.00       7/8           yyparse() [113]
[334]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [334]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [177]
-----------------------------------------------
                0.00    0.00       1/8           sObject::isDef() const [175]
                0.00    0.00       1/8           sObject::isInclude() const [240]
                0.00    0.00       2/8           sObject::isStmt() const [532]
                0.00    0.00       4/8           sObject::isRoutDef() const [187]
[335]    0.0    0.00    0.00       8         sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [378]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [124]
[336]    0.0    0.00    0.00       8         sList<sExpr>::n() const [336]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [110]
[337]    0.0    0.00    0.00       8         tType::isOrdered() const [337]
                0.00    0.00       8/21          tType::isInt() const [288]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [113]
[338]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [338]
                0.00    0.00       7/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [301]
[339]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [339]
                                   7             sIf::~sIf() <cycle 2> [340]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [339]
[340]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [340]
                0.00    0.00       7/24          sStmt::~sStmt() [273]
                0.00    0.00       3/3           sEqual::~sEqual() [390]
                0.00    0.00       2/23          sLess::~sLess() <cycle 1> [369]
                0.00    0.00       1/23          sListFunct::~sListFunct() <cycle 1> [362]
                0.00    0.00       1/1           sOr::~sOr() [498]
                                   8             sStmtList::~sStmtList() <cycle 2> [305]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [217]
                0.00    0.00       6/7           sList<sDef>::~sList() [224]
[341]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [341]
                0.00    0.00       7/7           sVarDef::~sVarDef() [342]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [341]
[342]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [342]
                0.00    0.00       8/312         sDef::~sDef() [178]
                0.00    0.00       4/44          sVar::~sVar() [221]
                0.00    0.00       1/21          sConst::~sConst() [285]
-----------------------------------------------
                0.00    0.00       1/7           tValue::conv(tType const&) const [130]
                0.00    0.00       1/7           sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
                0.00    0.00       2/7           sBinOp::typecheck(SymTable*, SymTable*) [110]
                0.00    0.00       3/7           sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
[343]    0.0    0.00    0.00       7         tType::operator==(tType const&) const [343]
-----------------------------------------------
                0.00    0.00       1/7           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/7           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       5/7           tValue::qustate() const [355]
[344]    0.0    0.00    0.00       7         tValue::isQuExpr() const [344]
                0.00    0.00       7/115         tType::isQuExpr() const [192]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [113]
[345]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [345]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [302]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [303]
                                   3             sList<sExpr>::~sList() <cycle 1> [278]
[346]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [346]
                                   6             sMult::~sMult() <cycle 1> [347]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [346]
[347]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [347]
                                   6             sBinOp::~sBinOp() <cycle 1> [303]
-----------------------------------------------
                0.00    0.00       6/6           tValue::isError() const [349]
[348]    0.0    0.00    0.00       6         tType::isError() const [348]
-----------------------------------------------
                0.00    0.00       1/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/6           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/6           sConstDef::define(SymTable*, SymTable*, QuHeap*) [121]
[349]    0.0    0.00    0.00       6         tValue::isError() const [349]
                0.00    0.00       6/6           tType::isError() const [348]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [360]
[350]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [350]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [127]
[351]    0.0    0.00    0.00       5         sDef::settype(tType const&) [351]
                0.00    0.00       5/842         tType::operator=(tType const&) [158]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       3/5           yyparse() [113]
[352]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [352]
                0.00    0.00       5/1478        tType::tType(BaseType) [153]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [177]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [217]
[353]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [353]
                0.00    0.00       5/5           sConstDef::~sConstDef() [354]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [353]
[354]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [354]
                0.00    0.00       5/21          sConst::~sConst() [285]
                0.00    0.00       5/312         sDef::~sDef() [178]
-----------------------------------------------
                0.00    0.00       1/5           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/5           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[355]    0.0    0.00    0.00       5         tValue::qustate() const [355]
                0.00    0.00       5/7           tValue::isQuExpr() const [344]
-----------------------------------------------
                0.00    0.00       1/5           sVar::typecheck(SymTable*, SymTable*) [102]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
                0.00    0.00       3/5           sObject::isLocal() const [393]
[356]    0.0    0.00    0.00       5         sObject::isGlobal() const [356]
                0.00    0.00       5/167         sObject::def() const [189]
                0.00    0.00       3/14          sObject::isProcDef() const [322]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
[357]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [357]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [360]
[358]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [357]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [120]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[359]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [359]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [310]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [327]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[360]    0.0    0.00    0.00       4         openqclfile(std::string) [360]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [326]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [350]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [358]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[361]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [361]
                0.00    0.00       4/74          sExpr::sExpr() [212]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [256]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [255]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [303]
                0.00    0.00       1/23          sIf::~sIf() <cycle 2> [340]
[362]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [362]
                                   4             sListFunct::~sListFunct() <cycle 1> [363]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [362]
[363]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [363]
                0.00    0.00       4/95          sExpr::~sExpr() [195]
                                   4             sExprList::~sExprList() <cycle 1> [280]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[364]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [364]
                0.00    0.00       4/74          sExpr::sExpr() [212]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [256]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [278]
[365]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [365]
                                   4             sSubscript::~sSubscript() <cycle 1> [366]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [365]
[366]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [366]
                0.00    0.00       4/44          sVar::~sVar() [221]
                0.00    0.00       4/95          sExpr::~sExpr() [195]
                                   4             sExprList::~sExprList() <cycle 1> [280]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [118]
[367]    0.0    0.00    0.00       4         sExpr::basetype() [367]
                0.00    0.00       4/1013        tType::basetype() const [156]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[368]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [368]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [302]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [303]
                0.00    0.00       2/23          sIf::~sIf() <cycle 2> [340]
[369]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [369]
                                   4             sLess::~sLess() <cycle 1> [370]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [369]
[370]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [370]
                                   4             sBinOp::~sBinOp() <cycle 1> [303]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [373]
[371]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [371]
                0.00    0.00       4/74          sExpr::sExpr() [212]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [375]
[372]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [372]
                0.00    0.00       4/44          sVar::~sVar() [221]
                0.00    0.00       4/95          sExpr::~sExpr() [195]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [113]
[373]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [373]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [371]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [303]
[374]    0.0    0.00    0.00       4         sLength::~sLength() [374]
                0.00    0.00       4/4           sLength::~sLength() [375]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [374]
[375]    0.0    0.00    0.00       4         sLength::~sLength() [375]
                0.00    0.00       4/4           sUnOp::~sUnOp() [372]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [427]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [426]
[376]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [376]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [124]
[377]    0.0    0.00    0.00       4         sListFunct::object() const [377]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [118]
[378]    0.0    0.00    0.00       4         sSubscript::nargs() const [378]
                0.00    0.00       4/8           sList<sExpr>::n() const [336]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [110]
[379]    0.0    0.00    0.00       4         sLess::object() const [379]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [123]
[380]    0.0    0.00    0.00       4         sLength::object() const [380]
-----------------------------------------------
                0.00    0.00       4/4           sVar::typecheck(SymTable*, SymTable*) [102]
[381]    0.0    0.00    0.00       4         sObject::isConstDef() const [381]
                0.00    0.00       3/48          sConstDef::object() const [218]
                0.00    0.00       1/79          sVarDef::object() const [208]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [525]
[382]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [382]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [417]
[383]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [383]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [533]
[384]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [384]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [569]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[385]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [385]
-----------------------------------------------
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [387]
[386]    0.0    0.00    0.00       4         std::complex<double>::operator*=(double) [386]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
[387]    0.0    0.00    0.00       4         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [387]
                0.00    0.00       4/4           std::complex<double>::operator*=(double) [386]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [492]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [465]
[388]    0.0    0.00    0.00       3         yyalloc(unsigned long) [388]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [113]
[389]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [389]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [302]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [340]
[390]    0.0    0.00    0.00       3         sEqual::~sEqual() [390]
                0.00    0.00       3/3           sEqual::~sEqual() [391]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [390]
[391]    0.0    0.00    0.00       3         sEqual::~sEqual() [391]
                0.00    0.00       3/23          sBinOp::~sBinOp() <cycle 1> [303]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [110]
[392]    0.0    0.00    0.00       3         sEqual::object() const [392]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [124]
[393]    0.0    0.00    0.00       3         sObject::isLocal() const [393]
                0.00    0.00       3/5           sObject::isGlobal() const [356]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [75]
[394]    0.0    0.00    0.00       3         sObject::isBennet() const [394]
                0.00    0.00       3/165         sObject::isSet(ObjFlag) const [190]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [516]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [429]
[395]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [395]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[396]    0.0    0.00    0.00       2         zero(bitvec const&) [396]
                0.00    0.00       2/2           bitvec::testzero() const [419]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [490]
[397]    0.0    0.00    0.00       2         irqOn() [397]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [61]
[398]    0.0    0.00    0.00       2         duallog(int) [398]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [120]
[399]    0.0    0.00    0.00       2         yyCleanUp() [399]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [327]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [310]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[400]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [400]
                0.00    0.00       2/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [301]
[401]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [401]
                                   2             sFor::~sFor() <cycle 2> [402]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [401]
[402]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [402]
                0.00    0.00       2/44          sVar::~sVar() [221]
                0.00    0.00       2/21          sConst::~sConst() [285]
                0.00    0.00       2/2           sSub::~sSub() [404]
                0.00    0.00       2/24          sStmt::~sStmt() [273]
                                   2             sStmtList::~sStmtList() <cycle 2> [305]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[403]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [403]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [302]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [402]
[404]    0.0    0.00    0.00       2         sSub::~sSub() [404]
                0.00    0.00       2/2           sSub::~sSub() [405]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [404]
[405]    0.0    0.00    0.00       2         sSub::~sSub() [405]
                0.00    0.00       2/23          sBinOp::~sBinOp() <cycle 1> [303]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[406]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [406]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [112]
[407]    0.0    0.00    0.00       2         tValue::tValue(double) [407]
                0.00    0.00       2/1478        tType::tType(BaseType) [153]
                0.00    0.00       2/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [117]
[408]    0.0    0.00    0.00       2         tValue::tValue(int) [408]
                0.00    0.00       2/1478        tType::tType(BaseType) [153]
                0.00    0.00       2/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[409]    0.0    0.00    0.00       2         objlist::objlist() [409]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [437]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [113]
[410]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [410]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [302]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [278]
[411]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [411]
                                   2             sConcat::~sConcat() <cycle 1> [412]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [411]
[412]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [412]
                                   2             sBinOp::~sBinOp() <cycle 1> [303]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [430]
[413]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [413]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [565]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [566]
[414]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [414]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [534]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [535]
[415]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [415]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [537]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [538]
[416]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [416]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [428]
[417]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [417]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [383]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [110]
[418]    0.0    0.00    0.00       2         sSub::object() const [418]
-----------------------------------------------
                0.00    0.00       2/2           zero(bitvec const&) [396]
[419]    0.0    0.00    0.00       2         bitvec::testzero() const [419]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [421]
[420]    0.0    0.00    0.00       2         tValue::isInt() const [420]
                0.00    0.00       2/21          tType::isInt() const [288]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
[421]    0.0    0.00    0.00       2         tValue::toInt() const [421]
                0.00    0.00       2/2           tValue::isInt() const [420]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [110]
[422]    0.0    0.00    0.00       2         sConcat::object() const [422]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [523]
[423]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [423]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [524]
[424]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [424]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [429]
[425]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [425]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [428]
[426]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [426]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [376]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [428]
[427]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [427]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [376]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [40]
[428]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [428]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [426]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [427]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [417]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [533]
[429]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [429]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [395]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [425]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [431]
[430]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [430]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [413]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [433]
[431]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [431]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [430]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [433]
[432]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [432]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [437]
[433]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [433]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [432]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [431]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [441]
[434]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [434]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [552]
[435]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [435]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [514]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [438]
[436]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [436]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [409]
[437]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [437]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [433]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [439]
[438]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [438]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [436]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [440]
[439]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [439]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [438]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[440]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [440]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [439]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [442]
[441]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [441]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [434]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [569]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[442]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [442]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [441]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[443]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [443]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[444]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [444]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[445]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [445]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[446]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [446]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[447]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [447]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[448]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [448]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[449]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [449]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[450]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [450]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[451]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [451]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[452]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [452]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[453]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [453]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[454]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [454]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[455]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [455]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[456]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [456]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[457]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [457]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[458]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [458]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[459]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [459]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[462]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [462]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[463]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [463]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [89]
[464]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [464]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [327]
[465]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [465]
                0.00    0.00       2/3           yyalloc(unsigned long) [388]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [325]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[466]    0.0    0.00    0.00       1         initialize_readline() [466]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [455]
[467]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [443]
[468]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [468]
                0.00    0.00       1/1478        tType::tType(BaseType) [153]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [334]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [449]
[469]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [448]
[470]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [452]
[471]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [464]
[472]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [463]
[473]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [451]
[474]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [453]
[475]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [475]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [444]
[476]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [476]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [447]
[477]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [446]
[478]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [478]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [462]
[479]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [479]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [460]
[480]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [461]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [450]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [445]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [459]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [454]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nbitvecs [83]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [458]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [457]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [456]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[490]    0.0    0.00    0.00       1         parseopt(int, char**) [490]
                0.00    0.00       2/2           irqOn() [397]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [326]
                0.00    0.00       1/1           qc_srand(long) [491]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [490]
[491]    0.0    0.00    0.00       1         qc_srand(long) [491]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [327]
[492]    0.0    0.00    0.00       1         yyensure_buffer_stack() [492]
                0.00    0.00       1/3           yyalloc(unsigned long) [388]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::opElementary(int) [495]
[493]    0.0    0.00    0.00       1         opOperator::opOperator(int) [493]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::~opElementary() [496]
[494]    0.0    0.00    0.00       1         opOperator::~opOperator() [494]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::opMatrix(int) [510]
[495]    0.0    0.00    0.00       1         opElementary::opElementary(int) [495]
                0.00    0.00       1/1           opOperator::opOperator(int) [493]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::~opMatrix() [137]
[496]    0.0    0.00    0.00       1         opElementary::~opElementary() [496]
                0.00    0.00       1/1           opOperator::~opOperator() [494]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [113]
[497]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [497]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [302]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [340]
[498]    0.0    0.00    0.00       1         sOr::~sOr() [498]
                0.00    0.00       1/1           sOr::~sOr() [499]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [498]
[499]    0.0    0.00    0.00       1         sOr::~sOr() [499]
                0.00    0.00       1/23          sBinOp::~sBinOp() <cycle 1> [303]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [76]
[500]    0.0    0.00    0.00       1         sDef::basetype() [500]
                0.00    0.00       1/1013        tType::basetype() const [156]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [104]
[501]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [501]
                0.00    0.00       1/455         sObject::setParent(sObject*) [169]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [294]
                0.00    0.00       1/96          sExpr::type() [194]
                0.00    0.00       1/1           tType::isString() const [529]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [113]
[502]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [502]
                0.00    0.00       1/24          sStmt::sStmt(int) [272]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [301]
[503]    0.0    0.00    0.00       1         sExit::~sExit() [503]
                0.00    0.00       1/1           sExit::~sExit() [504]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [503]
[504]    0.0    0.00    0.00       1         sExit::~sExit() [504]
                0.00    0.00       1/21          sConst::~sConst() [285]
                0.00    0.00       1/24          sStmt::~sStmt() [273]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [58]
[505]    0.0    0.00    0.00       1         QuHeap::init() [505]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[506]    0.0    0.00    0.00       1         SymTab::~SymTab() [506]
                0.00    0.00       1/77          SymTab::~SymTab() [211]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [77]
[507]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [507]
                0.00    0.00       1/1478        tType::tType(BaseType) [153]
                0.00    0.00       1/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [112]
[508]    0.0    0.00    0.00       1         tValue::tValue(char const*) [508]
                0.00    0.00       1/1478        tType::tType(BaseType) [153]
                0.00    0.00       1/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [112]
[509]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [509]
                0.00    0.00       1/1478        tType::tType(BaseType) [153]
                0.00    0.00       1/450         tType::operator=(BaseType) [170]
-----------------------------------------------
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [133]
[510]    0.0    0.00    0.00       1         opMatrix::opMatrix(int) [510]
                0.00    0.00       1/1           opElementary::opElementary(int) [495]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [113]
[511]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [511]
                0.00    0.00       1/1478        tType::tType(BaseType) [153]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [253]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [217]
[512]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [512]
                0.00    0.00       1/1           sProcDef::~sProcDef() [513]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [512]
[513]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [513]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [254]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [435]
[514]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [514]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [567]
[515]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [515]
                0.00    0.00       1/663         tValue::~tValue() [164]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [548]
[516]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [516]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [395]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [540]
[517]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [517]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [541]
[518]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [518]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [542]
[519]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [519]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [543]
[520]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [520]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [544]
[521]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [521]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [545]
[522]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [522]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [536]
[523]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [523]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [423]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [539]
[524]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [524]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [424]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[525]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [525]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [382]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [110]
[526]    0.0    0.00    0.00       1         sOr::object() const [526]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[527]    0.0    0.00    0.00       1         sStmt::isInv() const [527]
                0.00    0.00       1/165         sObject::isSet(ObjFlag) const [190]
-----------------------------------------------
                0.00    0.00       1/1           tValue::isExpr() const [531]
[528]    0.0    0.00    0.00       1         tType::isExpr() const [528]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [501]
[529]    0.0    0.00    0.00       1         tType::isString() const [529]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[530]    0.0    0.00    0.00       1         QuHeap::nBits() const [530]
-----------------------------------------------
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [125]
[531]    0.0    0.00    0.00       1         tValue::isExpr() const [531]
                0.00    0.00       1/1           tType::isExpr() const [528]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[532]    0.0    0.00    0.00       1         sObject::isStmt() const [532]
                0.00    0.00       2/8           sCall::object() const [335]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[533]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [533]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [384]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [429]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [574]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [536]
[534]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [534]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [415]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [536]
[535]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [535]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [415]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [40]
[536]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [536]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [534]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [535]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [523]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [539]
[537]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [537]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [416]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [539]
[538]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [538]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [416]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [40]
[539]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [539]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [537]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [538]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [524]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [549]
[540]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [540]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [517]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [550]
[541]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [541]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [518]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [553]
[542]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [542]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [519]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [554]
[543]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [543]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [520]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [559]
[544]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [544]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [521]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [560]
[545]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [545]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [522]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [575]
[546]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [546]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [577]
[547]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [547]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[548]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [548]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [516]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [551]
[549]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [549]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [540]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [552]
[550]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [550]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [541]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [568]
[551]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [551]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [569]
[552]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [552]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [435]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [550]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [557]
[553]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [553]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [542]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [558]
[554]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [554]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [543]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [558]
[555]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [555]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [571]
[556]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [556]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [570]
[557]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [557]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [553]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [571]
[558]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [558]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [555]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [554]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [563]
[559]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [559]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [544]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [564]
[560]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [560]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [564]
[561]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [561]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [573]
[562]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [562]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [572]
[563]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [559]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [573]
[564]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [564]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [561]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [560]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [132]
[565]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [565]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [414]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [131]
[566]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [566]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [414]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [40]
[567]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [567]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [515]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [58]
[568]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [568]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [551]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [40]
[569]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [569]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [385]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [552]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [442]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [58]
[570]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [570]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [557]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [40]
[571]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [571]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [556]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [558]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [576]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [58]
[572]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [572]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [563]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [40]
[573]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [573]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [562]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [578]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [564]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [533]
[574]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [574]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [576]
[575]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [575]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [546]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [571]
[576]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [576]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [575]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [578]
[577]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [577]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [547]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [573]
[578]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [578]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [577]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [443] _GLOBAL__sub_I_CONDDEF (syntax.cc) [27] bitvec::setbits(int, bitvec const&) [90] SymTab::getentry(SymTable::entry*, std::string const&) const
 [444] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [30] bitvec::setbits(int, int, unsigned long) [85] bitvec::nset() const
 [445] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [18] bitvec::bitvec(int, unsigned long) [66] bitvec::length() const
 [446] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [26] bitvec::bitvec(bitvec const&) [63] bitvec::testeq(bitvec const&) const
 [447] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [17] bitvec::~bitvec() [36] bitvec::getbits(int, int) const
 [448] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [57] bitvec::operator&=(bitvec const&) [97] bitvec::getword(int, int) const
 [449] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [16] bitvec::operator=(bitvec const&) [68] bitvec::getword() const
 [450] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [74] bitvec::operator=(unsigned long) [86] bitvec::testless(bitvec const&) const
 [451] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [52] bitvec::operator|=(bitvec const&) [419] bitvec::testzero() const
 [452] _GLOBAL__sub_I_isErrorReported (error.cc) [110] sBinOp::typecheck(SymTable*, SymTable*) [49] bitvec::hashfunct() const
 [453] _GLOBAL__sub_I_isStateModified (quheap.cc) [302] sBinOp::sBinOp(sExpr*, sExpr*) [82] bitvec::operator[](int) const
 [454] _GLOBAL__sub_I_main (qcl.cc) [303] sBinOp::~sBinOp() [392] sEqual::object() const
 [455] _GLOBAL__sub_I_n_object (types.cc) [126] sConst::eval(SymTable*, SymTable*, QuHeap*) [162] tValue::ord() const
  [83] _GLOBAL__sub_I_nbitvecs (bitvec.cc) [294] sConst::typecheck(SymTable*, SymTable*) [130] tValue::conv(tType const&) const
 [456] _GLOBAL__sub_I_noperators (operator.cc) [111] sConst::sConst(tValue const&) [214] tValue::type() const
 [457] _GLOBAL__sub_I_nstates (qustates.cc) [285] sConst::~sConst() [420] tValue::isInt() const
 [458] _GLOBAL__sub_I_nterms (terms.cc) [286] sConst::~sConst() [421] tValue::toInt() const
 [459] _GLOBAL__sub_I_plotfile (plot.cc) [389] sEqual::sEqual(sExpr*, sExpr*) [531] tValue::isExpr() const
 [460] _GLOBAL__sub_I_qcl_options (options.cc) [390] sEqual::~sEqual() [349] tValue::isError() const
 [461] _GLOBAL__sub_I_shell_depth (debug.cc) [391] sEqual::~sEqual() [355] tValue::qustate() const
 [462] _GLOBAL__sub_I_yyObjList (parse.cc) [161] tValue::delpointer() [163] tValue::basetype() const
 [463] _GLOBAL__sub_I_yydebug (yacc.cc) [91] tValue::assign(tValue const&) [344] tValue::isQuExpr() const
 [464] _GLOBAL__sub_I_yyleng (qcl.lex) [507] tValue::tValue(quState*, BaseType) [71] quState::mapbits() const
 [359] yyScanFile(_IO_FILE*) [508] tValue::tValue(char const*) [78] quState::mapmask() const
 [360] openqclfile(std::string) [107] tValue::tValue(quState&, BaseType) [154] sArgDef::object() const
 [310] yy_flush_buffer(yy_buffer_state*) [92] tValue::tValue(tValue const&) [422] sConcat::object() const
 [465] yy_create_buffer(_IO_FILE*, int) [407] tValue::tValue(double) [380] sLength::object() const
 [466] initialize_readline() [408] tValue::tValue(int)   [299] sObject::inFunctDef() const
 [467] __static_initialization_and_destruction_0(int, int) (types.cc) [314] tValue::tValue(long) [321] sObject::inQuFunDef() const
 [468] __static_initialization_and_destruction_0(int, int) (syntax.cc) [509] tValue::tValue(std::complex<double> const&) [381] sObject::isConstDef() const
 [469] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [176] tValue::tValue() [179] sObject::isFunctDef() const
 [470] __static_initialization_and_destruction_0(int, int) (symbols.cc) [164] tValue::~tValue() [267] sObject::isQuFunDef() const
 [471] __static_initialization_and_destruction_0(int, int) (error.cc) [109] tValue::operator=(tValue const&) [172] sObject::isValueDef() const
 [472] __static_initialization_and_destruction_0(int, int) (qcl.lex) [409] objlist::objlist() [189] sObject::def() const
 [473] __static_initialization_and_destruction_0(int, int) (yacc.cc) [139] quState::newclone() [175] sObject::isDef() const
 [474] __static_initialization_and_destruction_0(int, int) (print.cc) [258] quState::quState(int) [190] sObject::isSet(ObjFlag) const
 [475] __static_initialization_and_destruction_0(int, int) (quheap.cc) [261] quState::~quState() [532] sObject::isStmt() const
 [476] __static_initialization_and_destruction_0(int, int) (extern.cc) [182] sArgDef::sArgDef(tType const&, std::string*) [157] sObject::parent() const
 [477] __static_initialization_and_destruction_0(int, int) (eval.cc) [183] sArgDef::~sArgDef() [308] sObject::inQuDef() const
 [478] __static_initialization_and_destruction_0(int, int) (exec.cc) [184] sArgDef::~sArgDef() [393] sObject::isLocal() const
 [479] __static_initialization_and_destruction_0(int, int) (parse.cc) [410] sConcat::sConcat(sExpr*, sExpr*) [309] sObject::isQuDef() const
 [480] __static_initialization_and_destruction_0(int, int) (options.cc) [411] sConcat::~sConcat() [394] sObject::isBennet() const
 [481] __static_initialization_and_destruction_0(int, int) (debug.cc) [412] sConcat::~sConcat() [213] sObject::isExtern() const
 [482] __static_initialization_and_destruction_0(int, int) (cond.cc) [373] sLength::sLength(sExpr*) [356] sObject::isGlobal() const
 [483] __static_initialization_and_destruction_0(int, int) (dump.cc) [374] sLength::~sLength() [268] sObject::isCondDef() const
 [484] __static_initialization_and_destruction_0(int, int) (plot.cc) [375] sLength::~sLength() [240] sObject::isInclude() const
 [485] __static_initialization_and_destruction_0(int, int) (qcl.cc) [188] sObject::setFlag(ObjFlag, int) [322] sObject::isProcDef() const
 [486] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [323] sObject::isSetRec(ObjFlag) [282] sObject::isQuOpDef() const
 [487] __static_initialization_and_destruction_0(int, int) (terms.cc) [169] sObject::setParent(sObject*) [187] sObject::isRoutDef() const
 [488] __static_initialization_and_destruction_0(int, int) (qustates.cc) [185] sObject::typecheck(SymTable*, SymTable*) [208] sVarDef::object() const
 [489] __static_initialization_and_destruction_0(int, int) (operator.cc) [167] sObject::sObject(unsigned int) [10] opMatrix::addterms(terminfo const&) const
 [396] zero(bitvec const&)   [168] sObject::~sObject()   [257] sDefList::object() const
 [397] irqOn()                [76] sVarDef::define(SymTable*, SymTable*, QuHeap*) [215] sProcDef::object() const
 [112] yylex()               [114] sVarDef::typecheck(SymTable*, SymTable*) [173] sQuOpDef::object() const
 [398] duallog(int)          [334] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [34] termlist::hashfunct1(bitvec const&) const
   [5] ext_bit(sRoutDef const*, SymTable const*, int) [341] sVarDef::~sVarDef() [62] termlist::hashfunct2(bitvec const&) const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [342] sVarDef::~sVarDef() [87] termlist::nbits() const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [197] SymTable::SymTable() [293] termlist::nterms() const
 [388] yyalloc(unsigned long) [198] SymTable::~SymTable() [98] termlist::search(bitvec const&) const
 [113] yyparse()             [510] opMatrix::opMatrix(int) [72] termlist::operator[](int) const
 [119] parseobj()            [137] opMatrix::~opMatrix() [395] __gnu_cxx::new_allocator<tValue>::max_size() const
 [490] parseopt(int, char**) [115] sDefList::typecheck(SymTable*, SymTable*) [241] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [491] qc_srand(long)        [225] sDefList::sDefList()  [382] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [120] chksyntax(_IO_FILE*)  [226] sDefList::~sDefList() [383] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [399] yyCleanUp()           [227] sDefList::~sDefList() [423] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [327] yyrestart(_IO_FILE*)  [511] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [424] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [325] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [512] sProcDef::~sProcDef() [218] sConstDef::object() const
 [324] yy_get_next_buffer() (lex.cc) [513] sProcDef::~sProcDef() [174] sQuFunDef::object() const
 [270] yy_load_buffer_state() (lex.cc) [295] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [209] sStmtList::object() const
 [333] yy_get_previous_state() (lex.cc) [296] sQuOpDef::~sQuOpDef() [202] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [492] yyensure_buffer_stack() (lex.cc) [297] sQuOpDef::~sQuOpDef() [203] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [328] SymTabComb::SymTabComb(SymTable*, SymTable*) [252] sRoutDef::args() [425] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [329] SymTabComb::~SymTabComb() [108] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [242] std::_List_iterator<sObject*>::operator*() const
 [330] SymTabComb::~SymTabComb() [8] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [159] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [493] opOperator::opOperator(int) [75] sRoutDef::typecheck(SymTable*, SymTable*) [228] std::list<sObject*, std::allocator<sObject*> >::end() const
 [494] opOperator::~opOperator() [253] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [229] std::list<sObject*, std::allocator<sObject*> >::size() const
  [11] quSubState::opadd(bitvec const&, std::complex<double> const&) [254] sRoutDef::~sRoutDef() [230] std::list<sObject*, std::allocator<sObject*> >::begin() const
 [290] quSubState::opend()    [25] terminfo::terminfo(terminfo const&) [533] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  [50] quSubState::opbegin()  [69] terminfo::terminfo()  [426] std::vector<tValue, std::allocator<tValue> >::end() const
 [260] quSubState::quSubState(int) [39] terminfo::~terminfo() [384] std::vector<tValue, std::allocator<tValue> >::size() const
 [262] quSubState::~quSubState() [55] termlist::add(term const&) [427] std::vector<tValue, std::allocator<tValue> >::begin() const
 [124] sListFunct::typecheck(SymTable*, SymTable*) [14] termlist::add(bitvec const&, std::complex<double> const&) [428] std::vector<tValue, std::allocator<tValue> >::empty() const
 [361] sListFunct::sListFunct(ObjType, sExprList*) [32] termlist::clear() [429] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [362] sListFunct::~sListFunct() [41] termlist::dellist() [534] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [363] sListFunct::~sListFunct() [20] termlist::newlist() [535] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [118] sSubscript::typecheck(SymTable*, SymTable*) [61] termlist::termlist(int, int) [536] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [364] sSubscript::sSubscript(sVar*, sExprList*) [42] termlist::~termlist() [537] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [365] sSubscript::~sSubscript() [84] termlist::operator=(termlist const&) [538] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [366] sSubscript::~sSubscript() [514] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [539] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [134] quBaseState::newsubstring(int, int) [515] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [79] std::complex<double>::imag() const
  [12] quBaseState::opadd(bitvec const&, std::complex<double> const&) [516] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [64] std::complex<double>::real() const
 [283] quBaseState::opend()  [129] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [540] std::allocator<tValue>::allocator()
  [95] quBaseState::reset(bitvec const&) [517] __gnu_cxx::new_allocator<tValue>::new_allocator() [541] std::allocator<tValue>::~allocator()
  [48] quBaseState::opbegin() [518] __gnu_cxx::new_allocator<tValue>::~new_allocator() [542] std::allocator<QuHeap::centry>::allocator()
  [59] quBaseState::quBaseState(int, int) [519] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [543] std::allocator<QuHeap::centry>::~allocator()
  [43] quBaseState::~quBaseState() [520] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [544] std::allocator<QuHeap::quentry>::allocator()
  [44] quBaseState::~quBaseState() [521] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [545] std::allocator<QuHeap::quentry>::~allocator()
  [81] quSubString::newsubstring(int, int) [522] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [204] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  [73] quSubString::quSubString(int, int, quState&) [235] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [205] std::allocator<sObject*>::~allocator()
 [263] quSubString::~quSubString() [236] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [430] std::allocator<std::_List_node<sObject*> >::allocator()
 [264] quSubString::~quSubString() [200] __gnu_cxx::new_allocator<sObject*>::new_allocator() [431] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [495] opElementary::opElementary(int) [201] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [243] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [496] opElementary::~opElementary() [237] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [244] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [116] sIf::typecheck(SymTable*, SymTable*) [238] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [432] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [338] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [413] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [433] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [339] sIf::~sIf()           [414] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [96] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [340] sIf::~sIf()           [376] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [434] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [497] sOr::sOr(sExpr*, sExpr*) [415] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [546] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [498] sOr::~sOr()           [416] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [547] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [499] sOr::~sOr()           [417] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [548] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [351] sDef::settype(tType const&) [523] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [549] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [500] sDef::basetype()      [524] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [550] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [177] sDef::sDef(tType const&, std::string*) [525] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [435] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [178] sDef::~sDef()         [121] sConstDef::define(SymTable*, SymTable*, QuHeap*) [385] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [117] sFor::typecheck(SymTable*, SymTable*) [127] sConstDef::typecheck(SymTable*, SymTable*) [551] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [400] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [352] sConstDef::sConstDef(std::string*, sExpr*) [552] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [401] sFor::~sFor()         [353] sConstDef::~sConstDef() [553] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [402] sFor::~sFor()         [354] sConstDef::~sConstDef() [554] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [403] sSub::sSub(sExpr*, sExpr*) [122] sExprList::typecheck(SymTable*, SymTable*) [555] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [404] sSub::~sSub()         [279] sExprList::sExprList() [556] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [405] sSub::~sSub()         [280] sExprList::~sExprList() [557] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [125] sVar::eval(SymTable*, SymTable*, QuHeap*) [281] sExprList::~sExprList() [558] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [102] sVar::typecheck(SymTable*, SymTable*) [311] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [559] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [220] sVar::sVar(std::string*) [312] sQuFunDef::~sQuFunDef() [560] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [221] sVar::~sVar()         [313] sQuFunDef::~sQuFunDef() [561] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [222] sVar::~sVar()         [104] sStmtList::typecheck(SymTable*, SymTable*) [562] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [138] term::set(bitvec const&, std::complex<double> const&) [304] sStmtList::sStmtList() [563] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  [45] term::setampl(std::complex<double> const&) [305] sStmtList::~sStmtList() [564] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  [19] term::setvect(bitvec const&) [306] sStmtList::~sStmtList() [191] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  [23] term::term()          [105] SymTabComb::getDef(std::string const&) const [199] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [28] term::term(term const&) [331] quSubState::isbasestate() const [160] std::_List_const_iterator<sObject*>::operator++()
  [29] term::~term()          [51] quSubState::baseterm(int) const [436] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [37] term::operator=(term const&) [291] quSubState::baseterms() const [245] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
 [133] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [377] sListFunct::object() const [246] std::list<sObject*, std::allocator<sObject*> >::end()
 [135] opBit::~opBit()       [378] sSubscript::nargs() const [206] std::list<sObject*, std::allocator<sObject*> >::begin()
 [136] opBit::~opBit()       [265] quBaseState::isbasestate() const [247] std::list<sObject*, std::allocator<sObject*> >::front()
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [53] quBaseState::map(bitvec const&) const [248] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
 [103] sCall::typecheck(SymTable*, SymTable*) [47] quBaseState::unmap(bitvec const&) const [249] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [317] sCall::sCall(std::string*, sExprList*, int) [143] quBaseState::basebits() const [250] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [318] sCall::~sCall()        [67] quBaseState::baseterm(int) const [251] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [319] sCall::~sCall()       [292] quBaseState::baseterms() const [437] std::list<sObject*, std::allocator<sObject*> >::list()
 [501] sExit::typecheck(SymTable*, SymTable*) [22] quSubString::map(bitvec const&) const [131] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [502] sExit::sExit(sExpr*)   [15] quSubString::unmap(bitvec const&) const [565] std::vector<tValue, std::allocator<tValue> >::end()
 [503] sExit::~sExit()        [56] quSubString::mapoffs() const [566] std::vector<tValue, std::allocator<tValue> >::begin()
 [504] sExit::~sExit()         [9] opElementary::apply(quState&) const [567] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [194] sExpr::type()         [287] sIf::object() const   [132] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [193] sExpr::settype(tType const&) [526] sOr::object() const [568] std::vector<tValue, std::allocator<tValue> >::vector()
 [367] sExpr::basetype()     [150] sDef::id() const      [569] std::vector<tValue, std::allocator<tValue> >::~vector()
 [284] sExpr::sExpr(tType const&) [171] sDef::type() const [570] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [212] sExpr::sExpr()        [315] sFor::object() const  [571] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [195] sExpr::~sExpr()       [418] sSub::object() const  [572] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [368] sLess::sLess(sExpr*, sExpr*) [216] sVar::id() const [573] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [369] sLess::~sLess()        [54] term::ampl() const     [99] std::complex<double>::real()
 [370] sLess::~sLess()        [35] term::vect() const     [38] std::complex<double>::complex(double, double)
 [181] sList<sDef>::append(sDef*) [316] sCall::id() const [386] std::complex<double>::operator*=(double)
 [223] sList<sDef>::sList()  [335] sCall::object() const  [33] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [224] sList<sDef>::~sList() [379] sLess::object() const [231] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [269] sList<sExpr>::append(sExpr*) [165] sList<sDef>::next(void*&) const [207] sObject** std::__addressof<sObject*>(sObject*&)
 [277] sList<sExpr>::sList() [196] sList<sDef>::first(void*&) const [438] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [278] sList<sExpr>::~sList() [336] sList<sExpr>::n() const [232] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [274] sList<sStmt>::append(sStmt*) [255] sList<sExpr>::next(void*&) const [439] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [300] sList<sStmt>::sList() [256] sList<sExpr>::first(void*&) const [440] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [301] sList<sStmt>::~sList() [275] sList<sStmt>::next(void*&) const [574] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [345] sMult::sMult(sExpr*, sExpr*) [307] sList<sStmt>::first(void*&) const [441] void std::_Destroy<tValue*>(tValue*, tValue*)
 [346] sMult::~sMult()       [332] sMult::object() const [442] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [347] sMult::~sMult()       [527] sStmt::isInv() const  [575] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [272] sStmt::sStmt(int)     [155] tType::ord() const    [576] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [273] sStmt::~sStmt()       [288] tType::isInt() const  [577] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [123] sUnOp::typecheck(SymTable*, SymTable*) [320] tType::isCond() const [578] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [371] sUnOp::sUnOp(sExpr*)  [289] tType::isConv(tType const&) const [233] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [372] sUnOp::~sUnOp()       [528] tType::isExpr() const  [80] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [153] tType::tType(BaseType) [348] tType::isError() const [357] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [406] tType::tType(BaseType, int) [186] tType::isQuReg() const [151] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [166] tType::tType(tType const&) [156] tType::basetype() const [152] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [170] tType::operator=(BaseType) [266] tType::isNumber() const [88] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
 [158] tType::operator=(tType const&) [259] tType::isQuCond() const [387] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
   [6] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [192] tType::isQuExpr() const [24] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [505] QuHeap::init()        [529] tType::isString() const [358] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [106] QuHeap::addReg(quState*) [276] tType::isBoolean() const [326] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [77] QuHeap::qualloc(int, BaseType) [298] tType::isDefined() const [350] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [7] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [337] tType::isOrdered() const [46] operator&(bitvec const&, bitvec const&)
  [58] QuHeap::QuHeap(int, int) [271] tType::isQuConst() const [70] operator~(bitvec const&)
  [40] QuHeap::~QuHeap()     [239] tType::operator==(BaseType) const [60] operator==(bitvec const&, bitvec const&)
  [93] SymTab::put(sDef*, tValue const&) [343] tType::operator==(tType const&) const [234] operator new(unsigned long, void*)
 [217] SymTab::deltree(SymTable::entry*) [141] QuHeap::cond() const [31] operator|(bitvec const&, bitvec const&)
 [180] SymTab::putentry(SymTable::entry*, SymTable::entry*) [140] QuHeap::cmask() const [144] <cycle 1>
 [210] SymTab::SymTab(int)   [530] QuHeap::nBits() const [145] <cycle 2>
 [506] SymTab::~SymTab()     [142] QuHeap::ncond() const [101] <cycle 3>
 [211] SymTab::~SymTab()     [100] SymTab::getDef(std::string const&) const [13] <cycle 4>
 [219] bitvec::qnot()         [94] SymTab::getRef(std::string const&, ObjType*) const [65] <cycle 5>
  [21] bitvec::setlen(int)   [128] SymTab::getVal(std::string const&, ObjType*) const
