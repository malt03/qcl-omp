Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00    21427     0.00     0.00  sDef::id() const
  0.00      0.00     0.00    13929     0.00     0.00  bitvec::~bitvec()
  0.00      0.00     0.00    11257     0.00     0.00  term::vect() const
  0.00      0.00     0.00     7199     0.00     0.00  bitvec::bitvec(bitvec const&)
  0.00      0.00     0.00     7180     0.00     0.00  bitvec::setlen(int)
  0.00      0.00     0.00     7180     0.00     0.00  bitvec::operator=(bitvec const&)
  0.00      0.00     0.00     6730     0.00     0.00  bitvec::bitvec(int, unsigned long)
  0.00      0.00     0.00     6456     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00     6139     0.00     0.00  term::ampl() const
  0.00      0.00     0.00     4630     0.00     0.00  std::complex<double>::complex(double, double)
  0.00      0.00     0.00     4125     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00     4094     0.00     0.00  term::setvect(bitvec const&)
  0.00      0.00     0.00     3876     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00     3599     0.00     0.00  term::~term()
  0.00      0.00     0.00     3212     0.00     0.00  quState::mapbits() const
  0.00      0.00     0.00     3082     0.00     0.00  quSubString::mapoffs() const
  0.00      0.00     0.00     3077     0.00     0.00  bitvec::hashfunct() const
  0.00      0.00     0.00     3074     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  0.00      0.00     0.00     3072     0.00     0.00  bitvec::length() const
  0.00      0.00     0.00     3071     0.00     0.00  term::setampl(std::complex<double> const&)
  0.00      0.00     0.00     3071     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  0.00      0.00     0.00     2906     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      0.00     0.00     2576     0.00     0.00  term::term()
  0.00      0.00     0.00     2338     0.00     0.00  yylex()
  0.00      0.00     0.00     2059     0.00     0.00  bitvec::setbits(int, bitvec const&)
  0.00      0.00     0.00     2059     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  0.00      0.00     0.00     2059     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.00      0.00     0.00     2059     0.00     0.00  quSubString::unmap(bitvec const&) const
  0.00      0.00     0.00     2047     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.00     0.00     2047     0.00     0.00  bitvec::operator|=(bitvec const&)
  0.00      0.00     0.00     2046     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.00     0.00     2046     0.00     0.00  std::complex<double>::imag() const
  0.00      0.00     0.00     2046     0.00     0.00  std::complex<double>::real() const
  0.00      0.00     0.00     2046     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.00      0.00     0.00     2046     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      0.00     0.00     2046     0.00     0.00  operator|(bitvec const&, bitvec const&)
  0.00      0.00     0.00     1478     0.00     0.00  tType::tType(BaseType)
  0.00      0.00     0.00     1104     0.00     0.00  sArgDef::object() const
  0.00      0.00     0.00     1052     0.00     0.00  tType::ord() const
  0.00      0.00     0.00     1033     0.00     0.00  terminfo::~terminfo()
  0.00      0.00     0.00     1025     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.00      0.00     0.00     1024     0.00     0.00  termlist::add(term const&)
  0.00      0.00     0.00     1024     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.00      0.00     0.00     1023     0.00     0.00  term::term(term const&)
  0.00      0.00     0.00     1023     0.00     0.00  term::operator=(term const&)
  0.00      0.00     0.00     1023     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.00      0.00     0.00     1023     0.00     0.00  quSubState::baseterm(int) const
  0.00      0.00     0.00     1023     0.00     0.00  quBaseState::map(bitvec const&) const
  0.00      0.00     0.00     1023     0.00     0.00  quBaseState::baseterm(int) const
  0.00      0.00     0.00     1023     0.00     0.00  quSubString::map(bitvec const&) const
  0.00      0.00     0.00     1023     0.00     0.00  bitvec::getbits(int, int) const
  0.00      0.00     0.00     1023     0.00     0.00  bitvec::getword() const
  0.00      0.00     0.00     1023     0.00     0.00  opMatrix::addterms(terminfo const&) const
  0.00      0.00     0.00     1023     0.00     0.00  termlist::operator[](int) const
  0.00      0.00     0.00     1013     0.00     0.00  tType::basetype() const
  0.00      0.00     0.00      881     0.00     0.00  sObject::parent() const
  0.00      0.00     0.00      842     0.00     0.00  tType::operator=(tType const&)
  0.00      0.00     0.00      826     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      0.00     0.00      783     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      0.00     0.00      692     0.00     0.00  tValue::delpointer()
  0.00      0.00     0.00      692     0.00     0.00  tValue::ord() const
  0.00      0.00     0.00      692     0.00     0.00  tValue::basetype() const
  0.00      0.00     0.00      663     0.00     0.00  tValue::~tValue()
  0.00      0.00     0.00      554     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      0.00     0.00      531     0.00     0.00  tType::tType(tType const&)
  0.00      0.00     0.00      515     0.00     0.00  sObject::sObject(unsigned int)
  0.00      0.00     0.00      515     0.00     0.00  sObject::~sObject()
  0.00      0.00     0.00      455     0.00     0.00  sObject::setParent(sObject*)
  0.00      0.00     0.00      450     0.00     0.00  tType::operator=(BaseType)
  0.00      0.00     0.00      372     0.00     0.00  sDef::type() const
  0.00      0.00     0.00      370     0.00     0.00  sObject::isValueDef() const
  0.00      0.00     0.00      369     0.00     0.00  sQuOpDef::object() const
  0.00      0.00     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      0.00     0.00      365     0.00     0.00  sObject::isDef() const
  0.00      0.00     0.00      362     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      0.00     0.00      353     0.00     0.00  tValue::tValue()
  0.00      0.00     0.00      324     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      0.00     0.00      316     0.00     0.00  tValue::assign(tValue const&)
  0.00      0.00     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      0.00     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      0.00     0.00      294     0.00     0.00  sObject::isFunctDef() const
  0.00      0.00     0.00      287     0.00     0.00  tValue::tValue(tValue const&)
  0.00      0.00     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      0.00     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      0.00     0.00      264     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      0.00     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      0.00     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.00     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.00     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      0.00     0.00      253     0.00     0.00  sObject::isRoutDef() const
  0.00      0.00     0.00      176     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      0.00     0.00      167     0.00     0.00  sObject::def() const
  0.00      0.00     0.00      165     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      0.00     0.00      135     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      0.00     0.00      123     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.00     0.00      115     0.00     0.00  tType::isQuExpr() const
  0.00      0.00     0.00      109     0.00     0.00  sExpr::settype(tType const&)
  0.00      0.00     0.00       96     0.00     0.00  sExpr::type()
  0.00      0.00     0.00       95     0.00     0.00  sExpr::~sExpr()
  0.00      0.00     0.00       95     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      0.00     0.00       87     0.00     0.00  SymTable::SymTable()
  0.00      0.00     0.00       87     0.00     0.00  SymTable::~SymTable()
  0.00      0.00     0.00       86     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      0.00     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      0.00     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      0.00     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      0.00     0.00       82     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      0.00     0.00       82     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      0.00     0.00       82     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      0.00     0.00       82     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      0.00     0.00       79     0.00     0.00  sVarDef::object() const
  0.00      0.00     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      0.00     0.00       77     0.00     0.00  SymTab::SymTab(int)
  0.00      0.00     0.00       77     0.00     0.00  SymTab::~SymTab()
  0.00      0.00     0.00       74     0.00     0.00  sExpr::sExpr()
  0.00      0.00     0.00       73     0.00     0.00  sObject::isExtern() const
  0.00      0.00     0.00       63     0.00     0.00  tValue::type() const
  0.00      0.00     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      0.00     0.00       52     0.00     0.00  sVar::id() const
  0.00      0.00     0.00       48     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      0.00     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      0.00     0.00       44     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       44     0.00     0.00  sVar::sVar(std::string*)
  0.00      0.00     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      0.00     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      0.00     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      0.00     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      0.00     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      0.00     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.00     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.00     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      0.00     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      0.00     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      0.00     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      0.00     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      0.00     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      0.00     0.00       42     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      0.00     0.00       42     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      0.00     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      0.00     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      0.00     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      0.00     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      0.00     0.00       41     0.00     0.00  sObject::isInclude() const
  0.00      0.00     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      0.00     0.00       41     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      0.00     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      0.00     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      0.00     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      0.00     0.00       37     0.00     0.00  sRoutDef::args()
  0.00      0.00     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.00     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.00     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      0.00     0.00       36     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      0.00     0.00       35     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      0.00     0.00       34     0.00     0.00  sDefList::object() const
  0.00      0.00     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      0.00     0.00       31     0.00     0.00  quState::newclone()
  0.00      0.00     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      0.00     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      0.00     0.00       29     0.00     0.00  tValue::operator=(tValue const&)
  0.00      0.00     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      0.00     0.00       28     0.00     0.00  sObject::isCondDef() const
  0.00      0.00     0.00       27     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      0.00     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      0.00     0.00       26     0.00     0.00  bitvec::qnot()
  0.00      0.00     0.00       25     0.00     0.00  tType::isQuConst() const
  0.00      0.00     0.00       24     0.00     0.00  sStmt::sStmt(int)
  0.00      0.00     0.00       24     0.00     0.00  sStmt::~sStmt()
  0.00      0.00     0.00       24     0.00     0.00  operator~(bitvec const&)
  0.00      0.00     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      0.00     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      0.00     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      0.00     0.00       22     0.00     0.00  sList<sExpr>::sList()
  0.00      0.00     0.00       22     0.00     0.00  sList<sExpr>::~sList()
  0.00      0.00     0.00       22     0.00     0.00  quState::quState(int)
  0.00      0.00     0.00       22     0.00     0.00  sExprList::sExprList()
  0.00      0.00     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      0.00     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      0.00     0.00       22     0.00     0.00  sObject::isQuOpDef() const
  0.00      0.00     0.00       21     0.00     0.00  quSubState::quSubState(int)
  0.00      0.00     0.00       21     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.00      0.00     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      0.00     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      0.00     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.00     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.00     0.00       21     0.00     0.00  quState::~quState()
  0.00      0.00     0.00       21     0.00     0.00  sIf::object() const
  0.00      0.00     0.00       21     0.00     0.00  tType::isInt() const
  0.00      0.00     0.00       21     0.00     0.00  tType::isConv(tType const&) const
  0.00      0.00     0.00       20     0.00     0.00  quSubState::~quSubState()
  0.00      0.00     0.00       20     0.00     0.00  quSubString::newsubstring(int, int)
  0.00      0.00     0.00       20     0.00     0.00  quSubString::~quSubString()
  0.00      0.00     0.00       20     0.00     0.00  quSubString::~quSubString()
  0.00      0.00     0.00       20     0.00     0.00  quBaseState::isbasestate() const
  0.00      0.00     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.00     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.00     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.00     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      0.00     0.00       19     0.00     0.00  sObject::inFunctDef() const
  0.00      0.00     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      0.00     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      0.00     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      0.00     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      0.00     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      0.00     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.00     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.00     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      0.00     0.00       18     0.00     0.00  sObject::inQuDef() const
  0.00      0.00     0.00       18     0.00     0.00  sObject::isQuDef() const
  0.00      0.00     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      0.00     0.00       16     0.00     0.00  termlist::clear()
  0.00      0.00     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.00     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.00     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.00     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      0.00     0.00       15     0.00     0.00  sFor::object() const
  0.00      0.00     0.00       15     0.00     0.00  sCall::id() const
  0.00      0.00     0.00       14     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       14     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      0.00     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      0.00     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      0.00     0.00       14     0.00     0.00  tType::isCond() const
  0.00      0.00     0.00       14     0.00     0.00  sObject::inQuFunDef() const
  0.00      0.00     0.00       14     0.00     0.00  sObject::isProcDef() const
  0.00      0.00     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00       13     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      0.00     0.00       13     0.00     0.00  quState::mapmask() const
  0.00      0.00     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      0.00     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      0.00     0.00       11     0.00     0.00  quBaseState::opend()
  0.00      0.00     0.00       11     0.00     0.00  quBaseState::opbegin()
  0.00      0.00     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.00     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      0.00     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      0.00     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.00     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.00     0.00       10     0.00     0.00  quSubState::opend()
  0.00      0.00     0.00       10     0.00     0.00  quSubState::opbegin()
  0.00      0.00     0.00       10     0.00     0.00  terminfo::terminfo()
  0.00      0.00     0.00       10     0.00     0.00  quSubState::isbasestate() const
  0.00      0.00     0.00       10     0.00     0.00  quSubState::baseterms() const
  0.00      0.00     0.00       10     0.00     0.00  quBaseState::baseterms() const
  0.00      0.00     0.00       10     0.00     0.00  opElementary::apply(quState&) const
  0.00      0.00     0.00       10     0.00     0.00  bitvec::operator[](int) const
  0.00      0.00     0.00       10     0.00     0.00  termlist::nterms() const
  0.00      0.00     0.00        9     0.00     0.00  sMult::object() const
  0.00      0.00     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      0.00     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      0.00     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        8     0.00     0.00  sCall::object() const
  0.00      0.00     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      0.00     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      0.00     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      0.00     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.00     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.00     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.00     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.00     0.00        7     0.00     0.00  tType::operator==(tType const&) const
  0.00      0.00     0.00        7     0.00     0.00  tValue::isQuExpr() const
  0.00      0.00     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      0.00     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.00     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.00     0.00        6     0.00     0.00  tType::isError() const
  0.00      0.00     0.00        6     0.00     0.00  tValue::isError() const
  0.00      0.00     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      0.00     0.00        5     0.00     0.00  termlist::newlist()
  0.00      0.00     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      0.00     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.00     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.00     0.00        5     0.00     0.00  tValue::qustate() const
  0.00      0.00     0.00        5     0.00     0.00  sObject::isGlobal() const
  0.00      0.00     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.00     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.00     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      0.00     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      0.00     0.00        4     0.00     0.00  yyparse()
  0.00      0.00     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      0.00     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.00     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.00     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      0.00     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.00     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.00     0.00        4     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      0.00     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      0.00     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      0.00     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.00     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.00     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      0.00     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      0.00     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.00     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      0.00     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.00     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      0.00     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      0.00     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      0.00     0.00        4     0.00     0.00  sLess::object() const
  0.00      0.00     0.00        4     0.00     0.00  sLength::object() const
  0.00      0.00     0.00        4     0.00     0.00  sObject::isConstDef() const
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.00     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        4     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      0.00     0.00        4     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      0.00     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      0.00     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      0.00     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.00     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.00     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.00     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        3     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.00      0.00     0.00        3     0.00     0.00  sEqual::object() const
  0.00      0.00     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      0.00     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      0.00     0.00        3     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.00      0.00     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      0.00     0.00        3     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.00      0.00     0.00        2     0.00     0.00  zero(bitvec const&)
  0.00      0.00     0.00        2     0.00     0.00  irqOn()
  0.00      0.00     0.00        2     0.00     0.00  duallog(int)
  0.00      0.00     0.00        2     0.00     0.00  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.00     0.00        2     0.00     0.00  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.00     0.00        2     0.00     0.00  parseobj()
  0.00      0.00     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      0.00     0.00        2     0.00     0.00  yyCleanUp()
  0.00      0.00     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      0.00     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.00     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.00     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      0.00     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.00     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.00     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      0.00     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      0.00     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      0.00     0.00        2     0.00     0.00  objlist::objlist()
  0.00      0.00     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      0.00     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.00     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.00     0.00        2     0.00     0.00  termlist::dellist()
  0.00      0.00     0.00        2     0.00     0.00  termlist::termlist(int, int)
  0.00      0.00     0.00        2     0.00     0.00  termlist::~termlist()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      0.00     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.00     0.00        2     0.00     0.00  sSub::object() const
  0.00      0.00     0.00        2     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      0.00     0.00        2     0.00     0.00  bitvec::testzero() const
  0.00      0.00     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      0.00     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      0.00     0.00        2     0.00     0.00  sConcat::object() const
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      0.00     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      0.00     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      0.00     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      0.00     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.00     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      0.00     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.00     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.00     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      0.00     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_qc_check_txt
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      0.00     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      0.00     0.00        1     0.00     0.00  initialize_readline()
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      0.00     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      0.00     0.00        1     0.00     0.00  qc_srand(long)
  0.00      0.00     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      0.00     0.00        1     0.00     0.00  opOperator::opOperator(int)
  0.00      0.00     0.00        1     0.00     0.00  opOperator::~opOperator()
  0.00      0.00     0.00        1     0.00     0.00  quBaseState::reset(bitvec const&)
  0.00      0.00     0.00        1     0.00     0.00  quBaseState::quBaseState(int, int)
  0.00      0.00     0.00        1     0.00     0.00  quBaseState::~quBaseState()
  0.00      0.00     0.00        1     0.00     0.00  quBaseState::~quBaseState()
  0.00      0.00     0.00        1     0.00     0.00  opElementary::opElementary(int)
  0.00      0.00     0.00        1     0.00     0.00  opElementary::~opElementary()
  0.00      0.00     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      0.00     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.00     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.00     0.00        1     0.00     0.00  sDef::basetype()
  0.00      0.00     0.00        1     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.00     0.00        1     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      0.00     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      0.00     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      0.00     0.00        1     0.00     0.00  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      0.00     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      0.00     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      0.00     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.00     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::init()
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::qualloc(int, BaseType)
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::QuHeap(int, int)
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::~QuHeap()
  0.00      0.00     0.00        1     0.00     0.00  SymTab::~SymTab()
  0.00      0.00     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      0.00     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      0.00     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      0.00     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      0.00     0.00        1     0.00     0.00  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.00     0.00        1     0.00     0.00  opMatrix::opMatrix(int)
  0.00      0.00     0.00        1     0.00     0.00  opMatrix::~opMatrix()
  0.00      0.00     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      0.00     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.00     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.00     0.00        1     0.00     0.00  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      0.00     0.00        1     0.00     0.00  sOr::object() const
  0.00      0.00     0.00        1     0.00     0.00  sStmt::isInv() const
  0.00      0.00     0.00        1     0.00     0.00  tType::isExpr() const
  0.00      0.00     0.00        1     0.00     0.00  tType::isString() const
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::cond() const
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::cmask() const
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::nBits() const
  0.00      0.00     0.00        1     0.00     0.00  QuHeap::ncond() const
  0.00      0.00     0.00        1     0.00     0.00  tValue::conv(tType const&) const
  0.00      0.00     0.00        1     0.00     0.00  tValue::isExpr() const
  0.00      0.00     0.00        1     0.00     0.00  sObject::isStmt() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      0.00     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.00     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
[1]      0.0    0.00    0.00      23+101     <cycle 1 as a whole> [1]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [199]
                0.00    0.00      22             sList<sExpr>::~sList() <cycle 1> [195]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [198]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [225]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [286]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [287]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [305]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [306]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [314]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [315]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [309]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [310]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [368]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [369]
-----------------------------------------------
[2]      0.0    0.00    0.00       8+64      <cycle 2 as a whole> [2]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [229]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [223]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [228]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [278]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [279]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [358]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [359]
-----------------------------------------------
[3]      0.0    0.00    0.00       8+19      <cycle 3 as a whole> [3]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
-----------------------------------------------
[4]      0.0    0.00    0.00    2047+2048    <cycle 4 as a whole> [4]
                0.00    0.00    3071+3           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
                0.00    0.00    1024             termlist::add(term const&) <cycle 4> [52]
-----------------------------------------------
[5]      0.0    0.00    0.00      21+93      <cycle 5 as a whole> [5]
                0.00    0.00      42             quBaseState::newsubstring(int, int) <cycle 5> [150]
                0.00    0.00      31             quState::newclone() <cycle 5> [178]
                0.00    0.00      21             quSubString::quSubString(int, int, quState&) <cycle 5> [202]
                0.00    0.00      20             quSubString::newsubstring(int, int) <cycle 5> [212]
-----------------------------------------------
                0.00    0.00       2/21427       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       2/21427       ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00       3/21427       sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       7/21427       sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00     734/21427       sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00    7365/21427       SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00   13314/21427       SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
[11]     0.0    0.00    0.00   21427         sDef::id() const [11]
-----------------------------------------------
                0.00    0.00       1/13929       quBaseState::reset(bitvec const&) [458]
                0.00    0.00       1/13929       quBaseState::quBaseState(int, int) [459]
                0.00    0.00       2/13929       QuHeap::qualloc(int, BaseType) [480]
                0.00    0.00       3/13929       QuHeap::QuHeap(int, int) [482]
                0.00    0.00       4/13929       opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
                0.00    0.00       5/13929       QuHeap::~QuHeap() [483]
                0.00    0.00       5/13929       sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      26/13929       quState::mapmask() const [250]
                0.00    0.00    1023/13929       quSubString::map(bitvec const&) const [60]
                0.00    0.00    1033/13929       terminfo::~terminfo() [50]
                0.00    0.00    2059/13929       quSubString::unmap(bitvec const&) const [38]
                0.00    0.00    2076/13929       opElementary::apply(quState&) const [266]
                0.00    0.00    3599/13929       term::~term() [24]
                0.00    0.00    4092/13929       opMatrix::addterms(terminfo const&) const [63]
[12]     0.0    0.00    0.00   13929         bitvec::~bitvec() [12]
-----------------------------------------------
                0.00    0.00       3/11257       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
                0.00    0.00    1023/11257       term::term(term const&) [54]
                0.00    0.00    1023/11257       term::operator=(term const&) [55]
                0.00    0.00    1024/11257       termlist::add(term const&) <cycle 4> [52]
                0.00    0.00    2046/11257       opElementary::apply(quState&) const [266]
                0.00    0.00    6138/11257       opMatrix::addterms(terminfo const&) const [63]
[13]     0.0    0.00    0.00   11257         term::vect() const [13]
-----------------------------------------------
                0.00    0.00      24/7199        operator~(bitvec const&) [190]
                0.00    0.00    1023/7199        quBaseState::map(bitvec const&) const [58]
                0.00    0.00    1023/7199        terminfo::terminfo(terminfo const&) [56]
                0.00    0.00    1024/7199        operator&(bitvec const&, bitvec const&) [53]
                0.00    0.00    2046/7199        operator|(bitvec const&, bitvec const&) [46]
                0.00    0.00    2059/7199        quBaseState::unmap(bitvec const&) const [37]
[14]     0.0    0.00    0.00    7199         bitvec::bitvec(bitvec const&) [14]
-----------------------------------------------
                0.00    0.00    7180/7180        bitvec::operator=(bitvec const&) [16]
[15]     0.0    0.00    0.00    7180         bitvec::setlen(int) [15]
-----------------------------------------------
                0.00    0.00       3/7180        QuHeap::QuHeap(int, int) [482]
                0.00    0.00       4/7180        term::set(bitvec const&, std::complex<double> const&) [311]
                0.00    0.00    1023/7180        term::term(term const&) [54]
                0.00    0.00    1023/7180        term::operator=(term const&) [55]
                0.00    0.00    1033/7180        opElementary::apply(quState&) const [266]
                0.00    0.00    4094/7180        term::setvect(bitvec const&) [22]
[16]     0.0    0.00    0.00    7180         bitvec::operator=(bitvec const&) [16]
                0.00    0.00    7180/7180        bitvec::setlen(int) [15]
-----------------------------------------------
                0.00    0.00       1/6730        QuHeap::cmask() const [515]
                0.00    0.00       1/6730        sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       1/6730        quBaseState::reset(bitvec const&) [458]
                0.00    0.00       1/6730        quBaseState::quBaseState(int, int) [459]
                0.00    0.00       4/6730        opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
                0.00    0.00       8/6730        QuHeap::QuHeap(int, int) [482]
                0.00    0.00      10/6730        opElementary::apply(quState&) const [266]
                0.00    0.00      10/6730        terminfo::terminfo() [262]
                0.00    0.00      13/6730        quState::mapmask() const [250]
                0.00    0.00    1023/6730        bitvec::getbits(int, int) const [61]
                0.00    0.00    1023/6730        term::term(term const&) [54]
                0.00    0.00    2059/6730        quSubString::unmap(bitvec const&) const [38]
                0.00    0.00    2576/6730        term::term() [33]
[17]     0.0    0.00    0.00    6730         bitvec::bitvec(int, unsigned long) [17]
-----------------------------------------------
                0.00    0.00    3202/6456        SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00    3254/6456        SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
[18]     0.0    0.00    0.00    6456         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [18]
-----------------------------------------------
                0.00    0.00    1023/6139        term::term(term const&) [54]
                0.00    0.00    1023/6139        term::operator=(term const&) [55]
                0.00    0.00    1024/6139        termlist::add(term const&) <cycle 4> [52]
                0.00    0.00    3069/6139        opMatrix::addterms(terminfo const&) const [63]
[19]     0.0    0.00    0.00    6139         term::ampl() const [19]
-----------------------------------------------
                0.00    0.00       1/4630        yylex() [34]
                0.00    0.00       1/4630        quBaseState::reset(bitvec const&) [458]
                0.00    0.00       6/4630        ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00    1023/4630        term::term(term const&) [54]
                0.00    0.00    1023/4630        opMatrix::addterms(terminfo const&) const [63]
                0.00    0.00    2576/4630        term::term() [33]
[20]     0.0    0.00    0.00    4630         std::complex<double>::complex(double, double) [20]
-----------------------------------------------
                0.00    0.00     435/4125        sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00    3690/4125        SymTab::getentry(SymTable::entry*, std::string const&) const [85]
[21]     0.0    0.00    0.00    4125         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [21]
                0.00    0.00    2906/2906        std::char_traits<char>::compare(char const*, char const*, unsigned long) [32]
-----------------------------------------------
                0.00    0.00    1023/4094        opElementary::apply(quState&) const [266]
                0.00    0.00    3071/4094        termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[22]     0.0    0.00    0.00    4094         term::setvect(bitvec const&) [22]
                0.00    0.00    4094/7180        bitvec::operator=(bitvec const&) [16]
-----------------------------------------------
                0.00    0.00     473/3876        SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00    3403/3876        SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
[23]     0.0    0.00    0.00    3876         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [23]
-----------------------------------------------
                0.00    0.00       6/3599        opMatrix::~opMatrix() [491]
                0.00    0.00    1024/3599        termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
                0.00    0.00    1033/3599        terminfo::~terminfo() [50]
                0.00    0.00    1536/3599        termlist::dellist() [370]
[24]     0.0    0.00    0.00    3599         term::~term() [24]
                0.00    0.00    3599/13929       bitvec::~bitvec() [12]
-----------------------------------------------
                0.00    0.00       1/3212        sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       1/3212        quBaseState::basebits() const [509]
                0.00    0.00      10/3212        opElementary::apply(quState&) const [266]
                0.00    0.00      11/3212        ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00      13/3212        quState::mapmask() const [250]
                0.00    0.00      31/3212        quState::newclone() <cycle 5> [178]
                0.00    0.00      63/3212        quBaseState::newsubstring(int, int) <cycle 5> [150]
                0.00    0.00    1023/3212        quSubString::map(bitvec const&) const [60]
                0.00    0.00    2059/3212        quSubString::unmap(bitvec const&) const [38]
[25]     0.0    0.00    0.00    3212         quState::mapbits() const [25]
-----------------------------------------------
                0.00    0.00    1023/3082        quSubString::map(bitvec const&) const [60]
                0.00    0.00    2059/3082        quSubString::unmap(bitvec const&) const [38]
[26]     0.0    0.00    0.00    3082         quSubString::mapoffs() const [26]
-----------------------------------------------
                0.00    0.00       3/3077        termlist::hashfunct2(bitvec const&) const [345]
                0.00    0.00    3074/3077        termlist::hashfunct1(bitvec const&) const [28]
[27]     0.0    0.00    0.00    3077         bitvec::hashfunct() const [27]
-----------------------------------------------
                0.00    0.00    3074/3074        termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[28]     0.0    0.00    0.00    3074         termlist::hashfunct1(bitvec const&) const [28]
                0.00    0.00    3074/3077        bitvec::hashfunct() const [27]
-----------------------------------------------
                0.00    0.00       1/3072        QuHeap::ncond() const [517]
                0.00    0.00       1/3072        QuHeap::cmask() const [515]
                0.00    0.00       1/3072        quBaseState::reset(bitvec const&) [458]
                0.00    0.00    3069/3072        opMatrix::addterms(terminfo const&) const [63]
[29]     0.0    0.00    0.00    3072         bitvec::length() const [29]
-----------------------------------------------
                0.00    0.00    3071/3071        termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[30]     0.0    0.00    0.00    3071         term::setampl(std::complex<double> const&) [30]
-----------------------------------------------
                                   3             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
                                1024             termlist::add(term const&) <cycle 4> [52]
                0.00    0.00    2047/2047        quBaseState::opadd(bitvec const&, std::complex<double> const&) [39]
[31]     0.0    0.00    0.00    3071+3       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
                0.00    0.00    3074/3074        termlist::hashfunct1(bitvec const&) const [28]
                0.00    0.00    3071/4094        term::setvect(bitvec const&) [22]
                0.00    0.00    3071/3071        term::setampl(std::complex<double> const&) [30]
                0.00    0.00    1024/3599        term::~term() [24]
                0.00    0.00       3/5           termlist::newlist() [292]
                0.00    0.00       3/16          termlist::clear() [234]
                0.00    0.00       3/3           operator==(bitvec const&, bitvec const&) [347]
                0.00    0.00       3/11257       term::vect() const [13]
                0.00    0.00       3/3           termlist::hashfunct2(bitvec const&) const [345]
                                1024             termlist::add(term const&) <cycle 4> [52]
                                   3             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
-----------------------------------------------
                0.00    0.00    2906/2906        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [21]
[32]     0.0    0.00    0.00    2906         std::char_traits<char>::compare(char const*, char const*, unsigned long) [32]
-----------------------------------------------
                0.00    0.00       6/2576        opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
                0.00    0.00      10/2576        terminfo::terminfo() [262]
                0.00    0.00    2560/2576        termlist::newlist() [292]
[33]     0.0    0.00    0.00    2576         term::term() [33]
                0.00    0.00    2576/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00    2576/4630        std::complex<double>::complex(double, double) [20]
-----------------------------------------------
                0.00    0.00    2338/2338        yyparse() [302]
[34]     0.0    0.00    0.00    2338         yylex() [34]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [204]
                0.00    0.00      19/663         tValue::~tValue() [73]
                0.00    0.00      15/15          tValue::tValue(long) [238]
                0.00    0.00      12/12          yy_get_next_buffer() [251]
                0.00    0.00       8/8           yy_get_previous_state() [270]
                0.00    0.00       2/2           tValue::tValue(double) [364]
                0.00    0.00       1/26          yy_load_buffer_state() [185]
                0.00    0.00       1/4630        std::complex<double>::complex(double, double) [20]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [488]
                0.00    0.00       1/1           tValue::tValue(char const*) [486]
-----------------------------------------------
                0.00    0.00    2059/2059        quSubString::unmap(bitvec const&) const [38]
[35]     0.0    0.00    0.00    2059         bitvec::setbits(int, bitvec const&) [35]
                0.00    0.00    2059/2059        bitvec::setbits(int, int, unsigned long) [36]
-----------------------------------------------
                0.00    0.00    2059/2059        bitvec::setbits(int, bitvec const&) [35]
[36]     0.0    0.00    0.00    2059         bitvec::setbits(int, int, unsigned long) [36]
-----------------------------------------------
                0.00    0.00    2059/2059        quSubString::unmap(bitvec const&) const [38]
[37]     0.0    0.00    0.00    2059         quBaseState::unmap(bitvec const&) const [37]
                0.00    0.00    2059/7199        bitvec::bitvec(bitvec const&) [14]
-----------------------------------------------
                0.00    0.00      13/2059        quState::mapmask() const [250]
                0.00    0.00    2046/2059        opMatrix::addterms(terminfo const&) const [63]
[38]     0.0    0.00    0.00    2059         quSubString::unmap(bitvec const&) const [38]
                0.00    0.00    2059/3212        quState::mapbits() const [25]
                0.00    0.00    2059/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00    2059/3082        quSubString::mapoffs() const [26]
                0.00    0.00    2059/2059        bitvec::setbits(int, bitvec const&) [35]
                0.00    0.00    2059/2059        quBaseState::unmap(bitvec const&) const [37]
                0.00    0.00    2059/13929       bitvec::~bitvec() [12]
-----------------------------------------------
                0.00    0.00       1/2047        quBaseState::reset(bitvec const&) [458]
                0.00    0.00    2046/2047        quSubState::opadd(bitvec const&, std::complex<double> const&) [41]
[39]     0.0    0.00    0.00    2047         quBaseState::opadd(bitvec const&, std::complex<double> const&) [39]
                0.00    0.00    2047/2047        termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
-----------------------------------------------
                0.00    0.00       1/2047        sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00    2046/2047        operator|(bitvec const&, bitvec const&) [46]
[40]     0.0    0.00    0.00    2047         bitvec::operator|=(bitvec const&) [40]
-----------------------------------------------
                0.00    0.00    2046/2046        opMatrix::addterms(terminfo const&) const [63]
[41]     0.0    0.00    0.00    2046         quSubState::opadd(bitvec const&, std::complex<double> const&) [41]
                0.00    0.00    2046/2047        quBaseState::opadd(bitvec const&, std::complex<double> const&) [39]
-----------------------------------------------
                0.00    0.00    2046/2046        std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [44]
[42]     0.0    0.00    0.00    2046         std::complex<double>::imag() const [42]
-----------------------------------------------
                0.00    0.00    2046/2046        std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [44]
[43]     0.0    0.00    0.00    2046         std::complex<double>::real() const [43]
-----------------------------------------------
                0.00    0.00    2046/2046        std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [45]
[44]     0.0    0.00    0.00    2046         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [44]
                0.00    0.00    2046/2046        std::complex<double>::real() const [43]
                0.00    0.00    2046/2046        std::complex<double>::imag() const [42]
-----------------------------------------------
                0.00    0.00    2046/2046        opMatrix::addterms(terminfo const&) const [63]
[45]     0.0    0.00    0.00    2046         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [45]
                0.00    0.00    2046/2046        std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [44]
-----------------------------------------------
                0.00    0.00    2046/2046        opMatrix::addterms(terminfo const&) const [63]
[46]     0.0    0.00    0.00    2046         operator|(bitvec const&, bitvec const&) [46]
                0.00    0.00    2046/7199        bitvec::bitvec(bitvec const&) [14]
                0.00    0.00    2046/2047        bitvec::operator|=(bitvec const&) [40]
-----------------------------------------------
                0.00    0.00       1/1478        tValue::tValue(std::complex<double> const&) [488]
                0.00    0.00       1/1478        tValue::tValue(char const*) [486]
                0.00    0.00       1/1478        tValue::tValue(quState&, BaseType) [487]
                0.00    0.00       1/1478        tValue::tValue(quState*, BaseType) [485]
                0.00    0.00       1/1478        __static_initialization_and_destruction_0(int, int) [430]
                0.00    0.00       1/1478        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [492]
                0.00    0.00       2/1478        tValue::tValue(int) [365]
                0.00    0.00       2/1478        tValue::tValue(double) [364]
                0.00    0.00       2/1478        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       4/1478        sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       4/1478        sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       5/1478        sConstDef::sConstDef(std::string*, sExpr*) [293]
                0.00    0.00       8/1478        sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00      15/1478        tValue::tValue(long) [238]
                0.00    0.00      16/1478        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [235]
                0.00    0.00      19/1478        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [217]
                0.00    0.00      21/1478        sExpr::sExpr(tType const&) [203]
                0.00    0.00      28/1478        sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      52/1478        sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00      74/1478        sExpr::sExpr() [127]
                0.00    0.00     268/1478        yyparse() [302]
                0.00    0.00     287/1478        tValue::tValue(tValue const&) [92]
                0.00    0.00     312/1478        sDef::sDef(tType const&, std::string*) [89]
                0.00    0.00     353/1478        tValue::tValue() [86]
[47]     0.0    0.00    0.00    1478         tType::tType(BaseType) [47]
-----------------------------------------------
                0.00    0.00     528/1104        sObject::isDef() const [84]
                0.00    0.00     576/1104        sObject::isValueDef() const [81]
[48]     0.0    0.00    0.00    1104         sArgDef::object() const [48]
-----------------------------------------------
                0.00    0.00       8/1052        sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00      36/1052        sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00     316/1052        tValue::assign(tValue const&) [88]
                0.00    0.00     692/1052        tValue::ord() const [71]
[49]     0.0    0.00    0.00    1052         tType::ord() const [49]
-----------------------------------------------
                0.00    0.00    1033/1033        opElementary::apply(quState&) const [266]
[50]     0.0    0.00    0.00    1033         terminfo::~terminfo() [50]
                0.00    0.00    1033/3599        term::~term() [24]
                0.00    0.00    1033/13929       bitvec::~bitvec() [12]
-----------------------------------------------
                0.00    0.00       1/1025        QuHeap::qualloc(int, BaseType) [480]
                0.00    0.00    1024/1025        operator&(bitvec const&, bitvec const&) [53]
[51]     0.0    0.00    0.00    1025         bitvec::operator&=(bitvec const&) [51]
-----------------------------------------------
                                1024             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[52]     0.0    0.00    0.00    1024         termlist::add(term const&) <cycle 4> [52]
                0.00    0.00    1024/11257       term::vect() const [13]
                0.00    0.00    1024/6139        term::ampl() const [19]
                                1024             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
-----------------------------------------------
                0.00    0.00       1/1024        sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00    1023/1024        opElementary::apply(quState&) const [266]
[53]     0.0    0.00    0.00    1024         operator&(bitvec const&, bitvec const&) [53]
                0.00    0.00    1024/7199        bitvec::bitvec(bitvec const&) [14]
                0.00    0.00    1024/1025        bitvec::operator&=(bitvec const&) [51]
-----------------------------------------------
                0.00    0.00    1023/1023        terminfo::terminfo(terminfo const&) [56]
[54]     0.0    0.00    0.00    1023         term::term(term const&) [54]
                0.00    0.00    1023/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00    1023/4630        std::complex<double>::complex(double, double) [20]
                0.00    0.00    1023/11257       term::vect() const [13]
                0.00    0.00    1023/7180        bitvec::operator=(bitvec const&) [16]
                0.00    0.00    1023/6139        term::ampl() const [19]
-----------------------------------------------
                0.00    0.00    1023/1023        opElementary::apply(quState&) const [266]
[55]     0.0    0.00    0.00    1023         term::operator=(term const&) [55]
                0.00    0.00    1023/11257       term::vect() const [13]
                0.00    0.00    1023/7180        bitvec::operator=(bitvec const&) [16]
                0.00    0.00    1023/6139        term::ampl() const [19]
-----------------------------------------------
                0.00    0.00    1023/1023        opElementary::apply(quState&) const [266]
[56]     0.0    0.00    0.00    1023         terminfo::terminfo(terminfo const&) [56]
                0.00    0.00    1023/7199        bitvec::bitvec(bitvec const&) [14]
                0.00    0.00    1023/1023        term::term(term const&) [54]
-----------------------------------------------
                0.00    0.00    1023/1023        opElementary::apply(quState&) const [266]
[57]     0.0    0.00    0.00    1023         quSubState::baseterm(int) const [57]
                0.00    0.00    1023/1023        quBaseState::baseterm(int) const [59]
-----------------------------------------------
                0.00    0.00    1023/1023        quSubString::map(bitvec const&) const [60]
[58]     0.0    0.00    0.00    1023         quBaseState::map(bitvec const&) const [58]
                0.00    0.00    1023/7199        bitvec::bitvec(bitvec const&) [14]
-----------------------------------------------
                0.00    0.00    1023/1023        quSubState::baseterm(int) const [57]
[59]     0.0    0.00    0.00    1023         quBaseState::baseterm(int) const [59]
                0.00    0.00    1023/1023        termlist::operator[](int) const [64]
-----------------------------------------------
                0.00    0.00    1023/1023        opElementary::apply(quState&) const [266]
[60]     0.0    0.00    0.00    1023         quSubString::map(bitvec const&) const [60]
                0.00    0.00    1023/3212        quState::mapbits() const [25]
                0.00    0.00    1023/3082        quSubString::mapoffs() const [26]
                0.00    0.00    1023/1023        quBaseState::map(bitvec const&) const [58]
                0.00    0.00    1023/1023        bitvec::getbits(int, int) const [61]
                0.00    0.00    1023/13929       bitvec::~bitvec() [12]
-----------------------------------------------
                0.00    0.00    1023/1023        quSubString::map(bitvec const&) const [60]
[61]     0.0    0.00    0.00    1023         bitvec::getbits(int, int) const [61]
                0.00    0.00    1023/6730        bitvec::bitvec(int, unsigned long) [17]
-----------------------------------------------
                0.00    0.00    1023/1023        opMatrix::addterms(terminfo const&) const [63]
[62]     0.0    0.00    0.00    1023         bitvec::getword() const [62]
-----------------------------------------------
                0.00    0.00    1023/1023        opElementary::apply(quState&) const [266]
[63]     0.0    0.00    0.00    1023         opMatrix::addterms(terminfo const&) const [63]
                0.00    0.00    6138/11257       term::vect() const [13]
                0.00    0.00    4092/13929       bitvec::~bitvec() [12]
                0.00    0.00    3069/6139        term::ampl() const [19]
                0.00    0.00    3069/3072        bitvec::length() const [29]
                0.00    0.00    2046/2046        std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [45]
                0.00    0.00    2046/2059        quSubString::unmap(bitvec const&) const [38]
                0.00    0.00    2046/2046        operator|(bitvec const&, bitvec const&) [46]
                0.00    0.00    2046/2046        quSubState::opadd(bitvec const&, std::complex<double> const&) [41]
                0.00    0.00    1023/4630        std::complex<double>::complex(double, double) [20]
                0.00    0.00    1023/1023        bitvec::getword() const [62]
-----------------------------------------------
                0.00    0.00    1023/1023        quBaseState::baseterm(int) const [59]
[64]     0.0    0.00    0.00    1023         termlist::operator[](int) const [64]
-----------------------------------------------
                0.00    0.00       1/1013        sDef::basetype() [467]
                0.00    0.00       4/1013        sExpr::basetype() [312]
                0.00    0.00     316/1013        tValue::assign(tValue const&) [88]
                0.00    0.00     692/1013        tValue::basetype() const [72]
[65]     0.0    0.00    0.00    1013         tType::basetype() const [65]
-----------------------------------------------
                0.00    0.00      97/881         sObject::isSetRec(ObjFlag) [249]
                0.00    0.00     784/881         sObject::def() const [103]
[66]     0.0    0.00    0.00     881         sObject::parent() const [66]
-----------------------------------------------
                0.00    0.00       1/842         sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       5/842         sDef::settype(tType const&) [291]
                0.00    0.00      21/842         sExpr::sExpr(tType const&) [203]
                0.00    0.00      36/842         sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00      42/842         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00     109/842         sExpr::settype(tType const&) [108]
                0.00    0.00     312/842         sDef::sDef(tType const&, std::string*) [89]
                0.00    0.00     316/842         tValue::assign(tValue const&) [88]
[67]     0.0    0.00    0.00     842         tType::operator=(tType const&) [67]
-----------------------------------------------
                0.00    0.00     826/826         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [147]
[68]     0.0    0.00    0.00     826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [68]
-----------------------------------------------
                0.00    0.00     783/783         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [147]
[69]     0.0    0.00    0.00     783         std::_List_const_iterator<sObject*>::operator++() [69]
-----------------------------------------------
                0.00    0.00      29/692         tValue::operator=(tValue const&) [181]
                0.00    0.00     663/692         tValue::~tValue() [73]
[70]     0.0    0.00    0.00     692         tValue::delpointer() [70]
                0.00    0.00     692/692         tValue::ord() const [71]
                0.00    0.00     692/692         tValue::basetype() const [72]
                0.00    0.00      10/10          quSubState::isbasestate() const [263]
                0.00    0.00      10/20          quSubString::~quSubString() [213]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [70]
[71]     0.0    0.00    0.00     692         tValue::ord() const [71]
                0.00    0.00     692/1052        tType::ord() const [49]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [70]
[72]     0.0    0.00    0.00     692         tValue::basetype() const [72]
                0.00    0.00     692/1013        tType::basetype() const [65]
-----------------------------------------------
                0.00    0.00       1/663         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [495]
                0.00    0.00       1/663         QuHeap::addReg(quState*) [479]
                0.00    0.00       1/663         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [497]
                0.00    0.00       2/663         sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       3/663         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       4/663         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       4/663         sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       4/663         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       6/663         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       6/663         sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00      19/663         yylex() [34]
                0.00    0.00      21/663         sConst::~sConst() [206]
                0.00    0.00      36/663         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [170]
                0.00    0.00     275/663         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00     280/663         SymTab::deltree(SymTable::entry*) [132]
[73]     0.0    0.00    0.00     663         tValue::~tValue() [73]
                0.00    0.00     663/692         tValue::delpointer() [70]
-----------------------------------------------
                0.00    0.00       1/554         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      21/554         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00     263/554         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00     269/554         sDefList::typecheck(SymTable*, SymTable*) [140]
[74]     0.0    0.00    0.00     554         sList<sDef>::next(void*&) const [74]
-----------------------------------------------
                0.00    0.00      63/531         tValue::type() const [129]
                0.00    0.00      96/531         sExpr::type() [109]
                0.00    0.00     372/531         sDef::type() const [80]
[75]     0.0    0.00    0.00     531         tType::tType(tType const&) [75]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::sList() [222]
                0.00    0.00      21/515         sExpr::sExpr(tType const&) [203]
                0.00    0.00      22/515         sList<sExpr>::sList() [194]
                0.00    0.00      24/515         sStmt::sStmt(int) [188]
                0.00    0.00      44/515         sList<sDef>::sList() [138]
                0.00    0.00      74/515         sExpr::sExpr() [127]
                0.00    0.00     312/515         sDef::sDef(tType const&, std::string*) [89]
[76]     0.0    0.00    0.00     515         sObject::sObject(unsigned int) [76]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::~sList() <cycle 2> [223]
                0.00    0.00      22/515         sList<sExpr>::~sList() <cycle 1> [195]
                0.00    0.00      24/515         sStmt::~sStmt() [189]
                0.00    0.00      44/515         sList<sDef>::~sList() [139]
                0.00    0.00      95/515         sExpr::~sExpr() [110]
                0.00    0.00     312/515         sDef::~sDef() [90]
[77]     0.0    0.00    0.00     515         sObject::~sObject() [77]
-----------------------------------------------
                0.00    0.00       1/455         sExit::typecheck(SymTable*, SymTable*) [473]
                0.00    0.00       3/455         sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       4/455         sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       4/455         sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       5/455         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       6/455         sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00       8/455         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       8/455         sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00      15/455         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00      21/455         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      23/455         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
                0.00    0.00      36/455         sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00      52/455         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00     269/455         sDefList::typecheck(SymTable*, SymTable*) [140]
[78]     0.0    0.00    0.00     455         sObject::setParent(sObject*) [78]
-----------------------------------------------
                0.00    0.00       1/450         tValue::tValue(std::complex<double> const&) [488]
                0.00    0.00       1/450         tValue::tValue(char const*) [486]
                0.00    0.00       1/450         tValue::tValue(quState&, BaseType) [487]
                0.00    0.00       1/450         tValue::tValue(quState*, BaseType) [485]
                0.00    0.00       2/450         tValue::tValue(int) [365]
                0.00    0.00       2/450         tValue::tValue(double) [364]
                0.00    0.00      15/450         tValue::tValue(long) [238]
                0.00    0.00      74/450         sExpr::sExpr() [127]
                0.00    0.00     353/450         tValue::tValue() [86]
[79]     0.0    0.00    0.00     450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/372         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       1/372         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       3/372         sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00      23/372         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      37/372         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      44/372         sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00     263/372         sRoutDef::typecheck(SymTable*, SymTable*) [171]
[80]     0.0    0.00    0.00     372         sDef::type() const [80]
                0.00    0.00     372/531         tType::tType(tType const&) [75]
-----------------------------------------------
                0.00    0.00       1/370         SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00       1/370         SymTab::getRef(std::string const&, ObjType*) const [95]
                0.00    0.00      44/370         sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00     324/370         SymTab::put(sDef*, tValue const&) [87]
[81]     0.0    0.00    0.00     370         sObject::isValueDef() const [81]
                0.00    0.00     576/1104        sArgDef::object() const [48]
                0.00    0.00      50/79          sVarDef::object() const [123]
                0.00    0.00      26/48          sConstDef::object() const [133]
                0.00    0.00      23/369         sQuOpDef::object() const [82]
                0.00    0.00      19/369         sQuFunDef::object() const [83]
                0.00    0.00       2/58          sProcDef::object() const [130]
-----------------------------------------------
                0.00    0.00       6/369         sObject::isProcDef() const [247]
                0.00    0.00       9/369         sObject::isQuOpDef() const [200]
                0.00    0.00      10/369         sObject::isQuFunDef() const [180]
                0.00    0.00      19/369         sObject::isInclude() const [157]
                0.00    0.00      23/369         sObject::isValueDef() const [81]
                0.00    0.00      84/369         sObject::isDef() const [84]
                0.00    0.00      90/369         sObject::isRoutDef() const [101]
                0.00    0.00     128/369         sObject::isFunctDef() const [91]
[82]     0.0    0.00    0.00     369         sQuOpDef::object() const [82]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [247]
                0.00    0.00      10/369         sObject::isQuOpDef() const [200]
                0.00    0.00      13/369         sObject::isQuFunDef() const [180]
                0.00    0.00      16/369         sObject::isInclude() const [157]
                0.00    0.00      19/369         sObject::isValueDef() const [81]
                0.00    0.00      70/369         sObject::isDef() const [84]
                0.00    0.00      74/369         sObject::isRoutDef() const [101]
                0.00    0.00     162/369         sObject::isFunctDef() const [91]
[83]     0.0    0.00    0.00     369         sQuFunDef::object() const [83]
-----------------------------------------------
                0.00    0.00      41/365         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
                0.00    0.00     324/365         SymTab::put(sDef*, tValue const&) [87]
[84]     0.0    0.00    0.00     365         sObject::isDef() const [84]
                0.00    0.00     528/1104        sArgDef::object() const [48]
                0.00    0.00      84/369         sQuOpDef::object() const [82]
                0.00    0.00      70/369         sQuFunDef::object() const [83]
                0.00    0.00      24/79          sVarDef::object() const [123]
                0.00    0.00      16/48          sConstDef::object() const [133]
                0.00    0.00       6/58          sProcDef::object() const [130]
                0.00    0.00       1/8           sCall::object() const [273]
-----------------------------------------------
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00       1/362         SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00     133/362         SymTab::getDef(std::string const&) const [105]
                0.00    0.00     228/362         SymTab::getRef(std::string const&, ObjType*) const [95]
[85]     0.0    0.00    0.00     362+3328    SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00    7365/21427       sDef::id() const [11]
                0.00    0.00    3690/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [21]
                0.00    0.00    3202/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [18]
                0.00    0.00     473/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [23]
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [85]
-----------------------------------------------
                0.00    0.00       1/353         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [495]
                0.00    0.00       1/353         SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00       1/353         sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       1/353         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       2/353         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       2/353         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/353         sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00       4/353         sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       6/353         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      21/353         sConst::sConst(tValue const&) [204]
                0.00    0.00      36/353         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [170]
                0.00    0.00     275/353         sRoutDef::typecheck(SymTable*, SymTable*) [171]
[86]     0.0    0.00    0.00     353         tValue::tValue() [86]
                0.00    0.00     353/1478        tType::tType(BaseType) [47]
                0.00    0.00     353/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/324         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       1/324         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       2/324         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       3/324         sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00       6/324         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      36/324         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [170]
                0.00    0.00     275/324         sRoutDef::typecheck(SymTable*, SymTable*) [171]
[87]     0.0    0.00    0.00     324         SymTab::put(sDef*, tValue const&) [87]
                0.00    0.00     324/365         sObject::isDef() const [84]
                0.00    0.00     324/370         sObject::isValueDef() const [81]
                0.00    0.00     280/287         tValue::tValue(tValue const&) [92]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
-----------------------------------------------
                0.00    0.00      29/316         tValue::operator=(tValue const&) [181]
                0.00    0.00     287/316         tValue::tValue(tValue const&) [92]
[88]     0.0    0.00    0.00     316         tValue::assign(tValue const&) [88]
                0.00    0.00     316/842         tType::operator=(tType const&) [67]
                0.00    0.00     316/1052        tType::ord() const [49]
                0.00    0.00     316/1013        tType::basetype() const [65]
                0.00    0.00       8/21          quState::newclone() <cycle 5> [178]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [293]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [271]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [172]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [96]
[89]     0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [89]
                0.00    0.00     312/515         sObject::sObject(unsigned int) [76]
                0.00    0.00     312/1478        tType::tType(BaseType) [47]
                0.00    0.00     312/842         tType::operator=(tType const&) [67]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [295]
                0.00    0.00       8/312         sVarDef::~sVarDef() [282]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [173]
                0.00    0.00     263/312         sArgDef::~sArgDef() [98]
[90]     0.0    0.00    0.00     312         sDef::~sDef() [90]
                0.00    0.00     312/515         sObject::~sObject() [77]
-----------------------------------------------
                0.00    0.00      14/294         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      17/294         sObject::inFunctDef() const [221]
                0.00    0.00     263/294         sRoutDef::typecheck(SymTable*, SymTable*) [171]
[91]     0.0    0.00    0.00     294         sObject::isFunctDef() const [91]
                0.00    0.00     162/369         sQuFunDef::object() const [83]
                0.00    0.00     128/369         sQuOpDef::object() const [82]
                0.00    0.00       4/58          sProcDef::object() const [130]
-----------------------------------------------
                0.00    0.00       1/287         tValue::conv(tType const&) const [518]
                0.00    0.00       1/287         SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00       1/287         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [499]
                0.00    0.00       4/287         sConst::eval(SymTable*, SymTable*, QuHeap*) [319]
                0.00    0.00     280/287         SymTab::put(sDef*, tValue const&) [87]
[92]     0.0    0.00    0.00     287         tValue::tValue(tValue const&) [92]
                0.00    0.00     287/1478        tType::tType(BaseType) [47]
                0.00    0.00     287/316         tValue::assign(tValue const&) [88]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [87]
[93]     0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
                0.00    0.00   13314/21427       sDef::id() const [11]
                0.00    0.00    3403/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [23]
                0.00    0.00    3254/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [18]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [93]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [302]
[94]     0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [94]
-----------------------------------------------
                0.00    0.00       1/264         ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00     263/264         sRoutDef::typecheck(SymTable*, SymTable*) [171]
[95]     0.0    0.00    0.00     264         SymTab::getRef(std::string const&, ObjType*) const [95]
                0.00    0.00     228/362         SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00       1/370         sObject::isValueDef() const [81]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [302]
[96]     0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [96]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [89]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [139]
[97]     0.0    0.00    0.00     263         sArgDef::~sArgDef() [97]
                0.00    0.00     263/263         sArgDef::~sArgDef() [98]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [97]
[98]     0.0    0.00    0.00     263         sArgDef::~sArgDef() [98]
                0.00    0.00     263/312         sDef::~sDef() [90]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [140]
[99]     0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [99]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [171]
[100]    0.0    0.00    0.00     263         tType::isQuReg() const [100]
-----------------------------------------------
                0.00    0.00       8/253         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00      14/253         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00     231/253         sObject::def() const [103]
[101]    0.0    0.00    0.00     253         sObject::isRoutDef() const [101]
                0.00    0.00      90/369         sQuOpDef::object() const [82]
                0.00    0.00      78/78          sStmtList::object() const [124]
                0.00    0.00      74/369         sQuFunDef::object() const [83]
                0.00    0.00      34/34          sDefList::object() const [176]
                0.00    0.00      32/58          sProcDef::object() const [130]
                0.00    0.00      21/21          sIf::object() const [208]
                0.00    0.00      15/15          sFor::object() const [239]
                0.00    0.00       4/8           sCall::object() const [273]
                0.00    0.00       3/9           sMult::object() const [269]
-----------------------------------------------
                0.00    0.00       4/176         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       4/176         yyparse() [302]
                0.00    0.00      24/176         sStmt::sStmt(int) [188]
                0.00    0.00     144/176         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [172]
[102]    0.0    0.00    0.00     176         sObject::setFlag(ObjFlag, int) [102]
-----------------------------------------------
                                 155             sObject::def() const [103]
                0.00    0.00       1/167         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/167         sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00       5/167         sObject::isGlobal() const [297]
                0.00    0.00       6/167         sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00      14/167         sObject::inQuFunDef() const [246]
                0.00    0.00      18/167         sObject::inQuDef() const [231]
                0.00    0.00      19/167         sObject::inFunctDef() const [221]
                0.00    0.00      29/167         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      36/167         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00      36/167         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [170]
[103]    0.0    0.00    0.00     167+155     sObject::def() const [103]
                0.00    0.00     784/881         sObject::parent() const [66]
                0.00    0.00     231/253         sObject::isRoutDef() const [101]
                                 155             sObject::def() const [103]
-----------------------------------------------
                0.00    0.00       1/165         sStmt::isInv() const [511]
                0.00    0.00       3/165         sObject::isBennet() const [344]
                0.00    0.00       5/165         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      28/165         sObject::isCondDef() const [183]
                0.00    0.00      55/165         sObject::isSetRec(ObjFlag) [249]
                0.00    0.00      73/165         sObject::isExtern() const [128]
[104]    0.0    0.00    0.00     165         sObject::isSet(ObjFlag) const [104]
-----------------------------------------------
                0.00    0.00       1/135         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00       1/135         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       2/135         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       3/135         sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       7/135         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      32/135         sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00      36/135         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00      53/135         SymTabComb::getDef(std::string const&) const [182]
[105]    0.0    0.00    0.00     135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00     133/362         SymTab::getentry(SymTable::entry*, std::string const&) const [85]
-----------------------------------------------
                0.00    0.00      41/123         std::list<sObject*, std::allocator<sObject*> >::end() [163]
                0.00    0.00      82/123         std::list<sObject*, std::allocator<sObject*> >::begin() [121]
[106]    0.0    0.00    0.00     123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [106]
-----------------------------------------------
                0.00    0.00       1/115         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       2/115         tType::isConv(tType const&) const [210]
                0.00    0.00       3/115         sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       4/115         sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       7/115         tValue::isQuExpr() const [284]
                0.00    0.00       8/115         sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00      11/115         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      21/115         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      26/115         sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00      32/115         tType::isQuCond() const [177]
[107]    0.0    0.00    0.00     115         tType::isQuExpr() const [107]
-----------------------------------------------
                0.00    0.00       4/109         sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       4/109         sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       4/109         sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00      16/109         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      18/109         sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00      19/109         sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00      44/109         sVar::typecheck(SymTable*, SymTable*) [134]
[108]    0.0    0.00    0.00     109         sExpr::settype(tType const&) [108]
                0.00    0.00     109/842         tType::operator=(tType const&) [67]
-----------------------------------------------
                0.00    0.00       1/96          sExit::typecheck(SymTable*, SymTable*) [473]
                0.00    0.00       1/96          sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       3/96          sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       4/96          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       4/96          sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       5/96          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       6/96          sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       7/96          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00       8/96          sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00      21/96          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      36/96          sBinOp::typecheck(SymTable*, SymTable*) [248]
[109]    0.0    0.00    0.00      96         sExpr::type() [109]
                0.00    0.00      96/531         tType::tType(tType const&) [75]
-----------------------------------------------
                0.00    0.00       4/95          sSubscript::~sSubscript() <cycle 1> [310]
                0.00    0.00       4/95          sUnOp::~sUnOp() [318]
                0.00    0.00       4/95          sListFunct::~sListFunct() <cycle 1> [306]
                0.00    0.00      18/95          sBinOp::~sBinOp() <cycle 1> [225]
                0.00    0.00      21/95          sConst::~sConst() [206]
                0.00    0.00      44/95          sVar::~sVar() [137]
[110]    0.0    0.00    0.00      95         sExpr::~sExpr() [110]
                0.00    0.00      95/515         sObject::~sObject() [77]
-----------------------------------------------
                0.00    0.00       1/95          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      14/95          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      36/95          sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00      44/95          sDefList::typecheck(SymTable*, SymTable*) [140]
[111]    0.0    0.00    0.00      95         sList<sDef>::first(void*&) const [111]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::SymTabComb(SymTable*, SymTable*) [257]
                0.00    0.00      77/87          SymTab::SymTab(int) [125]
[112]    0.0    0.00    0.00      87         SymTable::SymTable() [112]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::~SymTabComb() [259]
                0.00    0.00      77/87          SymTab::~SymTab() [126]
[113]    0.0    0.00    0.00      87         SymTable::~SymTable() [113]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() const [146]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::end() const [144]
[114]    0.0    0.00    0.00      86         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [114]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [119]
[115]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::new_allocator() [115]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::~allocator() [120]
[116]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [116]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
[117]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [117]
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [118]
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [119]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [117]
[118]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [118]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [117]
[119]    0.0    0.00    0.00      82         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [119]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::new_allocator() [115]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
[120]    0.0    0.00    0.00      82         std::allocator<sObject*>::~allocator() [120]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [116]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::front() [164]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::pop_front() [167]
[121]    0.0    0.00    0.00      82         std::list<sObject*, std::allocator<sObject*> >::begin() [121]
                0.00    0.00      82/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [106]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
[122]    0.0    0.00    0.00      82         sObject** std::__addressof<sObject*>(sObject*&) [122]
-----------------------------------------------
                0.00    0.00       1/79          sObject::isConstDef() const [328]
                0.00    0.00       1/79          sObject::isInclude() const [157]
                0.00    0.00       1/79          SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00      24/79          sObject::isDef() const [84]
                0.00    0.00      50/79          sObject::isValueDef() const [81]
[123]    0.0    0.00    0.00      79         sVarDef::object() const [123]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [101]
[124]    0.0    0.00    0.00      78         sStmtList::object() const [124]
-----------------------------------------------
                0.00    0.00       1/77          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       2/77          main [10]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [171]
[125]    0.0    0.00    0.00      77         SymTab::SymTab(int) [125]
                0.00    0.00      77/87          SymTable::SymTable() [112]
-----------------------------------------------
                0.00    0.00       1/77          SymTab::~SymTab() [484]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       2/77          main [10]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [171]
[126]    0.0    0.00    0.00      77         SymTab::~SymTab() [126]
                0.00    0.00      77/87          SymTable::~SymTable() [113]
                0.00    0.00      48/48          SymTab::deltree(SymTable::entry*) [132]
-----------------------------------------------
                0.00    0.00       4/74          sSubscript::sSubscript(sVar*, sExprList*) [308]
                0.00    0.00       4/74          sUnOp::sUnOp(sExpr*) [317]
                0.00    0.00       4/74          sListFunct::sListFunct(ObjType, sExprList*) [304]
                0.00    0.00      18/74          sBinOp::sBinOp(sExpr*, sExpr*) [224]
                0.00    0.00      44/74          sVar::sVar(std::string*) [135]
[127]    0.0    0.00    0.00      74         sExpr::sExpr() [127]
                0.00    0.00      74/515         sObject::sObject(unsigned int) [76]
                0.00    0.00      74/1478        tType::tType(BaseType) [47]
                0.00    0.00      74/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/73          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [495]
                0.00    0.00      36/73          sRoutDef::~sRoutDef() [173]
                0.00    0.00      36/73          sRoutDef::typecheck(SymTable*, SymTable*) [171]
[128]    0.0    0.00    0.00      73         sObject::isExtern() const [128]
                0.00    0.00      73/165         sObject::isSet(ObjFlag) const [104]
-----------------------------------------------
                0.00    0.00       1/63          sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       3/63          sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00      21/63          sConst::sConst(tValue const&) [204]
                0.00    0.00      38/63          sConst::typecheck(SymTable*, SymTable*) [216]
[129]    0.0    0.00    0.00      63         tValue::type() const [129]
                0.00    0.00      63/531         tType::tType(tType const&) [75]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [157]
                0.00    0.00       2/58          sObject::isValueDef() const [81]
                0.00    0.00       3/58          sObject::isProcDef() const [247]
                0.00    0.00       3/58          sObject::isQuOpDef() const [200]
                0.00    0.00       4/58          sObject::isFunctDef() const [91]
                0.00    0.00       6/58          sObject::isDef() const [84]
                0.00    0.00       7/58          sObject::isQuFunDef() const [180]
                0.00    0.00      32/58          sObject::isRoutDef() const [101]
[130]    0.0    0.00    0.00      58         sProcDef::object() const [130]
-----------------------------------------------
                0.00    0.00       2/52          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       2/52          sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00      48/52          sVar::typecheck(SymTable*, SymTable*) [134]
[131]    0.0    0.00    0.00      52         sVar::id() const [131]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [132]
                0.00    0.00      48/48          SymTab::~SymTab() [126]
[132]    0.0    0.00    0.00      48+276     SymTab::deltree(SymTable::entry*) [132]
                0.00    0.00     280/663         tValue::~tValue() [73]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [218]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [236]
                0.00    0.00       3/5           sConstDef::~sConstDef() [294]
                0.00    0.00       1/1           sProcDef::~sProcDef() [493]
                0.00    0.00       1/7           sVarDef::~sVarDef() [281]
                                 276             SymTab::deltree(SymTable::entry*) [132]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [328]
                0.00    0.00       3/48          sObject::isInclude() const [157]
                0.00    0.00      16/48          sObject::isDef() const [84]
                0.00    0.00      26/48          sObject::isValueDef() const [81]
[133]    0.0    0.00    0.00      48         sConstDef::object() const [133]
-----------------------------------------------
                0.00    0.00       2/44          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       4/44          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       4/44          sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       4/44          sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       6/44          sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00      12/44          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      12/44          sBinOp::typecheck(SymTable*, SymTable*) [248]
[134]    0.0    0.00    0.00      44         sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00      48/52          sVar::id() const [131]
                0.00    0.00      44/370         sObject::isValueDef() const [81]
                0.00    0.00      44/372         sDef::type() const [80]
                0.00    0.00      44/109         sExpr::settype(tType const&) [108]
                0.00    0.00      32/135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [182]
                0.00    0.00       4/4           sObject::isConstDef() const [328]
                0.00    0.00       1/5           sObject::isGlobal() const [297]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [302]
[135]    0.0    0.00    0.00      44         sVar::sVar(std::string*) [135]
                0.00    0.00      44/74          sExpr::sExpr() [127]
-----------------------------------------------
                0.00    0.00       2/44          sFor::~sFor() <cycle 2> [359]
                0.00    0.00       4/44          sSubscript::~sSubscript() <cycle 1> [310]
                0.00    0.00       4/44          sUnOp::~sUnOp() [318]
                0.00    0.00       4/44          sVarDef::~sVarDef() [282]
                0.00    0.00      12/44          sBinOp::~sBinOp() <cycle 1> [225]
                0.00    0.00      18/44          sList<sExpr>::~sList() <cycle 1> [195]
[136]    0.0    0.00    0.00      44         sVar::~sVar() [136]
                0.00    0.00      44/44          sVar::~sVar() [137]
-----------------------------------------------
                0.00    0.00      44/44          sVar::~sVar() [136]
[137]    0.0    0.00    0.00      44         sVar::~sVar() [137]
                0.00    0.00      44/95          sExpr::~sExpr() [110]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [141]
[138]    0.0    0.00    0.00      44         sList<sDef>::sList() [138]
                0.00    0.00      44/515         sObject::sObject(unsigned int) [76]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [143]
[139]    0.0    0.00    0.00      44         sList<sDef>::~sList() [139]
                0.00    0.00     263/263         sArgDef::~sArgDef() [97]
                0.00    0.00      44/515         sObject::~sObject() [77]
                0.00    0.00       6/7           sVarDef::~sVarDef() [281]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [171]
[140]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [140]
                0.00    0.00     269/455         sObject::setParent(sObject*) [78]
                0.00    0.00     269/554         sList<sDef>::next(void*&) const [74]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [99]
                0.00    0.00      44/95          sList<sDef>::first(void*&) const [111]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [280]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [302]
[141]    0.0    0.00    0.00      44         sDefList::sDefList() [141]
                0.00    0.00      44/44          sList<sDef>::sList() [138]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [173]
[142]    0.0    0.00    0.00      44         sDefList::~sDefList() [142]
                0.00    0.00      44/44          sDefList::~sDefList() [143]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [142]
[143]    0.0    0.00    0.00      44         sDefList::~sDefList() [143]
                0.00    0.00      44/44          sList<sDef>::~sList() [139]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [145]
[144]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() const [144]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [114]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[145]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::size() const [145]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::begin() const [146]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() const [144]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [149]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [145]
[146]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::begin() const [146]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [114]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [149]
[147]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [147]
                0.00    0.00     826/826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [68]
                0.00    0.00     783/783         std::_List_const_iterator<sObject*>::operator++() [69]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [149]
[148]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [148]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [145]
[149]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [149]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [148]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [147]
-----------------------------------------------
                                  20             quSubString::newsubstring(int, int) <cycle 5> [212]
                                  21             quState::newclone() <cycle 5> [178]
                0.00    0.00       1/21          QuHeap::qualloc(int, BaseType) [480]
[150]    0.0    0.00    0.00      42         quBaseState::newsubstring(int, int) <cycle 5> [150]
                0.00    0.00      63/3212        quState::mapbits() const [25]
                                  21             quSubString::quSubString(int, int, quState&) <cycle 5> [202]
-----------------------------------------------
                0.00    0.00       1/42          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [499]
                0.00    0.00      41/42          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [153]
[151]    0.0    0.00    0.00      42         operator new(unsigned long, void*) [151]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
[152]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [152]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
[153]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [153]
                0.00    0.00      41/42          operator new(unsigned long, void*) [151]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [161]
[154]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [154]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [160]
[155]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [155]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [158]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [248]
[156]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [156]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[157]    0.0    0.00    0.00      41         sObject::isInclude() const [157]
                0.00    0.00      19/369         sQuOpDef::object() const [82]
                0.00    0.00      16/369         sQuFunDef::object() const [83]
                0.00    0.00       3/48          sConstDef::object() const [133]
                0.00    0.00       1/8           sCall::object() const [273]
                0.00    0.00       1/79          sVarDef::object() const [123]
                0.00    0.00       1/58          sProcDef::object() const [130]
-----------------------------------------------
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [155]
[158]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [158]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [164]
[159]    0.0    0.00    0.00      41         std::_List_iterator<sObject*>::operator*() const [159]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
[160]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [160]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [155]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
[161]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [161]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [154]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [166]
[162]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [160]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [122]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [117]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [120]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [153]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [168]
[163]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::end() [163]
                0.00    0.00      41/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [106]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[164]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::front() [164]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [121]
                0.00    0.00      41/41          std::_List_iterator<sObject*>::operator*() const [159]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [167]
[165]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [122]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [117]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [120]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [152]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [161]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [168]
[166]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [166]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [162]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[167]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::pop_front() [167]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [121]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [165]
-----------------------------------------------
                0.00    0.00      41/41          yyparse() [302]
[168]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [168]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::end() [163]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [166]
-----------------------------------------------
                0.00    0.00       2/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      35/37          sCall::typecheck(SymTable*, SymTable*) [241]
[169]    0.0    0.00    0.00      37         sRoutDef::args() [169]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[170]    0.0    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [170]
                0.00    0.00      36/167         sObject::def() const [103]
                0.00    0.00      36/353         tValue::tValue() [86]
                0.00    0.00      36/324         SymTab::put(sDef*, tValue const&) [87]
                0.00    0.00      36/663         tValue::~tValue() [73]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[171]    0.0    0.00    0.00      36         sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00     734/21427       sDef::id() const [11]
                0.00    0.00     435/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [21]
                0.00    0.00     275/353         tValue::tValue() [86]
                0.00    0.00     275/324         SymTab::put(sDef*, tValue const&) [87]
                0.00    0.00     275/663         tValue::~tValue() [73]
                0.00    0.00     263/264         SymTab::getRef(std::string const&, ObjType*) const [95]
                0.00    0.00     263/294         sObject::isFunctDef() const [91]
                0.00    0.00     263/372         sDef::type() const [80]
                0.00    0.00     263/263         tType::isQuReg() const [100]
                0.00    0.00     263/554         sList<sDef>::next(void*&) const [74]
                0.00    0.00      72/77          SymTab::SymTab(int) [125]
                0.00    0.00      72/77          SymTab::~SymTab() [126]
                0.00    0.00      52/455         sObject::setParent(sObject*) [78]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [140]
                0.00    0.00      36/135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00      36/167         sObject::def() const [103]
                0.00    0.00      36/95          sList<sDef>::first(void*&) const [111]
                0.00    0.00      36/73          sObject::isExtern() const [128]
                0.00    0.00       8/253         sObject::isRoutDef() const [101]
                0.00    0.00       8/28          sObject::isCondDef() const [183]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [257]
                0.00    0.00       8/30          sObject::isQuFunDef() const [180]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [258]
                0.00    0.00       3/3           sObject::isBennet() const [344]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [492]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [235]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [217]
[172]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [172]
                0.00    0.00     144/176         sObject::setFlag(ObjFlag, int) [102]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [89]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [494]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [237]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [219]
[173]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [173]
                0.00    0.00      44/44          sDefList::~sDefList() [142]
                0.00    0.00      36/73          sObject::isExtern() const [128]
                0.00    0.00      36/312         sDef::~sDef() [90]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [228]
-----------------------------------------------
                0.00    0.00       1/36          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       4/36          sListFunct::sListFunct(ObjType, sExprList*) [304]
                0.00    0.00       4/36          sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       6/36          sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00      21/36          sCall::typecheck(SymTable*, SymTable*) [241]
[174]    0.0    0.00    0.00      36         sList<sExpr>::next(void*&) const [174]
-----------------------------------------------
                0.00    0.00       1/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       4/35          sSubscript::sSubscript(sVar*, sExprList*) [308]
                0.00    0.00       4/35          sListFunct::sListFunct(ObjType, sExprList*) [304]
                0.00    0.00       4/35          sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       8/35          sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00      14/35          sCall::typecheck(SymTable*, SymTable*) [241]
[175]    0.0    0.00    0.00      35         sList<sExpr>::first(void*&) const [175]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [101]
[176]    0.0    0.00    0.00      34         sDefList::object() const [176]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00      14/32          tType::isCond() const [245]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
[177]    0.0    0.00    0.00      32         tType::isQuCond() const [177]
                0.00    0.00      32/115         tType::isQuExpr() const [107]
-----------------------------------------------
                                  21             quSubString::quSubString(int, int, quState&) <cycle 5> [202]
                0.00    0.00       1/21          tValue::tValue(quState&, BaseType) [487]
                0.00    0.00       1/21          sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       8/21          tValue::assign(tValue const&) [88]
[178]    0.0    0.00    0.00      31         quState::newclone() <cycle 5> [178]
                0.00    0.00      31/3212        quState::mapbits() const [25]
                                  21             quBaseState::newsubstring(int, int) <cycle 5> [150]
                                  10             quSubString::newsubstring(int, int) <cycle 5> [212]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [248]
[179]    0.0    0.00    0.00      30         tType::isNumber() const [179]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00       9/30          sObject::isQuDef() const [232]
                0.00    0.00      13/30          sObject::inQuFunDef() const [246]
[180]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [180]
                0.00    0.00      13/369         sQuFunDef::object() const [83]
                0.00    0.00      10/369         sQuOpDef::object() const [82]
                0.00    0.00       7/58          sProcDef::object() const [130]
-----------------------------------------------
                0.00    0.00       1/29          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       2/29          sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       2/29          sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/29          sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00      21/29          sConst::sConst(tValue const&) [204]
[181]    0.0    0.00    0.00      29         tValue::operator=(tValue const&) [181]
                0.00    0.00      29/692         tValue::delpointer() [70]
                0.00    0.00      29/316         tValue::assign(tValue const&) [88]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [134]
[182]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [182]
                0.00    0.00      53/135         SymTab::getDef(std::string const&) const [105]
-----------------------------------------------
                0.00    0.00       1/28          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [477]
                0.00    0.00       1/28          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       4/28          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       8/28          sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00      14/28          sCall::typecheck(SymTable*, SymTable*) [241]
[183]    0.0    0.00    0.00      28         sObject::isCondDef() const [183]
                0.00    0.00      28/165         sObject::isSet(ObjFlag) const [104]
-----------------------------------------------
                0.00    0.00      27/27          yyparse() [302]
[184]    0.0    0.00    0.00      27         sList<sExpr>::append(sExpr*) [184]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [34]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [256]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [233]
[185]    0.0    0.00    0.00      26         yy_load_buffer_state() [185]
-----------------------------------------------
                0.00    0.00       2/26          QuHeap::QuHeap(int, int) [482]
                0.00    0.00      24/26          operator~(bitvec const&) [190]
[186]    0.0    0.00    0.00      26         bitvec::qnot() [186]
-----------------------------------------------
                0.00    0.00      25/25          sCall::typecheck(SymTable*, SymTable*) [241]
[187]    0.0    0.00    0.00      25         tType::isQuConst() const [187]
-----------------------------------------------
                0.00    0.00       1/24          sExit::sExit(sExpr*) [474]
                0.00    0.00       2/24          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [357]
                0.00    0.00       7/24          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [277]
                0.00    0.00      14/24          sCall::sCall(std::string*, sExprList*, int) [242]
[188]    0.0    0.00    0.00      24         sStmt::sStmt(int) [188]
                0.00    0.00      24/515         sObject::sObject(unsigned int) [76]
                0.00    0.00      24/176         sObject::setFlag(ObjFlag, int) [102]
-----------------------------------------------
                0.00    0.00       1/24          sExit::~sExit() [476]
                0.00    0.00       2/24          sFor::~sFor() <cycle 2> [359]
                0.00    0.00       7/24          sIf::~sIf() <cycle 2> [279]
                0.00    0.00      14/24          sCall::~sCall() [244]
[189]    0.0    0.00    0.00      24         sStmt::~sStmt() [189]
                0.00    0.00      24/515         sObject::~sObject() [77]
-----------------------------------------------
                0.00    0.00       1/24          QuHeap::qualloc(int, BaseType) [480]
                0.00    0.00      10/24          opElementary::apply(quState&) const [266]
                0.00    0.00      13/24          quState::mapmask() const [250]
[190]    0.0    0.00    0.00      24         operator~(bitvec const&) [190]
                0.00    0.00      24/7199        bitvec::bitvec(bitvec const&) [14]
                0.00    0.00      24/26          bitvec::qnot() [186]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [302]
[191]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [191]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
[192]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [192]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00      14/23          tType::isCond() const [245]
[193]    0.0    0.00    0.00      23         tType::isBoolean() const [193]
-----------------------------------------------
                0.00    0.00      22/22          sExprList::sExprList() [197]
[194]    0.0    0.00    0.00      22         sList<sExpr>::sList() [194]
                0.00    0.00      22/515         sObject::sObject(unsigned int) [76]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [199]
[195]    0.0    0.00    0.00      22         sList<sExpr>::~sList() <cycle 1> [195]
                0.00    0.00      22/515         sObject::~sObject() [77]
                0.00    0.00      18/44          sVar::~sVar() [136]
                                   4             sSubscript::~sSubscript() <cycle 1> [309]
                                   3             sMult::~sMult() <cycle 1> [286]
                                   2             sConcat::~sConcat() <cycle 1> [368]
-----------------------------------------------
                0.00    0.00       1/22          quBaseState::quBaseState(int, int) [459]
                0.00    0.00      21/22          quSubState::quSubState(int) [201]
[196]    0.0    0.00    0.00      22         quState::quState(int) [196]
-----------------------------------------------
                0.00    0.00      22/22          yyparse() [302]
[197]    0.0    0.00    0.00      22         sExprList::sExprList() [197]
                0.00    0.00      22/22          sList<sExpr>::sList() [194]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [310]
                                   4             sListFunct::~sListFunct() <cycle 1> [306]
                0.00    0.00      14/23          sCall::~sCall() [244]
[198]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [198]
                                  22             sExprList::~sExprList() <cycle 1> [199]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [198]
[199]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [199]
                                  22             sList<sExpr>::~sList() <cycle 1> [195]
-----------------------------------------------
                0.00    0.00       4/22          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      18/22          sObject::isQuDef() const [232]
[200]    0.0    0.00    0.00      22         sObject::isQuOpDef() const [200]
                0.00    0.00      10/369         sQuFunDef::object() const [83]
                0.00    0.00       9/369         sQuOpDef::object() const [82]
                0.00    0.00       3/58          sProcDef::object() const [130]
-----------------------------------------------
                0.00    0.00      21/21          quSubString::quSubString(int, int, quState&) <cycle 5> [202]
[201]    0.0    0.00    0.00      21         quSubState::quSubState(int) [201]
                0.00    0.00      21/22          quState::quState(int) [196]
-----------------------------------------------
                                  21             quBaseState::newsubstring(int, int) <cycle 5> [150]
[202]    0.0    0.00    0.00      21         quSubString::quSubString(int, int, quState&) <cycle 5> [202]
                0.00    0.00      21/21          quSubState::quSubState(int) [201]
                                  21             quState::newclone() <cycle 5> [178]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [204]
[203]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [203]
                0.00    0.00      21/515         sObject::sObject(unsigned int) [76]
                0.00    0.00      21/1478        tType::tType(BaseType) [47]
                0.00    0.00      21/842         tType::operator=(tType const&) [67]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00      19/21          yylex() [34]
[204]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [204]
                0.00    0.00      21/63          tValue::type() const [129]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [203]
                0.00    0.00      21/353         tValue::tValue() [86]
                0.00    0.00      21/29          tValue::operator=(tValue const&) [181]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [476]
                0.00    0.00       1/21          sVarDef::~sVarDef() [282]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [359]
                0.00    0.00       5/21          sConstDef::~sConstDef() [295]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [225]
[205]    0.0    0.00    0.00      21         sConst::~sConst() [205]
                0.00    0.00      21/21          sConst::~sConst() [206]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [205]
[206]    0.0    0.00    0.00      21         sConst::~sConst() [206]
                0.00    0.00      21/95          sExpr::~sExpr() [110]
                0.00    0.00      21/663         tValue::~tValue() [73]
-----------------------------------------------
                0.00    0.00       1/21          quBaseState::~quBaseState() [461]
                0.00    0.00      20/21          quSubState::~quSubState() [211]
[207]    0.0    0.00    0.00      21         quState::~quState() [207]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [101]
[208]    0.0    0.00    0.00      21         sIf::object() const [208]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       2/21          tValue::isInt() const [381]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       8/21          tType::isOrdered() const [275]
[209]    0.0    0.00    0.00      21         tType::isInt() const [209]
-----------------------------------------------
                0.00    0.00      21/21          sCall::typecheck(SymTable*, SymTable*) [241]
[210]    0.0    0.00    0.00      21         tType::isConv(tType const&) const [210]
                0.00    0.00       2/115         tType::isQuExpr() const [107]
-----------------------------------------------
                0.00    0.00      20/20          quSubString::~quSubString() [214]
[211]    0.0    0.00    0.00      20         quSubState::~quSubState() [211]
                0.00    0.00      20/20          quBaseState::isbasestate() const [215]
                0.00    0.00      20/21          quState::~quState() [207]
-----------------------------------------------
                                  10             quState::newclone() <cycle 5> [178]
                0.00    0.00      10/21          ext_bit(sRoutDef const*, SymTable const*, int) [452]
[212]    0.0    0.00    0.00      20         quSubString::newsubstring(int, int) <cycle 5> [212]
                                  20             quBaseState::newsubstring(int, int) <cycle 5> [150]
-----------------------------------------------
                0.00    0.00      10/20          tValue::delpointer() [70]
                0.00    0.00      10/20          ext_bit(sRoutDef const*, SymTable const*, int) [452]
[213]    0.0    0.00    0.00      20         quSubString::~quSubString() [213]
                0.00    0.00      20/20          quSubString::~quSubString() [214]
-----------------------------------------------
                0.00    0.00      20/20          quSubString::~quSubString() [213]
[214]    0.0    0.00    0.00      20         quSubString::~quSubString() [214]
                0.00    0.00      20/20          quSubState::~quSubState() [211]
-----------------------------------------------
                0.00    0.00      20/20          quSubState::~quSubState() [211]
[215]    0.0    0.00    0.00      20         quBaseState::isbasestate() const [215]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [473]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [248]
[216]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00      38/63          tValue::type() const [129]
                0.00    0.00      19/19          tType::isDefined() const [220]
                0.00    0.00      19/109         sExpr::settype(tType const&) [108]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [302]
[217]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [217]
                0.00    0.00      19/1478        tType::tType(BaseType) [47]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [172]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [132]
[218]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [218]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [219]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [218]
[219]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [219]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [173]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [216]
[220]    0.0    0.00    0.00      19         tType::isDefined() const [220]
-----------------------------------------------
                0.00    0.00       5/19          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      14/19          sCall::typecheck(SymTable*, SymTable*) [241]
[221]    0.0    0.00    0.00      19         sObject::inFunctDef() const [221]
                0.00    0.00      19/167         sObject::def() const [103]
                0.00    0.00      17/294         sObject::isFunctDef() const [91]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [227]
[222]    0.0    0.00    0.00      18         sList<sStmt>::sList() [222]
                0.00    0.00      18/515         sObject::sObject(unsigned int) [76]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [229]
[223]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [223]
                0.00    0.00      18/515         sObject::~sObject() [77]
                0.00    0.00      13/14          sCall::~sCall() [243]
                0.00    0.00       1/1           sExit::~sExit() [475]
                                   7             sIf::~sIf() <cycle 2> [278]
                                   2             sFor::~sFor() <cycle 2> [358]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [464]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [360]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [367]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [336]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [313]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [285]
[224]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [224]
                0.00    0.00      18/74          sExpr::sExpr() [127]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [369]
                                   4             sLess::~sLess() <cycle 1> [315]
                                   6             sMult::~sMult() <cycle 1> [287]
                0.00    0.00       1/23          sOr::~sOr() [466]
                0.00    0.00       2/23          sSub::~sSub() [362]
                0.00    0.00       3/23          sEqual::~sEqual() [338]
[225]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [225]
                0.00    0.00      18/95          sExpr::~sExpr() [110]
                0.00    0.00      12/21          sConst::~sConst() [205]
                0.00    0.00      12/44          sVar::~sVar() [136]
                0.00    0.00       4/4           sLength::~sLength() [321]
                                   3             sMult::~sMult() <cycle 1> [286]
                                   3             sListFunct::~sListFunct() <cycle 1> [305]
                                   2             sLess::~sLess() <cycle 1> [314]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [171]
[226]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
                0.00    0.00      23/455         sObject::setParent(sObject*) [78]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [192]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [230]
                0.00    0.00      13/14          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [473]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [302]
[227]    0.0    0.00    0.00      18         sStmtList::sStmtList() [227]
                0.00    0.00      18/18          sList<sStmt>::sList() [222]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [359]
                                   8             sIf::~sIf() <cycle 2> [279]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [173]
[228]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [228]
                                  18             sStmtList::~sStmtList() <cycle 2> [229]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [228]
[229]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [229]
                                  18             sList<sStmt>::~sList() <cycle 2> [223]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
[230]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [230]
-----------------------------------------------
                0.00    0.00       4/18          sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      14/18          sCall::typecheck(SymTable*, SymTable*) [241]
[231]    0.0    0.00    0.00      18         sObject::inQuDef() const [231]
                0.00    0.00      18/167         sObject::def() const [103]
                0.00    0.00      17/18          sObject::isQuDef() const [232]
-----------------------------------------------
                0.00    0.00       1/18          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      17/18          sObject::inQuDef() const [231]
[232]    0.0    0.00    0.00      18         sObject::isQuDef() const [232]
                0.00    0.00      18/22          sObject::isQuOpDef() const [200]
                0.00    0.00       9/30          sObject::isQuFunDef() const [180]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [355]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [300]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [252]
[233]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [233]
                0.00    0.00      15/26          yy_load_buffer_state() [185]
-----------------------------------------------
                0.00    0.00       2/16          termlist::termlist(int, int) [371]
                0.00    0.00       3/16          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
                0.00    0.00      11/16          quBaseState::opbegin() [254]
[234]    0.0    0.00    0.00      16         termlist::clear() [234]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [302]
[235]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [235]
                0.00    0.00      16/1478        tType::tType(BaseType) [47]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [172]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [132]
[236]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [236]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [237]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [236]
[237]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [237]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [173]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [34]
[238]    0.0    0.00    0.00      15         tValue::tValue(long) [238]
                0.00    0.00      15/1478        tType::tType(BaseType) [47]
                0.00    0.00      15/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [101]
[239]    0.0    0.00    0.00      15         sFor::object() const [239]
-----------------------------------------------
                0.00    0.00       1/15          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      14/15          sCall::typecheck(SymTable*, SymTable*) [241]
[240]    0.0    0.00    0.00      15         sCall::id() const [240]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
                0.00    0.00      13/14          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
[241]    0.0    0.00    0.00      14         sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00      42/842         tType::operator=(tType const&) [67]
                0.00    0.00      37/372         sDef::type() const [80]
                0.00    0.00      35/37          sRoutDef::args() [169]
                0.00    0.00      28/1478        tType::tType(BaseType) [47]
                0.00    0.00      25/25          tType::isQuConst() const [187]
                0.00    0.00      21/455         sObject::setParent(sObject*) [78]
                0.00    0.00      21/96          sExpr::type() [109]
                0.00    0.00      21/21          tType::isConv(tType const&) const [210]
                0.00    0.00      21/115         tType::isQuExpr() const [107]
                0.00    0.00      21/36          sList<sExpr>::next(void*&) const [174]
                0.00    0.00      21/554         sList<sDef>::next(void*&) const [74]
                0.00    0.00      16/109         sExpr::settype(tType const&) [108]
                0.00    0.00      14/15          sCall::id() const [240]
                0.00    0.00      14/253         sObject::isRoutDef() const [101]
                0.00    0.00      14/294         sObject::isFunctDef() const [91]
                0.00    0.00      14/19          sObject::inFunctDef() const [221]
                0.00    0.00      14/18          sObject::inQuDef() const [231]
                0.00    0.00      14/28          sObject::isCondDef() const [183]
                0.00    0.00      14/14          sObject::inQuFunDef() const [246]
                0.00    0.00      14/35          sList<sExpr>::first(void*&) const [175]
                0.00    0.00      14/95          sList<sDef>::first(void*&) const [111]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [182]
                0.00    0.00      13/13          sObject::isSetRec(ObjFlag) [249]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00      10/14          sObject::isProcDef() const [247]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00       4/22          sObject::isQuOpDef() const [200]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [105]
-----------------------------------------------
                0.00    0.00      14/14          yyparse() [302]
[242]    0.0    0.00    0.00      14         sCall::sCall(std::string*, sExprList*, int) [242]
                0.00    0.00      14/24          sStmt::sStmt(int) [188]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
                0.00    0.00      13/14          sList<sStmt>::~sList() <cycle 2> [223]
[243]    0.0    0.00    0.00      14         sCall::~sCall() [243]
                0.00    0.00      14/14          sCall::~sCall() [244]
-----------------------------------------------
                0.00    0.00      14/14          sCall::~sCall() [243]
[244]    0.0    0.00    0.00      14         sCall::~sCall() [244]
                0.00    0.00      14/23          sExprList::~sExprList() <cycle 1> [198]
                0.00    0.00      14/24          sStmt::~sStmt() [189]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [248]
[245]    0.0    0.00    0.00      14         tType::isCond() const [245]
                0.00    0.00      14/32          tType::isQuCond() const [177]
                0.00    0.00      14/23          tType::isBoolean() const [193]
-----------------------------------------------
                0.00    0.00      14/14          sCall::typecheck(SymTable*, SymTable*) [241]
[246]    0.0    0.00    0.00      14         sObject::inQuFunDef() const [246]
                0.00    0.00      14/167         sObject::def() const [103]
                0.00    0.00      13/30          sObject::isQuFunDef() const [180]
-----------------------------------------------
                0.00    0.00       1/14          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       3/14          sObject::isGlobal() const [297]
                0.00    0.00      10/14          sCall::typecheck(SymTable*, SymTable*) [241]
[247]    0.0    0.00    0.00      14         sObject::isProcDef() const [247]
                0.00    0.00       6/369         sQuOpDef::object() const [82]
                0.00    0.00       5/369         sQuFunDef::object() const [83]
                0.00    0.00       3/58          sProcDef::object() const [130]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
[248]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00      52/1478        tType::tType(BaseType) [47]
                0.00    0.00      36/455         sObject::setParent(sObject*) [78]
                0.00    0.00      36/96          sExpr::type() [109]
                0.00    0.00      36/842         tType::operator=(tType const&) [67]
                0.00    0.00      36/1052        tType::ord() const [49]
                0.00    0.00      30/30          tType::isNumber() const [179]
                0.00    0.00      26/115         tType::isQuExpr() const [107]
                0.00    0.00      25/41          tType::operator==(BaseType) const [156]
                0.00    0.00      18/109         sExpr::settype(tType const&) [108]
                0.00    0.00      14/14          tType::isCond() const [245]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       8/8           tType::isOrdered() const [275]
                0.00    0.00       6/9           sMult::object() const [269]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       4/4           sLess::object() const [326]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       3/3           sEqual::object() const [342]
                0.00    0.00       2/2           sSub::object() const [378]
                0.00    0.00       2/2           sConcat::object() const [383]
                0.00    0.00       2/23          tType::isBoolean() const [193]
                0.00    0.00       2/7           tType::operator==(tType const&) const [283]
                0.00    0.00       1/1           sOr::object() const [510]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [248]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [249]
                0.00    0.00      13/13          sCall::typecheck(SymTable*, SymTable*) [241]
[249]    0.0    0.00    0.00      13+42      sObject::isSetRec(ObjFlag) [249]
                0.00    0.00      97/881         sObject::parent() const [66]
                0.00    0.00      55/165         sObject::isSet(ObjFlag) const [104]
                                  42             sObject::isSetRec(ObjFlag) [249]
-----------------------------------------------
                0.00    0.00       1/13          QuHeap::qualloc(int, BaseType) [480]
                0.00    0.00       2/13          sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00      10/13          opElementary::apply(quState&) const [266]
[250]    0.0    0.00    0.00      13         quState::mapmask() const [250]
                0.00    0.00      26/13929       bitvec::~bitvec() [12]
                0.00    0.00      13/3212        quState::mapbits() const [25]
                0.00    0.00      13/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00      13/24          operator~(bitvec const&) [190]
                0.00    0.00      13/2059        quSubString::unmap(bitvec const&) const [38]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [34]
[251]    0.0    0.00    0.00      12         yy_get_next_buffer() [251]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [256]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [427]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [256]
[252]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [252]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [233]
-----------------------------------------------
                0.00    0.00       1/11          quBaseState::reset(bitvec const&) [458]
                0.00    0.00      10/11          quSubState::opend() [260]
[253]    0.0    0.00    0.00      11         quBaseState::opend() [253]
-----------------------------------------------
                0.00    0.00       1/11          quBaseState::reset(bitvec const&) [458]
                0.00    0.00      10/11          quSubState::opbegin() [261]
[254]    0.0    0.00    0.00      11         quBaseState::opbegin() [254]
                0.00    0.00      11/16          termlist::clear() [234]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [453]
                0.00    0.00      10/11          openqclfile(std::string) [301]
[255]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [255]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [355]
                0.00    0.00       4/10          yy_get_next_buffer() [251]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [300]
[256]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [256]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [252]
                0.00    0.00      10/26          yy_load_buffer_state() [185]
                0.00    0.00       1/1           yyensure_buffer_stack() [455]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [427]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [171]
[257]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [257]
                0.00    0.00      10/87          SymTable::SymTable() [112]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [171]
[258]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [258]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [259]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [258]
[259]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [259]
                0.00    0.00      10/87          SymTable::~SymTable() [113]
-----------------------------------------------
                0.00    0.00      10/10          opElementary::apply(quState&) const [266]
[260]    0.0    0.00    0.00      10         quSubState::opend() [260]
                0.00    0.00      10/11          quBaseState::opend() [253]
-----------------------------------------------
                0.00    0.00      10/10          opElementary::apply(quState&) const [266]
[261]    0.0    0.00    0.00      10         quSubState::opbegin() [261]
                0.00    0.00      10/11          quBaseState::opbegin() [254]
-----------------------------------------------
                0.00    0.00      10/10          opElementary::apply(quState&) const [266]
[262]    0.0    0.00    0.00      10         terminfo::terminfo() [262]
                0.00    0.00      10/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00      10/2576        term::term() [33]
-----------------------------------------------
                0.00    0.00      10/10          tValue::delpointer() [70]
[263]    0.0    0.00    0.00      10         quSubState::isbasestate() const [263]
-----------------------------------------------
                0.00    0.00      10/10          opElementary::apply(quState&) const [266]
[264]    0.0    0.00    0.00      10         quSubState::baseterms() const [264]
                0.00    0.00      10/10          quBaseState::baseterms() const [265]
-----------------------------------------------
                0.00    0.00      10/10          quSubState::baseterms() const [264]
[265]    0.0    0.00    0.00      10         quBaseState::baseterms() const [265]
                0.00    0.00      10/10          termlist::nterms() const [268]
-----------------------------------------------
                0.00    0.00      10/10          ext_bit(sRoutDef const*, SymTable const*, int) [452]
[266]    0.0    0.00    0.00      10         opElementary::apply(quState&) const [266]
                0.00    0.00    2076/13929       bitvec::~bitvec() [12]
                0.00    0.00    2046/11257       term::vect() const [13]
                0.00    0.00    1033/7180        bitvec::operator=(bitvec const&) [16]
                0.00    0.00    1033/1033        terminfo::~terminfo() [50]
                0.00    0.00    1023/1023        terminfo::terminfo(terminfo const&) [56]
                0.00    0.00    1023/1023        quSubState::baseterm(int) const [57]
                0.00    0.00    1023/1023        term::operator=(term const&) [55]
                0.00    0.00    1023/1024        operator&(bitvec const&, bitvec const&) [53]
                0.00    0.00    1023/1023        quSubString::map(bitvec const&) const [60]
                0.00    0.00    1023/4094        term::setvect(bitvec const&) [22]
                0.00    0.00    1023/1023        opMatrix::addterms(terminfo const&) const [63]
                0.00    0.00      10/10          terminfo::terminfo() [262]
                0.00    0.00      10/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00      10/3212        quState::mapbits() const [25]
                0.00    0.00      10/10          quSubState::opbegin() [261]
                0.00    0.00      10/13          quState::mapmask() const [250]
                0.00    0.00      10/24          operator~(bitvec const&) [190]
                0.00    0.00      10/10          quSubState::baseterms() const [264]
                0.00    0.00      10/10          quSubState::opend() [260]
-----------------------------------------------
                0.00    0.00      10/10          QuHeap::qualloc(int, BaseType) [480]
[267]    0.0    0.00    0.00      10         bitvec::operator[](int) const [267]
-----------------------------------------------
                0.00    0.00      10/10          quBaseState::baseterms() const [265]
[268]    0.0    0.00    0.00      10         termlist::nterms() const [268]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [101]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [248]
[269]    0.0    0.00    0.00       9         sMult::object() const [269]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [34]
[270]    0.0    0.00    0.00       8         yy_get_previous_state() [270]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [430]
                0.00    0.00       7/8           yyparse() [302]
[271]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [271]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [89]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [303]
[272]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00       8/35          sList<sExpr>::first(void*&) const [175]
                0.00    0.00       6/455         sObject::setParent(sObject*) [78]
                0.00    0.00       6/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       6/36          sList<sExpr>::next(void*&) const [174]
-----------------------------------------------
                0.00    0.00       1/8           sObject::isDef() const [84]
                0.00    0.00       1/8           sObject::isInclude() const [157]
                0.00    0.00       2/8           sObject::isStmt() const [520]
                0.00    0.00       4/8           sObject::isRoutDef() const [101]
[273]    0.0    0.00    0.00       8         sCall::object() const [273]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [325]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [303]
[274]    0.0    0.00    0.00       8         sList<sExpr>::n() const [274]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [248]
[275]    0.0    0.00    0.00       8         tType::isOrdered() const [275]
                0.00    0.00       8/21          tType::isInt() const [209]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
[276]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00      15/455         sObject::setParent(sObject*) [78]
                0.00    0.00      14/32          tType::isQuCond() const [177]
                0.00    0.00       7/23          tType::isBoolean() const [193]
                0.00    0.00       7/96          sExpr::type() [109]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [303]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [302]
[277]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [277]
                0.00    0.00       7/24          sStmt::sStmt(int) [188]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [223]
[278]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [278]
                                   7             sIf::~sIf() <cycle 2> [279]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [278]
[279]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [279]
                0.00    0.00       7/24          sStmt::~sStmt() [189]
                0.00    0.00       3/3           sEqual::~sEqual() [337]
                0.00    0.00       2/23          sLess::~sLess() <cycle 1> [314]
                0.00    0.00       1/23          sListFunct::~sListFunct() <cycle 1> [305]
                0.00    0.00       1/1           sOr::~sOr() [465]
                                   8             sStmtList::~sStmtList() <cycle 2> [228]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [140]
[280]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00      29/167         sObject::def() const [103]
                0.00    0.00      23/372         sDef::type() const [80]
                0.00    0.00      16/41          tType::operator==(BaseType) const [156]
                0.00    0.00      11/115         tType::isQuExpr() const [107]
                0.00    0.00       7/21427       sDef::id() const [11]
                0.00    0.00       7/135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00       6/353         tValue::tValue() [86]
                0.00    0.00       6/324         SymTab::put(sDef*, tValue const&) [87]
                0.00    0.00       6/663         tValue::~tValue() [73]
                0.00    0.00       5/455         sObject::setParent(sObject*) [78]
                0.00    0.00       5/19          sObject::inFunctDef() const [221]
                0.00    0.00       5/96          sExpr::type() [109]
                0.00    0.00       5/165         sObject::isSet(ObjFlag) const [104]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       4/18          sObject::inQuDef() const [231]
                0.00    0.00       4/28          sObject::isCondDef() const [183]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [102]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00       1/21          tType::isInt() const [209]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [132]
                0.00    0.00       6/7           sList<sDef>::~sList() [139]
[281]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [281]
                0.00    0.00       7/7           sVarDef::~sVarDef() [282]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [281]
[282]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [282]
                0.00    0.00       8/312         sDef::~sDef() [90]
                0.00    0.00       4/44          sVar::~sVar() [136]
                0.00    0.00       1/21          sConst::~sConst() [205]
-----------------------------------------------
                0.00    0.00       1/7           tValue::conv(tType const&) const [518]
                0.00    0.00       1/7           sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       2/7           sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00       3/7           sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
[283]    0.0    0.00    0.00       7         tType::operator==(tType const&) const [283]
-----------------------------------------------
                0.00    0.00       1/7           ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00       1/7           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       5/7           tValue::qustate() const [296]
[284]    0.0    0.00    0.00       7         tValue::isQuExpr() const [284]
                0.00    0.00       7/115         tType::isQuExpr() const [107]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [302]
[285]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [285]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [224]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [225]
                                   3             sList<sExpr>::~sList() <cycle 1> [195]
[286]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [286]
                                   6             sMult::~sMult() <cycle 1> [287]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [286]
[287]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [287]
                                   6             sBinOp::~sBinOp() <cycle 1> [225]
-----------------------------------------------
                0.00    0.00       6/6           tValue::isError() const [289]
[288]    0.0    0.00    0.00       6         tType::isError() const [288]
-----------------------------------------------
                0.00    0.00       1/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       2/6           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/6           sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
[289]    0.0    0.00    0.00       6         tValue::isError() const [289]
                0.00    0.00       6/6           tType::isError() const [288]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [301]
[290]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [290]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [340]
[291]    0.0    0.00    0.00       5         sDef::settype(tType const&) [291]
                0.00    0.00       5/842         tType::operator=(tType const&) [67]
-----------------------------------------------
                0.00    0.00       2/5           termlist::termlist(int, int) [371]
                0.00    0.00       3/5           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[292]    0.0    0.00    0.00       5         termlist::newlist() [292]
                0.00    0.00    2560/2576        term::term() [33]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       3/5           yyparse() [302]
[293]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [293]
                0.00    0.00       5/1478        tType::tType(BaseType) [47]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [89]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [132]
[294]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [294]
                0.00    0.00       5/5           sConstDef::~sConstDef() [295]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [294]
[295]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [295]
                0.00    0.00       5/21          sConst::~sConst() [205]
                0.00    0.00       5/312         sDef::~sDef() [90]
-----------------------------------------------
                0.00    0.00       1/5           ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/5           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[296]    0.0    0.00    0.00       5         tValue::qustate() const [296]
                0.00    0.00       5/7           tValue::isQuExpr() const [284]
-----------------------------------------------
                0.00    0.00       1/5           sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/5           sObject::isLocal() const [343]
[297]    0.0    0.00    0.00       5         sObject::isGlobal() const [297]
                0.00    0.00       5/167         sObject::def() const [103]
                0.00    0.00       3/14          sObject::isProcDef() const [247]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [299]
[298]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [298]
-----------------------------------------------
                0.00    0.00       1/5           main [10]
                0.00    0.00       4/5           openqclfile(std::string) [301]
[299]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [299]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [298]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [354]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [351]
[300]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [300]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [233]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [256]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [351]
[301]    0.0    0.00    0.00       4         openqclfile(std::string) [301]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [255]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [290]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [299]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [354]
                0.00    0.00       2/4           parseobj() [353]
[302]    0.0    0.00    0.00       4         yyparse() [302]
                0.00    0.00    2338/2338        yylex() [34]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [94]
                0.00    0.00     268/1478        tType::tType(BaseType) [47]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [96]
                0.00    0.00      44/44          sVar::sVar(std::string*) [135]
                0.00    0.00      44/44          sDefList::sDefList() [141]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [168]
                0.00    0.00      27/27          sList<sExpr>::append(sExpr*) [184]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [191]
                0.00    0.00      22/22          sExprList::sExprList() [197]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [217]
                0.00    0.00      18/18          sStmtList::sStmtList() [227]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [235]
                0.00    0.00      14/14          sCall::sCall(std::string*, sExprList*, int) [242]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [271]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [277]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [285]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [102]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [308]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [320]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [313]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [304]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [293]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [336]
                0.00    0.00       2/2           objlist::objlist() [366]
                0.00    0.00       2/2           tType::tType(BaseType, int) [363]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [357]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [360]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [367]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [492]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [474]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [464]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [276]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [248]
[303]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [303]
                0.00    0.00       8/1478        tType::tType(BaseType) [47]
                0.00    0.00       4/353         tValue::tValue() [86]
                0.00    0.00       4/455         sObject::setParent(sObject*) [78]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00       4/8           sList<sExpr>::n() const [274]
                0.00    0.00       4/4           sListFunct::object() const [324]
                0.00    0.00       4/109         sExpr::settype(tType const&) [108]
                0.00    0.00       4/663         tValue::~tValue() [73]
                0.00    0.00       3/96          sExpr::type() [109]
                0.00    0.00       3/3           sObject::isLocal() const [343]
                0.00    0.00       2/21          tType::isInt() const [209]
                0.00    0.00       1/842         tType::operator=(tType const&) [67]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [302]
[304]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [304]
                0.00    0.00       4/74          sExpr::sExpr() [127]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [175]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [174]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [225]
                0.00    0.00       1/23          sIf::~sIf() <cycle 2> [279]
[305]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [305]
                                   4             sListFunct::~sListFunct() <cycle 1> [306]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [305]
[306]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [306]
                0.00    0.00       4/95          sExpr::~sExpr() [110]
                                   4             sExprList::~sExprList() <cycle 1> [198]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [241]
[307]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [307]
                0.00    0.00       8/455         sObject::setParent(sObject*) [78]
                0.00    0.00       8/96          sExpr::type() [109]
                0.00    0.00       8/115         tType::isQuExpr() const [107]
                0.00    0.00       8/1052        tType::ord() const [49]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [272]
                0.00    0.00       4/4           sSubscript::nargs() const [325]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [175]
                0.00    0.00       4/21          tType::isInt() const [209]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [174]
                0.00    0.00       4/32          tType::isQuCond() const [177]
                0.00    0.00       4/4           sExpr::basetype() [312]
                0.00    0.00       4/1478        tType::tType(BaseType) [47]
                0.00    0.00       4/109         sExpr::settype(tType const&) [108]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [302]
[308]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [308]
                0.00    0.00       4/74          sExpr::sExpr() [127]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [175]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [195]
[309]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [309]
                                   4             sSubscript::~sSubscript() <cycle 1> [310]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [309]
[310]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [310]
                0.00    0.00       4/44          sVar::~sVar() [136]
                0.00    0.00       4/95          sExpr::~sExpr() [110]
                                   4             sExprList::~sExprList() <cycle 1> [198]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
[311]    0.0    0.00    0.00       4         term::set(bitvec const&, std::complex<double> const&) [311]
                0.00    0.00       4/7180        bitvec::operator=(bitvec const&) [16]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [307]
[312]    0.0    0.00    0.00       4         sExpr::basetype() [312]
                0.00    0.00       4/1013        tType::basetype() const [65]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [302]
[313]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [313]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [224]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [225]
                0.00    0.00       2/23          sIf::~sIf() <cycle 2> [279]
[314]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [314]
                                   4             sLess::~sLess() <cycle 1> [315]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [314]
[315]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [315]
                                   4             sBinOp::~sBinOp() <cycle 1> [225]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [248]
[316]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [316]
                0.00    0.00       4/455         sObject::setParent(sObject*) [78]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       4/96          sExpr::type() [109]
                0.00    0.00       4/4           sLength::object() const [327]
                0.00    0.00       4/115         tType::isQuExpr() const [107]
                0.00    0.00       4/1478        tType::tType(BaseType) [47]
                0.00    0.00       4/109         sExpr::settype(tType const&) [108]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [320]
[317]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [317]
                0.00    0.00       4/74          sExpr::sExpr() [127]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [322]
[318]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [318]
                0.00    0.00       4/44          sVar::~sVar() [136]
                0.00    0.00       4/95          sExpr::~sExpr() [110]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
[319]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [319]
                0.00    0.00       4/287         tValue::tValue(tValue const&) [92]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [302]
[320]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [320]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [317]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [225]
[321]    0.0    0.00    0.00       4         sLength::~sLength() [321]
                0.00    0.00       4/4           sLength::~sLength() [322]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [321]
[322]    0.0    0.00    0.00       4         sLength::~sLength() [322]
                0.00    0.00       4/4           sUnOp::~sUnOp() [318]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [388]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [387]
[323]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [323]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [303]
[324]    0.0    0.00    0.00       4         sListFunct::object() const [324]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [307]
[325]    0.0    0.00    0.00       4         sSubscript::nargs() const [325]
                0.00    0.00       4/8           sList<sExpr>::n() const [274]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [248]
[326]    0.0    0.00    0.00       4         sLess::object() const [326]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [316]
[327]    0.0    0.00    0.00       4         sLength::object() const [327]
-----------------------------------------------
                0.00    0.00       4/4           sVar::typecheck(SymTable*, SymTable*) [134]
[328]    0.0    0.00    0.00       4         sObject::isConstDef() const [328]
                0.00    0.00       3/48          sConstDef::object() const [133]
                0.00    0.00       1/79          sVarDef::object() const [123]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [508]
[329]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [329]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [377]
[330]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [330]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [521]
[331]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [331]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [559]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[332]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [332]
-----------------------------------------------
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [334]
[333]    0.0    0.00    0.00       4         std::complex<double>::operator*=(double) [333]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
[334]    0.0    0.00    0.00       4         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [334]
                0.00    0.00       4/4           std::complex<double>::operator*=(double) [333]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [455]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [427]
[335]    0.0    0.00    0.00       3         yyalloc(unsigned long) [335]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [302]
[336]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [336]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [224]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [279]
[337]    0.0    0.00    0.00       3         sEqual::~sEqual() [337]
                0.00    0.00       3/3           sEqual::~sEqual() [338]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [337]
[338]    0.0    0.00    0.00       3         sEqual::~sEqual() [338]
                0.00    0.00       3/23          sBinOp::~sBinOp() <cycle 1> [225]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[339]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00       6/663         tValue::~tValue() [73]
                0.00    0.00       3/353         tValue::tValue() [86]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [319]
                0.00    0.00       3/29          tValue::operator=(tValue const&) [181]
                0.00    0.00       3/6           tValue::isError() const [289]
                0.00    0.00       3/63          tValue::type() const [129]
                0.00    0.00       3/372         sDef::type() const [80]
                0.00    0.00       3/7           tType::operator==(tType const&) const [283]
                0.00    0.00       3/167         sObject::def() const [103]
                0.00    0.00       3/324         SymTab::put(sDef*, tValue const&) [87]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[340]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       6/167         sObject::def() const [103]
                0.00    0.00       6/96          sExpr::type() [109]
                0.00    0.00       3/455         sObject::setParent(sObject*) [78]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00       3/21427       sDef::id() const [11]
                0.00    0.00       3/135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00       3/115         tType::isQuExpr() const [107]
                0.00    0.00       3/5           sDef::settype(tType const&) [291]
-----------------------------------------------
                0.00    0.00       3/3           operator==(bitvec const&, bitvec const&) [347]
[341]    0.0    0.00    0.00       3         bitvec::testeq(bitvec const&) const [341]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [248]
[342]    0.0    0.00    0.00       3         sEqual::object() const [342]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [303]
[343]    0.0    0.00    0.00       3         sObject::isLocal() const [343]
                0.00    0.00       3/5           sObject::isGlobal() const [297]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [171]
[344]    0.0    0.00    0.00       3         sObject::isBennet() const [344]
                0.00    0.00       3/165         sObject::isSet(ObjFlag) const [104]
-----------------------------------------------
                0.00    0.00       3/3           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[345]    0.0    0.00    0.00       3         termlist::hashfunct2(bitvec const&) const [345]
                0.00    0.00       3/3077        bitvec::hashfunct() const [27]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [498]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [390]
[346]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [346]
-----------------------------------------------
                0.00    0.00       3/3           termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [31]
[347]    0.0    0.00    0.00       3         operator==(bitvec const&, bitvec const&) [347]
                0.00    0.00       3/3           bitvec::testeq(bitvec const&) const [341]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[348]    0.0    0.00    0.00       2         zero(bitvec const&) [348]
                0.00    0.00       2/2           bitvec::testzero() const [380]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [453]
[349]    0.0    0.00    0.00       2         irqOn() [349]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [371]
[350]    0.0    0.00    0.00       2         duallog(int) [350]
-----------------------------------------------
                0.00    0.00       2/2           main [10]
[351]    0.0    0.00    0.00       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [351]
                0.00    0.00       4/4           openqclfile(std::string) [301]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [354]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [300]
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [351]
[352]    0.0    0.00    0.00       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [145]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [164]
                0.00    0.00      41/41          sObject::isInclude() const [157]
                0.00    0.00      41/365         sObject::isDef() const [84]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [167]
                0.00    0.00      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [171]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [170]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [340]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [339]
                0.00    0.00       2/2           parseobj() [353]
                0.00    0.00       1/14          sCall::typecheck(SymTable*, SymTable*) [241]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [280]
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       1/1           sObject::isStmt() const [520]
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       1/14          sCall::~sCall() [243]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[353]    0.0    0.00    0.00       2         parseobj() [353]
                0.00    0.00       2/4           yyparse() [302]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [351]
[354]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [354]
                0.00    0.00       2/4           yyparse() [302]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [300]
                0.00    0.00       2/2           yyCleanUp() [355]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [354]
[355]    0.0    0.00    0.00       2         yyCleanUp() [355]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [256]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [233]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
[356]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
                0.00    0.00       8/455         sObject::setParent(sObject*) [78]
                0.00    0.00       4/96          sExpr::type() [109]
                0.00    0.00       4/21          tType::isInt() const [209]
                0.00    0.00       4/663         tValue::~tValue() [73]
                0.00    0.00       2/77          SymTab::SymTab(int) [125]
                0.00    0.00       2/44          sVar::typecheck(SymTable*, SymTable*) [134]
                0.00    0.00       2/52          sVar::id() const [131]
                0.00    0.00       2/135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00       2/79          sVarDef::object() const [123]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [248]
                0.00    0.00       2/21427       sDef::id() const [11]
                0.00    0.00       2/2           tValue::tValue(int) [365]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [204]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [293]
                0.00    0.00       2/1478        tType::tType(BaseType) [47]
                0.00    0.00       2/353         tValue::tValue() [86]
                0.00    0.00       2/5           sDef::settype(tType const&) [291]
                0.00    0.00       2/324         SymTab::put(sDef*, tValue const&) [87]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [257]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [258]
                0.00    0.00       2/5           sConstDef::~sConstDef() [294]
                0.00    0.00       2/77          SymTab::~SymTab() [126]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [302]
[357]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [357]
                0.00    0.00       2/24          sStmt::sStmt(int) [188]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [223]
[358]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [358]
                                   2             sFor::~sFor() <cycle 2> [359]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [358]
[359]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [359]
                0.00    0.00       2/44          sVar::~sVar() [136]
                0.00    0.00       2/21          sConst::~sConst() [205]
                0.00    0.00       2/2           sSub::~sSub() [361]
                0.00    0.00       2/24          sStmt::~sStmt() [189]
                                   2             sStmtList::~sStmtList() <cycle 2> [228]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [302]
[360]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [360]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [224]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [359]
[361]    0.0    0.00    0.00       2         sSub::~sSub() [361]
                0.00    0.00       2/2           sSub::~sSub() [362]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [361]
[362]    0.0    0.00    0.00       2         sSub::~sSub() [362]
                0.00    0.00       2/23          sBinOp::~sBinOp() <cycle 1> [225]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [302]
[363]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [363]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [34]
[364]    0.0    0.00    0.00       2         tValue::tValue(double) [364]
                0.00    0.00       2/1478        tType::tType(BaseType) [47]
                0.00    0.00       2/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [356]
[365]    0.0    0.00    0.00       2         tValue::tValue(int) [365]
                0.00    0.00       2/1478        tType::tType(BaseType) [47]
                0.00    0.00       2/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [302]
[366]    0.0    0.00    0.00       2         objlist::objlist() [366]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [398]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [302]
[367]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [367]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [224]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [195]
[368]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [368]
                                   2             sConcat::~sConcat() <cycle 1> [369]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [368]
[369]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [369]
                                   2             sBinOp::~sBinOp() <cycle 1> [225]
-----------------------------------------------
                0.00    0.00       2/2           termlist::~termlist() [372]
[370]    0.0    0.00    0.00       2         termlist::dellist() [370]
                0.00    0.00    1536/3599        term::~term() [24]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::quBaseState(int, int) [459]
[371]    0.0    0.00    0.00       2         termlist::termlist(int, int) [371]
                0.00    0.00       2/2           duallog(int) [350]
                0.00    0.00       2/16          termlist::clear() [234]
                0.00    0.00       2/5           termlist::newlist() [292]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::~quBaseState() [461]
[372]    0.0    0.00    0.00       2         termlist::~termlist() [372]
                0.00    0.00       2/2           termlist::dellist() [370]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [391]
[373]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [373]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [554]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [555]
[374]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [374]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [522]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [523]
[375]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [375]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [525]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [526]
[376]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [376]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [389]
[377]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [377]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [330]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [248]
[378]    0.0    0.00    0.00       2         sSub::object() const [378]
-----------------------------------------------
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
[379]    0.0    0.00    0.00       2         SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00       1/353         tValue::tValue() [86]
                0.00    0.00       1/362         SymTab::getentry(SymTable::entry*, std::string const&) const [85]
                0.00    0.00       1/370         sObject::isValueDef() const [81]
                0.00    0.00       1/79          sVarDef::object() const [123]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [92]
-----------------------------------------------
                0.00    0.00       2/2           zero(bitvec const&) [348]
[380]    0.0    0.00    0.00       2         bitvec::testzero() const [380]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [382]
[381]    0.0    0.00    0.00       2         tValue::isInt() const [381]
                0.00    0.00       2/21          tType::isInt() const [209]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
[382]    0.0    0.00    0.00       2         tValue::toInt() const [382]
                0.00    0.00       2/2           tValue::isInt() const [381]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [248]
[383]    0.0    0.00    0.00       2         sConcat::object() const [383]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [506]
[384]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [384]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [507]
[385]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [385]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [390]
[386]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [386]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [389]
[387]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [387]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [323]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [389]
[388]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [388]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [323]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [483]
[389]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [389]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [387]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [388]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [377]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [521]
[390]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [390]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [346]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [386]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [392]
[391]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [391]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [373]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [394]
[392]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [392]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [391]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [394]
[393]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [393]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [398]
[394]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [394]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [393]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [392]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [402]
[395]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [395]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [540]
[396]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [396]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [496]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [399]
[397]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [397]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [366]
[398]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [398]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [394]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [400]
[399]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [399]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [397]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [401]
[400]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [400]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [399]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[401]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [401]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [400]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [403]
[402]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [402]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [395]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [559]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[403]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [403]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [402]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[404]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [404]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [430]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[405]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [405]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [438]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[406]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [406]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [445]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[407]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [407]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [440]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[408]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [408]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [439]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[409]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [409]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [432]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[410]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [410]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [431]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[411]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [411]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [444]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[412]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [412]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [436]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[413]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [413]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [433]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[414]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [414]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [437]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[415]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [415]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [447]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[416]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [416]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [429]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[417]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [417]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [451]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[418]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [418]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [450]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[419]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [419]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [449]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[420]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [420]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [446]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[421]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qc_check_txt [421]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [448]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[422]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [422]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [442]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[423]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [423]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [443]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[424]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [424]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [441]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[425]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [425]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [435]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[426]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [426]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [434]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [256]
[427]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [427]
                0.00    0.00       2/3           yyalloc(unsigned long) [335]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [252]
-----------------------------------------------
                0.00    0.00       1/1           main [10]
[428]    0.0    0.00    0.00       1         initialize_readline() [428]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [416]
[429]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [429]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [404]
[430]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [430]
                0.00    0.00       1/1478        tType::tType(BaseType) [47]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [271]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [410]
[431]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [431]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [409]
[432]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [432]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [413]
[433]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [433]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [426]
[434]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [434]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [425]
[435]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [435]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [412]
[436]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [436]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [414]
[437]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [437]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [405]
[438]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [438]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [408]
[439]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [439]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [407]
[440]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [440]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [424]
[441]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [441]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [422]
[442]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [442]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [423]
[443]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [443]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [411]
[444]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [444]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [406]
[445]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [445]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [420]
[446]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [446]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [415]
[447]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [447]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [421]
[448]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [448]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [419]
[449]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [449]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [418]
[450]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [450]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [417]
[451]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [451]
-----------------------------------------------
                0.00    0.00       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [495]
[452]    0.0    0.00    0.00       1         ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00      11/3212        quState::mapbits() const [25]
                0.00    0.00      10/21          quSubString::newsubstring(int, int) <cycle 5> [212]
                0.00    0.00      10/10          opElementary::apply(quState&) const [266]
                0.00    0.00      10/20          quSubString::~quSubString() [213]
                0.00    0.00       6/4630        std::complex<double>::complex(double, double) [20]
                0.00    0.00       2/21427       sDef::id() const [11]
                0.00    0.00       1/264         SymTab::getRef(std::string const&, ObjType*) const [95]
                0.00    0.00       1/7           tValue::isQuExpr() const [284]
                0.00    0.00       1/5           tValue::qustate() const [296]
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
                0.00    0.00       1/1           opBit::~opBit() [470]
-----------------------------------------------
                0.00    0.00       1/1           main [10]
[453]    0.0    0.00    0.00       1         parseopt(int, char**) [453]
                0.00    0.00       2/2           irqOn() [349]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [255]
                0.00    0.00       1/1           qc_srand(long) [454]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [453]
[454]    0.0    0.00    0.00       1         qc_srand(long) [454]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [256]
[455]    0.0    0.00    0.00       1         yyensure_buffer_stack() [455]
                0.00    0.00       1/3           yyalloc(unsigned long) [335]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::opElementary(int) [462]
[456]    0.0    0.00    0.00       1         opOperator::opOperator(int) [456]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::~opElementary() [463]
[457]    0.0    0.00    0.00       1         opOperator::~opOperator() [457]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [459]
[458]    0.0    0.00    0.00       1         quBaseState::reset(bitvec const&) [458]
                0.00    0.00       1/11          quBaseState::opbegin() [254]
                0.00    0.00       1/3072        bitvec::length() const [29]
                0.00    0.00       1/4630        std::complex<double>::complex(double, double) [20]
                0.00    0.00       1/1           quBaseState::basebits() const [509]
                0.00    0.00       1/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00       1/2047        quBaseState::opadd(bitvec const&, std::complex<double> const&) [39]
                0.00    0.00       1/13929       bitvec::~bitvec() [12]
                0.00    0.00       1/11          quBaseState::opend() [253]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [482]
[459]    0.0    0.00    0.00       1         quBaseState::quBaseState(int, int) [459]
                0.00    0.00       2/2           termlist::termlist(int, int) [371]
                0.00    0.00       1/22          quState::quState(int) [196]
                0.00    0.00       1/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [458]
                0.00    0.00       1/13929       bitvec::~bitvec() [12]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[460]    0.0    0.00    0.00       1         quBaseState::~quBaseState() [460]
                0.00    0.00       1/1           quBaseState::~quBaseState() [461]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::~quBaseState() [460]
[461]    0.0    0.00    0.00       1         quBaseState::~quBaseState() [461]
                0.00    0.00       2/2           termlist::~termlist() [372]
                0.00    0.00       1/21          quState::~quState() [207]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::opMatrix(int) [490]
[462]    0.0    0.00    0.00       1         opElementary::opElementary(int) [462]
                0.00    0.00       1/1           opOperator::opOperator(int) [456]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::~opMatrix() [491]
[463]    0.0    0.00    0.00       1         opElementary::~opElementary() [463]
                0.00    0.00       1/1           opOperator::~opOperator() [457]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [302]
[464]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [464]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [224]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [279]
[465]    0.0    0.00    0.00       1         sOr::~sOr() [465]
                0.00    0.00       1/1           sOr::~sOr() [466]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [465]
[466]    0.0    0.00    0.00       1         sOr::~sOr() [466]
                0.00    0.00       1/23          sBinOp::~sBinOp() <cycle 1> [225]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
[467]    0.0    0.00    0.00       1         sDef::basetype() [467]
                0.00    0.00       1/1013        tType::basetype() const [65]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[468]    0.0    0.00    0.00       1         sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       2/52          sVar::id() const [131]
                0.00    0.00       2/2           SymTab::getVal(std::string const&, ObjType*) const [379]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [181]
                0.00    0.00       2/663         tValue::~tValue() [73]
                0.00    0.00       1/353         tValue::tValue() [86]
                0.00    0.00       1/1           tValue::isExpr() const [519]
                0.00    0.00       1/96          sExpr::type() [109]
                0.00    0.00       1/63          tValue::type() const [129]
                0.00    0.00       1/7           tType::operator==(tType const&) const [283]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [452]
[469]    0.0    0.00    0.00       1         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
                0.00    0.00       6/2576        term::term() [33]
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [334]
                0.00    0.00       4/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00       4/4           term::set(bitvec const&, std::complex<double> const&) [311]
                0.00    0.00       4/13929       bitvec::~bitvec() [12]
                0.00    0.00       1/1           opMatrix::opMatrix(int) [490]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [452]
[470]    0.0    0.00    0.00       1         opBit::~opBit() [470]
                0.00    0.00       1/1           opBit::~opBit() [471]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [470]
[471]    0.0    0.00    0.00       1         opBit::~opBit() [471]
                0.00    0.00       1/1           opMatrix::~opMatrix() [491]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[472]    0.0    0.00    0.00       1         sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
                0.00    0.00       5/13929       bitvec::~bitvec() [12]
                0.00    0.00       3/663         tValue::~tValue() [73]
                0.00    0.00       3/5           tValue::qustate() const [296]
                0.00    0.00       2/37          sRoutDef::args() [169]
                0.00    0.00       2/13          quState::mapmask() const [250]
                0.00    0.00       2/2           zero(bitvec const&) [348]
                0.00    0.00       1/1           QuHeap::nBits() const [516]
                0.00    0.00       1/353         tValue::tValue() [86]
                0.00    0.00       1/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00       1/15          sCall::id() const [240]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [105]
                0.00    0.00       1/14          sObject::isProcDef() const [247]
                0.00    0.00       1/18          sObject::isQuDef() const [232]
                0.00    0.00       1/77          SymTab::SymTab(int) [125]
                0.00    0.00       1/35          sList<sExpr>::first(void*&) const [175]
                0.00    0.00       1/95          sList<sDef>::first(void*&) const [111]
                0.00    0.00       1/372         sDef::type() const [80]
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
                0.00    0.00       1/1           tValue::conv(tType const&) const [518]
                0.00    0.00       1/29          tValue::operator=(tValue const&) [181]
                0.00    0.00       1/6           tValue::isError() const [289]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [87]
                0.00    0.00       1/7           tValue::isQuExpr() const [284]
                0.00    0.00       1/1024        operator&(bitvec const&, bitvec const&) [53]
                0.00    0.00       1/2047        bitvec::operator|=(bitvec const&) [40]
                0.00    0.00       1/3212        quState::mapbits() const [25]
                0.00    0.00       1/36          sList<sExpr>::next(void*&) const [174]
                0.00    0.00       1/554         sList<sDef>::next(void*&) const [74]
                0.00    0.00       1/28          sObject::isCondDef() const [183]
                0.00    0.00       1/1           QuHeap::cond() const [514]
                0.00    0.00       1/1           QuHeap::cmask() const [515]
                0.00    0.00       1/1           sStmt::isInv() const [511]
                0.00    0.00       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [477]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [226]
[473]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [473]
                0.00    0.00       1/455         sObject::setParent(sObject*) [78]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [216]
                0.00    0.00       1/96          sExpr::type() [109]
                0.00    0.00       1/1           tType::isString() const [513]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [302]
[474]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [474]
                0.00    0.00       1/24          sStmt::sStmt(int) [188]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [223]
[475]    0.0    0.00    0.00       1         sExit::~sExit() [475]
                0.00    0.00       1/1           sExit::~sExit() [476]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [475]
[476]    0.0    0.00    0.00       1         sExit::~sExit() [476]
                0.00    0.00       1/21          sConst::~sConst() [205]
                0.00    0.00       1/24          sStmt::~sStmt() [189]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[477]    0.0    0.00    0.00       1         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [477]
                0.00    0.00       1/28          sObject::isCondDef() const [183]
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [481]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [482]
[478]    0.0    0.00    0.00       1         QuHeap::init() [478]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
[479]    0.0    0.00    0.00       1         QuHeap::addReg(quState*) [479]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [487]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [557]
                0.00    0.00       1/663         tValue::~tValue() [73]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
[480]    0.0    0.00    0.00       1         QuHeap::qualloc(int, BaseType) [480]
                0.00    0.00      10/10          bitvec::operator[](int) const [267]
                0.00    0.00       2/13929       bitvec::~bitvec() [12]
                0.00    0.00       1/21          quBaseState::newsubstring(int, int) <cycle 5> [150]
                0.00    0.00       1/13          quState::mapmask() const [250]
                0.00    0.00       1/24          operator~(bitvec const&) [190]
                0.00    0.00       1/1025        bitvec::operator&=(bitvec const&) [51]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [485]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [477]
[481]    0.0    0.00    0.00       1         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [481]
                0.00    0.00       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [495]
                0.00    0.00       1/1           SymTab::~SymTab() [484]
-----------------------------------------------
                0.00    0.00       1/1           main [10]
[482]    0.0    0.00    0.00       1         QuHeap::QuHeap(int, int) [482]
                0.00    0.00       8/6730        bitvec::bitvec(int, unsigned long) [17]
                0.00    0.00       3/7180        bitvec::operator=(bitvec const&) [16]
                0.00    0.00       3/13929       bitvec::~bitvec() [12]
                0.00    0.00       2/26          bitvec::qnot() [186]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [560]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [562]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [558]
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [459]
                0.00    0.00       1/1           QuHeap::init() [478]
-----------------------------------------------
                0.00    0.00       1/1           main [10]
[483]    0.0    0.00    0.00       1         QuHeap::~QuHeap() [483]
                0.00    0.00       5/13929       bitvec::~bitvec() [12]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [389]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [527]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [524]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [556]
                0.00    0.00       1/1           quBaseState::~quBaseState() [460]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [559]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [563]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [561]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [481]
[484]    0.0    0.00    0.00       1         SymTab::~SymTab() [484]
                0.00    0.00       1/77          SymTab::~SymTab() [126]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [480]
[485]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [485]
                0.00    0.00       1/1478        tType::tType(BaseType) [47]
                0.00    0.00       1/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [34]
[486]    0.0    0.00    0.00       1         tValue::tValue(char const*) [486]
                0.00    0.00       1/1478        tType::tType(BaseType) [47]
                0.00    0.00       1/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [479]
[487]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [487]
                0.00    0.00       1/1478        tType::tType(BaseType) [47]
                0.00    0.00       1/21          quState::newclone() <cycle 5> [178]
                0.00    0.00       1/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [34]
[488]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [488]
                0.00    0.00       1/1478        tType::tType(BaseType) [47]
                0.00    0.00       1/450         tType::operator=(BaseType) [79]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[489]    0.0    0.00    0.00       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [489]
                0.00    0.00       4/663         tValue::~tValue() [73]
                0.00    0.00       2/353         tValue::tValue() [86]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [181]
                0.00    0.00       2/6           tValue::isError() const [289]
                0.00    0.00       2/2           tValue::toInt() const [382]
                0.00    0.00       1/115         tType::isQuExpr() const [107]
                0.00    0.00       1/372         sDef::type() const [80]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [319]
                0.00    0.00       1/1           sDef::basetype() [467]
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [480]
                0.00    0.00       1/5           sObject::isGlobal() const [297]
                0.00    0.00       1/5           tValue::qustate() const [296]
                0.00    0.00       1/21          quState::newclone() <cycle 5> [178]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [479]
                0.00    0.00       1/167         sObject::def() const [103]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [87]
-----------------------------------------------
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [469]
[490]    0.0    0.00    0.00       1         opMatrix::opMatrix(int) [490]
                0.00    0.00       1/1           opElementary::opElementary(int) [462]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [471]
[491]    0.0    0.00    0.00       1         opMatrix::~opMatrix() [491]
                0.00    0.00       6/3599        term::~term() [24]
                0.00    0.00       1/1           opElementary::~opElementary() [463]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [302]
[492]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [492]
                0.00    0.00       1/1478        tType::tType(BaseType) [47]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [172]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [132]
[493]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [493]
                0.00    0.00       1/1           sProcDef::~sProcDef() [494]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [493]
[494]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [494]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [173]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [481]
[495]    0.0    0.00    0.00       1         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [495]
                0.00    0.00       1/353         tValue::tValue() [86]
                0.00    0.00       1/73          sObject::isExtern() const [128]
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [452]
                0.00    0.00       1/663         tValue::~tValue() [73]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [396]
[496]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [496]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [556]
[497]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [497]
                0.00    0.00       1/663         tValue::~tValue() [73]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [536]
[498]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [498]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [346]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[499]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [499]
                0.00    0.00       1/42          operator new(unsigned long, void*) [151]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [92]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [528]
[500]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [500]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [529]
[501]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [501]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [530]
[502]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [502]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [531]
[503]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [503]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [532]
[504]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [504]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [533]
[505]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [505]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [524]
[506]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [506]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [384]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [527]
[507]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [507]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [385]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[508]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [508]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [329]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [458]
[509]    0.0    0.00    0.00       1         quBaseState::basebits() const [509]
                0.00    0.00       1/3212        quState::mapbits() const [25]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [248]
[510]    0.0    0.00    0.00       1         sOr::object() const [510]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[511]    0.0    0.00    0.00       1         sStmt::isInv() const [511]
                0.00    0.00       1/165         sObject::isSet(ObjFlag) const [104]
-----------------------------------------------
                0.00    0.00       1/1           tValue::isExpr() const [519]
[512]    0.0    0.00    0.00       1         tType::isExpr() const [512]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [473]
[513]    0.0    0.00    0.00       1         tType::isString() const [513]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[514]    0.0    0.00    0.00       1         QuHeap::cond() const [514]
                0.00    0.00       1/1           QuHeap::ncond() const [517]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[515]    0.0    0.00    0.00       1         QuHeap::cmask() const [515]
                0.00    0.00       1/3072        bitvec::length() const [29]
                0.00    0.00       1/6730        bitvec::bitvec(int, unsigned long) [17]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[516]    0.0    0.00    0.00       1         QuHeap::nBits() const [516]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::cond() const [514]
[517]    0.0    0.00    0.00       1         QuHeap::ncond() const [517]
                0.00    0.00       1/3072        bitvec::length() const [29]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [472]
[518]    0.0    0.00    0.00       1         tValue::conv(tType const&) const [518]
                0.00    0.00       1/7           tType::operator==(tType const&) const [283]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [92]
-----------------------------------------------
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [468]
[519]    0.0    0.00    0.00       1         tValue::isExpr() const [519]
                0.00    0.00       1/1           tType::isExpr() const [512]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [352]
[520]    0.0    0.00    0.00       1         sObject::isStmt() const [520]
                0.00    0.00       2/8           sCall::object() const [273]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[521]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [521]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [331]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [390]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [564]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [524]
[522]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [522]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [375]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [524]
[523]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [523]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [375]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[524]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [524]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [522]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [523]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [506]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [527]
[525]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [525]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [376]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [527]
[526]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [526]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [376]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[527]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [527]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [525]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [526]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [507]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [537]
[528]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [528]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [500]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [538]
[529]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [529]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [501]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [541]
[530]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [530]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [502]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [542]
[531]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [531]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [503]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [547]
[532]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [532]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [504]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [548]
[533]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [533]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [505]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [565]
[534]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [534]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [567]
[535]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [535]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[536]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [536]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [539]
[537]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [537]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [528]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [540]
[538]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [538]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [529]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [558]
[539]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [539]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [537]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [559]
[540]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [540]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [396]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [538]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [545]
[541]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [541]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [530]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [546]
[542]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [542]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [531]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [546]
[543]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [543]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [561]
[544]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [544]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [560]
[545]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [545]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [541]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [561]
[546]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [546]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [543]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [542]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [551]
[547]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [547]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [532]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [552]
[548]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [548]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [533]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [552]
[549]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [563]
[550]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [550]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [562]
[551]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [551]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [547]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [563]
[552]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [552]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [549]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [548]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [557]
[553]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [332]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [329]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [401]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [521]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [555]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [508]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [536]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [499]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [403]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [396]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [557]
[554]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [554]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [374]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
[555]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [555]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [374]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[556]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [556]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [497]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [479]
[557]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [557]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [554]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [553]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [482]
[558]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [558]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [539]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[559]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [559]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [332]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [540]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [403]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [482]
[560]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [560]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [545]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[561]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [561]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [544]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [546]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [566]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [482]
[562]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [562]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [551]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [483]
[563]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [550]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [568]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [552]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [521]
[564]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [564]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [566]
[565]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [565]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [534]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [561]
[566]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [566]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [565]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [568]
[567]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [567]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [535]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [563]
[568]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [568]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [567]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [404] _GLOBAL__sub_I_CONDDEF (syntax.cc) [126] SymTab::~SymTab() [517] QuHeap::ncond() const
 [405] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [186] bitvec::qnot() [105] SymTab::getDef(std::string const&) const
 [406] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [15] bitvec::setlen(int) [95] SymTab::getRef(std::string const&, ObjType*) const
 [407] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [35] bitvec::setbits(int, bitvec const&) [379] SymTab::getVal(std::string const&, ObjType*) const
 [408] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [36] bitvec::setbits(int, int, unsigned long) [85] SymTab::getentry(SymTable::entry*, std::string const&) const
 [409] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [17] bitvec::bitvec(int, unsigned long) [29] bitvec::length() const
 [410] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [14] bitvec::bitvec(bitvec const&) [341] bitvec::testeq(bitvec const&) const
 [411] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [12] bitvec::~bitvec() [61] bitvec::getbits(int, int) const
 [412] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [51] bitvec::operator&=(bitvec const&) [62] bitvec::getword() const
 [413] _GLOBAL__sub_I_isErrorReported (error.cc) [16] bitvec::operator=(bitvec const&) [380] bitvec::testzero() const
 [414] _GLOBAL__sub_I_isStateModified (quheap.cc) [40] bitvec::operator|=(bitvec const&) [27] bitvec::hashfunct() const
 [415] _GLOBAL__sub_I_main (qcl.cc) [248] sBinOp::typecheck(SymTable*, SymTable*) [267] bitvec::operator[](int) const
 [416] _GLOBAL__sub_I_n_object (types.cc) [224] sBinOp::sBinOp(sExpr*, sExpr*) [342] sEqual::object() const
 [417] _GLOBAL__sub_I_noperators (operator.cc) [225] sBinOp::~sBinOp() [71] tValue::ord() const
 [418] _GLOBAL__sub_I_nstates (qustates.cc) [319] sConst::eval(SymTable*, SymTable*, QuHeap*) [518] tValue::conv(tType const&) const
 [419] _GLOBAL__sub_I_nterms (terms.cc) [216] sConst::typecheck(SymTable*, SymTable*) [129] tValue::type() const
 [420] _GLOBAL__sub_I_plotfile (plot.cc) [204] sConst::sConst(tValue const&) [381] tValue::isInt() const
 [421] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [205] sConst::~sConst() [382] tValue::toInt() const
 [422] _GLOBAL__sub_I_qcl_options (options.cc) [206] sConst::~sConst() [519] tValue::isExpr() const
 [423] _GLOBAL__sub_I_shell_depth (debug.cc) [336] sEqual::sEqual(sExpr*, sExpr*) [289] tValue::isError() const
 [424] _GLOBAL__sub_I_yyObjList (parse.cc) [337] sEqual::~sEqual() [296] tValue::qustate() const
 [425] _GLOBAL__sub_I_yydebug (yacc.cc) [338] sEqual::~sEqual() [72] tValue::basetype() const
 [426] _GLOBAL__sub_I_yyleng (qcl.lex) [70] tValue::delpointer() [284] tValue::isQuExpr() const
 [300] yyScanFile(_IO_FILE*)  [88] tValue::assign(tValue const&) [25] quState::mapbits() const
 [301] openqclfile(std::string) [485] tValue::tValue(quState*, BaseType) [250] quState::mapmask() const
 [233] yy_flush_buffer(yy_buffer_state*) [486] tValue::tValue(char const*) [48] sArgDef::object() const
 [427] yy_create_buffer(_IO_FILE*, int) [487] tValue::tValue(quState&, BaseType) [383] sConcat::object() const
 [428] initialize_readline()  [92] tValue::tValue(tValue const&) [327] sLength::object() const
 [429] __static_initialization_and_destruction_0(int, int) (types.cc) [364] tValue::tValue(double) [221] sObject::inFunctDef() const
 [430] __static_initialization_and_destruction_0(int, int) (syntax.cc) [365] tValue::tValue(int) [246] sObject::inQuFunDef() const
 [431] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [238] tValue::tValue(long) [328] sObject::isConstDef() const
 [432] __static_initialization_and_destruction_0(int, int) (symbols.cc) [488] tValue::tValue(std::complex<double> const&) [91] sObject::isFunctDef() const
 [433] __static_initialization_and_destruction_0(int, int) (error.cc) [86] tValue::tValue() [180] sObject::isQuFunDef() const
 [434] __static_initialization_and_destruction_0(int, int) (qcl.lex) [73] tValue::~tValue() [81] sObject::isValueDef() const
 [435] __static_initialization_and_destruction_0(int, int) (yacc.cc) [181] tValue::operator=(tValue const&) [103] sObject::def() const
 [436] __static_initialization_and_destruction_0(int, int) (print.cc) [366] objlist::objlist() [84] sObject::isDef() const
 [437] __static_initialization_and_destruction_0(int, int) (quheap.cc) [178] quState::newclone() [104] sObject::isSet(ObjFlag) const
 [438] __static_initialization_and_destruction_0(int, int) (extern.cc) [196] quState::quState(int) [520] sObject::isStmt() const
 [439] __static_initialization_and_destruction_0(int, int) (eval.cc) [207] quState::~quState() [66] sObject::parent() const
 [440] __static_initialization_and_destruction_0(int, int) (exec.cc) [96] sArgDef::sArgDef(tType const&, std::string*) [231] sObject::inQuDef() const
 [441] __static_initialization_and_destruction_0(int, int) (parse.cc) [97] sArgDef::~sArgDef() [343] sObject::isLocal() const
 [442] __static_initialization_and_destruction_0(int, int) (options.cc) [98] sArgDef::~sArgDef() [232] sObject::isQuDef() const
 [443] __static_initialization_and_destruction_0(int, int) (debug.cc) [367] sConcat::sConcat(sExpr*, sExpr*) [344] sObject::isBennet() const
 [444] __static_initialization_and_destruction_0(int, int) (cond.cc) [368] sConcat::~sConcat() [128] sObject::isExtern() const
 [445] __static_initialization_and_destruction_0(int, int) (dump.cc) [369] sConcat::~sConcat() [297] sObject::isGlobal() const
 [446] __static_initialization_and_destruction_0(int, int) (plot.cc) [320] sLength::sLength(sExpr*) [183] sObject::isCondDef() const
 [447] __static_initialization_and_destruction_0(int, int) (qcl.cc) [321] sLength::~sLength() [157] sObject::isInclude() const
 [448] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [322] sLength::~sLength() [247] sObject::isProcDef() const
 [449] __static_initialization_and_destruction_0(int, int) (terms.cc) [102] sObject::setFlag(ObjFlag, int) [200] sObject::isQuOpDef() const
 [450] __static_initialization_and_destruction_0(int, int) (qustates.cc) [249] sObject::isSetRec(ObjFlag) [101] sObject::isRoutDef() const
 [451] __static_initialization_and_destruction_0(int, int) (operator.cc) [78] sObject::setParent(sObject*) [123] sVarDef::object() const
 [348] zero(bitvec const&)    [99] sObject::typecheck(SymTable*, SymTable*) [63] opMatrix::addterms(terminfo const&) const
 [349] irqOn()                [76] sObject::sObject(unsigned int) [176] sDefList::object() const
  [34] yylex()                [77] sObject::~sObject()   [130] sProcDef::object() const
 [350] duallog(int)          [489] sVarDef::define(SymTable*, SymTable*, QuHeap*) [82] sQuOpDef::object() const
 [452] ext_bit(sRoutDef const*, SymTable const*, int) [280] sVarDef::typecheck(SymTable*, SymTable*) [28] termlist::hashfunct1(bitvec const&) const
 [351] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [271] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [345] termlist::hashfunct2(bitvec const&) const
 [352] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [281] sVarDef::~sVarDef() [268] termlist::nterms() const
 [335] yyalloc(unsigned long) [282] sVarDef::~sVarDef()   [64] termlist::operator[](int) const
 [302] yyparse()             [112] SymTable::SymTable()  [346] __gnu_cxx::new_allocator<tValue>::max_size() const
 [353] parseobj()            [113] SymTable::~SymTable() [158] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [453] parseopt(int, char**) [490] opMatrix::opMatrix(int) [329] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [454] qc_srand(long)        [491] opMatrix::~opMatrix() [330] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [354] chksyntax(_IO_FILE*)  [140] sDefList::typecheck(SymTable*, SymTable*) [384] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [355] yyCleanUp()           [141] sDefList::sDefList()  [385] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [256] yyrestart(_IO_FILE*)  [142] sDefList::~sDefList() [133] sConstDef::object() const
 [252] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [143] sDefList::~sDefList() [83] sQuFunDef::object() const
 [251] yy_get_next_buffer() (lex.cc) [492] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [124] sStmtList::object() const
 [185] yy_load_buffer_state() (lex.cc) [493] sProcDef::~sProcDef() [117] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [270] yy_get_previous_state() (lex.cc) [494] sProcDef::~sProcDef() [118] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [455] yyensure_buffer_stack() (lex.cc) [217] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [386] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [257] SymTabComb::SymTabComb(SymTable*, SymTable*) [218] sQuOpDef::~sQuOpDef() [159] std::_List_iterator<sObject*>::operator*() const
 [258] SymTabComb::~SymTabComb() [219] sQuOpDef::~sQuOpDef() [68] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [259] SymTabComb::~SymTabComb() [169] sRoutDef::args()  [144] std::list<sObject*, std::allocator<sObject*> >::end() const
 [456] opOperator::opOperator(int) [170] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [145] std::list<sObject*, std::allocator<sObject*> >::size() const
 [457] opOperator::~opOperator() [495] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [146] std::list<sObject*, std::allocator<sObject*> >::begin() const
  [41] quSubState::opadd(bitvec const&, std::complex<double> const&) [171] sRoutDef::typecheck(SymTable*, SymTable*) [521] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [260] quSubState::opend()   [172] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [387] std::vector<tValue, std::allocator<tValue> >::end() const
 [261] quSubState::opbegin() [173] sRoutDef::~sRoutDef() [331] std::vector<tValue, std::allocator<tValue> >::size() const
 [201] quSubState::quSubState(int) [56] terminfo::terminfo(terminfo const&) [388] std::vector<tValue, std::allocator<tValue> >::begin() const
 [211] quSubState::~quSubState() [262] terminfo::terminfo() [389] std::vector<tValue, std::allocator<tValue> >::empty() const
 [303] sListFunct::typecheck(SymTable*, SymTable*) [50] terminfo::~terminfo() [390] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [304] sListFunct::sListFunct(ObjType, sExprList*) [52] termlist::add(term const&) [522] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [305] sListFunct::~sListFunct() [31] termlist::add(bitvec const&, std::complex<double> const&) [523] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [306] sListFunct::~sListFunct() [234] termlist::clear() [524] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [307] sSubscript::typecheck(SymTable*, SymTable*) [370] termlist::dellist() [525] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [308] sSubscript::sSubscript(sVar*, sExprList*) [292] termlist::newlist() [526] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [309] sSubscript::~sSubscript() [371] termlist::termlist(int, int) [527] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [310] sSubscript::~sSubscript() [372] termlist::~termlist() [42] std::complex<double>::imag() const
 [150] quBaseState::newsubstring(int, int) [496] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [43] std::complex<double>::real() const
  [39] quBaseState::opadd(bitvec const&, std::complex<double> const&) [497] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [528] std::allocator<tValue>::allocator()
 [253] quBaseState::opend()  [498] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [529] std::allocator<tValue>::~allocator()
 [458] quBaseState::reset(bitvec const&) [499] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [530] std::allocator<QuHeap::centry>::allocator()
 [254] quBaseState::opbegin() [500] __gnu_cxx::new_allocator<tValue>::new_allocator() [531] std::allocator<QuHeap::centry>::~allocator()
 [459] quBaseState::quBaseState(int, int) [501] __gnu_cxx::new_allocator<tValue>::~new_allocator() [532] std::allocator<QuHeap::quentry>::allocator()
 [460] quBaseState::~quBaseState() [502] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [533] std::allocator<QuHeap::quentry>::~allocator()
 [461] quBaseState::~quBaseState() [503] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [119] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
 [212] quSubString::newsubstring(int, int) [504] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [120] std::allocator<sObject*>::~allocator()
 [202] quSubString::quSubString(int, int, quState&) [505] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [391] std::allocator<std::_List_node<sObject*> >::allocator()
 [213] quSubString::~quSubString() [152] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [392] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [214] quSubString::~quSubString() [153] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [160] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [462] opElementary::opElementary(int) [115] __gnu_cxx::new_allocator<sObject*>::new_allocator() [161] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [463] opElementary::~opElementary() [116] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [393] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [276] sIf::typecheck(SymTable*, SymTable*) [154] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [394] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [277] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [155] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [32] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [278] sIf::~sIf()           [373] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [395] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [279] sIf::~sIf()           [374] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [534] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [464] sOr::sOr(sExpr*, sExpr*) [323] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [535] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [465] sOr::~sOr()           [375] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [536] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [466] sOr::~sOr()           [376] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [537] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [291] sDef::settype(tType const&) [377] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [538] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [467] sDef::basetype()      [506] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [396] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  [89] sDef::sDef(tType const&, std::string*) [507] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [332] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  [90] sDef::~sDef()         [508] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [539] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [356] sFor::typecheck(SymTable*, SymTable*) [339] sConstDef::define(SymTable*, SymTable*, QuHeap*) [540] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [357] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [340] sConstDef::typecheck(SymTable*, SymTable*) [541] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [358] sFor::~sFor()         [293] sConstDef::sConstDef(std::string*, sExpr*) [542] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [359] sFor::~sFor()         [294] sConstDef::~sConstDef() [543] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [360] sSub::sSub(sExpr*, sExpr*) [295] sConstDef::~sConstDef() [544] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [361] sSub::~sSub()         [272] sExprList::typecheck(SymTable*, SymTable*) [545] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [362] sSub::~sSub()         [197] sExprList::sExprList() [546] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [468] sVar::eval(SymTable*, SymTable*, QuHeap*) [198] sExprList::~sExprList() [547] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [134] sVar::typecheck(SymTable*, SymTable*) [199] sExprList::~sExprList() [548] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [135] sVar::sVar(std::string*) [235] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [549] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [136] sVar::~sVar()         [236] sQuFunDef::~sQuFunDef() [550] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [137] sVar::~sVar()         [237] sQuFunDef::~sQuFunDef() [551] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [311] term::set(bitvec const&, std::complex<double> const&) [226] sStmtList::typecheck(SymTable*, SymTable*) [552] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  [30] term::setampl(std::complex<double> const&) [227] sStmtList::sStmtList() [106] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  [22] term::setvect(bitvec const&) [228] sStmtList::~sStmtList() [114] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [33] term::term()          [229] sStmtList::~sStmtList() [69] std::_List_const_iterator<sObject*>::operator++()
  [54] term::term(term const&) [182] SymTabComb::getDef(std::string const&) const [397] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [24] term::~term()         [263] quSubState::isbasestate() const [162] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [55] term::operator=(term const&) [57] quSubState::baseterm(int) const [163] std::list<sObject*, std::allocator<sObject*> >::end()
 [469] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [264] quSubState::baseterms() const [121] std::list<sObject*, std::allocator<sObject*> >::begin()
 [470] opBit::~opBit()       [324] sListFunct::object() const [164] std::list<sObject*, std::allocator<sObject*> >::front()
 [471] opBit::~opBit()       [325] sSubscript::nargs() const [165] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
 [472] sCall::exec(SymTable*, SymTable*, QuHeap*) [215] quBaseState::isbasestate() const [166] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [241] sCall::typecheck(SymTable*, SymTable*) [58] quBaseState::map(bitvec const&) const [167] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [242] sCall::sCall(std::string*, sExprList*, int) [37] quBaseState::unmap(bitvec const&) const [168] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [243] sCall::~sCall()       [509] quBaseState::basebits() const [398] std::list<sObject*, std::allocator<sObject*> >::list()
 [244] sCall::~sCall()        [59] quBaseState::baseterm(int) const [553] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [473] sExit::typecheck(SymTable*, SymTable*) [265] quBaseState::baseterms() const [554] std::vector<tValue, std::allocator<tValue> >::end()
 [474] sExit::sExit(sExpr*)   [60] quSubString::map(bitvec const&) const [555] std::vector<tValue, std::allocator<tValue> >::begin()
 [475] sExit::~sExit()        [38] quSubString::unmap(bitvec const&) const [556] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [476] sExit::~sExit()        [26] quSubString::mapoffs() const [557] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [109] sExpr::type()         [266] opElementary::apply(quState&) const [558] std::vector<tValue, std::allocator<tValue> >::vector()
 [108] sExpr::settype(tType const&) [208] sIf::object() const [559] std::vector<tValue, std::allocator<tValue> >::~vector()
 [312] sExpr::basetype()     [510] sOr::object() const   [560] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [203] sExpr::sExpr(tType const&) [11] sDef::id() const  [561] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [127] sExpr::sExpr()         [80] sDef::type() const    [562] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [110] sExpr::~sExpr()       [239] sFor::object() const  [563] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [313] sLess::sLess(sExpr*, sExpr*) [378] sSub::object() const [20] std::complex<double>::complex(double, double)
 [314] sLess::~sLess()       [131] sVar::id() const      [333] std::complex<double>::operator*=(double)
 [315] sLess::~sLess()        [19] term::ampl() const     [44] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  [94] sList<sDef>::append(sDef*) [13] term::vect() const [147] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [138] sList<sDef>::sList()  [240] sCall::id() const     [122] sObject** std::__addressof<sObject*>(sObject*&)
 [139] sList<sDef>::~sList() [273] sCall::object() const [399] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [184] sList<sExpr>::append(sExpr*) [326] sLess::object() const [148] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [194] sList<sExpr>::sList()  [74] sList<sDef>::next(void*&) const [400] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [195] sList<sExpr>::~sList() [111] sList<sDef>::first(void*&) const [401] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [191] sList<sStmt>::append(sStmt*) [274] sList<sExpr>::n() const [564] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [222] sList<sStmt>::sList() [174] sList<sExpr>::next(void*&) const [402] void std::_Destroy<tValue*>(tValue*, tValue*)
 [223] sList<sStmt>::~sList() [175] sList<sExpr>::first(void*&) const [403] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [285] sMult::sMult(sExpr*, sExpr*) [192] sList<sStmt>::next(void*&) const [565] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [286] sMult::~sMult()       [230] sList<sStmt>::first(void*&) const [566] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [287] sMult::~sMult()       [269] sMult::object() const [567] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [188] sStmt::sStmt(int)     [511] sStmt::isInv() const  [568] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [189] sStmt::~sStmt()        [49] tType::ord() const    [149] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [316] sUnOp::typecheck(SymTable*, SymTable*) [209] tType::isInt() const [21] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [317] sUnOp::sUnOp(sExpr*)  [245] tType::isCond() const [298] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [318] sUnOp::~sUnOp()       [210] tType::isConv(tType const&) const [18] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [47] tType::tType(BaseType) [512] tType::isExpr() const [23] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [363] tType::tType(BaseType, int) [288] tType::isError() const [334] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  [75] tType::tType(tType const&) [100] tType::isQuReg() const [45] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  [79] tType::operator=(BaseType) [65] tType::basetype() const [299] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [67] tType::operator=(tType const&) [179] tType::isNumber() const [255] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [477] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [177] tType::isQuCond() const [290] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [478] QuHeap::init()        [107] tType::isQuExpr() const [53] operator&(bitvec const&, bitvec const&)
 [479] QuHeap::addReg(quState*) [513] tType::isString() const [190] operator~(bitvec const&)
 [480] QuHeap::qualloc(int, BaseType) [193] tType::isBoolean() const [347] operator==(bitvec const&, bitvec const&)
 [481] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [220] tType::isDefined() const [151] operator new(unsigned long, void*)
 [482] QuHeap::QuHeap(int, int) [275] tType::isOrdered() const [46] operator|(bitvec const&, bitvec const&)
 [483] QuHeap::~QuHeap()     [187] tType::isQuConst() const [1] <cycle 1>
  [87] SymTab::put(sDef*, tValue const&) [156] tType::operator==(BaseType) const [2] <cycle 2>
 [132] SymTab::deltree(SymTable::entry*) [283] tType::operator==(tType const&) const [3] <cycle 3>
  [93] SymTab::putentry(SymTable::entry*, SymTable::entry*) [514] QuHeap::cond() const [4] <cycle 4>
 [125] SymTab::SymTab(int)   [515] QuHeap::cmask() const   [5] <cycle 5>
 [484] SymTab::~SymTab()     [516] QuHeap::nBits() const
