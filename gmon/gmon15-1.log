Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 14.29      0.04     0.04   114175     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
 10.71      0.07     0.03   458385     0.00     0.00  bitvec::~bitvec()
 10.71      0.10     0.03   163355     0.00     0.00  std::complex<double>::complex(double, double)
  7.14      0.12     0.02    65552     0.00     0.00  quSubString::unmap(bitvec const&) const
  3.57      0.13     0.01   392076     0.00     0.00  term::vect() const
  3.57      0.14     0.01   245265     0.00     0.00  bitvec::operator=(bitvec const&)
  3.57      0.15     0.01   229422     0.00     0.00  bitvec::bitvec(bitvec const&)
  3.57      0.16     0.01   228963     0.00     0.00  bitvec::bitvec(int, unsigned long)
  3.57      0.17     0.01   129954     0.00     0.00  bitvec::hashfunct() const
  3.57      0.18     0.01   114175     0.00     0.00  term::setampl(std::complex<double> const&)
  3.57      0.19     0.01    65535     0.00     0.00  bitvec::operator|=(bitvec const&)
  3.57      0.20     0.01    65534     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  3.57      0.21     0.01    65534     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  3.57      0.22     0.01    32767     0.00     0.00  bitvec::getbits(int, int) const
  3.57      0.23     0.01    32767     0.00     0.00  bitvec::getword() const
  3.57      0.24     0.01    32767     0.00     0.01  opMatrix::addterms(terminfo const&) const
  3.57      0.25     0.01    15766     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  3.57      0.26     0.01     2338     0.00     0.00  yylex()
  3.57      0.27     0.01                             termlist::search(bitvec const&) const
  1.79      0.28     0.01     6456     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  1.79      0.28     0.01     3876     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.28     0.00   245265     0.00     0.00  bitvec::setlen(int)
  0.00      0.28     0.00   212475     0.00     0.00  term::ampl() const
  0.00      0.28     0.00   146942     0.00     0.00  term::setvect(bitvec const&)
  0.00      0.28     0.00   130580     0.00     0.00  term::~term()
  0.00      0.28     0.00   114188     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  0.00      0.28     0.00    98484     0.00     0.00  quState::mapbits() const
  0.00      0.28     0.00    98319     0.00     0.00  quSubString::mapoffs() const
  0.00      0.28     0.00    98304     0.00     0.00  bitvec::length() const
  0.00      0.28     0.00    97813     0.00     0.00  term::term()
  0.00      0.28     0.00    65552     0.00     0.00  bitvec::setbits(int, bitvec const&)
  0.00      0.28     0.00    65552     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  0.00      0.28     0.00    65552     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.00      0.28     0.00    65535     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.28     0.00    65534     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  0.00      0.28     0.00    65534     0.00     0.00  std::complex<double>::imag() const
  0.00      0.28     0.00    65534     0.00     0.00  std::complex<double>::real() const
  0.00      0.28     0.00    65534     0.00     0.00  operator|(bitvec const&, bitvec const&)
  0.00      0.28     0.00    48640     0.00     0.00  termlist::add(term const&)
  0.00      0.28     0.00    32782     0.00     0.00  terminfo::~terminfo()
  0.00      0.28     0.00    32769     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.00      0.28     0.00    32768     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.00      0.28     0.00    32767     0.00     0.00  term::term(term const&)
  0.00      0.28     0.00    32767     0.00     0.00  term::operator=(term const&)
  0.00      0.28     0.00    32767     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.00      0.28     0.00    32767     0.00     0.00  quSubState::baseterm(int) const
  0.00      0.28     0.00    32767     0.00     0.00  quBaseState::map(bitvec const&) const
  0.00      0.28     0.00    32767     0.00     0.00  quBaseState::baseterm(int) const
  0.00      0.28     0.00    32767     0.00     0.00  quSubString::map(bitvec const&) const
  0.00      0.28     0.00    32767     0.00     0.00  termlist::operator[](int) const
  0.00      0.28     0.00    21427     0.00     0.00  sDef::id() const
  0.00      0.28     0.00    15766     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.00      0.28     0.00    15766     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.00      0.28     0.00     4125     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.28     0.00     2906     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      0.28     0.00     1478     0.00     0.00  tType::tType(BaseType)
  0.00      0.28     0.00     1104     0.00     0.00  sArgDef::object() const
  0.00      0.28     0.00     1052     0.00     0.00  tType::ord() const
  0.00      0.28     0.00     1013     0.00     0.00  tType::basetype() const
  0.00      0.28     0.00      881     0.00     0.00  sObject::parent() const
  0.00      0.28     0.00      842     0.00     0.00  tType::operator=(tType const&)
  0.00      0.28     0.00      826     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      0.28     0.00      783     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      0.28     0.00      692     0.00     0.00  tValue::delpointer()
  0.00      0.28     0.00      692     0.00     0.00  tValue::ord() const
  0.00      0.28     0.00      692     0.00     0.00  tValue::basetype() const
  0.00      0.28     0.00      663     0.00     0.00  tValue::~tValue()
  0.00      0.28     0.00      554     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      0.28     0.00      531     0.00     0.00  tType::tType(tType const&)
  0.00      0.28     0.00      515     0.00     0.00  sObject::sObject(unsigned int)
  0.00      0.28     0.00      515     0.00     0.00  sObject::~sObject()
  0.00      0.28     0.00      455     0.00     0.00  sObject::setParent(sObject*)
  0.00      0.28     0.00      450     0.00     0.00  tType::operator=(BaseType)
  0.00      0.28     0.00      372     0.00     0.00  sDef::type() const
  0.00      0.28     0.00      370     0.00     0.00  sObject::isValueDef() const
  0.00      0.28     0.00      369     0.00     0.00  sQuOpDef::object() const
  0.00      0.28     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      0.28     0.00      365     0.00     0.00  sObject::isDef() const
  0.00      0.28     0.00      362     0.00     0.01  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      0.28     0.00      353     0.00     0.00  tValue::tValue()
  0.00      0.28     0.00      324     0.00     0.02  SymTab::put(sDef*, tValue const&)
  0.00      0.28     0.00      316     0.00     0.00  tValue::assign(tValue const&)
  0.00      0.28     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      0.28     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      0.28     0.00      294     0.00     0.00  sObject::isFunctDef() const
  0.00      0.28     0.00      287     0.00     0.00  tValue::tValue(tValue const&)
  0.00      0.28     0.00      276     0.00     0.03  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      0.28     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      0.28     0.00      264     0.00     0.01  SymTab::getRef(std::string const&, ObjType*) const
  0.00      0.28     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      0.28     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.28     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      0.28     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      0.28     0.00      253     0.00     0.00  sObject::isRoutDef() const
  0.00      0.28     0.00      176     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      0.28     0.00      167     0.00     0.00  sObject::def() const
  0.00      0.28     0.00      165     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      0.28     0.00      135     0.00     0.01  SymTab::getDef(std::string const&) const
  0.00      0.28     0.00      123     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.28     0.00      115     0.00     0.00  tType::isQuExpr() const
  0.00      0.28     0.00      109     0.00     0.00  sExpr::settype(tType const&)
  0.00      0.28     0.00       96     0.00     0.00  sExpr::type()
  0.00      0.28     0.00       95     0.00     0.00  sExpr::~sExpr()
  0.00      0.28     0.00       95     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      0.28     0.00       87     0.00     0.00  SymTable::SymTable()
  0.00      0.28     0.00       87     0.00     0.00  SymTable::~SymTable()
  0.00      0.28     0.00       86     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      0.28     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      0.28     0.00       82     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      0.28     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      0.28     0.00       82     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      0.28     0.00       82     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      0.28     0.00       82     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      0.28     0.00       82     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      0.28     0.00       82     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      0.28     0.00       79     0.00     0.00  sVarDef::object() const
  0.00      0.28     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      0.28     0.00       77     0.00     0.00  SymTab::SymTab(int)
  0.00      0.28     0.00       77     0.00     0.00  SymTab::~SymTab()
  0.00      0.28     0.00       74     0.00     0.00  sExpr::sExpr()
  0.00      0.28     0.00       73     0.00     0.00  sObject::isExtern() const
  0.00      0.28     0.00       63     0.00     0.00  tValue::type() const
  0.00      0.28     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      0.28     0.00       52     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      0.28     0.00       52     0.00     0.00  sVar::id() const
  0.00      0.28     0.00       48     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      0.28     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      0.28     0.00       44     0.00     0.01  sVar::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       44     0.00     0.00  sVar::sVar(std::string*)
  0.00      0.28     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      0.28     0.00       44     0.00     0.00  sVar::~sVar()
  0.00      0.28     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      0.28     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      0.28     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      0.28     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.28     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      0.28     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      0.28     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      0.28     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      0.28     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      0.28     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      0.28     0.00       43     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      0.28     0.00       42     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.28     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      0.28     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      0.28     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      0.28     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      0.28     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      0.28     0.00       41     0.00     0.00  sObject::isInclude() const
  0.00      0.28     0.00       41     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      0.28     0.00       41     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      0.28     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      0.28     0.00       41     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      0.28     0.00       41     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      0.28     0.00       37     0.00     0.00  sRoutDef::args()
  0.00      0.28     0.00       36     0.00     0.00  bitvec::qnot()
  0.00      0.28     0.00       36     0.00     0.00  quState::newclone()
  0.00      0.28     0.00       36     0.00     0.02  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.28     0.00       36     0.00     0.25  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.28     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      0.28     0.00       36     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      0.28     0.00       35     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      0.28     0.00       34     0.00     0.00  sDefList::object() const
  0.00      0.28     0.00       34     0.00     0.00  operator~(bitvec const&)
  0.00      0.28     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      0.28     0.00       31     0.00     0.00  termlist::clear()
  0.00      0.28     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      0.28     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      0.28     0.00       29     0.00     0.00  tValue::operator=(tValue const&)
  0.00      0.28     0.00       29     0.00     0.02  SymTabComb::getDef(std::string const&) const
  0.00      0.28     0.00       28     0.00     0.00  sObject::isCondDef() const
  0.00      0.28     0.00       27     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      0.28     0.00       27     0.00     0.00  quState::quState(int)
  0.00      0.28     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      0.28     0.00       26     0.00     0.00  quSubState::quSubState(int)
  0.00      0.28     0.00       26     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.00      0.28     0.00       26     0.00     0.00  quState::~quState()
  0.00      0.28     0.00       25     0.00     0.00  quSubState::~quSubState()
  0.00      0.28     0.00       25     0.00     0.00  quSubString::newsubstring(int, int)
  0.00      0.28     0.00       25     0.00     0.00  quSubString::~quSubString()
  0.00      0.28     0.00       25     0.00     0.00  quSubString::~quSubString()
  0.00      0.28     0.00       25     0.00     0.00  quBaseState::isbasestate() const
  0.00      0.28     0.00       25     0.00     0.00  tType::isQuConst() const
  0.00      0.28     0.00       24     0.00     0.00  sStmt::sStmt(int)
  0.00      0.28     0.00       24     0.00     0.00  sStmt::~sStmt()
  0.00      0.28     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      0.28     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      0.28     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      0.28     0.00       22     0.00     0.00  sList<sExpr>::sList()
  0.00      0.28     0.00       22     0.00     0.00  sList<sExpr>::~sList()
  0.00      0.28     0.00       22     0.00     0.00  sExprList::sExprList()
  0.00      0.28     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      0.28     0.00       22     0.00     0.00  sExprList::~sExprList()
  0.00      0.28     0.00       22     0.00     0.00  sObject::isQuOpDef() const
  0.00      0.28     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      0.28     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      0.28     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.28     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      0.28     0.00       21     0.00     0.00  sIf::object() const
  0.00      0.28     0.00       21     0.00     0.00  tType::isInt() const
  0.00      0.28     0.00       21     0.00     0.00  tType::isConv(tType const&) const
  0.00      0.28     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.28     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.28     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      0.28     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      0.28     0.00       19     0.00     0.00  sObject::inFunctDef() const
  0.00      0.28     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      0.28     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      0.28     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      0.28     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      0.28     0.00       18     0.00     0.03  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      0.28     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.28     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      0.28     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      0.28     0.00       18     0.00     0.00  quState::mapmask() const
  0.00      0.28     0.00       18     0.00     0.00  sObject::inQuDef() const
  0.00      0.28     0.00       18     0.00     0.00  sObject::isQuDef() const
  0.00      0.28     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      0.28     0.00       16     0.00     0.00  quBaseState::opend()
  0.00      0.28     0.00       16     0.00     0.00  quBaseState::opbegin()
  0.00      0.28     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      0.28     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.28     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      0.28     0.00       15     0.00     0.00  quSubState::opend()
  0.00      0.28     0.00       15     0.00     0.00  quSubState::opbegin()
  0.00      0.28     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      0.28     0.00       15     0.00     0.00  terminfo::terminfo()
  0.00      0.28     0.00       15     0.00     1.48  termlist::newlist()
  0.00      0.28     0.00       15     0.00     0.00  quSubState::baseterms() const
  0.00      0.28     0.00       15     0.00     0.00  quBaseState::baseterms() const
  0.00      0.28     0.00       15     0.00    16.25  opElementary::apply(quState&) const
  0.00      0.28     0.00       15     0.00     0.00  sFor::object() const
  0.00      0.28     0.00       15     0.00     0.00  sCall::id() const
  0.00      0.28     0.00       15     0.00     0.00  bitvec::operator[](int) const
  0.00      0.28     0.00       15     0.00     0.00  termlist::nterms() const
  0.00      0.28     0.00       14     0.00     0.04  sCall::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       14     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      0.28     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      0.28     0.00       14     0.00     0.00  sCall::~sCall()
  0.00      0.28     0.00       14     0.00     0.00  tType::isCond() const
  0.00      0.28     0.00       14     0.00     0.00  sObject::inQuFunDef() const
  0.00      0.28     0.00       14     0.00     0.00  sObject::isProcDef() const
  0.00      0.28     0.00       13     0.00     0.02  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00       13     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      0.28     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      0.28     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      0.28     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.28     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      0.28     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      0.28     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.28     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      0.28     0.00       10     0.00     0.00  quSubState::isbasestate() const
  0.00      0.28     0.00        9     0.00     0.00  sMult::object() const
  0.00      0.28     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      0.28     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      0.28     0.00        8     0.00     0.01  sExprList::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        8     0.00     0.00  sCall::object() const
  0.00      0.28     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      0.28     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      0.28     0.00        7     0.00     0.02  sIf::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      0.28     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.28     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      0.28     0.00        7     0.00     0.03  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.28     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      0.28     0.00        7     0.00     0.00  tType::operator==(tType const&) const
  0.00      0.28     0.00        7     0.00     0.00  tValue::isQuExpr() const
  0.00      0.28     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      0.28     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.28     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      0.28     0.00        6     0.00     0.00  tType::isError() const
  0.00      0.28     0.00        6     0.00     0.00  tValue::isError() const
  0.00      0.28     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.28     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      0.28     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      0.28     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.28     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      0.28     0.00        5     0.00     0.00  tValue::qustate() const
  0.00      0.28     0.00        5     0.00     0.00  sObject::isGlobal() const
  0.00      0.28     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.28     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.28     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      0.28     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      0.28     0.00        4     0.00     2.50  yyparse()
  0.00      0.28     0.00        4     0.00     0.01  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      0.28     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.28     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      0.28     0.00        4     0.00     0.02  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      0.28     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.28     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      0.28     0.00        4     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      0.28     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      0.28     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      0.28     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.28     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      0.28     0.00        4     0.00     0.01  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      0.28     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      0.28     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.28     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      0.28     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.28     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      0.28     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      0.28     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      0.28     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      0.28     0.00        4     0.00     0.00  sLess::object() const
  0.00      0.28     0.00        4     0.00     0.00  sLength::object() const
  0.00      0.28     0.00        4     0.00     0.00  sObject::isConstDef() const
  0.00      0.28     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.28     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      0.28     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      0.28     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      0.28     0.00        4     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      0.28     0.00        4     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      0.28     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      0.28     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      0.28     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.28     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      0.28     0.00        3     0.00     0.02  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.28     0.00        3     0.00     0.01  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        3     0.00     0.00  sEqual::object() const
  0.00      0.28     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      0.28     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      0.28     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      0.28     0.00        2     0.00     0.00  zero(bitvec const&)
  0.00      0.28     0.00        2     0.00     0.00  irqOn()
  0.00      0.28     0.00        2     0.00     0.00  duallog(int)
  0.00      0.28     0.00        2     0.00   131.91  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.28     0.00        2     0.00   129.41  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      0.28     0.00        2     0.00     2.50  parseobj()
  0.00      0.28     0.00        2     0.00     2.50  chksyntax(_IO_FILE*)
  0.00      0.28     0.00        2     0.00     0.00  yyCleanUp()
  0.00      0.28     0.00        2     0.00     0.06  sFor::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      0.28     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.28     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      0.28     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      0.28     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.28     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      0.28     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      0.28     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      0.28     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      0.28     0.00        2     0.00     0.00  objlist::objlist()
  0.00      0.28     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      0.28     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.28     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      0.28     0.00        2     0.00     1.61  termlist::dellist()
  0.00      0.28     0.00        2     0.00     1.48  termlist::termlist(int, int)
  0.00      0.28     0.00        2     0.00     1.61  termlist::~termlist()
  0.00      0.28     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      0.28     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      0.28     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      0.28     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      0.28     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.28     0.00        2     0.00     0.00  sSub::object() const
  0.00      0.28     0.00        2     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      0.28     0.00        2     0.00     0.00  bitvec::testzero() const
  0.00      0.28     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      0.28     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      0.28     0.00        2     0.00     0.00  sConcat::object() const
  0.00      0.28     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      0.28     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      0.28     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      0.28     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      0.28     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      0.28     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      0.28     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      0.28     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      0.28     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      0.28     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      0.28     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      0.28     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      0.28     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      0.28     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.28     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      0.28     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      0.28     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.28     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.28     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      0.28     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_qc_check_txt
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      0.28     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      0.28     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      0.28     0.00        1     0.00     0.00  initialize_readline()
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.28     0.00        1     0.00   243.82  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      0.28     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      0.28     0.00        1     0.00     0.00  qc_srand(long)
  0.00      0.28     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      0.28     0.00        1     0.00     0.00  opOperator::opOperator(int)
  0.00      0.28     0.00        1     0.00     0.00  opOperator::~opOperator()
  0.00      0.28     0.00        1     0.00     0.00  quBaseState::reset(bitvec const&)
  0.00      0.28     0.00        1     0.00     2.97  quBaseState::quBaseState(int, int)
  0.00      0.28     0.00        1     0.00     3.22  quBaseState::~quBaseState()
  0.00      0.28     0.00        1     0.00     3.22  quBaseState::~quBaseState()
  0.00      0.28     0.00        1     0.00     0.00  opElementary::opElementary(int)
  0.00      0.28     0.00        1     0.00     0.00  opElementary::~opElementary()
  0.00      0.28     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      0.28     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.28     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      0.28     0.00        1     0.00     0.00  sDef::basetype()
  0.00      0.28     0.00        1     0.00     0.01  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      0.28     0.00        1     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      0.28     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      0.28     0.00        1     0.00     0.00  opBit::~opBit()
  0.00      0.28     0.00        1     0.00   243.86  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      0.28     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      0.28     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      0.28     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.28     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      0.28     0.00        1     0.00   243.82  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::init()
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::qualloc(int, BaseType)
  0.00      0.28     0.00        1     0.00   243.82  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      0.28     0.00        1     0.00     2.97  QuHeap::QuHeap(int, int)
  0.00      0.28     0.00        1     0.00     3.22  QuHeap::~QuHeap()
  0.00      0.28     0.00        1     0.00     0.00  SymTab::~SymTab()
  0.00      0.28     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      0.28     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      0.28     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      0.28     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      0.28     0.00        1     0.00     0.02  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      0.28     0.00        1     0.00     0.00  opMatrix::opMatrix(int)
  0.00      0.28     0.00        1     0.00     0.00  opMatrix::~opMatrix()
  0.00      0.28     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      0.28     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.28     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      0.28     0.00        1     0.00   243.82  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      0.28     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      0.28     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      0.28     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      0.28     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      0.28     0.00        1     0.00     0.00  sOr::object() const
  0.00      0.28     0.00        1     0.00     0.00  sStmt::isInv() const
  0.00      0.28     0.00        1     0.00     0.00  tType::isExpr() const
  0.00      0.28     0.00        1     0.00     0.00  tType::isString() const
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::cond() const
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::cmask() const
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::nBits() const
  0.00      0.28     0.00        1     0.00     0.00  QuHeap::ncond() const
  0.00      0.28     0.00        1     0.00     0.00  tValue::conv(tType const&) const
  0.00      0.28     0.00        1     0.00     0.00  tValue::isExpr() const
  0.00      0.28     0.00        1     0.00     0.00  sObject::isStmt() const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      0.28     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      0.28     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.28     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      0.28     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      0.28     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      0.28     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.28     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      0.28     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      0.28     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      0.28     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 3.57% of 0.28 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     96.4    0.00    0.27                 main [1]
                0.00    0.26       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
                0.00    0.00       2/77          SymTab::SymTab(int) [180]
                0.00    0.00       2/77          SymTab::~SymTab() [181]
                0.00    0.00       1/1           initialize_readline() [448]
                0.00    0.00       1/1           parseopt(int, char**) [472]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
-----------------------------------------------
                0.00    0.26       2/2           main [1]
[2]     94.2    0.00    0.26       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.26       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.01       2/2           chksyntax(_IO_FILE*) [46]
                0.00    0.00       4/4           openqclfile(std::string) [340]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [339]
-----------------------------------------------
                0.00    0.26       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     92.4    0.00    0.26       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.24       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.01      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.01       2/2           parseobj() [45]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [66]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       1/14          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [199]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [217]
                0.00    0.00      41/41          sObject::isInclude() const [210]
                0.00    0.00      41/365         sObject::isDef() const [144]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [220]
                0.00    0.00       1/1           sObject::isStmt() const [521]
                0.00    0.00       1/14          sCall::~sCall() [298]
-----------------------------------------------
                0.00    0.24       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     87.1    0.00    0.24       1         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.24       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00       2/18          quState::mapmask() const [84]
                0.00    0.00       5/458385      bitvec::~bitvec() [16]
                0.00    0.00       1/65535       bitvec::operator|=(bitvec const&) [32]
                0.00    0.00       1/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00       1/1           QuHeap::cmask() const [96]
                0.00    0.00       1/32768       operator&(bitvec const&, bitvec const&) [62]
                0.00    0.00       3/663         tValue::~tValue() [133]
                0.00    0.00       3/5           tValue::qustate() const [335]
                0.00    0.00       2/37          sRoutDef::args() [222]
                0.00    0.00       2/2           zero(bitvec const&) [377]
                0.00    0.00       1/1           QuHeap::nBits() const [517]
                0.00    0.00       1/353         tValue::tValue() [145]
                0.00    0.00       1/15          sCall::id() const [294]
                0.00    0.00       1/14          sObject::isProcDef() const [302]
                0.00    0.00       1/18          sObject::isQuDef() const [281]
                0.00    0.00       1/77          SymTab::SymTab(int) [180]
                0.00    0.00       1/35          sList<sExpr>::first(void*&) const [228]
                0.00    0.00       1/95          sList<sDef>::first(void*&) const [166]
                0.00    0.00       1/372         sDef::type() const [140]
                0.00    0.00       1/1           tValue::conv(tType const&) const [519]
                0.00    0.00       1/29          tValue::operator=(tValue const&) [234]
                0.00    0.00       1/6           tValue::isError() const [329]
                0.00    0.00       1/7           tValue::isQuExpr() const [324]
                0.00    0.00       1/98484       quState::mapbits() const [106]
                0.00    0.00       1/36          sList<sExpr>::next(void*&) const [227]
                0.00    0.00       1/554         sList<sDef>::next(void*&) const [134]
                0.00    0.00       1/28          sObject::isCondDef() const [235]
                0.00    0.00       1/1           QuHeap::cond() const [516]
                0.00    0.00       1/1           sStmt::isInv() const [513]
-----------------------------------------------
                0.00    0.24       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
[5]     87.1    0.00    0.24       1         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.24      15/15          opElementary::apply(quState&) const [9]
                0.00    0.00       1/264         SymTab::getRef(std::string const&, ObjType*) const [61]
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
                0.00    0.00       6/163355      std::complex<double>::complex(double, double) [17]
                0.00    0.00       1/1           opBit::~opBit() [92]
                0.00    0.00      16/98484       quState::mapbits() const [106]
                0.00    0.00      15/26          quSubString::newsubstring(int, int) <cycle 5> [243]
                0.00    0.00      15/25          quSubString::~quSubString() [244]
                0.00    0.00       2/21427       sDef::id() const [117]
                0.00    0.00       1/7           tValue::isQuExpr() const [324]
                0.00    0.00       1/5           tValue::qustate() const [335]
-----------------------------------------------
                0.00    0.24       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[6]     87.1    0.00    0.24       1         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.24       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.00       1/28          sObject::isCondDef() const [235]
-----------------------------------------------
                0.00    0.24       1/1           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
[7]     87.1    0.00    0.24       1         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.24       1/1           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/1           SymTab::~SymTab() [489]
-----------------------------------------------
                0.00    0.24       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[8]     87.1    0.00    0.24       1         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.24       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/353         tValue::tValue() [145]
                0.00    0.00       1/73          sObject::isExtern() const [183]
                0.00    0.00       1/663         tValue::~tValue() [133]
-----------------------------------------------
                0.00    0.24      15/15          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[9]     87.1    0.00    0.24      15         opElementary::apply(quState&) const [9]
                0.01    0.19   32767/32767       opMatrix::addterms(terminfo const&) const [10]
                0.00    0.02   32767/32767       quSubString::map(bitvec const&) const [21]
                0.00    0.01   32767/32767       terminfo::terminfo(terminfo const&) [25]
                0.00    0.00   65579/458385      bitvec::~bitvec() [16]
                0.00    0.00   32782/32782       terminfo::~terminfo() [49]
                0.00    0.00   32767/32767       term::operator=(term const&) [60]
                0.00    0.00   65534/392076      term::vect() const [28]
                0.00    0.00   32767/32768       operator&(bitvec const&, bitvec const&) [62]
                0.00    0.00   32782/245265      bitvec::operator=(bitvec const&) [36]
                0.00    0.00   32767/146942      term::setvect(bitvec const&) [44]
                0.00    0.00      15/18          quState::mapmask() const [84]
                0.00    0.00      15/15          terminfo::terminfo() [87]
                0.00    0.00      15/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00      15/34          operator~(bitvec const&) [90]
                0.00    0.00   32767/32767       quSubState::baseterm(int) const [114]
                0.00    0.00      15/98484       quState::mapbits() const [106]
                0.00    0.00      15/15          quSubState::opbegin() [289]
                0.00    0.00      15/15          quSubState::baseterms() const [291]
                0.00    0.00      15/15          quSubState::opend() [288]
-----------------------------------------------
                0.01    0.19   32767/32767       opElementary::apply(quState&) const [9]
[10]    71.9    0.01    0.19   32767         opMatrix::addterms(terminfo const&) const [10]
                0.00    0.10   65534/65534       quSubState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.02    0.01   65534/65552       quSubString::unmap(bitvec const&) const [15]
                0.01    0.01   65534/65534       std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
                0.00    0.01   65534/65534       operator|(bitvec const&, bitvec const&) [22]
                0.01    0.00   32767/32767       bitvec::getword() const [34]
                0.01    0.00  131068/458385      bitvec::~bitvec() [16]
                0.01    0.00   32767/163355      std::complex<double>::complex(double, double) [17]
                0.01    0.00  196602/392076      term::vect() const [28]
                0.00    0.00   98301/212475      term::ampl() const [105]
                0.00    0.00   98301/98304       bitvec::length() const [108]
-----------------------------------------------
[11]    35.3    0.04    0.06   65535+97280   <cycle 4 as a whole> [11]
                0.04    0.06  114175+13          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   48640             termlist::add(term const&) <cycle 4> [64]
-----------------------------------------------
                0.00    0.00       1/65535       quBaseState::reset(bitvec const&) [89]
                0.00    0.10   65534/65535       quSubState::opadd(bitvec const&, std::complex<double> const&) [13]
[12]    35.3    0.00    0.10   65535         quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.04    0.06   65535/65535       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.10   65534/65534       opMatrix::addterms(terminfo const&) const [10]
[13]    35.3    0.00    0.10   65534         quSubState::opadd(bitvec const&, std::complex<double> const&) [13]
                0.00    0.10   65534/65535       quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
-----------------------------------------------
                                  13             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                               48640             termlist::add(term const&) <cycle 4> [64]
                0.04    0.06   65535/65535       quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
[14]    34.8    0.04    0.06  114175+13      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.02      13/15          termlist::newlist() [19]
                0.01    0.00   15766/15766       termlist::hashfunct2(bitvec const&) const [24]
                0.01    0.00  114175/114175      term::setampl(std::complex<double> const&) [31]
                0.00    0.01  114188/114188      termlist::hashfunct1(bitvec const&) const [40]
                0.00    0.00  114175/146942      term::setvect(bitvec const&) [44]
                0.00    0.00   48640/130580      term::~term() [41]
                0.00    0.00   15766/392076      term::vect() const [28]
                0.00    0.00   15766/15766       operator==(bitvec const&, bitvec const&) [119]
                0.00    0.00      13/31          termlist::clear() [231]
                               48640             termlist::add(term const&) <cycle 4> [64]
                                  13             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00      18/65552       quState::mapmask() const [84]
                0.02    0.01   65534/65552       opMatrix::addterms(terminfo const&) const [10]
[15]    10.7    0.02    0.01   65552         quSubString::unmap(bitvec const&) const [15]
                0.00    0.00   65552/458385      bitvec::~bitvec() [16]
                0.00    0.00   65552/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00   65552/65552       quBaseState::unmap(bitvec const&) const [59]
                0.00    0.00   65552/98484       quState::mapbits() const [106]
                0.00    0.00   65552/98319       quSubString::mapoffs() const [107]
                0.00    0.00   65552/65552       bitvec::setbits(int, bitvec const&) [109]
-----------------------------------------------
                0.00    0.00       1/458385      quBaseState::reset(bitvec const&) [89]
                0.00    0.00       1/458385      quBaseState::quBaseState(int, int) [57]
                0.00    0.00       2/458385      QuHeap::qualloc(int, BaseType) [91]
                0.00    0.00       3/458385      QuHeap::QuHeap(int, int) [56]
                0.00    0.00       4/458385      opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
                0.00    0.00       5/458385      QuHeap::~QuHeap() [50]
                0.00    0.00       5/458385      sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      36/458385      quState::mapmask() const [84]
                0.00    0.00   32767/458385      quSubString::map(bitvec const&) const [21]
                0.00    0.00   32782/458385      terminfo::~terminfo() [49]
                0.00    0.00   65552/458385      quSubString::unmap(bitvec const&) const [15]
                0.00    0.00   65579/458385      opElementary::apply(quState&) const [9]
                0.01    0.00  130580/458385      term::~term() [41]
                0.01    0.00  131068/458385      opMatrix::addterms(terminfo const&) const [10]
[16]    10.7    0.03    0.00  458385         bitvec::~bitvec() [16]
-----------------------------------------------
                0.00    0.00       1/163355      yylex() [26]
                0.00    0.00       1/163355      quBaseState::reset(bitvec const&) [89]
                0.00    0.00       6/163355      ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.01    0.00   32767/163355      term::term(term const&) [38]
                0.01    0.00   32767/163355      opMatrix::addterms(terminfo const&) const [10]
                0.02    0.00   97813/163355      term::term() [18]
[17]    10.7    0.03    0.00  163355         std::complex<double>::complex(double, double) [17]
-----------------------------------------------
                0.00    0.00       6/97813       opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
                0.00    0.00      15/97813       terminfo::terminfo() [87]
                0.00    0.02   97792/97813       termlist::newlist() [19]
[18]     7.9    0.00    0.02   97813         term::term() [18]
                0.02    0.00   97813/163355      std::complex<double>::complex(double, double) [17]
                0.00    0.00   97813/228963      bitvec::bitvec(int, unsigned long) [37]
-----------------------------------------------
                0.00    0.00       2/15          termlist::termlist(int, int) [58]
                0.00    0.02      13/15          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[19]     7.9    0.00    0.02      15         termlist::newlist() [19]
                0.00    0.02   97792/97813       term::term() [18]
-----------------------------------------------
                0.01    0.01   65534/65534       opMatrix::addterms(terminfo const&) const [10]
[20]     7.1    0.01    0.01   65534         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
                0.01    0.00   65534/65534       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
-----------------------------------------------
                0.00    0.02   32767/32767       opElementary::apply(quState&) const [9]
[21]     5.4    0.00    0.02   32767         quSubString::map(bitvec const&) const [21]
                0.01    0.00   32767/32767       bitvec::getbits(int, int) const [23]
                0.00    0.00   32767/458385      bitvec::~bitvec() [16]
                0.00    0.00   32767/32767       quBaseState::map(bitvec const&) const [63]
                0.00    0.00   32767/98484       quState::mapbits() const [106]
                0.00    0.00   32767/98319       quSubString::mapoffs() const [107]
-----------------------------------------------
                0.00    0.01   65534/65534       opMatrix::addterms(terminfo const&) const [10]
[22]     4.6    0.00    0.01   65534         operator|(bitvec const&, bitvec const&) [22]
                0.01    0.00   65534/65535       bitvec::operator|=(bitvec const&) [32]
                0.00    0.00   65534/229422      bitvec::bitvec(bitvec const&) [29]
-----------------------------------------------
                0.01    0.00   32767/32767       quSubString::map(bitvec const&) const [21]
[23]     4.1    0.01    0.00   32767         bitvec::getbits(int, int) const [23]
                0.00    0.00   32767/228963      bitvec::bitvec(int, unsigned long) [37]
-----------------------------------------------
                0.01    0.00   15766/15766       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[24]     4.0    0.01    0.00   15766         termlist::hashfunct2(bitvec const&) const [24]
                0.00    0.00   15766/129954      bitvec::hashfunct() const [30]
-----------------------------------------------
                0.00    0.01   32767/32767       opElementary::apply(quState&) const [9]
[25]     3.9    0.00    0.01   32767         terminfo::terminfo(terminfo const&) [25]
                0.00    0.01   32767/32767       term::term(term const&) [38]
                0.00    0.00   32767/229422      bitvec::bitvec(bitvec const&) [29]
-----------------------------------------------
                0.01    0.00    2338/2338        yyparse() [27]
[26]     3.6    0.01    0.00    2338         yylex() [26]
                0.00    0.00       1/163355      std::complex<double>::complex(double, double) [17]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [260]
                0.00    0.00      19/663         tValue::~tValue() [133]
                0.00    0.00      15/15          tValue::tValue(long) [290]
                0.00    0.00      12/12          yy_get_next_buffer() [304]
                0.00    0.00       8/8           yy_get_previous_state() [313]
                0.00    0.00       2/2           tValue::tValue(double) [388]
                0.00    0.00       1/26          yy_load_buffer_state() [238]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [493]
                0.00    0.00       1/1           tValue::tValue(char const*) [491]
-----------------------------------------------
                0.00    0.01       2/4           chksyntax(_IO_FILE*) [46]
                0.00    0.01       2/4           parseobj() [45]
[27]     3.6    0.00    0.01       4         yyparse() [27]
                0.01    0.00    2338/2338        yylex() [26]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [151]
                0.00    0.00     268/1478        tType::tType(BaseType) [122]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [152]
                0.00    0.00      44/44          sVar::sVar(std::string*) [190]
                0.00    0.00      44/44          sDefList::sDefList() [195]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [221]
                0.00    0.00      27/27          sList<sExpr>::append(sExpr*) [236]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [250]
                0.00    0.00      22/22          sExprList::sExprList() [255]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [267]
                0.00    0.00      18/18          sStmtList::sStmtList() [276]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [285]
                0.00    0.00      14/14          sCall::sCall(std::string*, sExprList*, int) [297]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [314]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [318]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [325]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [158]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [344]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [354]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [348]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [341]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [332]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [370]
                0.00    0.00       2/2           objlist::objlist() [390]
                0.00    0.00       2/2           tType::tType(BaseType, int) [387]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [381]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [384]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [391]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [495]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [484]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [479]
-----------------------------------------------
                0.00    0.00   15766/392076      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   32767/392076      term::term(term const&) [38]
                0.00    0.00   32767/392076      term::operator=(term const&) [60]
                0.00    0.00   48640/392076      termlist::add(term const&) <cycle 4> [64]
                0.00    0.00   65534/392076      opElementary::apply(quState&) const [9]
                0.01    0.00  196602/392076      opMatrix::addterms(terminfo const&) const [10]
[28]     3.6    0.01    0.00  392076         term::vect() const [28]
-----------------------------------------------
                0.00    0.00      34/229422      operator~(bitvec const&) [90]
                0.00    0.00   32767/229422      quBaseState::map(bitvec const&) const [63]
                0.00    0.00   32767/229422      terminfo::terminfo(terminfo const&) [25]
                0.00    0.00   32768/229422      operator&(bitvec const&, bitvec const&) [62]
                0.00    0.00   65534/229422      operator|(bitvec const&, bitvec const&) [22]
                0.00    0.00   65552/229422      quBaseState::unmap(bitvec const&) const [59]
[29]     3.6    0.01    0.00  229422         bitvec::bitvec(bitvec const&) [29]
-----------------------------------------------
                0.00    0.00   15766/129954      termlist::hashfunct2(bitvec const&) const [24]
                0.01    0.00  114188/129954      termlist::hashfunct1(bitvec const&) const [40]
[30]     3.6    0.01    0.00  129954         bitvec::hashfunct() const [30]
-----------------------------------------------
                0.01    0.00  114175/114175      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[31]     3.6    0.01    0.00  114175         term::setampl(std::complex<double> const&) [31]
-----------------------------------------------
                0.00    0.00       1/65535       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.01    0.00   65534/65535       operator|(bitvec const&, bitvec const&) [22]
[32]     3.6    0.01    0.00   65535         bitvec::operator|=(bitvec const&) [32]
-----------------------------------------------
                0.01    0.00   65534/65534       std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
[33]     3.6    0.01    0.00   65534         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
                0.00    0.00   65534/65534       std::complex<double>::real() const [112]
                0.00    0.00   65534/65534       std::complex<double>::imag() const [111]
-----------------------------------------------
                0.01    0.00   32767/32767       opMatrix::addterms(terminfo const&) const [10]
[34]     3.6    0.01    0.00   32767         bitvec::getword() const [34]
-----------------------------------------------
                                                 <spontaneous>
[35]     3.6    0.01    0.00                 termlist::search(bitvec const&) const [35]
-----------------------------------------------
                0.00    0.00       3/245265      QuHeap::QuHeap(int, int) [56]
                0.00    0.00       4/245265      term::set(bitvec const&, std::complex<double> const&) [95]
                0.00    0.00   32767/245265      term::term(term const&) [38]
                0.00    0.00   32767/245265      term::operator=(term const&) [60]
                0.00    0.00   32782/245265      opElementary::apply(quState&) const [9]
                0.01    0.00  146942/245265      term::setvect(bitvec const&) [44]
[36]     3.6    0.01    0.00  245265         bitvec::operator=(bitvec const&) [36]
                0.00    0.00  245265/245265      bitvec::setlen(int) [104]
-----------------------------------------------
                0.00    0.00       1/228963      QuHeap::cmask() const [96]
                0.00    0.00       1/228963      sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/228963      quBaseState::reset(bitvec const&) [89]
                0.00    0.00       1/228963      quBaseState::quBaseState(int, int) [57]
                0.00    0.00       4/228963      opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
                0.00    0.00       8/228963      QuHeap::QuHeap(int, int) [56]
                0.00    0.00      15/228963      opElementary::apply(quState&) const [9]
                0.00    0.00      15/228963      terminfo::terminfo() [87]
                0.00    0.00      18/228963      quState::mapmask() const [84]
                0.00    0.00   32767/228963      bitvec::getbits(int, int) const [23]
                0.00    0.00   32767/228963      term::term(term const&) [38]
                0.00    0.00   65552/228963      quSubString::unmap(bitvec const&) const [15]
                0.00    0.00   97813/228963      term::term() [18]
[37]     3.6    0.01    0.00  228963         bitvec::bitvec(int, unsigned long) [37]
-----------------------------------------------
                0.00    0.01   32767/32767       terminfo::terminfo(terminfo const&) [25]
[38]     3.4    0.00    0.01   32767         term::term(term const&) [38]
                0.01    0.00   32767/163355      std::complex<double>::complex(double, double) [17]
                0.00    0.00   32767/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00   32767/245265      bitvec::operator=(bitvec const&) [36]
                0.00    0.00   32767/392076      term::vect() const [28]
                0.00    0.00   32767/212475      term::ampl() const [105]
-----------------------------------------------
                0.00    0.01      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[39]     3.2    0.00    0.01      36         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.01     275/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00     263/264         SymTab::getRef(std::string const&, ObjType*) const [61]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
                0.00    0.00      36/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [74]
                0.00    0.00     734/21427       sDef::id() const [117]
                0.00    0.00     435/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [120]
                0.00    0.00     275/353         tValue::tValue() [145]
                0.00    0.00     275/663         tValue::~tValue() [133]
                0.00    0.00     263/294         sObject::isFunctDef() const [149]
                0.00    0.00     263/372         sDef::type() const [140]
                0.00    0.00     263/263         tType::isQuReg() const [156]
                0.00    0.00     263/554         sList<sDef>::next(void*&) const [134]
                0.00    0.00      72/77          SymTab::SymTab(int) [180]
                0.00    0.00      72/77          SymTab::~SymTab() [181]
                0.00    0.00      52/455         sObject::setParent(sObject*) [138]
                0.00    0.00      36/167         sObject::def() const [159]
                0.00    0.00      36/95          sList<sDef>::first(void*&) const [166]
                0.00    0.00      36/73          sObject::isExtern() const [183]
                0.00    0.00       8/253         sObject::isRoutDef() const [157]
                0.00    0.00       8/28          sObject::isCondDef() const [235]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [308]
                0.00    0.00       8/30          sObject::isQuFunDef() const [233]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [309]
                0.00    0.00       3/3           sObject::isBennet() const [375]
-----------------------------------------------
                0.00    0.01  114188/114188      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[40]     3.1    0.00    0.01  114188         termlist::hashfunct1(bitvec const&) const [40]
                0.01    0.00  114188/129954      bitvec::hashfunct() const [30]
-----------------------------------------------
                0.00    0.00       6/130580      opMatrix::~opMatrix() [94]
                0.00    0.00   32782/130580      terminfo::~terminfo() [49]
                0.00    0.00   48640/130580      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   49152/130580      termlist::dellist() [51]
[41]     3.1    0.00    0.01  130580         term::~term() [41]
                0.01    0.00  130580/458385      bitvec::~bitvec() [16]
-----------------------------------------------
                0.00    0.00       1/324         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       1/324         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/324         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       3/324         sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       6/324         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      36/324         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [66]
                0.00    0.01     275/324         sRoutDef::typecheck(SymTable*, SymTable*) [39]
[42]     2.5    0.00    0.01     324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.01     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
                0.00    0.00     324/365         sObject::isDef() const [144]
                0.00    0.00     324/370         sObject::isValueDef() const [141]
                0.00    0.00     280/287         tValue::tValue(tValue const&) [150]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
                0.00    0.01     276/276         SymTab::put(sDef*, tValue const&) [42]
[43]     2.5    0.00    0.01     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
                0.00    0.00    3403/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [48]
                0.00    0.00    3254/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [47]
                0.00    0.00   13314/21427       sDef::id() const [117]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
-----------------------------------------------
                0.00    0.00   32767/146942      opElementary::apply(quState&) const [9]
                0.00    0.00  114175/146942      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[44]     2.1    0.00    0.01  146942         term::setvect(bitvec const&) [44]
                0.01    0.00  146942/245265      bitvec::operator=(bitvec const&) [36]
-----------------------------------------------
                0.00    0.01       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[45]     1.8    0.00    0.01       2         parseobj() [45]
                0.00    0.01       2/4           yyparse() [27]
-----------------------------------------------
                0.00    0.01       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[46]     1.8    0.00    0.01       2         chksyntax(_IO_FILE*) [46]
                0.00    0.01       2/4           yyparse() [27]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [339]
                0.00    0.00       2/2           yyCleanUp() [380]
-----------------------------------------------
                0.00    0.00    3202/6456        SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00    3254/6456        SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
[47]     1.8    0.01    0.00    6456         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [47]
-----------------------------------------------
                0.00    0.00     473/3876        SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00    3403/3876        SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
[48]     1.8    0.01    0.00    3876         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [48]
-----------------------------------------------
                0.00    0.00   32782/32782       opElementary::apply(quState&) const [9]
[49]     1.5    0.00    0.00   32782         terminfo::~terminfo() [49]
                0.00    0.00   32782/130580      term::~term() [41]
                0.00    0.00   32782/458385      bitvec::~bitvec() [16]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[50]     1.1    0.00    0.00       1         QuHeap::~QuHeap() [50]
                0.00    0.00       1/1           quBaseState::~quBaseState() [53]
                0.00    0.00       5/458385      bitvec::~bitvec() [16]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [409]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [528]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [525]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [557]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [560]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [564]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [562]
-----------------------------------------------
                0.00    0.00       2/2           termlist::~termlist() [52]
[51]     1.1    0.00    0.00       2         termlist::dellist() [51]
                0.00    0.00   49152/130580      term::~term() [41]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::~quBaseState() [54]
[52]     1.1    0.00    0.00       2         termlist::~termlist() [52]
                0.00    0.00       2/2           termlist::dellist() [51]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[53]     1.1    0.00    0.00       1         quBaseState::~quBaseState() [53]
                0.00    0.00       1/1           quBaseState::~quBaseState() [54]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::~quBaseState() [53]
[54]     1.1    0.00    0.00       1         quBaseState::~quBaseState() [54]
                0.00    0.00       2/2           termlist::~termlist() [52]
                0.00    0.00       1/26          quState::~quState() [241]
-----------------------------------------------
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00       1/362         SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00     133/362         SymTab::getDef(std::string const&) const [65]
                0.00    0.00     228/362         SymTab::getRef(std::string const&, ObjType*) const [61]
[55]     1.1    0.00    0.00     362+3328    SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00    3202/6456        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [47]
                0.00    0.00     473/3876        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [48]
                0.00    0.00    7365/21427       sDef::id() const [117]
                0.00    0.00    3690/4125        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [120]
                                3328             SymTab::getentry(SymTable::entry*, std::string const&) const [55]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[56]     1.1    0.00    0.00       1         QuHeap::QuHeap(int, int) [56]
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [57]
                0.00    0.00       8/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00       3/458385      bitvec::~bitvec() [16]
                0.00    0.00       3/245265      bitvec::operator=(bitvec const&) [36]
                0.00    0.00       2/36          bitvec::qnot() [223]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [561]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [563]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [559]
                0.00    0.00       1/1           QuHeap::init() [487]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[57]     1.1    0.00    0.00       1         quBaseState::quBaseState(int, int) [57]
                0.00    0.00       2/2           termlist::termlist(int, int) [58]
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [89]
                0.00    0.00       1/458385      bitvec::~bitvec() [16]
                0.00    0.00       1/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00       1/27          quState::quState(int) [237]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::quBaseState(int, int) [57]
[58]     1.1    0.00    0.00       2         termlist::termlist(int, int) [58]
                0.00    0.00       2/15          termlist::newlist() [19]
                0.00    0.00       2/2           duallog(int) [379]
                0.00    0.00       2/31          termlist::clear() [231]
-----------------------------------------------
                0.00    0.00   65552/65552       quSubString::unmap(bitvec const&) const [15]
[59]     1.0    0.00    0.00   65552         quBaseState::unmap(bitvec const&) const [59]
                0.00    0.00   65552/229422      bitvec::bitvec(bitvec const&) [29]
-----------------------------------------------
                0.00    0.00   32767/32767       opElementary::apply(quState&) const [9]
[60]     0.8    0.00    0.00   32767         term::operator=(term const&) [60]
                0.00    0.00   32767/245265      bitvec::operator=(bitvec const&) [36]
                0.00    0.00   32767/392076      term::vect() const [28]
                0.00    0.00   32767/212475      term::ampl() const [105]
-----------------------------------------------
                0.00    0.00       1/264         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00     263/264         sRoutDef::typecheck(SymTable*, SymTable*) [39]
[61]     0.7    0.00    0.00     264         SymTab::getRef(std::string const&, ObjType*) const [61]
                0.00    0.00     228/362         SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00       1/370         sObject::isValueDef() const [141]
-----------------------------------------------
                0.00    0.00       1/32768       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00   32767/32768       opElementary::apply(quState&) const [9]
[62]     0.5    0.00    0.00   32768         operator&(bitvec const&, bitvec const&) [62]
                0.00    0.00   32768/229422      bitvec::bitvec(bitvec const&) [29]
                0.00    0.00   32768/32769       bitvec::operator&=(bitvec const&) [113]
-----------------------------------------------
                0.00    0.00   32767/32767       quSubString::map(bitvec const&) const [21]
[63]     0.5    0.00    0.00   32767         quBaseState::map(bitvec const&) const [63]
                0.00    0.00   32767/229422      bitvec::bitvec(bitvec const&) [29]
-----------------------------------------------
                               48640             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[64]     0.4    0.00    0.00   48640         termlist::add(term const&) <cycle 4> [64]
                0.00    0.00   48640/392076      term::vect() const [28]
                0.00    0.00   48640/212475      term::ampl() const [105]
                               48640             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00       1/135         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00       1/135         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/135         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       3/135         sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       7/135         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      32/135         sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00      36/135         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00      53/135         SymTabComb::getDef(std::string const&) const [71]
[65]     0.4    0.00    0.00     135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00     133/362         SymTab::getentry(SymTable::entry*, std::string const&) const [55]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[66]     0.3    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [66]
                0.00    0.00      36/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00      36/167         sObject::def() const [159]
                0.00    0.00      36/353         tValue::tValue() [145]
                0.00    0.00      36/663         tValue::~tValue() [133]
-----------------------------------------------
[67]     0.2    0.00    0.00       8+19      <cycle 3 as a whole> [67]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
-----------------------------------------------
                0.00    0.00       2/44          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       4/44          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       4/44          sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       4/44          sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       6/44          sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00      12/44          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      12/44          sBinOp::typecheck(SymTable*, SymTable*) [73]
[68]     0.2    0.00    0.00      44         sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00      32/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [71]
                0.00    0.00      48/52          sVar::id() const [187]
                0.00    0.00      44/370         sObject::isValueDef() const [141]
                0.00    0.00      44/372         sDef::type() const [140]
                0.00    0.00      44/109         sExpr::settype(tType const&) [163]
                0.00    0.00       4/4           sObject::isConstDef() const [362]
                0.00    0.00       1/5           sObject::isGlobal() const [336]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/14          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
[69]     0.2    0.00    0.00      14         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [71]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       1/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00      42/842         tType::operator=(tType const&) [127]
                0.00    0.00      37/372         sDef::type() const [140]
                0.00    0.00      35/37          sRoutDef::args() [222]
                0.00    0.00      28/1478        tType::tType(BaseType) [122]
                0.00    0.00      25/25          tType::isQuConst() const [247]
                0.00    0.00      21/455         sObject::setParent(sObject*) [138]
                0.00    0.00      21/96          sExpr::type() [164]
                0.00    0.00      21/21          tType::isConv(tType const&) const [265]
                0.00    0.00      21/115         tType::isQuExpr() const [162]
                0.00    0.00      21/36          sList<sExpr>::next(void*&) const [227]
                0.00    0.00      21/554         sList<sDef>::next(void*&) const [134]
                0.00    0.00      16/109         sExpr::settype(tType const&) [163]
                0.00    0.00      14/15          sCall::id() const [294]
                0.00    0.00      14/253         sObject::isRoutDef() const [157]
                0.00    0.00      14/294         sObject::isFunctDef() const [149]
                0.00    0.00      14/19          sObject::inFunctDef() const [271]
                0.00    0.00      14/18          sObject::inQuDef() const [280]
                0.00    0.00      14/28          sObject::isCondDef() const [235]
                0.00    0.00      14/14          sObject::inQuFunDef() const [301]
                0.00    0.00      14/35          sList<sExpr>::first(void*&) const [228]
                0.00    0.00      14/95          sList<sDef>::first(void*&) const [166]
                0.00    0.00      13/13          sObject::isSetRec(ObjFlag) [303]
                0.00    0.00      10/14          sObject::isProcDef() const [302]
                0.00    0.00       4/22          sObject::isQuOpDef() const [258]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [39]
[70]     0.2    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
                0.00    0.00      13/14          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      23/455         sObject::setParent(sObject*) [138]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [251]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [279]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [483]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [68]
[71]     0.2    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [71]
                0.00    0.00      53/135         SymTab::getDef(std::string const&) const [65]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [74]
[72]     0.1    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       6/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00       7/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00      29/167         sObject::def() const [159]
                0.00    0.00      23/372         sDef::type() const [140]
                0.00    0.00      16/41          tType::operator==(BaseType) const [209]
                0.00    0.00      11/115         tType::isQuExpr() const [162]
                0.00    0.00       7/21427       sDef::id() const [117]
                0.00    0.00       6/353         tValue::tValue() [145]
                0.00    0.00       6/663         tValue::~tValue() [133]
                0.00    0.00       5/455         sObject::setParent(sObject*) [138]
                0.00    0.00       5/19          sObject::inFunctDef() const [271]
                0.00    0.00       5/96          sExpr::type() [164]
                0.00    0.00       5/165         sObject::isSet(ObjFlag) const [160]
                0.00    0.00       4/18          sObject::inQuDef() const [280]
                0.00    0.00       4/28          sObject::isCondDef() const [235]
                0.00    0.00       4/176         sObject::setFlag(ObjFlag, int) [158]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00       1/21          tType::isInt() const [264]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
[73]     0.1    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00      12/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00      52/1478        tType::tType(BaseType) [122]
                0.00    0.00      36/455         sObject::setParent(sObject*) [138]
                0.00    0.00      36/96          sExpr::type() [164]
                0.00    0.00      36/842         tType::operator=(tType const&) [127]
                0.00    0.00      36/1052        tType::ord() const [124]
                0.00    0.00      30/30          tType::isNumber() const [232]
                0.00    0.00      26/115         tType::isQuExpr() const [162]
                0.00    0.00      25/41          tType::operator==(BaseType) const [209]
                0.00    0.00      18/109         sExpr::settype(tType const&) [163]
                0.00    0.00      14/14          tType::isCond() const [300]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00       8/8           tType::isOrdered() const [317]
                0.00    0.00       6/9           sMult::object() const [312]
                0.00    0.00       4/4           sLess::object() const [360]
                0.00    0.00       3/3           sEqual::object() const [373]
                0.00    0.00       2/2           sSub::object() const [399]
                0.00    0.00       2/2           sConcat::object() const [403]
                0.00    0.00       2/23          tType::isBoolean() const [252]
                0.00    0.00       2/7           tType::operator==(tType const&) const [323]
                0.00    0.00       1/1           sOr::object() const [512]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [73]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [39]
[74]     0.1    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [74]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00     269/455         sObject::setParent(sObject*) [138]
                0.00    0.00     269/554         sList<sDef>::next(void*&) const [134]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [155]
                0.00    0.00      44/95          sList<sDef>::first(void*&) const [166]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
[75]     0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       2/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00       2/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       2/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00       8/455         sObject::setParent(sObject*) [138]
                0.00    0.00       4/96          sExpr::type() [164]
                0.00    0.00       4/21          tType::isInt() const [264]
                0.00    0.00       4/663         tValue::~tValue() [133]
                0.00    0.00       2/77          SymTab::SymTab(int) [180]
                0.00    0.00       2/52          sVar::id() const [187]
                0.00    0.00       2/79          sVarDef::object() const [178]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00       2/21427       sDef::id() const [117]
                0.00    0.00       2/2           tValue::tValue(int) [389]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [260]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [332]
                0.00    0.00       2/1478        tType::tType(BaseType) [122]
                0.00    0.00       2/353         tValue::tValue() [145]
                0.00    0.00       2/5           sDef::settype(tType const&) [331]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [308]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [309]
                0.00    0.00       2/5           sConstDef::~sConstDef() [333]
                0.00    0.00       2/77          SymTab::~SymTab() [181]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
[76]     0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00      15/455         sObject::setParent(sObject*) [138]
                0.00    0.00      14/32          tType::isQuCond() const [230]
                0.00    0.00       7/23          tType::isBoolean() const [252]
                0.00    0.00       7/96          sExpr::type() [164]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [69]
[77]     0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00       8/455         sObject::setParent(sObject*) [138]
                0.00    0.00       8/96          sExpr::type() [164]
                0.00    0.00       8/115         tType::isQuExpr() const [162]
                0.00    0.00       8/1052        tType::ord() const [124]
                0.00    0.00       4/4           sSubscript::nargs() const [359]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [228]
                0.00    0.00       4/21          tType::isInt() const [264]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [227]
                0.00    0.00       4/32          tType::isQuCond() const [230]
                0.00    0.00       4/4           sExpr::basetype() [347]
                0.00    0.00       4/1478        tType::tType(BaseType) [122]
                0.00    0.00       4/109         sExpr::settype(tType const&) [163]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [81]
[78]     0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00       6/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       8/35          sList<sExpr>::first(void*&) const [228]
                0.00    0.00       6/455         sObject::setParent(sObject*) [138]
                0.00    0.00       6/36          sList<sExpr>::next(void*&) const [227]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[79]     0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       3/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00       6/663         tValue::~tValue() [133]
                0.00    0.00       3/353         tValue::tValue() [145]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [353]
                0.00    0.00       3/29          tValue::operator=(tValue const&) [234]
                0.00    0.00       3/6           tValue::isError() const [329]
                0.00    0.00       3/63          tValue::type() const [184]
                0.00    0.00       3/372         sDef::type() const [140]
                0.00    0.00       3/7           tType::operator==(tType const&) const [323]
                0.00    0.00       3/167         sObject::def() const [159]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [73]
[80]     0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       4/44          sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       4/455         sObject::setParent(sObject*) [138]
                0.00    0.00       4/96          sExpr::type() [164]
                0.00    0.00       4/4           sLength::object() const [361]
                0.00    0.00       4/115         tType::isQuExpr() const [162]
                0.00    0.00       4/1478        tType::tType(BaseType) [122]
                0.00    0.00       4/109         sExpr::settype(tType const&) [163]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [73]
[81]     0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00       8/1478        tType::tType(BaseType) [122]
                0.00    0.00       4/353         tValue::tValue() [145]
                0.00    0.00       4/455         sObject::setParent(sObject*) [138]
                0.00    0.00       4/8           sList<sExpr>::n() const [316]
                0.00    0.00       4/4           sListFunct::object() const [358]
                0.00    0.00       4/109         sExpr::settype(tType const&) [163]
                0.00    0.00       4/663         tValue::~tValue() [133]
                0.00    0.00       3/96          sExpr::type() [164]
                0.00    0.00       3/3           sObject::isLocal() const [374]
                0.00    0.00       2/21          tType::isInt() const [264]
                0.00    0.00       1/842         tType::operator=(tType const&) [127]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[82]     0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       3/135         SymTab::getDef(std::string const&) const [65]
                0.00    0.00       6/167         sObject::def() const [159]
                0.00    0.00       6/96          sExpr::type() [164]
                0.00    0.00       3/455         sObject::setParent(sObject*) [138]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00       3/21427       sDef::id() const [117]
                0.00    0.00       3/115         tType::isQuExpr() const [162]
                0.00    0.00       3/5           sDef::settype(tType const&) [331]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[83]     0.0    0.00    0.00       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       1/324         SymTab::put(sDef*, tValue const&) [42]
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [91]
                0.00    0.00       4/663         tValue::~tValue() [133]
                0.00    0.00       2/353         tValue::tValue() [145]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [234]
                0.00    0.00       2/6           tValue::isError() const [329]
                0.00    0.00       2/2           tValue::toInt() const [402]
                0.00    0.00       1/115         tType::isQuExpr() const [162]
                0.00    0.00       1/372         sDef::type() const [140]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [353]
                0.00    0.00       1/1           sDef::basetype() [482]
                0.00    0.00       1/5           sObject::isGlobal() const [336]
                0.00    0.00       1/5           tValue::qustate() const [335]
                0.00    0.00       1/26          quState::newclone() <cycle 5> [224]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [488]
                0.00    0.00       1/167         sObject::def() const [159]
-----------------------------------------------
                0.00    0.00       1/18          QuHeap::qualloc(int, BaseType) [91]
                0.00    0.00       2/18          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      15/18          opElementary::apply(quState&) const [9]
[84]     0.0    0.00    0.00      18         quState::mapmask() const [84]
                0.00    0.00      18/65552       quSubString::unmap(bitvec const&) const [15]
                0.00    0.00      36/458385      bitvec::~bitvec() [16]
                0.00    0.00      18/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00      18/34          operator~(bitvec const&) [90]
                0.00    0.00      18/98484       quState::mapbits() const [106]
-----------------------------------------------
                0.00    0.00       2/2           sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
[85]     0.0    0.00    0.00       2         SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00       1/362         SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00       1/353         tValue::tValue() [145]
                0.00    0.00       1/370         sObject::isValueDef() const [141]
                0.00    0.00       1/79          sVarDef::object() const [178]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [150]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[86]     0.0    0.00    0.00       1         sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       2/2           SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00       2/52          sVar::id() const [187]
                0.00    0.00       2/29          tValue::operator=(tValue const&) [234]
                0.00    0.00       2/663         tValue::~tValue() [133]
                0.00    0.00       1/353         tValue::tValue() [145]
                0.00    0.00       1/1           tValue::isExpr() const [520]
                0.00    0.00       1/96          sExpr::type() [164]
                0.00    0.00       1/63          tValue::type() const [184]
                0.00    0.00       1/7           tType::operator==(tType const&) const [323]
-----------------------------------------------
                0.00    0.00      15/15          opElementary::apply(quState&) const [9]
[87]     0.0    0.00    0.00      15         terminfo::terminfo() [87]
                0.00    0.00      15/97813       term::term() [18]
                0.00    0.00      15/228963      bitvec::bitvec(int, unsigned long) [37]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[88]     0.0    0.00    0.00       1         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
                0.00    0.00       6/97813       term::term() [18]
                0.00    0.00       4/458385      bitvec::~bitvec() [16]
                0.00    0.00       4/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00       4/4           term::set(bitvec const&, std::complex<double> const&) [95]
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [368]
                0.00    0.00       1/1           opMatrix::opMatrix(int) [494]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [57]
[89]     0.0    0.00    0.00       1         quBaseState::reset(bitvec const&) [89]
                0.00    0.00       1/65535       quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.00    0.00       1/163355      std::complex<double>::complex(double, double) [17]
                0.00    0.00       1/458385      bitvec::~bitvec() [16]
                0.00    0.00       1/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00       1/16          quBaseState::opbegin() [284]
                0.00    0.00       1/98304       bitvec::length() const [108]
                0.00    0.00       1/1           quBaseState::basebits() const [511]
                0.00    0.00       1/16          quBaseState::opend() [283]
-----------------------------------------------
                0.00    0.00       1/34          QuHeap::qualloc(int, BaseType) [91]
                0.00    0.00      15/34          opElementary::apply(quState&) const [9]
                0.00    0.00      18/34          quState::mapmask() const [84]
[90]     0.0    0.00    0.00      34         operator~(bitvec const&) [90]
                0.00    0.00      34/229422      bitvec::bitvec(bitvec const&) [29]
                0.00    0.00      34/36          bitvec::qnot() [223]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
[91]     0.0    0.00    0.00       1         QuHeap::qualloc(int, BaseType) [91]
                0.00    0.00       1/18          quState::mapmask() const [84]
                0.00    0.00       2/458385      bitvec::~bitvec() [16]
                0.00    0.00       1/34          operator~(bitvec const&) [90]
                0.00    0.00      15/15          bitvec::operator[](int) const [295]
                0.00    0.00       1/26          quBaseState::newsubstring(int, int) <cycle 5> [186]
                0.00    0.00       1/32769       bitvec::operator&=(bitvec const&) [113]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [490]
-----------------------------------------------
                0.00    0.00       1/1           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[92]     0.0    0.00    0.00       1         opBit::~opBit() [92]
                0.00    0.00       1/1           opBit::~opBit() [93]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [92]
[93]     0.0    0.00    0.00       1         opBit::~opBit() [93]
                0.00    0.00       1/1           opMatrix::~opMatrix() [94]
-----------------------------------------------
                0.00    0.00       1/1           opBit::~opBit() [93]
[94]     0.0    0.00    0.00       1         opMatrix::~opMatrix() [94]
                0.00    0.00       6/130580      term::~term() [41]
                0.00    0.00       1/1           opElementary::~opElementary() [478]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
[95]     0.0    0.00    0.00       4         term::set(bitvec const&, std::complex<double> const&) [95]
                0.00    0.00       4/245265      bitvec::operator=(bitvec const&) [36]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[96]     0.0    0.00    0.00       1         QuHeap::cmask() const [96]
                0.00    0.00       1/228963      bitvec::bitvec(int, unsigned long) [37]
                0.00    0.00       1/98304       bitvec::length() const [108]
-----------------------------------------------
[97]     0.0    0.00    0.00      23+101     <cycle 1 as a whole> [97]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [257]
                0.00    0.00      22             sList<sExpr>::~sList() <cycle 1> [254]
                0.00    0.00      22             sExprList::~sExprList() <cycle 1> [256]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [275]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [326]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [327]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [342]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [343]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [349]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [350]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [345]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [346]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [392]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [393]
-----------------------------------------------
[98]     0.0    0.00    0.00       8+64      <cycle 2 as a whole> [98]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [278]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [273]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [277]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [319]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [320]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [382]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [383]
-----------------------------------------------
[99]     0.0    0.00    0.00      26+113     <cycle 5 as a whole> [99]
                0.00    0.00      52             quBaseState::newsubstring(int, int) <cycle 5> [186]
                0.00    0.00      36             quState::newclone() <cycle 5> [224]
                0.00    0.00      26             quSubString::quSubString(int, int, quState&) <cycle 5> [240]
                0.00    0.00      25             quSubString::newsubstring(int, int) <cycle 5> [243]
-----------------------------------------------
                0.00    0.00  245265/245265      bitvec::operator=(bitvec const&) [36]
[104]    0.0    0.00    0.00  245265         bitvec::setlen(int) [104]
-----------------------------------------------
                0.00    0.00   32767/212475      term::term(term const&) [38]
                0.00    0.00   32767/212475      term::operator=(term const&) [60]
                0.00    0.00   48640/212475      termlist::add(term const&) <cycle 4> [64]
                0.00    0.00   98301/212475      opMatrix::addterms(terminfo const&) const [10]
[105]    0.0    0.00    0.00  212475         term::ampl() const [105]
-----------------------------------------------
                0.00    0.00       1/98484       sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       1/98484       quBaseState::basebits() const [511]
                0.00    0.00      15/98484       opElementary::apply(quState&) const [9]
                0.00    0.00      16/98484       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      18/98484       quState::mapmask() const [84]
                0.00    0.00      36/98484       quState::newclone() <cycle 5> [224]
                0.00    0.00      78/98484       quBaseState::newsubstring(int, int) <cycle 5> [186]
                0.00    0.00   32767/98484       quSubString::map(bitvec const&) const [21]
                0.00    0.00   65552/98484       quSubString::unmap(bitvec const&) const [15]
[106]    0.0    0.00    0.00   98484         quState::mapbits() const [106]
-----------------------------------------------
                0.00    0.00   32767/98319       quSubString::map(bitvec const&) const [21]
                0.00    0.00   65552/98319       quSubString::unmap(bitvec const&) const [15]
[107]    0.0    0.00    0.00   98319         quSubString::mapoffs() const [107]
-----------------------------------------------
                0.00    0.00       1/98304       QuHeap::ncond() const [518]
                0.00    0.00       1/98304       QuHeap::cmask() const [96]
                0.00    0.00       1/98304       quBaseState::reset(bitvec const&) [89]
                0.00    0.00   98301/98304       opMatrix::addterms(terminfo const&) const [10]
[108]    0.0    0.00    0.00   98304         bitvec::length() const [108]
-----------------------------------------------
                0.00    0.00   65552/65552       quSubString::unmap(bitvec const&) const [15]
[109]    0.0    0.00    0.00   65552         bitvec::setbits(int, bitvec const&) [109]
                0.00    0.00   65552/65552       bitvec::setbits(int, int, unsigned long) [110]
-----------------------------------------------
                0.00    0.00   65552/65552       bitvec::setbits(int, bitvec const&) [109]
[110]    0.0    0.00    0.00   65552         bitvec::setbits(int, int, unsigned long) [110]
-----------------------------------------------
                0.00    0.00   65534/65534       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
[111]    0.0    0.00    0.00   65534         std::complex<double>::imag() const [111]
-----------------------------------------------
                0.00    0.00   65534/65534       std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [33]
[112]    0.0    0.00    0.00   65534         std::complex<double>::real() const [112]
-----------------------------------------------
                0.00    0.00       1/32769       QuHeap::qualloc(int, BaseType) [91]
                0.00    0.00   32768/32769       operator&(bitvec const&, bitvec const&) [62]
[113]    0.0    0.00    0.00   32769         bitvec::operator&=(bitvec const&) [113]
-----------------------------------------------
                0.00    0.00   32767/32767       opElementary::apply(quState&) const [9]
[114]    0.0    0.00    0.00   32767         quSubState::baseterm(int) const [114]
                0.00    0.00   32767/32767       quBaseState::baseterm(int) const [115]
-----------------------------------------------
                0.00    0.00   32767/32767       quSubState::baseterm(int) const [114]
[115]    0.0    0.00    0.00   32767         quBaseState::baseterm(int) const [115]
                0.00    0.00   32767/32767       termlist::operator[](int) const [116]
-----------------------------------------------
                0.00    0.00   32767/32767       quBaseState::baseterm(int) const [115]
[116]    0.0    0.00    0.00   32767         termlist::operator[](int) const [116]
-----------------------------------------------
                0.00    0.00       2/21427       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       2/21427       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       3/21427       sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       7/21427       sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00     734/21427       sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00    7365/21427       SymTab::getentry(SymTable::entry*, std::string const&) const [55]
                0.00    0.00   13314/21427       SymTab::putentry(SymTable::entry*, SymTable::entry*) [43]
[117]    0.0    0.00    0.00   21427         sDef::id() const [117]
-----------------------------------------------
                0.00    0.00   15766/15766       operator==(bitvec const&, bitvec const&) [119]
[118]    0.0    0.00    0.00   15766         bitvec::testeq(bitvec const&) const [118]
-----------------------------------------------
                0.00    0.00   15766/15766       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[119]    0.0    0.00    0.00   15766         operator==(bitvec const&, bitvec const&) [119]
                0.00    0.00   15766/15766       bitvec::testeq(bitvec const&) const [118]
-----------------------------------------------
                0.00    0.00     435/4125        sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00    3690/4125        SymTab::getentry(SymTable::entry*, std::string const&) const [55]
[120]    0.0    0.00    0.00    4125         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [120]
                0.00    0.00    2906/2906        std::char_traits<char>::compare(char const*, char const*, unsigned long) [121]
-----------------------------------------------
                0.00    0.00    2906/2906        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [120]
[121]    0.0    0.00    0.00    2906         std::char_traits<char>::compare(char const*, char const*, unsigned long) [121]
-----------------------------------------------
                0.00    0.00       1/1478        tValue::tValue(std::complex<double> const&) [493]
                0.00    0.00       1/1478        tValue::tValue(char const*) [491]
                0.00    0.00       1/1478        tValue::tValue(quState&, BaseType) [492]
                0.00    0.00       1/1478        tValue::tValue(quState*, BaseType) [490]
                0.00    0.00       1/1478        __static_initialization_and_destruction_0(int, int) [450]
                0.00    0.00       1/1478        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [495]
                0.00    0.00       2/1478        tValue::tValue(int) [389]
                0.00    0.00       2/1478        tValue::tValue(double) [388]
                0.00    0.00       2/1478        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       4/1478        sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       4/1478        sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       5/1478        sConstDef::sConstDef(std::string*, sExpr*) [332]
                0.00    0.00       8/1478        sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00      15/1478        tValue::tValue(long) [290]
                0.00    0.00      16/1478        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [285]
                0.00    0.00      19/1478        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [267]
                0.00    0.00      21/1478        sExpr::sExpr(tType const&) [259]
                0.00    0.00      28/1478        sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      52/1478        sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00      74/1478        sExpr::sExpr() [182]
                0.00    0.00     268/1478        yyparse() [27]
                0.00    0.00     287/1478        tValue::tValue(tValue const&) [150]
                0.00    0.00     312/1478        sDef::sDef(tType const&, std::string*) [147]
                0.00    0.00     353/1478        tValue::tValue() [145]
[122]    0.0    0.00    0.00    1478         tType::tType(BaseType) [122]
-----------------------------------------------
                0.00    0.00     528/1104        sObject::isDef() const [144]
                0.00    0.00     576/1104        sObject::isValueDef() const [141]
[123]    0.0    0.00    0.00    1104         sArgDef::object() const [123]
-----------------------------------------------
                0.00    0.00       8/1052        sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      36/1052        sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00     316/1052        tValue::assign(tValue const&) [146]
                0.00    0.00     692/1052        tValue::ord() const [131]
[124]    0.0    0.00    0.00    1052         tType::ord() const [124]
-----------------------------------------------
                0.00    0.00       1/1013        sDef::basetype() [482]
                0.00    0.00       4/1013        sExpr::basetype() [347]
                0.00    0.00     316/1013        tValue::assign(tValue const&) [146]
                0.00    0.00     692/1013        tValue::basetype() const [132]
[125]    0.0    0.00    0.00    1013         tType::basetype() const [125]
-----------------------------------------------
                0.00    0.00      97/881         sObject::isSetRec(ObjFlag) [303]
                0.00    0.00     784/881         sObject::def() const [159]
[126]    0.0    0.00    0.00     881         sObject::parent() const [126]
-----------------------------------------------
                0.00    0.00       1/842         sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       5/842         sDef::settype(tType const&) [331]
                0.00    0.00      21/842         sExpr::sExpr(tType const&) [259]
                0.00    0.00      36/842         sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00      42/842         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00     109/842         sExpr::settype(tType const&) [163]
                0.00    0.00     312/842         sDef::sDef(tType const&, std::string*) [147]
                0.00    0.00     316/842         tValue::assign(tValue const&) [146]
[127]    0.0    0.00    0.00     842         tType::operator=(tType const&) [127]
-----------------------------------------------
                0.00    0.00     826/826         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [201]
[128]    0.0    0.00    0.00     826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [128]
-----------------------------------------------
                0.00    0.00     783/783         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [201]
[129]    0.0    0.00    0.00     783         std::_List_const_iterator<sObject*>::operator++() [129]
-----------------------------------------------
                0.00    0.00      29/692         tValue::operator=(tValue const&) [234]
                0.00    0.00     663/692         tValue::~tValue() [133]
[130]    0.0    0.00    0.00     692         tValue::delpointer() [130]
                0.00    0.00     692/692         tValue::ord() const [131]
                0.00    0.00     692/692         tValue::basetype() const [132]
                0.00    0.00      10/10          quSubState::isbasestate() const [311]
                0.00    0.00      10/25          quSubString::~quSubString() [244]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [130]
[131]    0.0    0.00    0.00     692         tValue::ord() const [131]
                0.00    0.00     692/1052        tType::ord() const [124]
-----------------------------------------------
                0.00    0.00     692/692         tValue::delpointer() [130]
[132]    0.0    0.00    0.00     692         tValue::basetype() const [132]
                0.00    0.00     692/1013        tType::basetype() const [125]
-----------------------------------------------
                0.00    0.00       1/663         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/663         QuHeap::addReg(quState*) [488]
                0.00    0.00       1/663         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [499]
                0.00    0.00       2/663         sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       3/663         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/663         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       4/663         sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       4/663         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       6/663         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       6/663         sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00      19/663         yylex() [26]
                0.00    0.00      21/663         sConst::~sConst() [262]
                0.00    0.00      36/663         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [66]
                0.00    0.00     275/663         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00     280/663         SymTab::deltree(SymTable::entry*) [188]
[133]    0.0    0.00    0.00     663         tValue::~tValue() [133]
                0.00    0.00     663/692         tValue::delpointer() [130]
-----------------------------------------------
                0.00    0.00       1/554         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      21/554         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00     263/554         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00     269/554         sDefList::typecheck(SymTable*, SymTable*) [74]
[134]    0.0    0.00    0.00     554         sList<sDef>::next(void*&) const [134]
-----------------------------------------------
                0.00    0.00      63/531         tValue::type() const [184]
                0.00    0.00      96/531         sExpr::type() [164]
                0.00    0.00     372/531         sDef::type() const [140]
[135]    0.0    0.00    0.00     531         tType::tType(tType const&) [135]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::sList() [272]
                0.00    0.00      21/515         sExpr::sExpr(tType const&) [259]
                0.00    0.00      22/515         sList<sExpr>::sList() [253]
                0.00    0.00      24/515         sStmt::sStmt(int) [248]
                0.00    0.00      44/515         sList<sDef>::sList() [193]
                0.00    0.00      74/515         sExpr::sExpr() [182]
                0.00    0.00     312/515         sDef::sDef(tType const&, std::string*) [147]
[136]    0.0    0.00    0.00     515         sObject::sObject(unsigned int) [136]
-----------------------------------------------
                0.00    0.00      18/515         sList<sStmt>::~sList() <cycle 2> [273]
                0.00    0.00      22/515         sList<sExpr>::~sList() <cycle 1> [254]
                0.00    0.00      24/515         sStmt::~sStmt() [249]
                0.00    0.00      44/515         sList<sDef>::~sList() [194]
                0.00    0.00      95/515         sExpr::~sExpr() [165]
                0.00    0.00     312/515         sDef::~sDef() [148]
[137]    0.0    0.00    0.00     515         sObject::~sObject() [137]
-----------------------------------------------
                0.00    0.00       1/455         sExit::typecheck(SymTable*, SymTable*) [483]
                0.00    0.00       3/455         sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       4/455         sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       4/455         sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       5/455         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       6/455         sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00       8/455         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       8/455         sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      15/455         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                0.00    0.00      21/455         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      23/455         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
                0.00    0.00      36/455         sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00      52/455         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00     269/455         sDefList::typecheck(SymTable*, SymTable*) [74]
[138]    0.0    0.00    0.00     455         sObject::setParent(sObject*) [138]
-----------------------------------------------
                0.00    0.00       1/450         tValue::tValue(std::complex<double> const&) [493]
                0.00    0.00       1/450         tValue::tValue(char const*) [491]
                0.00    0.00       1/450         tValue::tValue(quState&, BaseType) [492]
                0.00    0.00       1/450         tValue::tValue(quState*, BaseType) [490]
                0.00    0.00       2/450         tValue::tValue(int) [389]
                0.00    0.00       2/450         tValue::tValue(double) [388]
                0.00    0.00      15/450         tValue::tValue(long) [290]
                0.00    0.00      74/450         sExpr::sExpr() [182]
                0.00    0.00     353/450         tValue::tValue() [145]
[139]    0.0    0.00    0.00     450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       1/372         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       1/372         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/372         sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00      23/372         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      37/372         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      44/372         sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00     263/372         sRoutDef::typecheck(SymTable*, SymTable*) [39]
[140]    0.0    0.00    0.00     372         sDef::type() const [140]
                0.00    0.00     372/531         tType::tType(tType const&) [135]
-----------------------------------------------
                0.00    0.00       1/370         SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00       1/370         SymTab::getRef(std::string const&, ObjType*) const [61]
                0.00    0.00      44/370         sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00     324/370         SymTab::put(sDef*, tValue const&) [42]
[141]    0.0    0.00    0.00     370         sObject::isValueDef() const [141]
                0.00    0.00     576/1104        sArgDef::object() const [123]
                0.00    0.00      50/79          sVarDef::object() const [178]
                0.00    0.00      26/48          sConstDef::object() const [189]
                0.00    0.00      23/369         sQuOpDef::object() const [142]
                0.00    0.00      19/369         sQuFunDef::object() const [143]
                0.00    0.00       2/58          sProcDef::object() const [185]
-----------------------------------------------
                0.00    0.00       6/369         sObject::isProcDef() const [302]
                0.00    0.00       9/369         sObject::isQuOpDef() const [258]
                0.00    0.00      10/369         sObject::isQuFunDef() const [233]
                0.00    0.00      19/369         sObject::isInclude() const [210]
                0.00    0.00      23/369         sObject::isValueDef() const [141]
                0.00    0.00      84/369         sObject::isDef() const [144]
                0.00    0.00      90/369         sObject::isRoutDef() const [157]
                0.00    0.00     128/369         sObject::isFunctDef() const [149]
[142]    0.0    0.00    0.00     369         sQuOpDef::object() const [142]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [302]
                0.00    0.00      10/369         sObject::isQuOpDef() const [258]
                0.00    0.00      13/369         sObject::isQuFunDef() const [233]
                0.00    0.00      16/369         sObject::isInclude() const [210]
                0.00    0.00      19/369         sObject::isValueDef() const [141]
                0.00    0.00      70/369         sObject::isDef() const [144]
                0.00    0.00      74/369         sObject::isRoutDef() const [157]
                0.00    0.00     162/369         sObject::isFunctDef() const [149]
[143]    0.0    0.00    0.00     369         sQuFunDef::object() const [143]
-----------------------------------------------
                0.00    0.00      41/365         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     324/365         SymTab::put(sDef*, tValue const&) [42]
[144]    0.0    0.00    0.00     365         sObject::isDef() const [144]
                0.00    0.00     528/1104        sArgDef::object() const [123]
                0.00    0.00      84/369         sQuOpDef::object() const [142]
                0.00    0.00      70/369         sQuFunDef::object() const [143]
                0.00    0.00      24/79          sVarDef::object() const [178]
                0.00    0.00      16/48          sConstDef::object() const [189]
                0.00    0.00       6/58          sProcDef::object() const [185]
                0.00    0.00       1/8           sCall::object() const [315]
-----------------------------------------------
                0.00    0.00       1/353         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       1/353         SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00       1/353         sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       1/353         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/353         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       2/353         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/353         sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       4/353         sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       6/353         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      21/353         sConst::sConst(tValue const&) [260]
                0.00    0.00      36/353         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [66]
                0.00    0.00     275/353         sRoutDef::typecheck(SymTable*, SymTable*) [39]
[145]    0.0    0.00    0.00     353         tValue::tValue() [145]
                0.00    0.00     353/1478        tType::tType(BaseType) [122]
                0.00    0.00     353/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00      29/316         tValue::operator=(tValue const&) [234]
                0.00    0.00     287/316         tValue::tValue(tValue const&) [150]
[146]    0.0    0.00    0.00     316         tValue::assign(tValue const&) [146]
                0.00    0.00     316/842         tType::operator=(tType const&) [127]
                0.00    0.00     316/1052        tType::ord() const [124]
                0.00    0.00     316/1013        tType::basetype() const [125]
                0.00    0.00       8/26          quState::newclone() <cycle 5> [224]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [332]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [314]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [225]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [152]
[147]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [147]
                0.00    0.00     312/515         sObject::sObject(unsigned int) [136]
                0.00    0.00     312/1478        tType::tType(BaseType) [122]
                0.00    0.00     312/842         tType::operator=(tType const&) [127]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [334]
                0.00    0.00       8/312         sVarDef::~sVarDef() [322]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [226]
                0.00    0.00     263/312         sArgDef::~sArgDef() [154]
[148]    0.0    0.00    0.00     312         sDef::~sDef() [148]
                0.00    0.00     312/515         sObject::~sObject() [137]
-----------------------------------------------
                0.00    0.00      14/294         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      17/294         sObject::inFunctDef() const [271]
                0.00    0.00     263/294         sRoutDef::typecheck(SymTable*, SymTable*) [39]
[149]    0.0    0.00    0.00     294         sObject::isFunctDef() const [149]
                0.00    0.00     162/369         sQuFunDef::object() const [143]
                0.00    0.00     128/369         sQuOpDef::object() const [142]
                0.00    0.00       4/58          sProcDef::object() const [185]
-----------------------------------------------
                0.00    0.00       1/287         tValue::conv(tType const&) const [519]
                0.00    0.00       1/287         SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00       1/287         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [501]
                0.00    0.00       4/287         sConst::eval(SymTable*, SymTable*, QuHeap*) [353]
                0.00    0.00     280/287         SymTab::put(sDef*, tValue const&) [42]
[150]    0.0    0.00    0.00     287         tValue::tValue(tValue const&) [150]
                0.00    0.00     287/1478        tType::tType(BaseType) [122]
                0.00    0.00     287/316         tValue::assign(tValue const&) [146]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [27]
[151]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [151]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [27]
[152]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [152]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [147]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [194]
[153]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [153]
                0.00    0.00     263/263         sArgDef::~sArgDef() [154]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [153]
[154]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [154]
                0.00    0.00     263/312         sDef::~sDef() [148]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [74]
[155]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [155]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [39]
[156]    0.0    0.00    0.00     263         tType::isQuReg() const [156]
-----------------------------------------------
                0.00    0.00       8/253         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00      14/253         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00     231/253         sObject::def() const [159]
[157]    0.0    0.00    0.00     253         sObject::isRoutDef() const [157]
                0.00    0.00      90/369         sQuOpDef::object() const [142]
                0.00    0.00      78/78          sStmtList::object() const [179]
                0.00    0.00      74/369         sQuFunDef::object() const [143]
                0.00    0.00      34/34          sDefList::object() const [229]
                0.00    0.00      32/58          sProcDef::object() const [185]
                0.00    0.00      21/21          sIf::object() const [263]
                0.00    0.00      15/15          sFor::object() const [293]
                0.00    0.00       4/8           sCall::object() const [315]
                0.00    0.00       3/9           sMult::object() const [312]
-----------------------------------------------
                0.00    0.00       4/176         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       4/176         yyparse() [27]
                0.00    0.00      24/176         sStmt::sStmt(int) [248]
                0.00    0.00     144/176         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [225]
[158]    0.0    0.00    0.00     176         sObject::setFlag(ObjFlag, int) [158]
-----------------------------------------------
                                 155             sObject::def() const [159]
                0.00    0.00       1/167         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/167         sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00       5/167         sObject::isGlobal() const [336]
                0.00    0.00       6/167         sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00      14/167         sObject::inQuFunDef() const [301]
                0.00    0.00      18/167         sObject::inQuDef() const [280]
                0.00    0.00      19/167         sObject::inFunctDef() const [271]
                0.00    0.00      29/167         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      36/167         sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00      36/167         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [66]
[159]    0.0    0.00    0.00     167+155     sObject::def() const [159]
                0.00    0.00     784/881         sObject::parent() const [126]
                0.00    0.00     231/253         sObject::isRoutDef() const [157]
                                 155             sObject::def() const [159]
-----------------------------------------------
                0.00    0.00       1/165         sStmt::isInv() const [513]
                0.00    0.00       3/165         sObject::isBennet() const [375]
                0.00    0.00       5/165         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      28/165         sObject::isCondDef() const [235]
                0.00    0.00      55/165         sObject::isSetRec(ObjFlag) [303]
                0.00    0.00      73/165         sObject::isExtern() const [183]
[160]    0.0    0.00    0.00     165         sObject::isSet(ObjFlag) const [160]
-----------------------------------------------
                0.00    0.00      41/123         std::list<sObject*, std::allocator<sObject*> >::end() [216]
                0.00    0.00      82/123         std::list<sObject*, std::allocator<sObject*> >::begin() [176]
[161]    0.0    0.00    0.00     123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [161]
-----------------------------------------------
                0.00    0.00       1/115         sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       2/115         tType::isConv(tType const&) const [265]
                0.00    0.00       3/115         sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       4/115         sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       7/115         tValue::isQuExpr() const [324]
                0.00    0.00       8/115         sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      11/115         sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      21/115         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      26/115         sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00      32/115         tType::isQuCond() const [230]
[162]    0.0    0.00    0.00     115         tType::isQuExpr() const [162]
-----------------------------------------------
                0.00    0.00       4/109         sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       4/109         sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       4/109         sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00      16/109         sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      18/109         sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00      19/109         sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00      44/109         sVar::typecheck(SymTable*, SymTable*) [68]
[163]    0.0    0.00    0.00     109         sExpr::settype(tType const&) [163]
                0.00    0.00     109/842         tType::operator=(tType const&) [127]
-----------------------------------------------
                0.00    0.00       1/96          sExit::typecheck(SymTable*, SymTable*) [483]
                0.00    0.00       1/96          sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       3/96          sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       4/96          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       4/96          sUnOp::typecheck(SymTable*, SymTable*) [80]
                0.00    0.00       5/96          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       6/96          sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00       7/96          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                0.00    0.00       8/96          sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      21/96          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      36/96          sBinOp::typecheck(SymTable*, SymTable*) [73]
[164]    0.0    0.00    0.00      96         sExpr::type() [164]
                0.00    0.00      96/531         tType::tType(tType const&) [135]
-----------------------------------------------
                0.00    0.00       4/95          sSubscript::~sSubscript() <cycle 1> [346]
                0.00    0.00       4/95          sUnOp::~sUnOp() [352]
                0.00    0.00       4/95          sListFunct::~sListFunct() <cycle 1> [343]
                0.00    0.00      18/95          sBinOp::~sBinOp() <cycle 1> [275]
                0.00    0.00      21/95          sConst::~sConst() [262]
                0.00    0.00      44/95          sVar::~sVar() [192]
[165]    0.0    0.00    0.00      95         sExpr::~sExpr() [165]
                0.00    0.00      95/515         sObject::~sObject() [137]
-----------------------------------------------
                0.00    0.00       1/95          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      14/95          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      36/95          sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00      44/95          sDefList::typecheck(SymTable*, SymTable*) [74]
[166]    0.0    0.00    0.00      95         sList<sDef>::first(void*&) const [166]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::SymTabComb(SymTable*, SymTable*) [308]
                0.00    0.00      77/87          SymTab::SymTab(int) [180]
[167]    0.0    0.00    0.00      87         SymTable::SymTable() [167]
-----------------------------------------------
                0.00    0.00      10/87          SymTabComb::~SymTabComb() [310]
                0.00    0.00      77/87          SymTab::~SymTab() [181]
[168]    0.0    0.00    0.00      87         SymTable::~SymTable() [168]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() const [200]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::end() const [198]
[169]    0.0    0.00    0.00      86         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [169]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [174]
[170]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::new_allocator() [170]
-----------------------------------------------
                0.00    0.00      82/82          std::allocator<sObject*>::~allocator() [175]
[171]    0.0    0.00    0.00      82         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [171]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
[172]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [172]
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [173]
                0.00    0.00      82/82          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [174]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [172]
[173]    0.0    0.00    0.00      82         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [173]
-----------------------------------------------
                0.00    0.00      82/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [172]
[174]    0.0    0.00    0.00      82         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [174]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::new_allocator() [170]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
[175]    0.0    0.00    0.00      82         std::allocator<sObject*>::~allocator() [175]
                0.00    0.00      82/82          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [171]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::front() [217]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::pop_front() [220]
[176]    0.0    0.00    0.00      82         std::list<sObject*, std::allocator<sObject*> >::begin() [176]
                0.00    0.00      82/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [161]
-----------------------------------------------
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
[177]    0.0    0.00    0.00      82         sObject** std::__addressof<sObject*>(sObject*&) [177]
-----------------------------------------------
                0.00    0.00       1/79          sObject::isConstDef() const [362]
                0.00    0.00       1/79          sObject::isInclude() const [210]
                0.00    0.00       1/79          SymTab::getVal(std::string const&, ObjType*) const [85]
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00      24/79          sObject::isDef() const [144]
                0.00    0.00      50/79          sObject::isValueDef() const [141]
[178]    0.0    0.00    0.00      79         sVarDef::object() const [178]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [157]
[179]    0.0    0.00    0.00      78         sStmtList::object() const [179]
-----------------------------------------------
                0.00    0.00       1/77          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       2/77          main [1]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [39]
[180]    0.0    0.00    0.00      77         SymTab::SymTab(int) [180]
                0.00    0.00      77/87          SymTable::SymTable() [167]
-----------------------------------------------
                0.00    0.00       1/77          SymTab::~SymTab() [489]
                0.00    0.00       2/77          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       2/77          main [1]
                0.00    0.00      72/77          sRoutDef::typecheck(SymTable*, SymTable*) [39]
[181]    0.0    0.00    0.00      77         SymTab::~SymTab() [181]
                0.00    0.00      77/87          SymTable::~SymTable() [168]
                0.00    0.00      48/48          SymTab::deltree(SymTable::entry*) [188]
-----------------------------------------------
                0.00    0.00       4/74          sSubscript::sSubscript(sVar*, sExprList*) [344]
                0.00    0.00       4/74          sUnOp::sUnOp(sExpr*) [351]
                0.00    0.00       4/74          sListFunct::sListFunct(ObjType, sExprList*) [341]
                0.00    0.00      18/74          sBinOp::sBinOp(sExpr*, sExpr*) [274]
                0.00    0.00      44/74          sVar::sVar(std::string*) [190]
[182]    0.0    0.00    0.00      74         sExpr::sExpr() [182]
                0.00    0.00      74/515         sObject::sObject(unsigned int) [136]
                0.00    0.00      74/1478        tType::tType(BaseType) [122]
                0.00    0.00      74/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       1/73          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00      36/73          sRoutDef::~sRoutDef() [226]
                0.00    0.00      36/73          sRoutDef::typecheck(SymTable*, SymTable*) [39]
[183]    0.0    0.00    0.00      73         sObject::isExtern() const [183]
                0.00    0.00      73/165         sObject::isSet(ObjFlag) const [160]
-----------------------------------------------
                0.00    0.00       1/63          sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       3/63          sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00      21/63          sConst::sConst(tValue const&) [260]
                0.00    0.00      38/63          sConst::typecheck(SymTable*, SymTable*) [266]
[184]    0.0    0.00    0.00      63         tValue::type() const [184]
                0.00    0.00      63/531         tType::tType(tType const&) [135]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [210]
                0.00    0.00       2/58          sObject::isValueDef() const [141]
                0.00    0.00       3/58          sObject::isProcDef() const [302]
                0.00    0.00       3/58          sObject::isQuOpDef() const [258]
                0.00    0.00       4/58          sObject::isFunctDef() const [149]
                0.00    0.00       6/58          sObject::isDef() const [144]
                0.00    0.00       7/58          sObject::isQuFunDef() const [233]
                0.00    0.00      32/58          sObject::isRoutDef() const [157]
[185]    0.0    0.00    0.00      58         sProcDef::object() const [185]
-----------------------------------------------
                                  25             quSubString::newsubstring(int, int) <cycle 5> [243]
                                  26             quState::newclone() <cycle 5> [224]
                0.00    0.00       1/26          QuHeap::qualloc(int, BaseType) [91]
[186]    0.0    0.00    0.00      52         quBaseState::newsubstring(int, int) <cycle 5> [186]
                0.00    0.00      78/98484       quState::mapbits() const [106]
                                  26             quSubString::quSubString(int, int, quState&) <cycle 5> [240]
-----------------------------------------------
                0.00    0.00       2/52          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       2/52          sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00      48/52          sVar::typecheck(SymTable*, SymTable*) [68]
[187]    0.0    0.00    0.00      52         sVar::id() const [187]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [188]
                0.00    0.00      48/48          SymTab::~SymTab() [181]
[188]    0.0    0.00    0.00      48+276     SymTab::deltree(SymTable::entry*) [188]
                0.00    0.00     280/663         tValue::~tValue() [133]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [268]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [286]
                0.00    0.00       3/5           sConstDef::~sConstDef() [333]
                0.00    0.00       1/1           sProcDef::~sProcDef() [496]
                0.00    0.00       1/7           sVarDef::~sVarDef() [321]
                                 276             SymTab::deltree(SymTable::entry*) [188]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [362]
                0.00    0.00       3/48          sObject::isInclude() const [210]
                0.00    0.00      16/48          sObject::isDef() const [144]
                0.00    0.00      26/48          sObject::isValueDef() const [141]
[189]    0.0    0.00    0.00      48         sConstDef::object() const [189]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [27]
[190]    0.0    0.00    0.00      44         sVar::sVar(std::string*) [190]
                0.00    0.00      44/74          sExpr::sExpr() [182]
-----------------------------------------------
                0.00    0.00       2/44          sFor::~sFor() <cycle 2> [383]
                0.00    0.00       4/44          sSubscript::~sSubscript() <cycle 1> [346]
                0.00    0.00       4/44          sUnOp::~sUnOp() [352]
                0.00    0.00       4/44          sVarDef::~sVarDef() [322]
                0.00    0.00      12/44          sBinOp::~sBinOp() <cycle 1> [275]
                0.00    0.00      18/44          sList<sExpr>::~sList() <cycle 1> [254]
[191]    0.0    0.00    0.00      44         sVar::~sVar() [191]
                0.00    0.00      44/44          sVar::~sVar() [192]
-----------------------------------------------
                0.00    0.00      44/44          sVar::~sVar() [191]
[192]    0.0    0.00    0.00      44         sVar::~sVar() [192]
                0.00    0.00      44/95          sExpr::~sExpr() [165]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [195]
[193]    0.0    0.00    0.00      44         sList<sDef>::sList() [193]
                0.00    0.00      44/515         sObject::sObject(unsigned int) [136]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [197]
[194]    0.0    0.00    0.00      44         sList<sDef>::~sList() [194]
                0.00    0.00     263/263         sArgDef::~sArgDef() [153]
                0.00    0.00      44/515         sObject::~sObject() [137]
                0.00    0.00       6/7           sVarDef::~sVarDef() [321]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [27]
[195]    0.0    0.00    0.00      44         sDefList::sDefList() [195]
                0.00    0.00      44/44          sList<sDef>::sList() [193]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [226]
[196]    0.0    0.00    0.00      44         sDefList::~sDefList() [196]
                0.00    0.00      44/44          sDefList::~sDefList() [197]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [196]
[197]    0.0    0.00    0.00      44         sDefList::~sDefList() [197]
                0.00    0.00      44/44          sList<sDef>::~sList() [194]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [199]
[198]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() const [198]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [169]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[199]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::size() const [199]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::begin() const [200]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() const [198]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [203]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [199]
[200]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::begin() const [200]
                0.00    0.00      43/86          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [169]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [203]
[201]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [201]
                0.00    0.00     826/826         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [128]
                0.00    0.00     783/783         std::_List_const_iterator<sObject*>::operator++() [129]
-----------------------------------------------
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [203]
[202]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [202]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::size() const [199]
[203]    0.0    0.00    0.00      43         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [203]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [202]
                0.00    0.00      43/43          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [201]
-----------------------------------------------
                0.00    0.00       1/42          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [501]
                0.00    0.00      41/42          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [206]
[204]    0.0    0.00    0.00      42         operator new(unsigned long, void*) [204]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
[205]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [205]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
[206]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [206]
                0.00    0.00      41/42          operator new(unsigned long, void*) [204]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [214]
[207]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [207]
-----------------------------------------------
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [213]
[208]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [208]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [211]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [73]
[209]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [209]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[210]    0.0    0.00    0.00      41         sObject::isInclude() const [210]
                0.00    0.00      19/369         sQuOpDef::object() const [142]
                0.00    0.00      16/369         sQuFunDef::object() const [143]
                0.00    0.00       3/48          sConstDef::object() const [189]
                0.00    0.00       1/8           sCall::object() const [315]
                0.00    0.00       1/79          sVarDef::object() const [178]
                0.00    0.00       1/58          sProcDef::object() const [185]
-----------------------------------------------
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [208]
[211]    0.0    0.00    0.00      41         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [211]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::front() [217]
[212]    0.0    0.00    0.00      41         std::_List_iterator<sObject*>::operator*() const [212]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
[213]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [213]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [208]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
[214]    0.0    0.00    0.00      41         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [214]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [207]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [219]
[215]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [213]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [177]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [172]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [175]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [206]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [221]
[216]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::end() [216]
                0.00    0.00      41/123         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [161]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[217]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::front() [217]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [176]
                0.00    0.00      41/41          std::_List_iterator<sObject*>::operator*() const [212]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::pop_front() [220]
[218]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
                0.00    0.00      41/82          sObject** std::__addressof<sObject*>(sObject*&) [177]
                0.00    0.00      41/82          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [172]
                0.00    0.00      41/82          std::allocator<sObject*>::~allocator() [175]
                0.00    0.00      41/41          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [205]
                0.00    0.00      41/41          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [214]
-----------------------------------------------
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [221]
[219]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [219]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [215]
-----------------------------------------------
                0.00    0.00      41/41          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[220]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::pop_front() [220]
                0.00    0.00      41/82          std::list<sObject*, std::allocator<sObject*> >::begin() [176]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [218]
-----------------------------------------------
                0.00    0.00      41/41          yyparse() [27]
[221]    0.0    0.00    0.00      41         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [221]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::end() [216]
                0.00    0.00      41/41          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [219]
-----------------------------------------------
                0.00    0.00       2/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      35/37          sCall::typecheck(SymTable*, SymTable*) [69]
[222]    0.0    0.00    0.00      37         sRoutDef::args() [222]
-----------------------------------------------
                0.00    0.00       2/36          QuHeap::QuHeap(int, int) [56]
                0.00    0.00      34/36          operator~(bitvec const&) [90]
[223]    0.0    0.00    0.00      36         bitvec::qnot() [223]
-----------------------------------------------
                                  26             quSubString::quSubString(int, int, quState&) <cycle 5> [240]
                0.00    0.00       1/26          tValue::tValue(quState&, BaseType) [492]
                0.00    0.00       1/26          sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       8/26          tValue::assign(tValue const&) [146]
[224]    0.0    0.00    0.00      36         quState::newclone() <cycle 5> [224]
                0.00    0.00      36/98484       quState::mapbits() const [106]
                                  26             quBaseState::newsubstring(int, int) <cycle 5> [186]
                                  10             quSubString::newsubstring(int, int) <cycle 5> [243]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [495]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [285]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [267]
[225]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [225]
                0.00    0.00     144/176         sObject::setFlag(ObjFlag, int) [158]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [147]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [497]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [287]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [269]
[226]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [226]
                0.00    0.00      44/44          sDefList::~sDefList() [196]
                0.00    0.00      36/73          sObject::isExtern() const [183]
                0.00    0.00      36/312         sDef::~sDef() [148]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [277]
-----------------------------------------------
                0.00    0.00       1/36          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/36          sListFunct::sListFunct(ObjType, sExprList*) [341]
                0.00    0.00       4/36          sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       6/36          sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00      21/36          sCall::typecheck(SymTable*, SymTable*) [69]
[227]    0.0    0.00    0.00      36         sList<sExpr>::next(void*&) const [227]
-----------------------------------------------
                0.00    0.00       1/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/35          sSubscript::sSubscript(sVar*, sExprList*) [344]
                0.00    0.00       4/35          sListFunct::sListFunct(ObjType, sExprList*) [341]
                0.00    0.00       4/35          sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       8/35          sExprList::typecheck(SymTable*, SymTable*) [78]
                0.00    0.00      14/35          sCall::typecheck(SymTable*, SymTable*) [69]
[228]    0.0    0.00    0.00      35         sList<sExpr>::first(void*&) const [228]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [157]
[229]    0.0    0.00    0.00      34         sDefList::object() const [229]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00      14/32          tType::isCond() const [300]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
[230]    0.0    0.00    0.00      32         tType::isQuCond() const [230]
                0.00    0.00      32/115         tType::isQuExpr() const [162]
-----------------------------------------------
                0.00    0.00       2/31          termlist::termlist(int, int) [58]
                0.00    0.00      13/31          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00      16/31          quBaseState::opbegin() [284]
[231]    0.0    0.00    0.00      31         termlist::clear() [231]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [73]
[232]    0.0    0.00    0.00      30         tType::isNumber() const [232]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00       9/30          sObject::isQuDef() const [281]
                0.00    0.00      13/30          sObject::inQuFunDef() const [301]
[233]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [233]
                0.00    0.00      13/369         sQuFunDef::object() const [143]
                0.00    0.00      10/369         sQuOpDef::object() const [142]
                0.00    0.00       7/58          sProcDef::object() const [185]
-----------------------------------------------
                0.00    0.00       1/29          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/29          sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       2/29          sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/29          sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
                0.00    0.00      21/29          sConst::sConst(tValue const&) [260]
[234]    0.0    0.00    0.00      29         tValue::operator=(tValue const&) [234]
                0.00    0.00      29/692         tValue::delpointer() [130]
                0.00    0.00      29/316         tValue::assign(tValue const&) [146]
-----------------------------------------------
                0.00    0.00       1/28          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       1/28          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/28          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       8/28          sRoutDef::typecheck(SymTable*, SymTable*) [39]
                0.00    0.00      14/28          sCall::typecheck(SymTable*, SymTable*) [69]
[235]    0.0    0.00    0.00      28         sObject::isCondDef() const [235]
                0.00    0.00      28/165         sObject::isSet(ObjFlag) const [160]
-----------------------------------------------
                0.00    0.00      27/27          yyparse() [27]
[236]    0.0    0.00    0.00      27         sList<sExpr>::append(sExpr*) [236]
-----------------------------------------------
                0.00    0.00       1/27          quBaseState::quBaseState(int, int) [57]
                0.00    0.00      26/27          quSubState::quSubState(int) [239]
[237]    0.0    0.00    0.00      27         quState::quState(int) [237]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [26]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [307]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [282]
[238]    0.0    0.00    0.00      26         yy_load_buffer_state() [238]
-----------------------------------------------
                0.00    0.00      26/26          quSubString::quSubString(int, int, quState&) <cycle 5> [240]
[239]    0.0    0.00    0.00      26         quSubState::quSubState(int) [239]
                0.00    0.00      26/27          quState::quState(int) [237]
-----------------------------------------------
                                  26             quBaseState::newsubstring(int, int) <cycle 5> [186]
[240]    0.0    0.00    0.00      26         quSubString::quSubString(int, int, quState&) <cycle 5> [240]
                0.00    0.00      26/26          quSubState::quSubState(int) [239]
                                  26             quState::newclone() <cycle 5> [224]
-----------------------------------------------
                0.00    0.00       1/26          quBaseState::~quBaseState() [54]
                0.00    0.00      25/26          quSubState::~quSubState() [242]
[241]    0.0    0.00    0.00      26         quState::~quState() [241]
-----------------------------------------------
                0.00    0.00      25/25          quSubString::~quSubString() [245]
[242]    0.0    0.00    0.00      25         quSubState::~quSubState() [242]
                0.00    0.00      25/25          quBaseState::isbasestate() const [246]
                0.00    0.00      25/26          quState::~quState() [241]
-----------------------------------------------
                                  10             quState::newclone() <cycle 5> [224]
                0.00    0.00      15/26          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[243]    0.0    0.00    0.00      25         quSubString::newsubstring(int, int) <cycle 5> [243]
                                  25             quBaseState::newsubstring(int, int) <cycle 5> [186]
-----------------------------------------------
                0.00    0.00      10/25          tValue::delpointer() [130]
                0.00    0.00      15/25          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[244]    0.0    0.00    0.00      25         quSubString::~quSubString() [244]
                0.00    0.00      25/25          quSubString::~quSubString() [245]
-----------------------------------------------
                0.00    0.00      25/25          quSubString::~quSubString() [244]
[245]    0.0    0.00    0.00      25         quSubString::~quSubString() [245]
                0.00    0.00      25/25          quSubState::~quSubState() [242]
-----------------------------------------------
                0.00    0.00      25/25          quSubState::~quSubState() [242]
[246]    0.0    0.00    0.00      25         quBaseState::isbasestate() const [246]
-----------------------------------------------
                0.00    0.00      25/25          sCall::typecheck(SymTable*, SymTable*) [69]
[247]    0.0    0.00    0.00      25         tType::isQuConst() const [247]
-----------------------------------------------
                0.00    0.00       1/24          sExit::sExit(sExpr*) [484]
                0.00    0.00       2/24          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [381]
                0.00    0.00       7/24          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [318]
                0.00    0.00      14/24          sCall::sCall(std::string*, sExprList*, int) [297]
[248]    0.0    0.00    0.00      24         sStmt::sStmt(int) [248]
                0.00    0.00      24/515         sObject::sObject(unsigned int) [136]
                0.00    0.00      24/176         sObject::setFlag(ObjFlag, int) [158]
-----------------------------------------------
                0.00    0.00       1/24          sExit::~sExit() [486]
                0.00    0.00       2/24          sFor::~sFor() <cycle 2> [383]
                0.00    0.00       7/24          sIf::~sIf() <cycle 2> [320]
                0.00    0.00      14/24          sCall::~sCall() [299]
[249]    0.0    0.00    0.00      24         sStmt::~sStmt() [249]
                0.00    0.00      24/515         sObject::~sObject() [137]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [27]
[250]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [250]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
[251]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [251]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [76]
                0.00    0.00      14/23          tType::isCond() const [300]
[252]    0.0    0.00    0.00      23         tType::isBoolean() const [252]
-----------------------------------------------
                0.00    0.00      22/22          sExprList::sExprList() [255]
[253]    0.0    0.00    0.00      22         sList<sExpr>::sList() [253]
                0.00    0.00      22/515         sObject::sObject(unsigned int) [136]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [257]
[254]    0.0    0.00    0.00      22         sList<sExpr>::~sList() <cycle 1> [254]
                0.00    0.00      22/515         sObject::~sObject() [137]
                0.00    0.00      18/44          sVar::~sVar() [191]
                                   4             sSubscript::~sSubscript() <cycle 1> [345]
                                   3             sMult::~sMult() <cycle 1> [326]
                                   2             sConcat::~sConcat() <cycle 1> [392]
-----------------------------------------------
                0.00    0.00      22/22          yyparse() [27]
[255]    0.0    0.00    0.00      22         sExprList::sExprList() [255]
                0.00    0.00      22/22          sList<sExpr>::sList() [253]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [346]
                                   4             sListFunct::~sListFunct() <cycle 1> [343]
                0.00    0.00      14/23          sCall::~sCall() [299]
[256]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [256]
                                  22             sExprList::~sExprList() <cycle 1> [257]
-----------------------------------------------
                                  22             sExprList::~sExprList() <cycle 1> [256]
[257]    0.0    0.00    0.00      22         sExprList::~sExprList() <cycle 1> [257]
                                  22             sList<sExpr>::~sList() <cycle 1> [254]
-----------------------------------------------
                0.00    0.00       4/22          sCall::typecheck(SymTable*, SymTable*) [69]
                0.00    0.00      18/22          sObject::isQuDef() const [281]
[258]    0.0    0.00    0.00      22         sObject::isQuOpDef() const [258]
                0.00    0.00      10/369         sQuFunDef::object() const [143]
                0.00    0.00       9/369         sQuOpDef::object() const [142]
                0.00    0.00       3/58          sProcDef::object() const [185]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [260]
[259]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [259]
                0.00    0.00      21/515         sObject::sObject(unsigned int) [136]
                0.00    0.00      21/1478        tType::tType(BaseType) [122]
                0.00    0.00      21/842         tType::operator=(tType const&) [127]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00      19/21          yylex() [26]
[260]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [260]
                0.00    0.00      21/63          tValue::type() const [184]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [259]
                0.00    0.00      21/353         tValue::tValue() [145]
                0.00    0.00      21/29          tValue::operator=(tValue const&) [234]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [486]
                0.00    0.00       1/21          sVarDef::~sVarDef() [322]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [383]
                0.00    0.00       5/21          sConstDef::~sConstDef() [334]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [275]
[261]    0.0    0.00    0.00      21         sConst::~sConst() [261]
                0.00    0.00      21/21          sConst::~sConst() [262]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [261]
[262]    0.0    0.00    0.00      21         sConst::~sConst() [262]
                0.00    0.00      21/95          sExpr::~sExpr() [165]
                0.00    0.00      21/663         tValue::~tValue() [133]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [157]
[263]    0.0    0.00    0.00      21         sIf::object() const [263]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       2/21          tValue::isInt() const [401]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [81]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [77]
                0.00    0.00       8/21          tType::isOrdered() const [317]
[264]    0.0    0.00    0.00      21         tType::isInt() const [264]
-----------------------------------------------
                0.00    0.00      21/21          sCall::typecheck(SymTable*, SymTable*) [69]
[265]    0.0    0.00    0.00      21         tType::isConv(tType const&) const [265]
                0.00    0.00       2/115         tType::isQuExpr() const [162]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [483]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [82]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [73]
[266]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00      38/63          tValue::type() const [184]
                0.00    0.00      19/19          tType::isDefined() const [270]
                0.00    0.00      19/109         sExpr::settype(tType const&) [163]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [27]
[267]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [267]
                0.00    0.00      19/1478        tType::tType(BaseType) [122]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [225]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [188]
[268]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [268]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [269]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [268]
[269]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [269]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [226]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [266]
[270]    0.0    0.00    0.00      19         tType::isDefined() const [270]
-----------------------------------------------
                0.00    0.00       5/19          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      14/19          sCall::typecheck(SymTable*, SymTable*) [69]
[271]    0.0    0.00    0.00      19         sObject::inFunctDef() const [271]
                0.00    0.00      19/167         sObject::def() const [159]
                0.00    0.00      17/294         sObject::isFunctDef() const [149]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [276]
[272]    0.0    0.00    0.00      18         sList<sStmt>::sList() [272]
                0.00    0.00      18/515         sObject::sObject(unsigned int) [136]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [278]
[273]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [273]
                0.00    0.00      18/515         sObject::~sObject() [137]
                0.00    0.00      13/14          sCall::~sCall() [298]
                0.00    0.00       1/1           sExit::~sExit() [485]
                                   7             sIf::~sIf() <cycle 2> [319]
                                   2             sFor::~sFor() <cycle 2> [382]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [479]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [384]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [391]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [370]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [348]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [325]
[274]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [274]
                0.00    0.00      18/74          sExpr::sExpr() [182]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [393]
                                   4             sLess::~sLess() <cycle 1> [350]
                                   6             sMult::~sMult() <cycle 1> [327]
                0.00    0.00       1/23          sOr::~sOr() [481]
                0.00    0.00       2/23          sSub::~sSub() [386]
                0.00    0.00       3/23          sEqual::~sEqual() [372]
[275]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [275]
                0.00    0.00      18/95          sExpr::~sExpr() [165]
                0.00    0.00      12/21          sConst::~sConst() [261]
                0.00    0.00      12/44          sVar::~sVar() [191]
                0.00    0.00       4/4           sLength::~sLength() [355]
                                   3             sMult::~sMult() <cycle 1> [326]
                                   3             sListFunct::~sListFunct() <cycle 1> [342]
                                   2             sLess::~sLess() <cycle 1> [349]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [27]
[276]    0.0    0.00    0.00      18         sStmtList::sStmtList() [276]
                0.00    0.00      18/18          sList<sStmt>::sList() [272]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [383]
                                   8             sIf::~sIf() <cycle 2> [320]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [226]
[277]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [277]
                                  18             sStmtList::~sStmtList() <cycle 2> [278]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [277]
[278]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [278]
                                  18             sList<sStmt>::~sList() <cycle 2> [273]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
[279]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [279]
-----------------------------------------------
                0.00    0.00       4/18          sVarDef::typecheck(SymTable*, SymTable*) [72]
                0.00    0.00      14/18          sCall::typecheck(SymTable*, SymTable*) [69]
[280]    0.0    0.00    0.00      18         sObject::inQuDef() const [280]
                0.00    0.00      18/167         sObject::def() const [159]
                0.00    0.00      17/18          sObject::isQuDef() const [281]
-----------------------------------------------
                0.00    0.00       1/18          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/18          sObject::inQuDef() const [280]
[281]    0.0    0.00    0.00      18         sObject::isQuDef() const [281]
                0.00    0.00      18/22          sObject::isQuOpDef() const [258]
                0.00    0.00       9/30          sObject::isQuFunDef() const [233]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [380]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [339]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [305]
[282]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [282]
                0.00    0.00      15/26          yy_load_buffer_state() [238]
-----------------------------------------------
                0.00    0.00       1/16          quBaseState::reset(bitvec const&) [89]
                0.00    0.00      15/16          quSubState::opend() [288]
[283]    0.0    0.00    0.00      16         quBaseState::opend() [283]
-----------------------------------------------
                0.00    0.00       1/16          quBaseState::reset(bitvec const&) [89]
                0.00    0.00      15/16          quSubState::opbegin() [289]
[284]    0.0    0.00    0.00      16         quBaseState::opbegin() [284]
                0.00    0.00      16/31          termlist::clear() [231]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [27]
[285]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [285]
                0.00    0.00      16/1478        tType::tType(BaseType) [122]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [225]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [188]
[286]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [286]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [287]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [286]
[287]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [287]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [226]
-----------------------------------------------
                0.00    0.00      15/15          opElementary::apply(quState&) const [9]
[288]    0.0    0.00    0.00      15         quSubState::opend() [288]
                0.00    0.00      15/16          quBaseState::opend() [283]
-----------------------------------------------
                0.00    0.00      15/15          opElementary::apply(quState&) const [9]
[289]    0.0    0.00    0.00      15         quSubState::opbegin() [289]
                0.00    0.00      15/16          quBaseState::opbegin() [284]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [26]
[290]    0.0    0.00    0.00      15         tValue::tValue(long) [290]
                0.00    0.00      15/1478        tType::tType(BaseType) [122]
                0.00    0.00      15/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00      15/15          opElementary::apply(quState&) const [9]
[291]    0.0    0.00    0.00      15         quSubState::baseterms() const [291]
                0.00    0.00      15/15          quBaseState::baseterms() const [292]
-----------------------------------------------
                0.00    0.00      15/15          quSubState::baseterms() const [291]
[292]    0.0    0.00    0.00      15         quBaseState::baseterms() const [292]
                0.00    0.00      15/15          termlist::nterms() const [296]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [157]
[293]    0.0    0.00    0.00      15         sFor::object() const [293]
-----------------------------------------------
                0.00    0.00       1/15          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      14/15          sCall::typecheck(SymTable*, SymTable*) [69]
[294]    0.0    0.00    0.00      15         sCall::id() const [294]
-----------------------------------------------
                0.00    0.00      15/15          QuHeap::qualloc(int, BaseType) [91]
[295]    0.0    0.00    0.00      15         bitvec::operator[](int) const [295]
-----------------------------------------------
                0.00    0.00      15/15          quBaseState::baseterms() const [292]
[296]    0.0    0.00    0.00      15         termlist::nterms() const [296]
-----------------------------------------------
                0.00    0.00      14/14          yyparse() [27]
[297]    0.0    0.00    0.00      14         sCall::sCall(std::string*, sExprList*, int) [297]
                0.00    0.00      14/24          sStmt::sStmt(int) [248]
-----------------------------------------------
                0.00    0.00       1/14          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/14          sList<sStmt>::~sList() <cycle 2> [273]
[298]    0.0    0.00    0.00      14         sCall::~sCall() [298]
                0.00    0.00      14/14          sCall::~sCall() [299]
-----------------------------------------------
                0.00    0.00      14/14          sCall::~sCall() [298]
[299]    0.0    0.00    0.00      14         sCall::~sCall() [299]
                0.00    0.00      14/23          sExprList::~sExprList() <cycle 1> [256]
                0.00    0.00      14/24          sStmt::~sStmt() [249]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [73]
[300]    0.0    0.00    0.00      14         tType::isCond() const [300]
                0.00    0.00      14/32          tType::isQuCond() const [230]
                0.00    0.00      14/23          tType::isBoolean() const [252]
-----------------------------------------------
                0.00    0.00      14/14          sCall::typecheck(SymTable*, SymTable*) [69]
[301]    0.0    0.00    0.00      14         sObject::inQuFunDef() const [301]
                0.00    0.00      14/167         sObject::def() const [159]
                0.00    0.00      13/30          sObject::isQuFunDef() const [233]
-----------------------------------------------
                0.00    0.00       1/14          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       3/14          sObject::isGlobal() const [336]
                0.00    0.00      10/14          sCall::typecheck(SymTable*, SymTable*) [69]
[302]    0.0    0.00    0.00      14         sObject::isProcDef() const [302]
                0.00    0.00       6/369         sQuOpDef::object() const [142]
                0.00    0.00       5/369         sQuFunDef::object() const [143]
                0.00    0.00       3/58          sProcDef::object() const [185]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [303]
                0.00    0.00      13/13          sCall::typecheck(SymTable*, SymTable*) [69]
[303]    0.0    0.00    0.00      13+42      sObject::isSetRec(ObjFlag) [303]
                0.00    0.00      97/881         sObject::parent() const [126]
                0.00    0.00      55/165         sObject::isSet(ObjFlag) const [160]
                                  42             sObject::isSetRec(ObjFlag) [303]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [26]
[304]    0.0    0.00    0.00      12         yy_get_next_buffer() [304]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [307]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [447]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [307]
[305]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [305]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [282]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [472]
                0.00    0.00      10/11          openqclfile(std::string) [340]
[306]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [306]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [380]
                0.00    0.00       4/10          yy_get_next_buffer() [304]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [339]
[307]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [307]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [305]
                0.00    0.00      10/26          yy_load_buffer_state() [238]
                0.00    0.00       1/1           yyensure_buffer_stack() [474]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [447]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [39]
[308]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [308]
                0.00    0.00      10/87          SymTable::SymTable() [167]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [39]
[309]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [309]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [310]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [309]
[310]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [310]
                0.00    0.00      10/87          SymTable::~SymTable() [168]
-----------------------------------------------
                0.00    0.00      10/10          tValue::delpointer() [130]
[311]    0.0    0.00    0.00      10         quSubState::isbasestate() const [311]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [157]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [73]
[312]    0.0    0.00    0.00       9         sMult::object() const [312]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [26]
[313]    0.0    0.00    0.00       8         yy_get_previous_state() [313]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [450]
                0.00    0.00       7/8           yyparse() [27]
[314]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [314]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [147]
-----------------------------------------------
                0.00    0.00       1/8           sObject::isDef() const [144]
                0.00    0.00       1/8           sObject::isInclude() const [210]
                0.00    0.00       2/8           sObject::isStmt() const [521]
                0.00    0.00       4/8           sObject::isRoutDef() const [157]
[315]    0.0    0.00    0.00       8         sCall::object() const [315]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [359]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [81]
[316]    0.0    0.00    0.00       8         sList<sExpr>::n() const [316]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [73]
[317]    0.0    0.00    0.00       8         tType::isOrdered() const [317]
                0.00    0.00       8/21          tType::isInt() const [264]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [27]
[318]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [318]
                0.00    0.00       7/24          sStmt::sStmt(int) [248]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [273]
[319]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [319]
                                   7             sIf::~sIf() <cycle 2> [320]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [319]
[320]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [320]
                0.00    0.00       7/24          sStmt::~sStmt() [249]
                0.00    0.00       3/3           sEqual::~sEqual() [371]
                0.00    0.00       2/23          sLess::~sLess() <cycle 1> [349]
                0.00    0.00       1/23          sListFunct::~sListFunct() <cycle 1> [342]
                0.00    0.00       1/1           sOr::~sOr() [480]
                                   8             sStmtList::~sStmtList() <cycle 2> [277]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [188]
                0.00    0.00       6/7           sList<sDef>::~sList() [194]
[321]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [321]
                0.00    0.00       7/7           sVarDef::~sVarDef() [322]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [321]
[322]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [322]
                0.00    0.00       8/312         sDef::~sDef() [148]
                0.00    0.00       4/44          sVar::~sVar() [191]
                0.00    0.00       1/21          sConst::~sConst() [261]
-----------------------------------------------
                0.00    0.00       1/7           tValue::conv(tType const&) const [519]
                0.00    0.00       1/7           sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
                0.00    0.00       2/7           sBinOp::typecheck(SymTable*, SymTable*) [73]
                0.00    0.00       3/7           sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
[323]    0.0    0.00    0.00       7         tType::operator==(tType const&) const [323]
-----------------------------------------------
                0.00    0.00       1/7           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/7           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       5/7           tValue::qustate() const [335]
[324]    0.0    0.00    0.00       7         tValue::isQuExpr() const [324]
                0.00    0.00       7/115         tType::isQuExpr() const [162]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [27]
[325]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [325]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [274]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [275]
                                   3             sList<sExpr>::~sList() <cycle 1> [254]
[326]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [326]
                                   6             sMult::~sMult() <cycle 1> [327]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [326]
[327]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [327]
                                   6             sBinOp::~sBinOp() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       6/6           tValue::isError() const [329]
[328]    0.0    0.00    0.00       6         tType::isError() const [328]
-----------------------------------------------
                0.00    0.00       1/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       2/6           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/6           sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
[329]    0.0    0.00    0.00       6         tValue::isError() const [329]
                0.00    0.00       6/6           tType::isError() const [328]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [340]
[330]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [330]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [82]
[331]    0.0    0.00    0.00       5         sDef::settype(tType const&) [331]
                0.00    0.00       5/842         tType::operator=(tType const&) [127]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       3/5           yyparse() [27]
[332]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [332]
                0.00    0.00       5/1478        tType::tType(BaseType) [122]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [147]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [188]
[333]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [333]
                0.00    0.00       5/5           sConstDef::~sConstDef() [334]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [333]
[334]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [334]
                0.00    0.00       5/21          sConst::~sConst() [261]
                0.00    0.00       5/312         sDef::~sDef() [148]
-----------------------------------------------
                0.00    0.00       1/5           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/5           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[335]    0.0    0.00    0.00       5         tValue::qustate() const [335]
                0.00    0.00       5/7           tValue::isQuExpr() const [324]
-----------------------------------------------
                0.00    0.00       1/5           sVar::typecheck(SymTable*, SymTable*) [68]
                0.00    0.00       1/5           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/5           sObject::isLocal() const [374]
[336]    0.0    0.00    0.00       5         sObject::isGlobal() const [336]
                0.00    0.00       5/167         sObject::def() const [159]
                0.00    0.00       3/14          sObject::isProcDef() const [302]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
[337]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [337]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [340]
[338]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [337]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [46]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[339]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [339]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [282]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [307]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[340]    0.0    0.00    0.00       4         openqclfile(std::string) [340]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [306]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [330]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [338]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [27]
[341]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [341]
                0.00    0.00       4/74          sExpr::sExpr() [182]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [228]
                0.00    0.00       4/36          sList<sExpr>::next(void*&) const [227]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [275]
                0.00    0.00       1/23          sIf::~sIf() <cycle 2> [320]
[342]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [342]
                                   4             sListFunct::~sListFunct() <cycle 1> [343]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [342]
[343]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [343]
                0.00    0.00       4/95          sExpr::~sExpr() [165]
                                   4             sExprList::~sExprList() <cycle 1> [256]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [27]
[344]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [344]
                0.00    0.00       4/74          sExpr::sExpr() [182]
                0.00    0.00       4/35          sList<sExpr>::first(void*&) const [228]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [254]
[345]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [345]
                                   4             sSubscript::~sSubscript() <cycle 1> [346]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [345]
[346]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [346]
                0.00    0.00       4/44          sVar::~sVar() [191]
                0.00    0.00       4/95          sExpr::~sExpr() [165]
                                   4             sExprList::~sExprList() <cycle 1> [256]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [77]
[347]    0.0    0.00    0.00       4         sExpr::basetype() [347]
                0.00    0.00       4/1013        tType::basetype() const [125]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [27]
[348]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [348]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [274]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [275]
                0.00    0.00       2/23          sIf::~sIf() <cycle 2> [320]
[349]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [349]
                                   4             sLess::~sLess() <cycle 1> [350]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [349]
[350]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [350]
                                   4             sBinOp::~sBinOp() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [354]
[351]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [351]
                0.00    0.00       4/74          sExpr::sExpr() [182]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [356]
[352]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [352]
                0.00    0.00       4/44          sVar::~sVar() [191]
                0.00    0.00       4/95          sExpr::~sExpr() [165]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [79]
[353]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [353]
                0.00    0.00       4/287         tValue::tValue(tValue const&) [150]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [27]
[354]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [354]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [351]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [275]
[355]    0.0    0.00    0.00       4         sLength::~sLength() [355]
                0.00    0.00       4/4           sLength::~sLength() [356]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [355]
[356]    0.0    0.00    0.00       4         sLength::~sLength() [356]
                0.00    0.00       4/4           sUnOp::~sUnOp() [352]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [408]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [407]
[357]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [357]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [81]
[358]    0.0    0.00    0.00       4         sListFunct::object() const [358]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [77]
[359]    0.0    0.00    0.00       4         sSubscript::nargs() const [359]
                0.00    0.00       4/8           sList<sExpr>::n() const [316]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [73]
[360]    0.0    0.00    0.00       4         sLess::object() const [360]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [80]
[361]    0.0    0.00    0.00       4         sLength::object() const [361]
-----------------------------------------------
                0.00    0.00       4/4           sVar::typecheck(SymTable*, SymTable*) [68]
[362]    0.0    0.00    0.00       4         sObject::isConstDef() const [362]
                0.00    0.00       3/48          sConstDef::object() const [189]
                0.00    0.00       1/79          sVarDef::object() const [178]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [510]
[363]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [363]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [398]
[364]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [364]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [522]
[365]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [365]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [560]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[366]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [366]
-----------------------------------------------
                0.00    0.00       4/4           std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [368]
[367]    0.0    0.00    0.00       4         std::complex<double>::operator*=(double) [367]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
[368]    0.0    0.00    0.00       4         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [368]
                0.00    0.00       4/4           std::complex<double>::operator*=(double) [367]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [474]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [447]
[369]    0.0    0.00    0.00       3         yyalloc(unsigned long) [369]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [27]
[370]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [370]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [274]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [320]
[371]    0.0    0.00    0.00       3         sEqual::~sEqual() [371]
                0.00    0.00       3/3           sEqual::~sEqual() [372]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [371]
[372]    0.0    0.00    0.00       3         sEqual::~sEqual() [372]
                0.00    0.00       3/23          sBinOp::~sBinOp() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [73]
[373]    0.0    0.00    0.00       3         sEqual::object() const [373]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [81]
[374]    0.0    0.00    0.00       3         sObject::isLocal() const [374]
                0.00    0.00       3/5           sObject::isGlobal() const [336]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [39]
[375]    0.0    0.00    0.00       3         sObject::isBennet() const [375]
                0.00    0.00       3/165         sObject::isSet(ObjFlag) const [160]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [500]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [410]
[376]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [376]
-----------------------------------------------
                0.00    0.00       2/2           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[377]    0.0    0.00    0.00       2         zero(bitvec const&) [377]
                0.00    0.00       2/2           bitvec::testzero() const [400]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [472]
[378]    0.0    0.00    0.00       2         irqOn() [378]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [58]
[379]    0.0    0.00    0.00       2         duallog(int) [379]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [46]
[380]    0.0    0.00    0.00       2         yyCleanUp() [380]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [307]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [282]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [27]
[381]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [381]
                0.00    0.00       2/24          sStmt::sStmt(int) [248]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [273]
[382]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [382]
                                   2             sFor::~sFor() <cycle 2> [383]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [382]
[383]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [383]
                0.00    0.00       2/44          sVar::~sVar() [191]
                0.00    0.00       2/21          sConst::~sConst() [261]
                0.00    0.00       2/2           sSub::~sSub() [385]
                0.00    0.00       2/24          sStmt::~sStmt() [249]
                                   2             sStmtList::~sStmtList() <cycle 2> [277]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [27]
[384]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [384]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [274]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [383]
[385]    0.0    0.00    0.00       2         sSub::~sSub() [385]
                0.00    0.00       2/2           sSub::~sSub() [386]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [385]
[386]    0.0    0.00    0.00       2         sSub::~sSub() [386]
                0.00    0.00       2/23          sBinOp::~sBinOp() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [27]
[387]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [387]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [26]
[388]    0.0    0.00    0.00       2         tValue::tValue(double) [388]
                0.00    0.00       2/1478        tType::tType(BaseType) [122]
                0.00    0.00       2/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [75]
[389]    0.0    0.00    0.00       2         tValue::tValue(int) [389]
                0.00    0.00       2/1478        tType::tType(BaseType) [122]
                0.00    0.00       2/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [27]
[390]    0.0    0.00    0.00       2         objlist::objlist() [390]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [418]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [27]
[391]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [391]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [274]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [254]
[392]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [392]
                                   2             sConcat::~sConcat() <cycle 1> [393]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [392]
[393]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [393]
                                   2             sBinOp::~sBinOp() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [411]
[394]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [394]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [555]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [556]
[395]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [395]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [523]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [524]
[396]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [396]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [526]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [527]
[397]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [397]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [409]
[398]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [398]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [364]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [73]
[399]    0.0    0.00    0.00       2         sSub::object() const [399]
-----------------------------------------------
                0.00    0.00       2/2           zero(bitvec const&) [377]
[400]    0.0    0.00    0.00       2         bitvec::testzero() const [400]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [402]
[401]    0.0    0.00    0.00       2         tValue::isInt() const [401]
                0.00    0.00       2/21          tType::isInt() const [264]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
[402]    0.0    0.00    0.00       2         tValue::toInt() const [402]
                0.00    0.00       2/2           tValue::isInt() const [401]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [73]
[403]    0.0    0.00    0.00       2         sConcat::object() const [403]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [508]
[404]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [404]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [509]
[405]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [405]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [410]
[406]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [406]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [409]
[407]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [407]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [357]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [409]
[408]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [408]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [357]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [50]
[409]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [409]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [407]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [408]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [398]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [522]
[410]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [410]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [376]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [406]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [412]
[411]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [411]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [394]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [414]
[412]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [412]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [411]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [414]
[413]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [413]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [418]
[414]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [414]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [413]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [412]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [422]
[415]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [415]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [541]
[416]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [416]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [498]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [419]
[417]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [417]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [390]
[418]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [418]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [414]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [420]
[419]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [419]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [417]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [421]
[420]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [420]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [419]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[421]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [421]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [420]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [423]
[422]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [422]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [415]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [560]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[423]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [423]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [422]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[424]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [424]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [450]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[425]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [425]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [458]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[426]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [426]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [465]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[427]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [427]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [460]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[428]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [428]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [459]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[429]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [429]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [452]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[430]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [430]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [451]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[431]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [431]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [464]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[432]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [432]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [456]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[433]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [433]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [453]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[434]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [434]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [457]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[435]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [435]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[436]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [436]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [449]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[437]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [437]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[438]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [438]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[439]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [439]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[440]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [440]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [466]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[441]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qc_check_txt [441]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[442]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [442]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [462]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[443]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [443]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [463]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[444]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [444]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [461]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[445]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [445]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [455]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [1774]
[446]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [446]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [454]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [307]
[447]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [447]
                0.00    0.00       2/3           yyalloc(unsigned long) [369]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [305]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[448]    0.0    0.00    0.00       1         initialize_readline() [448]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [436]
[449]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [449]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [424]
[450]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [450]
                0.00    0.00       1/1478        tType::tType(BaseType) [122]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [314]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [430]
[451]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [451]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [429]
[452]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [452]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [433]
[453]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [453]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [446]
[454]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [454]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [445]
[455]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [455]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [432]
[456]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [456]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [434]
[457]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [457]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [425]
[458]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [458]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [428]
[459]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [459]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [427]
[460]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [460]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [444]
[461]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [461]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [442]
[462]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [462]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [443]
[463]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [463]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [431]
[464]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [464]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [426]
[465]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [465]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [440]
[466]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [466]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [435]
[467]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [467]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [441]
[468]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [468]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [439]
[469]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [469]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [438]
[470]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [470]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [437]
[471]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [471]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[472]    0.0    0.00    0.00       1         parseopt(int, char**) [472]
                0.00    0.00       2/2           irqOn() [378]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [306]
                0.00    0.00       1/1           qc_srand(long) [473]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [472]
[473]    0.0    0.00    0.00       1         qc_srand(long) [473]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [307]
[474]    0.0    0.00    0.00       1         yyensure_buffer_stack() [474]
                0.00    0.00       1/3           yyalloc(unsigned long) [369]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::opElementary(int) [477]
[475]    0.0    0.00    0.00       1         opOperator::opOperator(int) [475]
-----------------------------------------------
                0.00    0.00       1/1           opElementary::~opElementary() [478]
[476]    0.0    0.00    0.00       1         opOperator::~opOperator() [476]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::opMatrix(int) [494]
[477]    0.0    0.00    0.00       1         opElementary::opElementary(int) [477]
                0.00    0.00       1/1           opOperator::opOperator(int) [475]
-----------------------------------------------
                0.00    0.00       1/1           opMatrix::~opMatrix() [94]
[478]    0.0    0.00    0.00       1         opElementary::~opElementary() [478]
                0.00    0.00       1/1           opOperator::~opOperator() [476]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [27]
[479]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [479]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [274]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [320]
[480]    0.0    0.00    0.00       1         sOr::~sOr() [480]
                0.00    0.00       1/1           sOr::~sOr() [481]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [480]
[481]    0.0    0.00    0.00       1         sOr::~sOr() [481]
                0.00    0.00       1/23          sBinOp::~sBinOp() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
[482]    0.0    0.00    0.00       1         sDef::basetype() [482]
                0.00    0.00       1/1013        tType::basetype() const [125]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [70]
[483]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [483]
                0.00    0.00       1/455         sObject::setParent(sObject*) [138]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [266]
                0.00    0.00       1/96          sExpr::type() [164]
                0.00    0.00       1/1           tType::isString() const [515]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [27]
[484]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [484]
                0.00    0.00       1/24          sStmt::sStmt(int) [248]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [273]
[485]    0.0    0.00    0.00       1         sExit::~sExit() [485]
                0.00    0.00       1/1           sExit::~sExit() [486]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [485]
[486]    0.0    0.00    0.00       1         sExit::~sExit() [486]
                0.00    0.00       1/21          sConst::~sConst() [261]
                0.00    0.00       1/24          sStmt::~sStmt() [249]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[487]    0.0    0.00    0.00       1         QuHeap::init() [487]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [83]
[488]    0.0    0.00    0.00       1         QuHeap::addReg(quState*) [488]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [492]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [558]
                0.00    0.00       1/663         tValue::~tValue() [133]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[489]    0.0    0.00    0.00       1         SymTab::~SymTab() [489]
                0.00    0.00       1/77          SymTab::~SymTab() [181]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [91]
[490]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [490]
                0.00    0.00       1/1478        tType::tType(BaseType) [122]
                0.00    0.00       1/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [26]
[491]    0.0    0.00    0.00       1         tValue::tValue(char const*) [491]
                0.00    0.00       1/1478        tType::tType(BaseType) [122]
                0.00    0.00       1/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [488]
[492]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [492]
                0.00    0.00       1/1478        tType::tType(BaseType) [122]
                0.00    0.00       1/26          quState::newclone() <cycle 5> [224]
                0.00    0.00       1/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [26]
[493]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [493]
                0.00    0.00       1/1478        tType::tType(BaseType) [122]
                0.00    0.00       1/450         tType::operator=(BaseType) [139]
-----------------------------------------------
                0.00    0.00       1/1           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [88]
[494]    0.0    0.00    0.00       1         opMatrix::opMatrix(int) [494]
                0.00    0.00       1/1           opElementary::opElementary(int) [477]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [27]
[495]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [495]
                0.00    0.00       1/1478        tType::tType(BaseType) [122]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [225]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [188]
[496]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [496]
                0.00    0.00       1/1           sProcDef::~sProcDef() [497]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [496]
[497]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [497]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [226]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [416]
[498]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [498]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [557]
[499]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [499]
                0.00    0.00       1/663         tValue::~tValue() [133]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [537]
[500]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [500]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [376]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[501]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [501]
                0.00    0.00       1/42          operator new(unsigned long, void*) [204]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [150]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [529]
[502]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [502]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [530]
[503]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [503]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [531]
[504]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [504]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [532]
[505]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [505]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [533]
[506]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [506]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [534]
[507]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [507]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [525]
[508]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [508]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [404]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [528]
[509]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [509]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [405]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[510]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [510]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [363]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [89]
[511]    0.0    0.00    0.00       1         quBaseState::basebits() const [511]
                0.00    0.00       1/98484       quState::mapbits() const [106]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [73]
[512]    0.0    0.00    0.00       1         sOr::object() const [512]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[513]    0.0    0.00    0.00       1         sStmt::isInv() const [513]
                0.00    0.00       1/165         sObject::isSet(ObjFlag) const [160]
-----------------------------------------------
                0.00    0.00       1/1           tValue::isExpr() const [520]
[514]    0.0    0.00    0.00       1         tType::isExpr() const [514]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [483]
[515]    0.0    0.00    0.00       1         tType::isString() const [515]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[516]    0.0    0.00    0.00       1         QuHeap::cond() const [516]
                0.00    0.00       1/1           QuHeap::ncond() const [518]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[517]    0.0    0.00    0.00       1         QuHeap::nBits() const [517]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::cond() const [516]
[518]    0.0    0.00    0.00       1         QuHeap::ncond() const [518]
                0.00    0.00       1/98304       bitvec::length() const [108]
-----------------------------------------------
                0.00    0.00       1/1           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[519]    0.0    0.00    0.00       1         tValue::conv(tType const&) const [519]
                0.00    0.00       1/7           tType::operator==(tType const&) const [323]
                0.00    0.00       1/287         tValue::tValue(tValue const&) [150]
-----------------------------------------------
                0.00    0.00       1/1           sVar::eval(SymTable*, SymTable*, QuHeap*) [86]
[520]    0.0    0.00    0.00       1         tValue::isExpr() const [520]
                0.00    0.00       1/1           tType::isExpr() const [514]
-----------------------------------------------
                0.00    0.00       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[521]    0.0    0.00    0.00       1         sObject::isStmt() const [521]
                0.00    0.00       2/8           sCall::object() const [315]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[522]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [522]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [365]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [410]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [565]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [525]
[523]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [523]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [396]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [525]
[524]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [524]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [396]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[525]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [525]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [523]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [524]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [508]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [528]
[526]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [526]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [397]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [528]
[527]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [527]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [397]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[528]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [528]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [526]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [527]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [509]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [538]
[529]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [529]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [502]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [539]
[530]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [530]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [503]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [542]
[531]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [531]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [504]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [543]
[532]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [532]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [505]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [548]
[533]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [533]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [506]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [549]
[534]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [534]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [507]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [566]
[535]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [535]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [568]
[536]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [536]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[537]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [537]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [500]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [540]
[538]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [538]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [529]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [541]
[539]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [539]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [530]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [559]
[540]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [540]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [538]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [560]
[541]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [541]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [416]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [539]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [546]
[542]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [542]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [531]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [547]
[543]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [543]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [532]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [547]
[544]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [544]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [562]
[545]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [561]
[546]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [546]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [542]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [562]
[547]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [547]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [544]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [543]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [552]
[548]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [548]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [533]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [553]
[549]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [549]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [534]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [553]
[550]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [550]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [564]
[551]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [551]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [563]
[552]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [552]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [548]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [564]
[553]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [553]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [550]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [558]
[554]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [366]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [363]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [421]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [522]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [556]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [510]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [537]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [501]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [423]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [416]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [558]
[555]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [555]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [395]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
[556]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [556]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [395]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[557]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [557]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [499]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [488]
[558]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [558]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [555]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [554]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[559]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [559]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [540]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[560]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [560]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [366]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [541]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [423]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[561]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [561]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [546]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[562]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [562]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [545]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [547]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [567]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [56]
[563]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [552]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [50]
[564]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [564]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [551]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [569]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [553]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [522]
[565]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [565]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [567]
[566]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [566]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [535]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [562]
[567]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [567]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [566]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [569]
[568]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [568]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [536]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [564]
[569]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [569]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [568]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [424] _GLOBAL__sub_I_CONDDEF (syntax.cc) [181] SymTab::~SymTab() [518] QuHeap::ncond() const
 [425] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [223] bitvec::qnot() [65] SymTab::getDef(std::string const&) const
 [426] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [104] bitvec::setlen(int) [61] SymTab::getRef(std::string const&, ObjType*) const
 [427] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [109] bitvec::setbits(int, bitvec const&) [85] SymTab::getVal(std::string const&, ObjType*) const
 [428] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [110] bitvec::setbits(int, int, unsigned long) [55] SymTab::getentry(SymTable::entry*, std::string const&) const
 [429] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [37] bitvec::bitvec(int, unsigned long) [108] bitvec::length() const
 [430] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [29] bitvec::bitvec(bitvec const&) [118] bitvec::testeq(bitvec const&) const
 [431] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [16] bitvec::~bitvec() [23] bitvec::getbits(int, int) const
 [432] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [113] bitvec::operator&=(bitvec const&) [34] bitvec::getword() const
 [433] _GLOBAL__sub_I_isErrorReported (error.cc) [36] bitvec::operator=(bitvec const&) [400] bitvec::testzero() const
 [434] _GLOBAL__sub_I_isStateModified (quheap.cc) [32] bitvec::operator|=(bitvec const&) [30] bitvec::hashfunct() const
 [435] _GLOBAL__sub_I_main (qcl.cc) [73] sBinOp::typecheck(SymTable*, SymTable*) [295] bitvec::operator[](int) const
 [436] _GLOBAL__sub_I_n_object (types.cc) [274] sBinOp::sBinOp(sExpr*, sExpr*) [373] sEqual::object() const
 [437] _GLOBAL__sub_I_noperators (operator.cc) [275] sBinOp::~sBinOp() [131] tValue::ord() const
 [438] _GLOBAL__sub_I_nstates (qustates.cc) [353] sConst::eval(SymTable*, SymTable*, QuHeap*) [519] tValue::conv(tType const&) const
 [439] _GLOBAL__sub_I_nterms (terms.cc) [266] sConst::typecheck(SymTable*, SymTable*) [184] tValue::type() const
 [440] _GLOBAL__sub_I_plotfile (plot.cc) [260] sConst::sConst(tValue const&) [401] tValue::isInt() const
 [441] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [261] sConst::~sConst() [402] tValue::toInt() const
 [442] _GLOBAL__sub_I_qcl_options (options.cc) [262] sConst::~sConst() [520] tValue::isExpr() const
 [443] _GLOBAL__sub_I_shell_depth (debug.cc) [370] sEqual::sEqual(sExpr*, sExpr*) [329] tValue::isError() const
 [444] _GLOBAL__sub_I_yyObjList (parse.cc) [371] sEqual::~sEqual() [335] tValue::qustate() const
 [445] _GLOBAL__sub_I_yydebug (yacc.cc) [372] sEqual::~sEqual() [132] tValue::basetype() const
 [446] _GLOBAL__sub_I_yyleng (qcl.lex) [130] tValue::delpointer() [324] tValue::isQuExpr() const
 [339] yyScanFile(_IO_FILE*) [146] tValue::assign(tValue const&) [106] quState::mapbits() const
 [340] openqclfile(std::string) [490] tValue::tValue(quState*, BaseType) [84] quState::mapmask() const
 [282] yy_flush_buffer(yy_buffer_state*) [491] tValue::tValue(char const*) [123] sArgDef::object() const
 [447] yy_create_buffer(_IO_FILE*, int) [492] tValue::tValue(quState&, BaseType) [403] sConcat::object() const
 [448] initialize_readline() [150] tValue::tValue(tValue const&) [361] sLength::object() const
 [449] __static_initialization_and_destruction_0(int, int) (types.cc) [388] tValue::tValue(double) [271] sObject::inFunctDef() const
 [450] __static_initialization_and_destruction_0(int, int) (syntax.cc) [389] tValue::tValue(int) [301] sObject::inQuFunDef() const
 [451] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [290] tValue::tValue(long) [362] sObject::isConstDef() const
 [452] __static_initialization_and_destruction_0(int, int) (symbols.cc) [493] tValue::tValue(std::complex<double> const&) [149] sObject::isFunctDef() const
 [453] __static_initialization_and_destruction_0(int, int) (error.cc) [145] tValue::tValue() [233] sObject::isQuFunDef() const
 [454] __static_initialization_and_destruction_0(int, int) (qcl.lex) [133] tValue::~tValue() [141] sObject::isValueDef() const
 [455] __static_initialization_and_destruction_0(int, int) (yacc.cc) [234] tValue::operator=(tValue const&) [159] sObject::def() const
 [456] __static_initialization_and_destruction_0(int, int) (print.cc) [390] objlist::objlist() [144] sObject::isDef() const
 [457] __static_initialization_and_destruction_0(int, int) (quheap.cc) [224] quState::newclone() [160] sObject::isSet(ObjFlag) const
 [458] __static_initialization_and_destruction_0(int, int) (extern.cc) [237] quState::quState(int) [521] sObject::isStmt() const
 [459] __static_initialization_and_destruction_0(int, int) (eval.cc) [241] quState::~quState() [126] sObject::parent() const
 [460] __static_initialization_and_destruction_0(int, int) (exec.cc) [152] sArgDef::sArgDef(tType const&, std::string*) [280] sObject::inQuDef() const
 [461] __static_initialization_and_destruction_0(int, int) (parse.cc) [153] sArgDef::~sArgDef() [374] sObject::isLocal() const
 [462] __static_initialization_and_destruction_0(int, int) (options.cc) [154] sArgDef::~sArgDef() [281] sObject::isQuDef() const
 [463] __static_initialization_and_destruction_0(int, int) (debug.cc) [391] sConcat::sConcat(sExpr*, sExpr*) [375] sObject::isBennet() const
 [464] __static_initialization_and_destruction_0(int, int) (cond.cc) [392] sConcat::~sConcat() [183] sObject::isExtern() const
 [465] __static_initialization_and_destruction_0(int, int) (dump.cc) [393] sConcat::~sConcat() [336] sObject::isGlobal() const
 [466] __static_initialization_and_destruction_0(int, int) (plot.cc) [354] sLength::sLength(sExpr*) [235] sObject::isCondDef() const
 [467] __static_initialization_and_destruction_0(int, int) (qcl.cc) [355] sLength::~sLength() [210] sObject::isInclude() const
 [468] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [356] sLength::~sLength() [302] sObject::isProcDef() const
 [469] __static_initialization_and_destruction_0(int, int) (terms.cc) [158] sObject::setFlag(ObjFlag, int) [258] sObject::isQuOpDef() const
 [470] __static_initialization_and_destruction_0(int, int) (qustates.cc) [303] sObject::isSetRec(ObjFlag) [157] sObject::isRoutDef() const
 [471] __static_initialization_and_destruction_0(int, int) (operator.cc) [138] sObject::setParent(sObject*) [178] sVarDef::object() const
 [377] zero(bitvec const&)   [155] sObject::typecheck(SymTable*, SymTable*) [10] opMatrix::addterms(terminfo const&) const
 [378] irqOn()               [136] sObject::sObject(unsigned int) [229] sDefList::object() const
  [26] yylex()               [137] sObject::~sObject()   [185] sProcDef::object() const
 [379] duallog(int)           [83] sVarDef::define(SymTable*, SymTable*, QuHeap*) [142] sQuOpDef::object() const
   [5] ext_bit(sRoutDef const*, SymTable const*, int) [72] sVarDef::typecheck(SymTable*, SymTable*) [40] termlist::hashfunct1(bitvec const&) const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [314] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [24] termlist::hashfunct2(bitvec const&) const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [321] sVarDef::~sVarDef() [296] termlist::nterms() const
 [369] yyalloc(unsigned long) [322] sVarDef::~sVarDef()   [35] termlist::search(bitvec const&) const
  [27] yyparse()             [167] SymTable::SymTable()  [116] termlist::operator[](int) const
  [45] parseobj()            [168] SymTable::~SymTable() [376] __gnu_cxx::new_allocator<tValue>::max_size() const
 [472] parseopt(int, char**) [494] opMatrix::opMatrix(int) [211] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [473] qc_srand(long)         [94] opMatrix::~opMatrix() [363] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  [46] chksyntax(_IO_FILE*)   [74] sDefList::typecheck(SymTable*, SymTable*) [364] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [380] yyCleanUp()           [195] sDefList::sDefList()  [404] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [307] yyrestart(_IO_FILE*)  [196] sDefList::~sDefList() [405] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [305] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [197] sDefList::~sDefList() [189] sConstDef::object() const
 [304] yy_get_next_buffer() (lex.cc) [495] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [143] sQuFunDef::object() const
 [238] yy_load_buffer_state() (lex.cc) [496] sProcDef::~sProcDef() [179] sStmtList::object() const
 [313] yy_get_previous_state() (lex.cc) [497] sProcDef::~sProcDef() [172] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [474] yyensure_buffer_stack() (lex.cc) [267] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [173] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [308] SymTabComb::SymTabComb(SymTable*, SymTable*) [268] sQuOpDef::~sQuOpDef() [406] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [309] SymTabComb::~SymTabComb() [269] sQuOpDef::~sQuOpDef() [212] std::_List_iterator<sObject*>::operator*() const
 [310] SymTabComb::~SymTabComb() [222] sRoutDef::args()  [128] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [475] opOperator::opOperator(int) [66] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [198] std::list<sObject*, std::allocator<sObject*> >::end() const
 [476] opOperator::~opOperator() [8] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [199] std::list<sObject*, std::allocator<sObject*> >::size() const
  [13] quSubState::opadd(bitvec const&, std::complex<double> const&) [39] sRoutDef::typecheck(SymTable*, SymTable*) [200] std::list<sObject*, std::allocator<sObject*> >::begin() const
 [288] quSubState::opend()   [225] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [522] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [289] quSubState::opbegin() [226] sRoutDef::~sRoutDef() [407] std::vector<tValue, std::allocator<tValue> >::end() const
 [239] quSubState::quSubState(int) [25] terminfo::terminfo(terminfo const&) [365] std::vector<tValue, std::allocator<tValue> >::size() const
 [242] quSubState::~quSubState() [87] terminfo::terminfo() [408] std::vector<tValue, std::allocator<tValue> >::begin() const
  [81] sListFunct::typecheck(SymTable*, SymTable*) [49] terminfo::~terminfo() [409] std::vector<tValue, std::allocator<tValue> >::empty() const
 [341] sListFunct::sListFunct(ObjType, sExprList*) [64] termlist::add(term const&) [410] std::vector<tValue, std::allocator<tValue> >::max_size() const
 [342] sListFunct::~sListFunct() [14] termlist::add(bitvec const&, std::complex<double> const&) [523] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [343] sListFunct::~sListFunct() [231] termlist::clear() [524] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  [77] sSubscript::typecheck(SymTable*, SymTable*) [51] termlist::dellist() [525] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [344] sSubscript::sSubscript(sVar*, sExprList*) [19] termlist::newlist() [526] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [345] sSubscript::~sSubscript() [58] termlist::termlist(int, int) [527] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [346] sSubscript::~sSubscript() [52] termlist::~termlist() [528] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [186] quBaseState::newsubstring(int, int) [498] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [111] std::complex<double>::imag() const
  [12] quBaseState::opadd(bitvec const&, std::complex<double> const&) [499] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [112] std::complex<double>::real() const
 [283] quBaseState::opend()  [500] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [529] std::allocator<tValue>::allocator()
  [89] quBaseState::reset(bitvec const&) [501] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [530] std::allocator<tValue>::~allocator()
 [284] quBaseState::opbegin() [502] __gnu_cxx::new_allocator<tValue>::new_allocator() [531] std::allocator<QuHeap::centry>::allocator()
  [57] quBaseState::quBaseState(int, int) [503] __gnu_cxx::new_allocator<tValue>::~new_allocator() [532] std::allocator<QuHeap::centry>::~allocator()
  [53] quBaseState::~quBaseState() [504] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [533] std::allocator<QuHeap::quentry>::allocator()
  [54] quBaseState::~quBaseState() [505] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [534] std::allocator<QuHeap::quentry>::~allocator()
 [243] quSubString::newsubstring(int, int) [506] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [174] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
 [240] quSubString::quSubString(int, int, quState&) [507] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [175] std::allocator<sObject*>::~allocator()
 [244] quSubString::~quSubString() [205] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [411] std::allocator<std::_List_node<sObject*> >::allocator()
 [245] quSubString::~quSubString() [206] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [412] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [477] opElementary::opElementary(int) [170] __gnu_cxx::new_allocator<sObject*>::new_allocator() [213] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
 [478] opElementary::~opElementary() [171] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [214] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  [76] sIf::typecheck(SymTable*, SymTable*) [207] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [413] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [318] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [208] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [414] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [319] sIf::~sIf()           [394] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [121] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [320] sIf::~sIf()           [395] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [415] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [479] sOr::sOr(sExpr*, sExpr*) [357] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [535] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [480] sOr::~sOr()           [396] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [536] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [481] sOr::~sOr()           [397] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [537] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [331] sDef::settype(tType const&) [398] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [538] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [482] sDef::basetype()      [508] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [539] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [147] sDef::sDef(tType const&, std::string*) [509] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [416] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [148] sDef::~sDef()         [510] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [366] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  [75] sFor::typecheck(SymTable*, SymTable*) [79] sConstDef::define(SymTable*, SymTable*, QuHeap*) [540] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [381] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [82] sConstDef::typecheck(SymTable*, SymTable*) [541] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [382] sFor::~sFor()         [332] sConstDef::sConstDef(std::string*, sExpr*) [542] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [383] sFor::~sFor()         [333] sConstDef::~sConstDef() [543] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [384] sSub::sSub(sExpr*, sExpr*) [334] sConstDef::~sConstDef() [544] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [385] sSub::~sSub()          [78] sExprList::typecheck(SymTable*, SymTable*) [545] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [386] sSub::~sSub()         [255] sExprList::sExprList() [546] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  [86] sVar::eval(SymTable*, SymTable*, QuHeap*) [256] sExprList::~sExprList() [547] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  [68] sVar::typecheck(SymTable*, SymTable*) [257] sExprList::~sExprList() [548] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [190] sVar::sVar(std::string*) [285] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [549] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [191] sVar::~sVar()         [286] sQuFunDef::~sQuFunDef() [550] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [192] sVar::~sVar()         [287] sQuFunDef::~sQuFunDef() [551] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  [95] term::set(bitvec const&, std::complex<double> const&) [70] sStmtList::typecheck(SymTable*, SymTable*) [552] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  [31] term::setampl(std::complex<double> const&) [276] sStmtList::sStmtList() [553] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  [44] term::setvect(bitvec const&) [277] sStmtList::~sStmtList() [161] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  [18] term::term()          [278] sStmtList::~sStmtList() [169] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  [38] term::term(term const&) [71] SymTabComb::getDef(std::string const&) const [129] std::_List_const_iterator<sObject*>::operator++()
  [41] term::~term()         [311] quSubState::isbasestate() const [417] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [60] term::operator=(term const&) [114] quSubState::baseterm(int) const [215] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [88] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [291] quSubState::baseterms() const [216] std::list<sObject*, std::allocator<sObject*> >::end()
  [92] opBit::~opBit()       [358] sListFunct::object() const [176] std::list<sObject*, std::allocator<sObject*> >::begin()
  [93] opBit::~opBit()       [359] sSubscript::nargs() const [217] std::list<sObject*, std::allocator<sObject*> >::front()
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [246] quBaseState::isbasestate() const [218] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  [69] sCall::typecheck(SymTable*, SymTable*) [63] quBaseState::map(bitvec const&) const [219] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [297] sCall::sCall(std::string*, sExprList*, int) [59] quBaseState::unmap(bitvec const&) const [220] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [298] sCall::~sCall()       [511] quBaseState::basebits() const [221] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [299] sCall::~sCall()       [115] quBaseState::baseterm(int) const [418] std::list<sObject*, std::allocator<sObject*> >::list()
 [483] sExit::typecheck(SymTable*, SymTable*) [292] quBaseState::baseterms() const [554] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [484] sExit::sExit(sExpr*)   [21] quSubString::map(bitvec const&) const [555] std::vector<tValue, std::allocator<tValue> >::end()
 [485] sExit::~sExit()        [15] quSubString::unmap(bitvec const&) const [556] std::vector<tValue, std::allocator<tValue> >::begin()
 [486] sExit::~sExit()       [107] quSubString::mapoffs() const [557] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [164] sExpr::type()           [9] opElementary::apply(quState&) const [558] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [163] sExpr::settype(tType const&) [263] sIf::object() const [559] std::vector<tValue, std::allocator<tValue> >::vector()
 [347] sExpr::basetype()     [512] sOr::object() const   [560] std::vector<tValue, std::allocator<tValue> >::~vector()
 [259] sExpr::sExpr(tType const&) [117] sDef::id() const [561] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [182] sExpr::sExpr()        [140] sDef::type() const    [562] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [165] sExpr::~sExpr()       [293] sFor::object() const  [563] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [348] sLess::sLess(sExpr*, sExpr*) [399] sSub::object() const [564] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [349] sLess::~sLess()       [187] sVar::id() const       [17] std::complex<double>::complex(double, double)
 [350] sLess::~sLess()       [105] term::ampl() const    [367] std::complex<double>::operator*=(double)
 [151] sList<sDef>::append(sDef*) [28] term::vect() const [33] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [193] sList<sDef>::sList()  [294] sCall::id() const     [201] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [194] sList<sDef>::~sList() [315] sCall::object() const [177] sObject** std::__addressof<sObject*>(sObject*&)
 [236] sList<sExpr>::append(sExpr*) [360] sLess::object() const [419] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [253] sList<sExpr>::sList() [134] sList<sDef>::next(void*&) const [202] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [254] sList<sExpr>::~sList() [166] sList<sDef>::first(void*&) const [420] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [250] sList<sStmt>::append(sStmt*) [316] sList<sExpr>::n() const [421] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [272] sList<sStmt>::sList() [227] sList<sExpr>::next(void*&) const [565] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [273] sList<sStmt>::~sList() [228] sList<sExpr>::first(void*&) const [422] void std::_Destroy<tValue*>(tValue*, tValue*)
 [325] sMult::sMult(sExpr*, sExpr*) [251] sList<sStmt>::next(void*&) const [423] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [326] sMult::~sMult()       [279] sList<sStmt>::first(void*&) const [566] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [327] sMult::~sMult()       [312] sMult::object() const [567] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [248] sStmt::sStmt(int)     [513] sStmt::isInv() const  [568] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [249] sStmt::~sStmt()       [124] tType::ord() const    [569] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
  [80] sUnOp::typecheck(SymTable*, SymTable*) [264] tType::isInt() const [203] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [351] sUnOp::sUnOp(sExpr*)  [300] tType::isCond() const [120] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [352] sUnOp::~sUnOp()       [265] tType::isConv(tType const&) const [337] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [122] tType::tType(BaseType) [514] tType::isExpr() const [47] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [387] tType::tType(BaseType, int) [328] tType::isError() const [48] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [135] tType::tType(tType const&) [156] tType::isQuReg() const [368] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
 [139] tType::operator=(BaseType) [125] tType::basetype() const [20] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [127] tType::operator=(tType const&) [232] tType::isNumber() const [338] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
   [6] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [230] tType::isQuCond() const [306] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [487] QuHeap::init()        [162] tType::isQuExpr() const [330] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [488] QuHeap::addReg(quState*) [515] tType::isString() const [62] operator&(bitvec const&, bitvec const&)
  [91] QuHeap::qualloc(int, BaseType) [252] tType::isBoolean() const [90] operator~(bitvec const&)
   [7] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [270] tType::isDefined() const [119] operator==(bitvec const&, bitvec const&)
  [56] QuHeap::QuHeap(int, int) [317] tType::isOrdered() const [204] operator new(unsigned long, void*)
  [50] QuHeap::~QuHeap()     [247] tType::isQuConst() const [22] operator|(bitvec const&, bitvec const&)
  [42] SymTab::put(sDef*, tValue const&) [209] tType::operator==(BaseType) const [97] <cycle 1>
 [188] SymTab::deltree(SymTable::entry*) [323] tType::operator==(tType const&) const [98] <cycle 2>
  [43] SymTab::putentry(SymTable::entry*, SymTable::entry*) [516] QuHeap::cond() const [67] <cycle 3>
 [180] SymTab::SymTab(int)    [96] QuHeap::cmask() const  [11] <cycle 4>
 [489] SymTab::~SymTab()     [517] QuHeap::nBits() const  [99] <cycle 5>
