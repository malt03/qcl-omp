Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  8.88      0.43     0.43  1015807     0.00     0.00  opMatrix::addterms(terminfo const&) const
  6.82      0.76     0.33  7110802     0.00     0.00  bitvec::bitvec(bitvec const&)
  5.99      1.05     0.29  2096639     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  4.96      1.29     0.24  2031614     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  4.96      1.53     0.24 11304875     0.00     0.00  bitvec::~bitvec()
  4.75      1.76     0.23  5176887     0.00     0.00  bitvec::operator=(bitvec const&)
  4.55      1.98     0.22  2031666     0.00     0.00  quSubString::unmap(bitvec const&) const
  4.44      2.20     0.22  4194073     0.00     0.00  bitvec::bitvec(int, unsigned long)
  4.34      2.41     0.21  5176887     0.00     0.00  bitvec::setlen(int)
  3.10      2.56     0.15  2031614     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  3.10      2.71     0.15  2031614     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  2.69      2.84     0.13  2031666     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  2.69      2.97     0.13       45     0.00     0.10  opElementary::apply(quState&) const
  2.58      3.09     0.13  2162257     0.00     0.00  std::complex<double>::complex(double, double)
  2.07      3.19     0.10  6127099     0.00     0.00  term::ampl() const
  2.07      3.29     0.10  1015807     0.00     0.00  quSubState::baseterm(int) const
  1.86      3.38     0.09  2096639     0.00     0.00  term::setampl(std::complex<double> const&)
  1.65      3.46     0.08  1015807     0.00     0.00  terminfo::terminfo(terminfo const&)
  1.65      3.54     0.08 11221957     0.00     0.00  term::vect() const
  1.45      3.61     0.07  1015807     0.00     0.00  term::term(term const&)
  1.45      3.68     0.07  2112476     0.00     0.00  bitvec::hashfunct() const
  1.45      3.75     0.07  1015807     0.00     0.00  term::operator=(term const&)
  1.45      3.82     0.07   983040     0.00     0.00  std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
  1.45      3.89     0.07       62     0.00     0.00  termlist::clear()
  1.24      3.95     0.06  2096653     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  1.24      4.01     0.06  2031666     0.00     0.00  bitvec::setbits(int, bitvec const&)
  1.24      4.07     0.06  3047473     0.00     0.00  quSubString::mapoffs() const
  1.14      4.13     0.06  3014654     0.00     0.00  std::complex<double>::imag() const
  1.03      4.18     0.05  2031617     0.00     0.00  bitvec::operator|=(bitvec const&)
  1.03      4.23     0.05  2031614     0.00     0.00  operator|(bitvec const&, bitvec const&)
  1.03      4.28     0.05  1015810     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.83      4.32     0.04  3047906     0.00     0.00  quState::mapbits() const
  0.83      4.36     0.04  2031615     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.83      4.40     0.04  1015807     0.00     0.00  quBaseState::map(bitvec const&) const
  0.72      4.43     0.04   983040     0.00     0.00  std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
  0.62      4.46     0.03  3047428     0.00     0.00  bitvec::length() const
  0.62      4.49     0.03  3014654     0.00     0.00  std::complex<double>::real() const
  0.62      4.52     0.03  1015807     0.00     0.00  quSubString::map(bitvec const&) const
  0.62      4.55     0.03                             bitvec::operator=(unsigned long)
  0.41      4.57     0.02  2129406     0.00     0.00  term::setvect(bitvec const&)
  0.41      4.59     0.02  2031666     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.41      4.61     0.02  1146430     0.00     0.00  term::~term()
  0.41      4.63     0.02  1015807     0.00     0.00  bitvec::getbits(int, int) const
  0.41      4.65     0.02   998863     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.31      4.67     0.02        1     0.02     0.02  _GLOBAL__sub_I_qc_check_txt
  0.21      4.68     0.01  1015811     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.21      4.69     0.01  1015807     0.00     0.00  quBaseState::baseterm(int) const
  0.21      4.70     0.01  1015807     0.00     0.00  bitvec::getword() const
  0.21      4.71     0.01   998863     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.21      4.72     0.01       67     0.00     0.00  quState::quState(int)
  0.21      4.73     0.01       46     0.00     0.00  quBaseState::opend()
  0.21      4.74     0.01       45     0.00     0.00  quSubState::opbegin()
  0.21      4.75     0.01       45     0.00     0.00  terminfo::terminfo()
  0.21      4.76     0.01       45     0.00     0.00  quBaseState::baseterms() const
  0.21      4.77     0.01       15     0.00     0.00  bitvec::operator[](int) const
  0.21      4.78     0.01        3     0.00     1.57  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.21      4.79     0.01                             term::term(bitvec const&, std::complex<double> const&)
  0.21      4.80     0.01                             bitvec::setbit(int, int)
  0.21      4.81     0.01                             opMatrix::~opMatrix()
  0.21      4.82     0.01                             bitvec::testless(bitvec const&) const
  0.21      4.83     0.01                             std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.10      4.83     0.01                             std::complex<double>::imag()
  0.10      4.84     0.01                             std::pow(double, int)
  0.10      4.84     0.01                             bool std::operator==<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      4.84     0.00  1015852     0.00     0.00  terminfo::~terminfo()
  0.00      4.84     0.00  1015807     0.00     0.00  termlist::operator[](int) const
  0.00      4.84     0.00   130623     0.00     0.00  term::term()
  0.00      4.84     0.00    65024     0.00     0.00  termlist::add(term const&)
  0.00      4.84     0.00    21585     0.00     0.00  sDef::id() const
  0.00      4.84     0.00    15823     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.00      4.84     0.00     6504     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      4.84     0.00     4195     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      4.84     0.00     3912     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      4.84     0.00     2928     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      4.84     0.00     2354     0.00     0.00  yylex()
  0.00      4.84     0.00     1498     0.00     0.00  tType::tType(BaseType)
  0.00      4.84     0.00     1116     0.00     0.00  sArgDef::object() const
  0.00      4.84     0.00     1084     0.00     0.00  tType::ord() const
  0.00      4.84     0.00     1045     0.00     0.00  tType::basetype() const
  0.00      4.84     0.00      897     0.00     0.00  sObject::parent() const
  0.00      4.84     0.00      862     0.00     0.00  tType::operator=(tType const&)
  0.00      4.84     0.00      835     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      4.84     0.00      790     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      4.84     0.00      712     0.00     0.00  tValue::delpointer()
  0.00      4.84     0.00      712     0.00     0.00  tValue::ord() const
  0.00      4.84     0.00      712     0.00     0.00  tValue::basetype() const
  0.00      4.84     0.00      677     0.00     0.00  tValue::~tValue()
  0.00      4.84     0.00      558     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      4.84     0.00      545     0.00     0.00  tType::tType(tType const&)
  0.00      4.84     0.00      521     0.00     0.00  sObject::sObject(unsigned int)
  0.00      4.84     0.00      521     0.00     0.00  sObject::~sObject()
  0.00      4.84     0.00      460     0.00     0.00  tType::operator=(BaseType)
  0.00      4.84     0.00      457     0.00     0.00  sObject::setParent(sObject*)
  0.00      4.84     0.00      380     0.00     0.00  sDef::type() const
  0.00      4.84     0.00      379     0.00     0.00  sQuOpDef::object() const
  0.00      4.84     0.00      378     0.00     0.00  sObject::isValueDef() const
  0.00      4.84     0.00      372     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      4.84     0.00      369     0.00     0.00  sObject::isDef() const
  0.00      4.84     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      4.84     0.00      361     0.00     0.00  tValue::tValue()
  0.00      4.84     0.00      328     0.00     0.00  tValue::assign(tValue const&)
  0.00      4.84     0.00      326     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      4.84     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      4.84     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      4.84     0.00      296     0.00     0.00  sObject::isFunctDef() const
  0.00      4.84     0.00      293     0.00     0.00  tValue::tValue(tValue const&)
  0.00      4.84     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      4.84     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      4.84     0.00      266     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      4.84     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      4.84     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      4.84     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      4.84     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      4.84     0.00      257     0.00     0.00  sObject::isRoutDef() const
  0.00      4.84     0.00      178     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      4.84     0.00      177     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      4.84     0.00      175     0.00     0.00  sObject::def() const
  0.00      4.84     0.00      143     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      4.84     0.00      132     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      4.84     0.00      129     0.00     0.00  tType::isQuExpr() const
  0.00      4.84     0.00      129     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      4.84     0.00      113     0.00     0.00  sExpr::settype(tType const&)
  0.00      4.84     0.00      100     0.00     0.00  sExpr::type()
  0.00      4.84     0.00      100     0.00     0.00  bitvec::qnot()
  0.00      4.84     0.00       99     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      4.84     0.00       98     0.00     0.00  operator~(bitvec const&)
  0.00      4.84     0.00       97     0.00     0.00  sExpr::~sExpr()
  0.00      4.84     0.00       91     0.00     0.00  sVarDef::object() const
  0.00      4.84     0.00       90     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      4.84     0.00       89     0.00     0.00  SymTable::SymTable()
  0.00      4.84     0.00       89     0.00     0.00  SymTable::~SymTable()
  0.00      4.84     0.00       86     0.00     0.00  quState::newclone()
  0.00      4.84     0.00       86     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      4.84     0.00       86     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      4.84     0.00       86     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      4.84     0.00       86     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      4.84     0.00       86     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      4.84     0.00       86     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      4.84     0.00       86     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      4.84     0.00       86     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      4.84     0.00       79     0.00     0.00  SymTab::SymTab(int)
  0.00      4.84     0.00       79     0.00     0.00  SymTab::~SymTab()
  0.00      4.84     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      4.84     0.00       76     0.00     0.00  sExpr::sExpr()
  0.00      4.84     0.00       75     0.00     0.00  sObject::isExtern() const
  0.00      4.84     0.00       66     0.00     0.00  quSubState::quSubState(int)
  0.00      4.84     0.00       66     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.00      4.84     0.00       66     0.00     0.00  quState::~quState()
  0.00      4.84     0.00       65     0.00     0.00  quSubState::~quSubState()
  0.00      4.84     0.00       65     0.00     0.00  quSubString::newsubstring(int, int)
  0.00      4.84     0.00       65     0.00     0.00  quSubString::~quSubString()
  0.00      4.84     0.00       65     0.00     0.00  quSubString::~quSubString()
  0.00      4.84     0.00       65     0.00     0.00  quBaseState::isbasestate() const
  0.00      4.84     0.00       65     0.00     0.00  tValue::type() const
  0.00      4.84     0.00       60     0.00     0.00  sVar::id() const
  0.00      4.84     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      4.84     0.00       52     0.00     0.00  quState::mapmask() const
  0.00      4.84     0.00       50     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      4.84     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      4.84     0.00       46     0.00     0.00  quBaseState::opbegin()
  0.00      4.84     0.00       46     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       46     0.00     0.00  sVar::sVar(std::string*)
  0.00      4.84     0.00       46     0.00     0.00  sVar::~sVar()
  0.00      4.84     0.00       46     0.00     0.00  sVar::~sVar()
  0.00      4.84     0.00       45     0.00     0.00  quSubState::opend()
  0.00      4.84     0.00       45     0.00     0.00  sRoutDef::args()
  0.00      4.84     0.00       45     0.00     0.00  quSubState::baseterms() const
  0.00      4.84     0.00       45     0.00     0.00  termlist::nterms() const
  0.00      4.84     0.00       45     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      4.84     0.00       45     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      4.84     0.00       45     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      4.84     0.00       45     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      4.84     0.00       45     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      4.84     0.00       45     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      4.84     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      4.84     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      4.84     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      4.84     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      4.84     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      4.84     0.00       44     0.00     0.00  operator new(unsigned long, void*)
  0.00      4.84     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      4.84     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      4.84     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      4.84     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      4.84     0.00       43     0.00     0.00  sObject::isInclude() const
  0.00      4.84     0.00       43     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      4.84     0.00       43     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      4.84     0.00       43     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      4.84     0.00       43     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      4.84     0.00       43     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      4.84     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      4.84     0.00       40     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      4.84     0.00       39     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      4.84     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      4.84     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      4.84     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      4.84     0.00       35     0.00     0.00  tValue::operator=(tValue const&)
  0.00      4.84     0.00       34     0.00     0.00  sObject::isCondDef() const
  0.00      4.84     0.00       34     0.00     0.00  sDefList::object() const
  0.00      4.84     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      4.84     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      4.84     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      4.84     0.00       29     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      4.84     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      4.84     0.00       27     0.00     0.00  tType::isQuConst() const
  0.00      4.84     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      4.84     0.00       26     0.00     0.00  sStmt::sStmt(int)
  0.00      4.84     0.00       26     0.00     0.00  sStmt::~sStmt()
  0.00      4.84     0.00       24     0.00     0.00  sList<sExpr>::sList()
  0.00      4.84     0.00       24     0.00     0.00  sList<sExpr>::~sList()
  0.00      4.84     0.00       24     0.00     0.00  sExprList::sExprList()
  0.00      4.84     0.00       24     0.00     0.00  sExprList::~sExprList()
  0.00      4.84     0.00       24     0.00     0.00  sExprList::~sExprList()
  0.00      4.84     0.00       24     0.00     0.00  sObject::isQuOpDef() const
  0.00      4.84     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      4.84     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      4.84     0.00       23     0.00     0.00  tType::isConv(tType const&) const
  0.00      4.84     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      4.84     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      4.84     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      4.84     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      4.84     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      4.84     0.00       21     0.00     0.00  sIf::object() const
  0.00      4.84     0.00       21     0.00     0.00  tType::isInt() const
  0.00      4.84     0.00       21     0.00     0.00  sObject::inFunctDef() const
  0.00      4.84     0.00       20     0.00     0.00  quSubState::isbasestate() const
  0.00      4.84     0.00       20     0.00     0.00  sObject::inQuDef() const
  0.00      4.84     0.00       20     0.00     0.00  sObject::isQuDef() const
  0.00      4.84     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      4.84     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      4.84     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      4.84     0.00       19     0.00     0.00  sCall::id() const
  0.00      4.84     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      4.84     0.00       19     0.00     0.00  tValue::isQuExpr() const
  0.00      4.84     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      4.84     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      4.84     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      4.84     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      4.84     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      4.84     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      4.84     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      4.84     0.00       18     0.00     0.00  sCall::object() const
  0.00      4.84     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      4.84     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      4.84     0.00       16     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       16     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      4.84     0.00       16     0.00     0.00  sCall::~sCall()
  0.00      4.84     0.00       16     0.00     0.00  sCall::~sCall()
  0.00      4.84     0.00       16     0.00     0.00  termlist::newlist()
  0.00      4.84     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      4.84     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      4.84     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      4.84     0.00       16     0.00     0.00  sObject::inQuFunDef() const
  0.00      4.84     0.00       16     0.00     0.00  sObject::isProcDef() const
  0.00      4.84     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      4.84     0.00       15     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      4.84     0.00       15     0.00     0.00  sFor::object() const
  0.00      4.84     0.00       14     0.00     0.00  tType::isCond() const
  0.00      4.84     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00       13     0.00     0.00  tValue::qustate() const
  0.00      4.84     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      4.84     0.00       12     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      4.84     0.00       12     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      4.84     0.00       12     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      4.84     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      4.84     0.00       11     0.00     0.00  tType::operator==(tType const&) const
  0.00      4.84     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      4.84     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      4.84     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      4.84     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      4.84     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      4.84     0.00        9     0.00     0.00  sMult::object() const
  0.00      4.84     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      4.84     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      4.84     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      4.84     0.00        8     0.00     0.00  tType::isError() const
  0.00      4.84     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      4.84     0.00        8     0.00     0.00  tValue::isError() const
  0.00      4.84     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      4.84     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      4.84     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      4.84     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      4.84     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      4.84     0.00        7     0.00     0.00  sObject::isGlobal() const
  0.00      4.84     0.00        6     0.00     0.00  zero(bitvec const&)
  0.00      4.84     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      4.84     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      4.84     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      4.84     0.00        6     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      4.84     0.00        6     0.00     0.00  bitvec::testzero() const
  0.00      4.84     0.00        6     0.00     0.00  sObject::isConstDef() const
  0.00      4.84     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      4.84     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      4.84     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      4.84     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      4.84     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      4.84     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      4.84     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      4.84     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      4.84     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      4.84     0.00        4     0.00     0.00  yyparse()
  0.00      4.84     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      4.84     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      4.84     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      4.84     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      4.84     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      4.84     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      4.84     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      4.84     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      4.84     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      4.84     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      4.84     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      4.84     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      4.84     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      4.84     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      4.84     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      4.84     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      4.84     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      4.84     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      4.84     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      4.84     0.00        4     0.00     0.00  sLess::object() const
  0.00      4.84     0.00        4     0.00     0.00  sLength::object() const
  0.00      4.84     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      4.84     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      4.84     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      4.84     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      4.84     0.00        3     0.00     1.57  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      4.84     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      4.84     0.00        3     0.00     0.00  opOperator::opOperator(int)
  0.00      4.84     0.00        3     0.00     0.00  opOperator::~opOperator()
  0.00      4.84     0.00        3     0.00     0.00  opElementary::opElementary(int)
  0.00      4.84     0.00        3     0.00     0.00  opElementary::~opElementary()
  0.00      4.84     0.00        3     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      4.84     0.00        3     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      4.84     0.00        3     0.00     0.00  opBit::~opBit()
  0.00      4.84     0.00        3     0.00     0.00  opBit::~opBit()
  0.00      4.84     0.00        3     0.00     1.57  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      4.84     0.00        3     0.00     1.57  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      4.84     0.00        3     0.00     1.57  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      4.84     0.00        3     0.00     0.00  SymTab::~SymTab()
  0.00      4.84     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      4.84     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      4.84     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      4.84     0.00        3     0.00     0.00  opMatrix::opMatrix(int)
  0.00      4.84     0.00        3     0.00     0.00  opMatrix::~opMatrix()
  0.00      4.84     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      4.84     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        3     0.00     0.00  sStmt::isInv() const
  0.00      4.84     0.00        3     0.00     0.00  tType::isExpr() const
  0.00      4.84     0.00        3     0.00     0.00  QuHeap::cond() const
  0.00      4.84     0.00        3     0.00     0.00  QuHeap::cmask() const
  0.00      4.84     0.00        3     0.00     0.00  QuHeap::nBits() const
  0.00      4.84     0.00        3     0.00     0.00  QuHeap::ncond() const
  0.00      4.84     0.00        3     0.00     0.00  sEqual::object() const
  0.00      4.84     0.00        3     0.00     0.00  tValue::conv(tType const&) const
  0.00      4.84     0.00        3     0.00     0.00  tValue::isExpr() const
  0.00      4.84     0.00        3     0.00     0.00  sObject::isStmt() const
  0.00      4.84     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      4.84     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      4.84     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      4.84     0.00        2     0.00     0.00  irqOn()
  0.00      4.84     0.00        2     0.00     0.00  duallog(int)
  0.00      4.84     0.00        2     0.00     2.36  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      4.84     0.00        2     0.00     2.36  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      4.84     0.00        2     0.00     0.00  parseobj()
  0.00      4.84     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      4.84     0.00        2     0.00     0.00  yyCleanUp()
  0.00      4.84     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      4.84     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      4.84     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      4.84     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      4.84     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      4.84     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      4.84     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      4.84     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      4.84     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      4.84     0.00        2     0.00     0.00  objlist::objlist()
  0.00      4.84     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      4.84     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      4.84     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      4.84     0.00        2     0.00     0.00  termlist::dellist()
  0.00      4.84     0.00        2     0.00     0.00  termlist::termlist(int, int)
  0.00      4.84     0.00        2     0.00     0.00  termlist::~termlist()
  0.00      4.84     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      4.84     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      4.84     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      4.84     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      4.84     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      4.84     0.00        2     0.00     0.00  sSub::object() const
  0.00      4.84     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      4.84     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      4.84     0.00        2     0.00     0.00  sConcat::object() const
  0.00      4.84     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      4.84     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      4.84     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      4.84     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      4.84     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      4.84     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      4.84     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      4.84     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      4.84     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      4.84     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      4.84     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      4.84     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      4.84     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      4.84     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      4.84     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      4.84     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      4.84     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      4.84     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      4.84     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      4.84     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_nterms
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      4.84     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      4.84     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      4.84     0.00        1     0.00     0.00  initialize_readline()
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      4.84     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      4.84     0.00        1     0.00     0.00  qc_srand(long)
  0.00      4.84     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      4.84     0.00        1     0.00     0.00  quBaseState::reset(bitvec const&)
  0.00      4.84     0.00        1     0.00     0.01  quBaseState::quBaseState(int, int)
  0.00      4.84     0.00        1     0.00     0.00  quBaseState::~quBaseState()
  0.00      4.84     0.00        1     0.00     0.00  quBaseState::~quBaseState()
  0.00      4.84     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      4.84     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      4.84     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      4.84     0.00        1     0.00     0.00  sDef::basetype()
  0.00      4.84     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      4.84     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      4.84     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      4.84     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      4.84     0.00        1     0.00     0.00  QuHeap::init()
  0.00      4.84     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      4.84     0.00        1     0.00     0.01  QuHeap::qualloc(int, BaseType)
  0.00      4.84     0.00        1     0.00     0.01  QuHeap::QuHeap(int, int)
  0.00      4.84     0.00        1     0.00     0.00  QuHeap::~QuHeap()
  0.00      4.84     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      4.84     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      4.84     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      4.84     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      4.84     0.00        1     0.00     0.01  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      4.84     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      4.84     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      4.84     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      4.84     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      4.84     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      4.84     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      4.84     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      4.84     0.00        1     0.00     0.00  sOr::object() const
  0.00      4.84     0.00        1     0.00     0.00  tType::isString() const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      4.84     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      4.84     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      4.84     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      4.84     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      4.84     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      4.84     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      4.84     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      4.84     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      4.84     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      4.84     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.21% of 4.84 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     97.7    0.00    4.73                 main [1]
                0.00    4.72       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.01       1/1           QuHeap::QuHeap(int, int) [82]
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
                0.00    0.00       2/79          SymTab::SymTab(int) [206]
                0.00    0.00       2/79          SymTab::~SymTab() [207]
                0.00    0.00       1/1           initialize_readline() [479]
                0.00    0.00       1/1           parseopt(int, char**) [503]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [361]
-----------------------------------------------
                0.00    4.72       2/2           main [1]
[2]     97.6    0.00    4.72       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    4.72       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [108]
                0.00    0.00       4/4           openqclfile(std::string) [363]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [362]
-----------------------------------------------
                0.00    4.72       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     97.6    0.00    4.72       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    4.71       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.01       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00       2/2           parseobj() [107]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::front() [251]
                0.00    0.00      43/43          sObject::isInclude() const [244]
                0.00    0.00      43/369         sObject::isDef() const [168]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::pop_front() [254]
                0.00    0.00       3/16          sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       3/3           sObject::isStmt() const [407]
                0.00    0.00       3/16          sCall::~sCall() [311]
-----------------------------------------------
                0.00    4.71       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     97.3    0.00    4.71       3         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    4.71       3/3           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [5]
                0.00    0.00       3/3           sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       3/3           tValue::conv(tType const&) const [118]
                0.00    0.00       3/35          tValue::operator=(tValue const&) [100]
                0.00    0.00       3/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00       6/52          quState::mapmask() const [116]
                0.00    0.00      15/11304875     bitvec::~bitvec() [23]
                0.00    0.00       3/1015810     operator&(bitvec const&, bitvec const&) [36]
                0.00    0.00       3/3           QuHeap::cmask() const [130]
                0.00    0.00       3/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00       3/2031617     bitvec::operator|=(bitvec const&) [50]
                0.00    0.00       3/3047906     quState::mapbits() const [52]
                0.00    0.00       3/3           QuHeap::cond() const [131]
                0.00    0.00       9/677         tValue::~tValue() [157]
                0.00    0.00       9/13          tValue::qustate() const [323]
                0.00    0.00       6/45          sRoutDef::args() [226]
                0.00    0.00       6/6           zero(bitvec const&) [349]
                0.00    0.00       3/3           QuHeap::nBits() const [404]
                0.00    0.00       3/361         tValue::tValue() [170]
                0.00    0.00       3/19          sCall::id() const [295]
                0.00    0.00       3/143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00       3/16          sObject::isProcDef() const [317]
                0.00    0.00       3/20          sObject::isQuDef() const [290]
                0.00    0.00       3/79          SymTab::SymTab(int) [206]
                0.00    0.00       3/39          sList<sExpr>::first(void*&) const [258]
                0.00    0.00       3/99          sList<sDef>::first(void*&) const [192]
                0.00    0.00       3/380         sDef::type() const [164]
                0.00    0.00       3/8           tValue::isError() const [341]
                0.00    0.00       3/19          tValue::isQuExpr() const [297]
                0.00    0.00       3/40          sList<sExpr>::next(void*&) const [257]
                0.00    0.00       3/558         sList<sDef>::next(void*&) const [158]
                0.00    0.00       3/34          sObject::isCondDef() const [261]
                0.00    0.00       3/3           sStmt::isInv() const [402]
-----------------------------------------------
                0.00    4.71       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[5]     97.3    0.00    4.71       3         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [5]
                0.00    4.71       3/3           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [6]
                0.00    0.00       3/34          sObject::isCondDef() const [261]
-----------------------------------------------
                0.00    4.71       3/3           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [5]
[6]     97.3    0.00    4.71       3         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [6]
                0.01    4.70       3/3           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [7]
                0.00    0.00       3/3           SymTab::~SymTab() [396]
-----------------------------------------------
                0.01    4.70       3/3           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [6]
[7]     97.3    0.01    4.70       3         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [7]
                0.00    4.70       3/3           ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.00    0.00       3/361         tValue::tValue() [170]
                0.00    0.00       3/75          sObject::isExtern() const [210]
                0.00    0.00       3/677         tValue::~tValue() [157]
-----------------------------------------------
                0.00    4.70       3/3           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [7]
[8]     97.1    0.00    4.70       3         ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.13    4.56      45/45          opElementary::apply(quState&) const [9]
                0.00    0.01      45/66          quSubString::newsubstring(int, int) <cycle 5> [213]
                0.00    0.00       3/3           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
                0.00    0.00      18/2162257     std::complex<double>::complex(double, double) [33]
                0.00    0.00       3/3           opBit::~opBit() [127]
                0.00    0.00      48/3047906     quState::mapbits() const [52]
                0.00    0.00      45/65          quSubString::~quSubString() [214]
                0.00    0.00       6/21585       sDef::id() const [141]
                0.00    0.00       3/266         SymTab::getRef(std::string const&, ObjType*) const [176]
                0.00    0.00       3/19          tValue::isQuExpr() const [297]
                0.00    0.00       3/13          tValue::qustate() const [323]
-----------------------------------------------
                0.13    4.56      45/45          ext_bit(sRoutDef const*, SymTable const*, int) [8]
[9]     96.9    0.13    4.56      45         opElementary::apply(quState&) const [9]
                0.43    2.68 1015807/1015807     opMatrix::addterms(terminfo const&) const [10]
                0.08    0.34 1015807/1015807     terminfo::terminfo(terminfo const&) [18]
                0.03    0.21 1015807/1015807     quSubString::map(bitvec const&) const [22]
                0.07    0.11 1015807/1015807     term::operator=(term const&) [29]
                0.10    0.01 1015807/1015807     quSubState::baseterm(int) const [35]
                0.05    0.06 1015807/1015810     operator&(bitvec const&, bitvec const&) [36]
                0.01    0.09 1015807/2129406     term::setvect(bitvec const&) [26]
                0.05    0.04 1015852/5176887     bitvec::operator=(bitvec const&) [17]
                0.00    0.06 1015852/1015852     terminfo::~terminfo() [45]
                0.01    0.05      45/45          quSubState::opbegin() [46]
                0.04    0.00 2031749/11304875     bitvec::~bitvec() [23]
                0.01    0.00 2031614/11221957     term::vect() const [41]
                0.01    0.00      45/45          terminfo::terminfo() [64]
                0.00    0.01      45/45          quSubState::baseterms() const [69]
                0.00    0.01      45/45          quSubState::opend() [81]
                0.00    0.00      45/52          quState::mapmask() const [116]
                0.00    0.00      45/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00      45/98          operator~(bitvec const&) [122]
                0.00    0.00      45/3047906     quState::mapbits() const [52]
-----------------------------------------------
                0.43    2.68 1015807/1015807     opElementary::apply(quState&) const [9]
[10]    64.3    0.43    2.68 1015807         opMatrix::addterms(terminfo const&) const [10]
                0.15    0.87 2031614/2031614     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.22    0.52 2031614/2031666     quSubString::unmap(bitvec const&) const [15]
                0.15    0.30 2031614/2031614     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [16]
                0.05    0.14 2031614/2031614     operator|(bitvec const&, bitvec const&) [27]
                0.09    0.00 4063228/11304875     bitvec::~bitvec() [23]
                0.06    0.00 1015807/2162257     std::complex<double>::complex(double, double) [33]
                0.05    0.00 3047421/6127099     term::ampl() const [37]
                0.04    0.00 6094842/11221957     term::vect() const [41]
                0.03    0.00 3047421/3047428     bitvec::length() const [53]
                0.01    0.00 1015807/1015807     bitvec::getword() const [67]
-----------------------------------------------
                0.15    0.87 2031614/2031614     opMatrix::addterms(terminfo const&) const [10]
[11]    21.1    0.15    0.87 2031614         quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.04    0.83 2031614/2031615     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
-----------------------------------------------
                0.00    0.00       1/2031615     quBaseState::reset(bitvec const&) [98]
                0.04    0.83 2031614/2031615     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
[12]    18.0    0.04    0.83 2031615         quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.29    0.54 2031615/2031615     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
[13]    17.2    0.29    0.54 2031615+130048  <cycle 4 as a whole> [13]
                0.29    0.54 2096639+14          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   65024             termlist::add(term const&) <cycle 4> [97]
-----------------------------------------------
                                  14             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                               65024             termlist::add(term const&) <cycle 4> [97]
                0.29    0.54 2031615/2031615     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
[14]    17.2    0.29    0.54 2096639+14      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.04    0.10  983040/983040      std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [30]
                0.06    0.07 2096653/2096653     termlist::hashfunct1(bitvec const&) const [32]
                0.01    0.09 1113599/2129406     term::setvect(bitvec const&) [26]
                0.09    0.00 2096639/2096639     term::setampl(std::complex<double> const&) [39]
                0.01    0.02  998863/998863      operator==(bitvec const&, bitvec const&) [55]
                0.02    0.00  983040/6127099     term::ampl() const [37]
                0.02    0.00      14/62          termlist::clear() [44]
                0.00    0.01      14/16          termlist::newlist() [61]
                0.01    0.00  998863/11221957     term::vect() const [41]
                0.00    0.00   65024/1146430     term::~term() [51]
                0.00    0.00   15823/15823       termlist::hashfunct2(bitvec const&) const [99]
                               65024             termlist::add(term const&) <cycle 4> [97]
                                  14             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00      52/2031666     quState::mapmask() const [116]
                0.22    0.52 2031614/2031666     opMatrix::addterms(terminfo const&) const [10]
[15]    15.3    0.22    0.52 2031666         quSubString::unmap(bitvec const&) const [15]
                0.06    0.13 2031666/2031666     bitvec::setbits(int, bitvec const&) [28]
                0.02    0.09 2031666/2031666     quBaseState::unmap(bitvec const&) const [34]
                0.10    0.00 2031666/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.04    0.00 2031666/11304875     bitvec::~bitvec() [23]
                0.04    0.00 2031666/3047473     quSubString::mapoffs() const [47]
                0.03    0.00 2031666/3047906     quState::mapbits() const [52]
-----------------------------------------------
                0.15    0.30 2031614/2031614     opMatrix::addterms(terminfo const&) const [10]
[16]     9.2    0.15    0.30 2031614         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [16]
                0.24    0.06 2031614/2031614     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [20]
-----------------------------------------------
                0.00    0.00       3/5176887     QuHeap::QuHeap(int, int) [82]
                0.00    0.00      12/5176887     term::set(bitvec const&, std::complex<double> const&) [126]
                0.05    0.04 1015807/5176887     term::term(term const&) [21]
                0.05    0.04 1015807/5176887     term::operator=(term const&) [29]
                0.05    0.04 1015852/5176887     opElementary::apply(quState&) const [9]
                0.09    0.09 2129406/5176887     term::setvect(bitvec const&) [26]
[17]     9.1    0.23    0.21 5176887         bitvec::operator=(bitvec const&) [17]
                0.21    0.00 5176887/5176887     bitvec::setlen(int) [25]
-----------------------------------------------
                0.08    0.34 1015807/1015807     opElementary::apply(quState&) const [9]
[18]     8.6    0.08    0.34 1015807         terminfo::terminfo(terminfo const&) [18]
                0.07    0.22 1015807/1015807     term::term(term const&) [21]
                0.05    0.00 1015807/7110802     bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.00    0.00      98/7110802     operator~(bitvec const&) [122]
                0.05    0.00 1015807/7110802     quBaseState::map(bitvec const&) const [40]
                0.05    0.00 1015807/7110802     terminfo::terminfo(terminfo const&) [18]
                0.05    0.00 1015810/7110802     operator&(bitvec const&, bitvec const&) [36]
                0.09    0.00 2031614/7110802     operator|(bitvec const&, bitvec const&) [27]
                0.09    0.00 2031666/7110802     quBaseState::unmap(bitvec const&) const [34]
[19]     6.8    0.33    0.00 7110802         bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.24    0.06 2031614/2031614     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [16]
[20]     6.1    0.24    0.06 2031614         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [20]
                0.04    0.00 2031614/3014654     std::complex<double>::imag() const [48]
                0.02    0.00 2031614/3014654     std::complex<double>::real() const [54]
-----------------------------------------------
                0.07    0.22 1015807/1015807     terminfo::terminfo(terminfo const&) [18]
[21]     6.0    0.07    0.22 1015807         term::term(term const&) [21]
                0.05    0.04 1015807/5176887     bitvec::operator=(bitvec const&) [17]
                0.06    0.00 1015807/2162257     std::complex<double>::complex(double, double) [33]
                0.05    0.00 1015807/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.02    0.00 1015807/6127099     term::ampl() const [37]
                0.01    0.00 1015807/11221957     term::vect() const [41]
-----------------------------------------------
                0.03    0.21 1015807/1015807     opElementary::apply(quState&) const [9]
[22]     5.0    0.03    0.21 1015807         quSubString::map(bitvec const&) const [22]
                0.04    0.05 1015807/1015807     quBaseState::map(bitvec const&) const [40]
                0.02    0.05 1015807/1015807     bitvec::getbits(int, int) const [42]
                0.02    0.00 1015807/11304875     bitvec::~bitvec() [23]
                0.02    0.00 1015807/3047473     quSubString::mapoffs() const [47]
                0.01    0.00 1015807/3047906     quState::mapbits() const [52]
-----------------------------------------------
                0.00    0.00       1/11304875     quBaseState::reset(bitvec const&) [98]
                0.00    0.00       1/11304875     quBaseState::quBaseState(int, int) [83]
                0.00    0.00       2/11304875     QuHeap::qualloc(int, BaseType) [63]
                0.00    0.00       3/11304875     QuHeap::QuHeap(int, int) [82]
                0.00    0.00       5/11304875     QuHeap::~QuHeap() [89]
                0.00    0.00      12/11304875     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
                0.00    0.00      15/11304875     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00     104/11304875     quState::mapmask() const [116]
                0.02    0.00 1015807/11304875     quSubString::map(bitvec const&) const [22]
                0.02    0.00 1015852/11304875     terminfo::~terminfo() [45]
                0.02    0.00 1146430/11304875     term::~term() [51]
                0.04    0.00 2031666/11304875     quSubString::unmap(bitvec const&) const [15]
                0.04    0.00 2031749/11304875     opElementary::apply(quState&) const [9]
                0.09    0.00 4063228/11304875     opMatrix::addterms(terminfo const&) const [10]
[23]     5.0    0.24    0.00 11304875         bitvec::~bitvec() [23]
-----------------------------------------------
                0.00    0.00       1/4194073     quBaseState::reset(bitvec const&) [98]
                0.00    0.00       1/4194073     quBaseState::quBaseState(int, int) [83]
                0.00    0.00       3/4194073     QuHeap::cmask() const [130]
                0.00    0.00       3/4194073     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/4194073     QuHeap::QuHeap(int, int) [82]
                0.00    0.00      12/4194073     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
                0.00    0.00      45/4194073     opElementary::apply(quState&) const [9]
                0.00    0.00      45/4194073     terminfo::terminfo() [64]
                0.00    0.00      52/4194073     quState::mapmask() const [116]
                0.01    0.00  130623/4194073     term::term() [60]
                0.05    0.00 1015807/4194073     bitvec::getbits(int, int) const [42]
                0.05    0.00 1015807/4194073     term::term(term const&) [21]
                0.10    0.00 2031666/4194073     quSubString::unmap(bitvec const&) const [15]
[24]     4.4    0.22    0.00 4194073         bitvec::bitvec(int, unsigned long) [24]
-----------------------------------------------
                0.21    0.00 5176887/5176887     bitvec::operator=(bitvec const&) [17]
[25]     4.3    0.21    0.00 5176887         bitvec::setlen(int) [25]
-----------------------------------------------
                0.01    0.09 1015807/2129406     opElementary::apply(quState&) const [9]
                0.01    0.09 1113599/2129406     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[26]     4.2    0.02    0.18 2129406         term::setvect(bitvec const&) [26]
                0.09    0.09 2129406/5176887     bitvec::operator=(bitvec const&) [17]
-----------------------------------------------
                0.05    0.14 2031614/2031614     opMatrix::addterms(terminfo const&) const [10]
[27]     4.0    0.05    0.14 2031614         operator|(bitvec const&, bitvec const&) [27]
                0.09    0.00 2031614/7110802     bitvec::bitvec(bitvec const&) [19]
                0.05    0.00 2031614/2031617     bitvec::operator|=(bitvec const&) [50]
-----------------------------------------------
                0.06    0.13 2031666/2031666     quSubString::unmap(bitvec const&) const [15]
[28]     3.9    0.06    0.13 2031666         bitvec::setbits(int, bitvec const&) [28]
                0.13    0.00 2031666/2031666     bitvec::setbits(int, int, unsigned long) [31]
-----------------------------------------------
                0.07    0.11 1015807/1015807     opElementary::apply(quState&) const [9]
[29]     3.7    0.07    0.11 1015807         term::operator=(term const&) [29]
                0.05    0.04 1015807/5176887     bitvec::operator=(bitvec const&) [17]
                0.02    0.00 1015807/6127099     term::ampl() const [37]
                0.01    0.00 1015807/11221957     term::vect() const [41]
-----------------------------------------------
                0.04    0.10  983040/983040      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[30]     2.7    0.04    0.10  983040         std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [30]
                0.07    0.03  983040/983040      std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [38]
-----------------------------------------------
                0.13    0.00 2031666/2031666     bitvec::setbits(int, bitvec const&) [28]
[31]     2.7    0.13    0.00 2031666         bitvec::setbits(int, int, unsigned long) [31]
-----------------------------------------------
                0.06    0.07 2096653/2096653     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[32]     2.7    0.06    0.07 2096653         termlist::hashfunct1(bitvec const&) const [32]
                0.07    0.00 2096653/2112476     bitvec::hashfunct() const [43]
-----------------------------------------------
                0.00    0.00       1/2162257     yylex() [104]
                0.00    0.00       1/2162257     quBaseState::reset(bitvec const&) [98]
                0.00    0.00      18/2162257     ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.01    0.00  130623/2162257     term::term() [60]
                0.06    0.00 1015807/2162257     term::term(term const&) [21]
                0.06    0.00 1015807/2162257     opMatrix::addterms(terminfo const&) const [10]
[33]     2.6    0.13    0.00 2162257         std::complex<double>::complex(double, double) [33]
-----------------------------------------------
                0.02    0.09 2031666/2031666     quSubString::unmap(bitvec const&) const [15]
[34]     2.4    0.02    0.09 2031666         quBaseState::unmap(bitvec const&) const [34]
                0.09    0.00 2031666/7110802     bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.10    0.01 1015807/1015807     opElementary::apply(quState&) const [9]
[35]     2.3    0.10    0.01 1015807         quSubState::baseterm(int) const [35]
                0.01    0.00 1015807/1015807     quBaseState::baseterm(int) const [66]
-----------------------------------------------
                0.00    0.00       3/1015810     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.05    0.06 1015807/1015810     opElementary::apply(quState&) const [9]
[36]     2.2    0.05    0.06 1015810         operator&(bitvec const&, bitvec const&) [36]
                0.05    0.00 1015810/7110802     bitvec::bitvec(bitvec const&) [19]
                0.01    0.00 1015810/1015811     bitvec::operator&=(bitvec const&) [65]
-----------------------------------------------
                0.00    0.00   65024/6127099     termlist::add(term const&) <cycle 4> [97]
                0.02    0.00  983040/6127099     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.02    0.00 1015807/6127099     term::term(term const&) [21]
                0.02    0.00 1015807/6127099     term::operator=(term const&) [29]
                0.05    0.00 3047421/6127099     opMatrix::addterms(terminfo const&) const [10]
[37]     2.1    0.10    0.00 6127099         term::ampl() const [37]
-----------------------------------------------
                0.07    0.03  983040/983040      std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [30]
[38]     2.0    0.07    0.03  983040         std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [38]
                0.02    0.00  983040/3014654     std::complex<double>::imag() const [48]
                0.01    0.00  983040/3014654     std::complex<double>::real() const [54]
-----------------------------------------------
                0.09    0.00 2096639/2096639     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[39]     1.9    0.09    0.00 2096639         term::setampl(std::complex<double> const&) [39]
-----------------------------------------------
                0.04    0.05 1015807/1015807     quSubString::map(bitvec const&) const [22]
[40]     1.8    0.04    0.05 1015807         quBaseState::map(bitvec const&) const [40]
                0.05    0.00 1015807/7110802     bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.00    0.00   65024/11221957     termlist::add(term const&) <cycle 4> [97]
                0.01    0.00  998863/11221957     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.01    0.00 1015807/11221957     term::term(term const&) [21]
                0.01    0.00 1015807/11221957     term::operator=(term const&) [29]
                0.01    0.00 2031614/11221957     opElementary::apply(quState&) const [9]
                0.04    0.00 6094842/11221957     opMatrix::addterms(terminfo const&) const [10]
[41]     1.7    0.08    0.00 11221957         term::vect() const [41]
-----------------------------------------------
                0.02    0.05 1015807/1015807     quSubString::map(bitvec const&) const [22]
[42]     1.5    0.02    0.05 1015807         bitvec::getbits(int, int) const [42]
                0.05    0.00 1015807/4194073     bitvec::bitvec(int, unsigned long) [24]
-----------------------------------------------
                0.00    0.00   15823/2112476     termlist::hashfunct2(bitvec const&) const [99]
                0.07    0.00 2096653/2112476     termlist::hashfunct1(bitvec const&) const [32]
[43]     1.4    0.07    0.00 2112476         bitvec::hashfunct() const [43]
-----------------------------------------------
                0.00    0.00       2/62          termlist::termlist(int, int) [87]
                0.02    0.00      14/62          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.05    0.00      46/62          quBaseState::opbegin() [49]
[44]     1.4    0.07    0.00      62         termlist::clear() [44]
-----------------------------------------------
                0.00    0.06 1015852/1015852     opElementary::apply(quState&) const [9]
[45]     1.3    0.00    0.06 1015852         terminfo::~terminfo() [45]
                0.02    0.02 1015852/1146430     term::~term() [51]
                0.02    0.00 1015852/11304875     bitvec::~bitvec() [23]
-----------------------------------------------
                0.01    0.05      45/45          opElementary::apply(quState&) const [9]
[46]     1.3    0.01    0.05      45         quSubState::opbegin() [46]
                0.00    0.05      45/46          quBaseState::opbegin() [49]
-----------------------------------------------
                0.02    0.00 1015807/3047473     quSubString::map(bitvec const&) const [22]
                0.04    0.00 2031666/3047473     quSubString::unmap(bitvec const&) const [15]
[47]     1.2    0.06    0.00 3047473         quSubString::mapoffs() const [47]
-----------------------------------------------
                0.02    0.00  983040/3014654     std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [38]
                0.04    0.00 2031614/3014654     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [20]
[48]     1.1    0.06    0.00 3014654         std::complex<double>::imag() const [48]
-----------------------------------------------
                0.00    0.00       1/46          quBaseState::reset(bitvec const&) [98]
                0.00    0.05      45/46          quSubState::opbegin() [46]
[49]     1.1    0.00    0.05      46         quBaseState::opbegin() [49]
                0.05    0.00      46/62          termlist::clear() [44]
-----------------------------------------------
                0.00    0.00       3/2031617     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.05    0.00 2031614/2031617     operator|(bitvec const&, bitvec const&) [27]
[50]     1.0    0.05    0.00 2031617         bitvec::operator|=(bitvec const&) [50]
-----------------------------------------------
                0.00    0.00      18/1146430     opMatrix::~opMatrix() [129]
                0.00    0.00   65024/1146430     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   65536/1146430     termlist::dellist() [90]
                0.02    0.02 1015852/1146430     terminfo::~terminfo() [45]
[51]     0.9    0.02    0.02 1146430         term::~term() [51]
                0.02    0.00 1146430/11304875     bitvec::~bitvec() [23]
-----------------------------------------------
                0.00    0.00       1/3047906     quBaseState::basebits() const [133]
                0.00    0.00       3/3047906     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      45/3047906     opElementary::apply(quState&) const [9]
                0.00    0.00      48/3047906     ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.00    0.00      52/3047906     quState::mapmask() const [116]
                0.00    0.00      86/3047906     quState::newclone() <cycle 5> [125]
                0.00    0.00     198/3047906     quBaseState::newsubstring(int, int) <cycle 5> [124]
                0.01    0.00 1015807/3047906     quSubString::map(bitvec const&) const [22]
                0.03    0.00 2031666/3047906     quSubString::unmap(bitvec const&) const [15]
[52]     0.8    0.04    0.00 3047906         quState::mapbits() const [52]
-----------------------------------------------
                0.00    0.00       1/3047428     quBaseState::reset(bitvec const&) [98]
                0.00    0.00       3/3047428     QuHeap::ncond() const [132]
                0.00    0.00       3/3047428     QuHeap::cmask() const [130]
                0.03    0.00 3047421/3047428     opMatrix::addterms(terminfo const&) const [10]
[53]     0.6    0.03    0.00 3047428         bitvec::length() const [53]
-----------------------------------------------
                0.01    0.00  983040/3014654     std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [38]
                0.02    0.00 2031614/3014654     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [20]
[54]     0.6    0.03    0.00 3014654         std::complex<double>::real() const [54]
-----------------------------------------------
                0.01    0.02  998863/998863      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[55]     0.6    0.01    0.02  998863         operator==(bitvec const&, bitvec const&) [55]
                0.02    0.00  998863/998863      bitvec::testeq(bitvec const&) const [57]
-----------------------------------------------
                                                 <spontaneous>
[56]     0.6    0.03    0.00                 bitvec::operator=(unsigned long) [56]
-----------------------------------------------
                0.02    0.00  998863/998863      operator==(bitvec const&, bitvec const&) [55]
[57]     0.4    0.02    0.00  998863         bitvec::testeq(bitvec const&) const [57]
-----------------------------------------------
                0.02    0.00       1/1           __libc_csu_init [59]
[58]     0.3    0.02    0.00       1         _GLOBAL__sub_I_qc_check_txt [58]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [499]
-----------------------------------------------
                                                 <spontaneous>
[59]     0.3    0.00    0.02                 __libc_csu_init [59]
                0.02    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [58]
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [469]
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [470]
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [471]
                0.00    0.00       1/1           _GLOBAL__sub_I_main [467]
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [472]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [458]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [463]
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [474]
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [473]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [475]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [459]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [460]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [457]
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [466]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [464]
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [476]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [477]
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [465]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [461]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [462]
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [456]
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [468]
-----------------------------------------------
                0.00    0.00      18/130623      opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
                0.00    0.00      45/130623      terminfo::terminfo() [64]
                0.00    0.01  130560/130623      termlist::newlist() [61]
[60]     0.3    0.00    0.01  130623         term::term() [60]
                0.01    0.00  130623/2162257     std::complex<double>::complex(double, double) [33]
                0.01    0.00  130623/4194073     bitvec::bitvec(int, unsigned long) [24]
-----------------------------------------------
                0.00    0.00       2/16          termlist::termlist(int, int) [87]
                0.00    0.01      14/16          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[61]     0.3    0.00    0.01      16         termlist::newlist() [61]
                0.00    0.01  130560/130623      term::term() [60]
-----------------------------------------------
                0.00    0.01       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[62]     0.2    0.00    0.01       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.01       1/1           QuHeap::qualloc(int, BaseType) [63]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [103]
                0.00    0.00       1/66          quState::newclone() <cycle 5> [125]
                0.00    0.00       2/35          tValue::operator=(tValue const&) [100]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [113]
                0.00    0.00       1/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00       4/677         tValue::~tValue() [157]
                0.00    0.00       2/361         tValue::tValue() [170]
                0.00    0.00       2/8           tValue::isError() const [341]
                0.00    0.00       2/2           tValue::toInt() const [434]
                0.00    0.00       1/129         tType::isQuExpr() const [187]
                0.00    0.00       1/380         sDef::type() const [164]
                0.00    0.00       1/1           sDef::basetype() [509]
                0.00    0.00       1/7           sObject::isGlobal() const [348]
                0.00    0.00       1/13          tValue::qustate() const [323]
                0.00    0.00       1/175         sObject::def() const [185]
-----------------------------------------------
                0.00    0.01       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
[63]     0.2    0.00    0.01       1         QuHeap::qualloc(int, BaseType) [63]
                0.01    0.00      15/15          bitvec::operator[](int) const [71]
                0.00    0.00       1/66          quBaseState::newsubstring(int, int) <cycle 5> [124]
                0.00    0.00       1/52          quState::mapmask() const [116]
                0.00    0.00       1/98          operator~(bitvec const&) [122]
                0.00    0.00       2/11304875     bitvec::~bitvec() [23]
                0.00    0.00       1/1015811     bitvec::operator&=(bitvec const&) [65]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [515]
-----------------------------------------------
                0.01    0.00      45/45          opElementary::apply(quState&) const [9]
[64]     0.2    0.01    0.00      45         terminfo::terminfo() [64]
                0.00    0.00      45/130623      term::term() [60]
                0.00    0.00      45/4194073     bitvec::bitvec(int, unsigned long) [24]
-----------------------------------------------
                0.00    0.00       1/1015811     QuHeap::qualloc(int, BaseType) [63]
                0.01    0.00 1015810/1015811     operator&(bitvec const&, bitvec const&) [36]
[65]     0.2    0.01    0.00 1015811         bitvec::operator&=(bitvec const&) [65]
-----------------------------------------------
                0.01    0.00 1015807/1015807     quSubState::baseterm(int) const [35]
[66]     0.2    0.01    0.00 1015807         quBaseState::baseterm(int) const [66]
                0.00    0.00 1015807/1015807     termlist::operator[](int) const [140]
-----------------------------------------------
                0.01    0.00 1015807/1015807     opMatrix::addterms(terminfo const&) const [10]
[67]     0.2    0.01    0.00 1015807         bitvec::getword() const [67]
-----------------------------------------------
                0.00    0.00       1/46          quBaseState::reset(bitvec const&) [98]
                0.01    0.00      45/46          quSubState::opend() [81]
[68]     0.2    0.01    0.00      46         quBaseState::opend() [68]
-----------------------------------------------
                0.00    0.01      45/45          opElementary::apply(quState&) const [9]
[69]     0.2    0.00    0.01      45         quSubState::baseterms() const [69]
                0.01    0.00      45/45          quBaseState::baseterms() const [70]
-----------------------------------------------
                0.01    0.00      45/45          quSubState::baseterms() const [69]
[70]     0.2    0.01    0.00      45         quBaseState::baseterms() const [70]
                0.00    0.00      45/45          termlist::nterms() const [227]
-----------------------------------------------
                0.01    0.00      15/15          QuHeap::qualloc(int, BaseType) [63]
[71]     0.2    0.01    0.00      15         bitvec::operator[](int) const [71]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.2    0.01    0.00                 term::term(bitvec const&, std::complex<double> const&) [72]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.2    0.01    0.00                 bitvec::setbit(int, int) [73]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.2    0.01    0.00                 opMatrix::~opMatrix() [74]
-----------------------------------------------
                                                 <spontaneous>
[75]     0.2    0.01    0.00                 bitvec::testless(bitvec const&) const [75]
-----------------------------------------------
                                                 <spontaneous>
[76]     0.2    0.01    0.00                 std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [76]
-----------------------------------------------
                0.00    0.00       1/67          quBaseState::quBaseState(int, int) [83]
                0.01    0.00      66/67          quSubState::quSubState(int) [79]
[77]     0.2    0.01    0.00      67         quState::quState(int) [77]
-----------------------------------------------
[78]     0.2    0.00    0.01      66+283     <cycle 5 as a whole> [78]
                0.00    0.01      66             quSubString::quSubString(int, int, quState&) <cycle 5> [80]
                0.00    0.00     132             quBaseState::newsubstring(int, int) <cycle 5> [124]
                0.00    0.00      86             quState::newclone() <cycle 5> [125]
                0.00    0.00      65             quSubString::newsubstring(int, int) <cycle 5> [213]
-----------------------------------------------
                0.00    0.01      66/66          quSubString::quSubString(int, int, quState&) <cycle 5> [80]
[79]     0.2    0.00    0.01      66         quSubState::quSubState(int) [79]
                0.01    0.00      66/67          quState::quState(int) [77]
-----------------------------------------------
                                  66             quBaseState::newsubstring(int, int) <cycle 5> [124]
[80]     0.2    0.00    0.01      66         quSubString::quSubString(int, int, quState&) <cycle 5> [80]
                0.00    0.01      66/66          quSubState::quSubState(int) [79]
                                  66             quState::newclone() <cycle 5> [125]
-----------------------------------------------
                0.00    0.01      45/45          opElementary::apply(quState&) const [9]
[81]     0.2    0.00    0.01      45         quSubState::opend() [81]
                0.01    0.00      45/46          quBaseState::opend() [68]
-----------------------------------------------
                0.00    0.01       1/1           main [1]
[82]     0.1    0.00    0.01       1         QuHeap::QuHeap(int, int) [82]
                0.00    0.01       1/1           quBaseState::quBaseState(int, int) [83]
                0.00    0.00       8/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00       3/5176887     bitvec::operator=(bitvec const&) [17]
                0.00    0.00       3/11304875     bitvec::~bitvec() [23]
                0.00    0.00       2/100         bitvec::qnot() [191]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [572]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [574]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [570]
                0.00    0.00       1/1           QuHeap::init() [514]
-----------------------------------------------
                0.00    0.01       1/1           QuHeap::QuHeap(int, int) [82]
[83]     0.1    0.00    0.01       1         quBaseState::quBaseState(int, int) [83]
                0.00    0.00       2/2           termlist::termlist(int, int) [87]
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [98]
                0.00    0.00       1/67          quState::quState(int) [77]
                0.00    0.00       1/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00       1/11304875     bitvec::~bitvec() [23]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.1    0.01    0.00                 std::complex<double>::imag() [84]
-----------------------------------------------
                                                 <spontaneous>
[85]     0.1    0.01    0.00                 std::pow(double, int) [85]
-----------------------------------------------
                                                 <spontaneous>
[86]     0.1    0.01    0.00                 bool std::operator==<double>(std::complex<double> const&, std::complex<double> const&) [86]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::quBaseState(int, int) [83]
[87]     0.1    0.00    0.00       2         termlist::termlist(int, int) [87]
                0.00    0.00       2/62          termlist::clear() [44]
                0.00    0.00       2/16          termlist::newlist() [61]
                0.00    0.00       2/2           duallog(int) [412]
-----------------------------------------------
                0.00    0.00      35/328         tValue::operator=(tValue const&) [100]
                0.00    0.00     293/328         tValue::tValue(tValue const&) [94]
[88]     0.1    0.00    0.00     328         tValue::assign(tValue const&) [88]
                0.00    0.00      18/66          quState::newclone() <cycle 5> [125]
                0.00    0.00     328/862         tType::operator=(tType const&) [151]
                0.00    0.00     328/1084        tType::ord() const [148]
                0.00    0.00     328/1045        tType::basetype() const [149]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[89]     0.1    0.00    0.00       1         QuHeap::~QuHeap() [89]
                0.00    0.00       1/1           quBaseState::~quBaseState() [92]
                0.00    0.00       5/11304875     bitvec::~bitvec() [23]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [441]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [541]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [538]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [569]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [571]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [575]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [573]
-----------------------------------------------
                0.00    0.00       2/2           termlist::~termlist() [91]
[90]     0.1    0.00    0.00       2         termlist::dellist() [90]
                0.00    0.00   65536/1146430     term::~term() [51]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::~quBaseState() [93]
[91]     0.1    0.00    0.00       2         termlist::~termlist() [91]
                0.00    0.00       2/2           termlist::dellist() [90]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[92]     0.1    0.00    0.00       1         quBaseState::~quBaseState() [92]
                0.00    0.00       1/1           quBaseState::~quBaseState() [93]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::~quBaseState() [92]
[93]     0.1    0.00    0.00       1         quBaseState::~quBaseState() [93]
                0.00    0.00       2/2           termlist::~termlist() [91]
                0.00    0.00       1/66          quState::~quState() [211]
-----------------------------------------------
                0.00    0.00       1/293         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [119]
                0.00    0.00       3/293         tValue::conv(tType const&) const [118]
                0.00    0.00       3/293         SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00       4/293         sConst::eval(SymTable*, SymTable*, QuHeap*) [113]
                0.00    0.00     282/293         SymTab::put(sDef*, tValue const&) [95]
[94]     0.0    0.00    0.00     293         tValue::tValue(tValue const&) [94]
                0.00    0.00     293/328         tValue::assign(tValue const&) [88]
                0.00    0.00     293/1498        tType::tType(BaseType) [146]
-----------------------------------------------
                0.00    0.00       1/326         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       2/326         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/326         sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       3/326         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/326         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      36/326         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00     275/326         sRoutDef::typecheck(SymTable*, SymTable*) [96]
[95]     0.0    0.00    0.00     326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00     282/293         tValue::tValue(tValue const&) [94]
                0.00    0.00     326/369         sObject::isDef() const [168]
                0.00    0.00     326/378         sObject::isValueDef() const [166]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[96]     0.0    0.00    0.00      36         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00     275/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [112]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
                0.00    0.00     734/21585       sDef::id() const [141]
                0.00    0.00     435/4195        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [143]
                0.00    0.00     275/361         tValue::tValue() [170]
                0.00    0.00     275/677         tValue::~tValue() [157]
                0.00    0.00     263/266         SymTab::getRef(std::string const&, ObjType*) const [176]
                0.00    0.00     263/296         sObject::isFunctDef() const [173]
                0.00    0.00     263/380         sDef::type() const [164]
                0.00    0.00     263/263         tType::isQuReg() const [181]
                0.00    0.00     263/558         sList<sDef>::next(void*&) const [158]
                0.00    0.00      72/79          SymTab::SymTab(int) [206]
                0.00    0.00      72/79          SymTab::~SymTab() [207]
                0.00    0.00      52/457         sObject::setParent(sObject*) [163]
                0.00    0.00      36/143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00      36/175         sObject::def() const [185]
                0.00    0.00      36/99          sList<sDef>::first(void*&) const [192]
                0.00    0.00      36/75          sObject::isExtern() const [210]
                0.00    0.00       8/257         sObject::isRoutDef() const [182]
                0.00    0.00       8/34          sObject::isCondDef() const [261]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [331]
                0.00    0.00       8/30          sObject::isQuFunDef() const [265]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [332]
                0.00    0.00       3/3           sObject::isBennet() const [409]
-----------------------------------------------
                               65024             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[97]     0.0    0.00    0.00   65024         termlist::add(term const&) <cycle 4> [97]
                0.00    0.00   65024/6127099     term::ampl() const [37]
                0.00    0.00   65024/11221957     term::vect() const [41]
                               65024             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [83]
[98]     0.0    0.00    0.00       1         quBaseState::reset(bitvec const&) [98]
                0.00    0.00       1/46          quBaseState::opbegin() [49]
                0.00    0.00       1/46          quBaseState::opend() [68]
                0.00    0.00       1/2031615     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.00    0.00       1/2162257     std::complex<double>::complex(double, double) [33]
                0.00    0.00       1/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00       1/11304875     bitvec::~bitvec() [23]
                0.00    0.00       1/1           quBaseState::basebits() const [133]
                0.00    0.00       1/3047428     bitvec::length() const [53]
-----------------------------------------------
                0.00    0.00   15823/15823       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[99]     0.0    0.00    0.00   15823         termlist::hashfunct2(bitvec const&) const [99]
                0.00    0.00   15823/2112476     bitvec::hashfunct() const [43]
-----------------------------------------------
                0.00    0.00       2/35          sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/35          sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       3/35          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/35          sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00      21/35          sConst::sConst(tValue const&) [102]
[100]    0.0    0.00    0.00      35         tValue::operator=(tValue const&) [100]
                0.00    0.00      35/328         tValue::assign(tValue const&) [88]
                0.00    0.00      35/712         tValue::delpointer() [154]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[101]    0.0    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00      36/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00      36/175         sObject::def() const [185]
                0.00    0.00      36/361         tValue::tValue() [170]
                0.00    0.00      36/677         tValue::~tValue() [157]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00      19/21          yylex() [104]
[102]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [102]
                0.00    0.00      21/35          tValue::operator=(tValue const&) [100]
                0.00    0.00      21/65          tValue::type() const [217]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [282]
                0.00    0.00      21/361         tValue::tValue() [170]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
[103]    0.0    0.00    0.00       1         QuHeap::addReg(quState*) [103]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [106]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [121]
                0.00    0.00       1/677         tValue::~tValue() [157]
-----------------------------------------------
                0.00    0.00    2354/2354        yyparse() [105]
[104]    0.0    0.00    0.00    2354         yylex() [104]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [102]
                0.00    0.00       1/2162257     std::complex<double>::complex(double, double) [33]
                0.00    0.00      19/677         tValue::~tValue() [157]
                0.00    0.00      15/15          tValue::tValue(long) [318]
                0.00    0.00      12/12          yy_get_next_buffer() [324]
                0.00    0.00       8/8           yy_get_previous_state() [335]
                0.00    0.00       2/2           tValue::tValue(double) [421]
                0.00    0.00       1/26          yy_load_buffer_state() [269]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [517]
                0.00    0.00       1/1           tValue::tValue(char const*) [516]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [108]
                0.00    0.00       2/4           parseobj() [107]
[105]    0.0    0.00    0.00       4         yyparse() [105]
                0.00    0.00    2354/2354        yylex() [104]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [175]
                0.00    0.00     268/1498        tType::tType(BaseType) [146]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [177]
                0.00    0.00      46/46          sVar::sVar(std::string*) [223]
                0.00    0.00      44/44          sDefList::sDefList() [236]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [255]
                0.00    0.00      29/29          sList<sExpr>::append(sExpr*) [266]
                0.00    0.00      24/24          sExprList::sExprList() [274]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [278]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [292]
                0.00    0.00      18/18          sStmtList::sStmtList() [303]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [313]
                0.00    0.00      16/16          sCall::sCall(std::string*, sExprList*, int) [310]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [336]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [343]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [350]
                0.00    0.00       4/178         sObject::setFlag(ObjFlag, int) [183]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [369]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [379]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [373]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [365]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [357]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [397]
                0.00    0.00       2/2           objlist::objlist() [423]
                0.00    0.00       2/2           tType::tType(BaseType, int) [420]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [414]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [417]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [424]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [518]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [511]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [506]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [103]
[106]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [106]
                0.00    0.00       1/66          quState::newclone() <cycle 5> [125]
                0.00    0.00       1/1498        tType::tType(BaseType) [146]
                0.00    0.00       1/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[107]    0.0    0.00    0.00       2         parseobj() [107]
                0.00    0.00       2/4           yyparse() [105]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[108]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [108]
                0.00    0.00       2/4           yyparse() [105]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [362]
                0.00    0.00       2/2           yyCleanUp() [413]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[109]    0.0    0.00    0.00       3         sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       6/35          tValue::operator=(tValue const&) [100]
                0.00    0.00       6/6           SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00       6/60          sVar::id() const [218]
                0.00    0.00       6/677         tValue::~tValue() [157]
                0.00    0.00       3/361         tValue::tValue() [170]
                0.00    0.00       3/3           tValue::isExpr() const [406]
                0.00    0.00       3/100         sExpr::type() [190]
                0.00    0.00       3/65          tValue::type() const [217]
                0.00    0.00       3/11          tType::operator==(tType const&) const [328]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[110]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [113]
                0.00    0.00       3/35          tValue::operator=(tValue const&) [100]
                0.00    0.00       3/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00       6/677         tValue::~tValue() [157]
                0.00    0.00       3/361         tValue::tValue() [170]
                0.00    0.00       3/8           tValue::isError() const [341]
                0.00    0.00       3/65          tValue::type() const [217]
                0.00    0.00       3/380         sDef::type() const [164]
                0.00    0.00       3/11          tType::operator==(tType const&) const [328]
                0.00    0.00       3/175         sObject::def() const [185]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [112]
[111]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       6/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00      29/175         sObject::def() const [185]
                0.00    0.00      23/380         sDef::type() const [164]
                0.00    0.00      16/41          tType::operator==(BaseType) const [256]
                0.00    0.00      11/129         tType::isQuExpr() const [187]
                0.00    0.00       7/21585       sDef::id() const [141]
                0.00    0.00       7/143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00       6/361         tValue::tValue() [170]
                0.00    0.00       6/677         tValue::~tValue() [157]
                0.00    0.00       5/457         sObject::setParent(sObject*) [163]
                0.00    0.00       5/21          sObject::inFunctDef() const [287]
                0.00    0.00       5/100         sExpr::type() [190]
                0.00    0.00       5/177         sObject::isSet(ObjFlag) const [184]
                0.00    0.00       4/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00       4/20          sObject::inQuDef() const [289]
                0.00    0.00       4/34          sObject::isCondDef() const [261]
                0.00    0.00       4/178         sObject::setFlag(ObjFlag, int) [183]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00       1/21          tType::isInt() const [286]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [96]
[112]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [112]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00     269/457         sObject::setParent(sObject*) [163]
                0.00    0.00     269/558         sList<sDef>::next(void*&) const [158]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [180]
                0.00    0.00      44/99          sList<sDef>::first(void*&) const [192]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
[113]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [113]
                0.00    0.00       4/293         tValue::tValue(tValue const&) [94]
-----------------------------------------------
[114]    0.0    0.00    0.00       8+19      <cycle 3 as a whole> [114]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
[115]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [102]
                0.00    0.00       2/326         SymTab::put(sDef*, tValue const&) [95]
                0.00    0.00       8/457         sObject::setParent(sObject*) [163]
                0.00    0.00       4/100         sExpr::type() [190]
                0.00    0.00       4/21          tType::isInt() const [286]
                0.00    0.00       4/677         tValue::~tValue() [157]
                0.00    0.00       2/79          SymTab::SymTab(int) [206]
                0.00    0.00       2/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00       2/60          sVar::id() const [218]
                0.00    0.00       2/143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00       2/91          sVarDef::object() const [194]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00       2/21585       sDef::id() const [141]
                0.00    0.00       2/2           tValue::tValue(int) [422]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [357]
                0.00    0.00       2/1498        tType::tType(BaseType) [146]
                0.00    0.00       2/361         tValue::tValue() [170]
                0.00    0.00       2/5           sDef::settype(tType const&) [356]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [331]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [332]
                0.00    0.00       2/5           sConstDef::~sConstDef() [358]
                0.00    0.00       2/79          SymTab::~SymTab() [207]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
-----------------------------------------------
                0.00    0.00       1/52          QuHeap::qualloc(int, BaseType) [63]
                0.00    0.00       6/52          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      45/52          opElementary::apply(quState&) const [9]
[116]    0.0    0.00    0.00      52         quState::mapmask() const [116]
                0.00    0.00      52/2031666     quSubString::unmap(bitvec const&) const [15]
                0.00    0.00      52/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00      52/98          operator~(bitvec const&) [122]
                0.00    0.00     104/11304875     bitvec::~bitvec() [23]
                0.00    0.00      52/3047906     quState::mapbits() const [52]
-----------------------------------------------
                0.00    0.00       6/6           sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
[117]    0.0    0.00    0.00       6         SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00       3/293         tValue::tValue(tValue const&) [94]
                0.00    0.00       3/361         tValue::tValue() [170]
                0.00    0.00       3/372         SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00       3/378         sObject::isValueDef() const [166]
                0.00    0.00       3/91          sVarDef::object() const [194]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[118]    0.0    0.00    0.00       3         tValue::conv(tType const&) const [118]
                0.00    0.00       3/293         tValue::tValue(tValue const&) [94]
                0.00    0.00       3/11          tType::operator==(tType const&) const [328]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[119]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [119]
                0.00    0.00       1/293         tValue::tValue(tValue const&) [94]
                0.00    0.00       1/44          operator new(unsigned long, void*) [239]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [121]
[120]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [119]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [390]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [387]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [453]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [535]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [568]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [532]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [550]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [455]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [448]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [103]
[121]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [121]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [567]
-----------------------------------------------
                0.00    0.00       1/98          QuHeap::qualloc(int, BaseType) [63]
                0.00    0.00      45/98          opElementary::apply(quState&) const [9]
                0.00    0.00      52/98          quState::mapmask() const [116]
[122]    0.0    0.00    0.00      98         operator~(bitvec const&) [122]
                0.00    0.00      98/7110802     bitvec::bitvec(bitvec const&) [19]
                0.00    0.00      98/100         bitvec::qnot() [191]
-----------------------------------------------
                0.00    0.00       3/3           ext_bit(sRoutDef const*, SymTable const*, int) [8]
[123]    0.0    0.00    0.00       3         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
                0.00    0.00      18/130623      term::term() [60]
                0.00    0.00      12/12          term::set(bitvec const&, std::complex<double> const&) [126]
                0.00    0.00      12/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00      12/11304875     bitvec::~bitvec() [23]
                0.00    0.00      12/12          std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [326]
                0.00    0.00       3/3           opMatrix::opMatrix(int) [400]
-----------------------------------------------
                                  65             quSubString::newsubstring(int, int) <cycle 5> [213]
                                  66             quState::newclone() <cycle 5> [125]
                0.00    0.00       1/66          QuHeap::qualloc(int, BaseType) [63]
[124]    0.0    0.00    0.00     132         quBaseState::newsubstring(int, int) <cycle 5> [124]
                0.00    0.00     198/3047906     quState::mapbits() const [52]
                                  66             quSubString::quSubString(int, int, quState&) <cycle 5> [80]
-----------------------------------------------
                                  66             quSubString::quSubString(int, int, quState&) <cycle 5> [80]
                0.00    0.00       1/66          tValue::tValue(quState&, BaseType) [106]
                0.00    0.00       1/66          sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00      18/66          tValue::assign(tValue const&) [88]
[125]    0.0    0.00    0.00      86         quState::newclone() <cycle 5> [125]
                0.00    0.00      86/3047906     quState::mapbits() const [52]
                                  66             quBaseState::newsubstring(int, int) <cycle 5> [124]
                                  20             quSubString::newsubstring(int, int) <cycle 5> [213]
-----------------------------------------------
                0.00    0.00      12/12          opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
[126]    0.0    0.00    0.00      12         term::set(bitvec const&, std::complex<double> const&) [126]
                0.00    0.00      12/5176887     bitvec::operator=(bitvec const&) [17]
-----------------------------------------------
                0.00    0.00       3/3           ext_bit(sRoutDef const*, SymTable const*, int) [8]
[127]    0.0    0.00    0.00       3         opBit::~opBit() [127]
                0.00    0.00       3/3           opBit::~opBit() [128]
-----------------------------------------------
                0.00    0.00       3/3           opBit::~opBit() [127]
[128]    0.0    0.00    0.00       3         opBit::~opBit() [128]
                0.00    0.00       3/3           opMatrix::~opMatrix() [129]
-----------------------------------------------
                0.00    0.00       3/3           opBit::~opBit() [128]
[129]    0.0    0.00    0.00       3         opMatrix::~opMatrix() [129]
                0.00    0.00      18/1146430     term::~term() [51]
                0.00    0.00       3/3           opElementary::~opElementary() [395]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[130]    0.0    0.00    0.00       3         QuHeap::cmask() const [130]
                0.00    0.00       3/4194073     bitvec::bitvec(int, unsigned long) [24]
                0.00    0.00       3/3047428     bitvec::length() const [53]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[131]    0.0    0.00    0.00       3         QuHeap::cond() const [131]
                0.00    0.00       3/3           QuHeap::ncond() const [132]
-----------------------------------------------
                0.00    0.00       3/3           QuHeap::cond() const [131]
[132]    0.0    0.00    0.00       3         QuHeap::ncond() const [132]
                0.00    0.00       3/3047428     bitvec::length() const [53]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [98]
[133]    0.0    0.00    0.00       1         quBaseState::basebits() const [133]
                0.00    0.00       1/3047906     quState::mapbits() const [52]
-----------------------------------------------
[134]    0.0    0.00    0.00      25+105     <cycle 1 as a whole> [134]
                0.00    0.00      24             sExprList::~sExprList() <cycle 1> [276]
                0.00    0.00      24             sList<sExpr>::~sList() <cycle 1> [273]
                0.00    0.00      24             sExprList::~sExprList() <cycle 1> [275]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [301]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [351]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [352]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [366]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [367]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [374]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [375]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [370]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [371]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [425]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [426]
-----------------------------------------------
[135]    0.0    0.00    0.00       8+64      <cycle 2 as a whole> [135]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [305]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [299]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [304]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [344]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [345]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [415]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [416]
-----------------------------------------------
                0.00    0.00 1015807/1015807     quBaseState::baseterm(int) const [66]
[140]    0.0    0.00    0.00 1015807         termlist::operator[](int) const [140]
-----------------------------------------------
                0.00    0.00       2/21585       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/21585       sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       6/21585       ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.00    0.00       7/21585       sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00     734/21585       sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00    7519/21585       SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00   13314/21585       SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
[141]    0.0    0.00    0.00   21585         sDef::id() const [141]
-----------------------------------------------
                0.00    0.00    3250/6504        SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00    3254/6504        SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
[142]    0.0    0.00    0.00    6504         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [142]
-----------------------------------------------
                0.00    0.00     435/4195        sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00    3760/4195        SymTab::getentry(SymTable::entry*, std::string const&) const [167]
[143]    0.0    0.00    0.00    4195         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [143]
                0.00    0.00    2928/2928        std::char_traits<char>::compare(char const*, char const*, unsigned long) [145]
-----------------------------------------------
                0.00    0.00     509/3912        SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00    3403/3912        SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
[144]    0.0    0.00    0.00    3912         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144]
-----------------------------------------------
                0.00    0.00    2928/2928        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [143]
[145]    0.0    0.00    0.00    2928         std::char_traits<char>::compare(char const*, char const*, unsigned long) [145]
-----------------------------------------------
                0.00    0.00       1/1498        tValue::tValue(std::complex<double> const&) [517]
                0.00    0.00       1/1498        tValue::tValue(char const*) [516]
                0.00    0.00       1/1498        tValue::tValue(quState&, BaseType) [106]
                0.00    0.00       1/1498        tValue::tValue(quState*, BaseType) [515]
                0.00    0.00       1/1498        __static_initialization_and_destruction_0(int, int) [481]
                0.00    0.00       1/1498        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [518]
                0.00    0.00       2/1498        tValue::tValue(int) [422]
                0.00    0.00       2/1498        tValue::tValue(double) [421]
                0.00    0.00       2/1498        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       4/1498        sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       4/1498        sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       5/1498        sConstDef::sConstDef(std::string*, sExpr*) [357]
                0.00    0.00       8/1498        sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      15/1498        tValue::tValue(long) [318]
                0.00    0.00      16/1498        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [313]
                0.00    0.00      19/1498        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [292]
                0.00    0.00      21/1498        sExpr::sExpr(tType const&) [282]
                0.00    0.00      32/1498        sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      52/1498        sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      76/1498        sExpr::sExpr() [209]
                0.00    0.00     268/1498        yyparse() [105]
                0.00    0.00     293/1498        tValue::tValue(tValue const&) [94]
                0.00    0.00     312/1498        sDef::sDef(tType const&, std::string*) [171]
                0.00    0.00     361/1498        tValue::tValue() [170]
[146]    0.0    0.00    0.00    1498         tType::tType(BaseType) [146]
-----------------------------------------------
                0.00    0.00     532/1116        sObject::isDef() const [168]
                0.00    0.00     584/1116        sObject::isValueDef() const [166]
[147]    0.0    0.00    0.00    1116         sArgDef::object() const [147]
-----------------------------------------------
                0.00    0.00       8/1084        sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00      36/1084        sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00     328/1084        tValue::assign(tValue const&) [88]
                0.00    0.00     712/1084        tValue::ord() const [155]
[148]    0.0    0.00    0.00    1084         tType::ord() const [148]
-----------------------------------------------
                0.00    0.00       1/1045        sDef::basetype() [509]
                0.00    0.00       4/1045        sExpr::basetype() [372]
                0.00    0.00     328/1045        tValue::assign(tValue const&) [88]
                0.00    0.00     712/1045        tValue::basetype() const [156]
[149]    0.0    0.00    0.00    1045         tType::basetype() const [149]
-----------------------------------------------
                0.00    0.00      99/897         sObject::isSetRec(ObjFlag) [319]
                0.00    0.00     798/897         sObject::def() const [185]
[150]    0.0    0.00    0.00     897         sObject::parent() const [150]
-----------------------------------------------
                0.00    0.00       1/862         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       5/862         sDef::settype(tType const&) [356]
                0.00    0.00      21/862         sExpr::sExpr(tType const&) [282]
                0.00    0.00      36/862         sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      46/862         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00     113/862         sExpr::settype(tType const&) [189]
                0.00    0.00     312/862         sDef::sDef(tType const&, std::string*) [171]
                0.00    0.00     328/862         tValue::assign(tValue const&) [88]
[151]    0.0    0.00    0.00     862         tType::operator=(tType const&) [151]
-----------------------------------------------
                0.00    0.00     835/835         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
[152]    0.0    0.00    0.00     835         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [152]
-----------------------------------------------
                0.00    0.00     790/790         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
[153]    0.0    0.00    0.00     790         std::_List_const_iterator<sObject*>::operator++() [153]
-----------------------------------------------
                0.00    0.00      35/712         tValue::operator=(tValue const&) [100]
                0.00    0.00     677/712         tValue::~tValue() [157]
[154]    0.0    0.00    0.00     712         tValue::delpointer() [154]
                0.00    0.00     712/712         tValue::ord() const [155]
                0.00    0.00     712/712         tValue::basetype() const [156]
                0.00    0.00      20/20          quSubState::isbasestate() const [288]
                0.00    0.00      20/65          quSubString::~quSubString() [214]
-----------------------------------------------
                0.00    0.00     712/712         tValue::delpointer() [154]
[155]    0.0    0.00    0.00     712         tValue::ord() const [155]
                0.00    0.00     712/1084        tType::ord() const [148]
-----------------------------------------------
                0.00    0.00     712/712         tValue::delpointer() [154]
[156]    0.0    0.00    0.00     712         tValue::basetype() const [156]
                0.00    0.00     712/1045        tType::basetype() const [149]
-----------------------------------------------
                0.00    0.00       1/677         QuHeap::addReg(quState*) [103]
                0.00    0.00       1/677         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [522]
                0.00    0.00       3/677         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [7]
                0.00    0.00       4/677         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       4/677         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       4/677         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       6/677         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       6/677         sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       6/677         sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       9/677         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      19/677         yylex() [104]
                0.00    0.00      21/677         sConst::~sConst() [284]
                0.00    0.00      36/677         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00     275/677         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00     282/677         SymTab::deltree(SymTable::entry*) [220]
[157]    0.0    0.00    0.00     677         tValue::~tValue() [157]
                0.00    0.00     677/712         tValue::delpointer() [154]
-----------------------------------------------
                0.00    0.00       3/558         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      23/558         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00     263/558         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00     269/558         sDefList::typecheck(SymTable*, SymTable*) [112]
[158]    0.0    0.00    0.00     558         sList<sDef>::next(void*&) const [158]
-----------------------------------------------
                0.00    0.00      65/545         tValue::type() const [217]
                0.00    0.00     100/545         sExpr::type() [190]
                0.00    0.00     380/545         sDef::type() const [164]
[159]    0.0    0.00    0.00     545         tType::tType(tType const&) [159]
-----------------------------------------------
                0.00    0.00      18/521         sList<sStmt>::sList() [298]
                0.00    0.00      21/521         sExpr::sExpr(tType const&) [282]
                0.00    0.00      24/521         sList<sExpr>::sList() [272]
                0.00    0.00      26/521         sStmt::sStmt(int) [270]
                0.00    0.00      44/521         sList<sDef>::sList() [234]
                0.00    0.00      76/521         sExpr::sExpr() [209]
                0.00    0.00     312/521         sDef::sDef(tType const&, std::string*) [171]
[160]    0.0    0.00    0.00     521         sObject::sObject(unsigned int) [160]
-----------------------------------------------
                0.00    0.00      18/521         sList<sStmt>::~sList() <cycle 2> [299]
                0.00    0.00      24/521         sList<sExpr>::~sList() <cycle 1> [273]
                0.00    0.00      26/521         sStmt::~sStmt() [271]
                0.00    0.00      44/521         sList<sDef>::~sList() [235]
                0.00    0.00      97/521         sExpr::~sExpr() [193]
                0.00    0.00     312/521         sDef::~sDef() [172]
[161]    0.0    0.00    0.00     521         sObject::~sObject() [161]
-----------------------------------------------
                0.00    0.00       1/460         tValue::tValue(std::complex<double> const&) [517]
                0.00    0.00       1/460         tValue::tValue(char const*) [516]
                0.00    0.00       1/460         tValue::tValue(quState&, BaseType) [106]
                0.00    0.00       1/460         tValue::tValue(quState*, BaseType) [515]
                0.00    0.00       2/460         tValue::tValue(int) [422]
                0.00    0.00       2/460         tValue::tValue(double) [421]
                0.00    0.00      15/460         tValue::tValue(long) [318]
                0.00    0.00      76/460         sExpr::sExpr() [209]
                0.00    0.00     361/460         tValue::tValue() [170]
[162]    0.0    0.00    0.00     460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       1/457         sExit::typecheck(SymTable*, SymTable*) [510]
                0.00    0.00       3/457         sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       4/457         sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       4/457         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       5/457         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       6/457         sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00       8/457         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       8/457         sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00      15/457         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                0.00    0.00      23/457         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
                0.00    0.00      23/457         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      36/457         sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      52/457         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00     269/457         sDefList::typecheck(SymTable*, SymTable*) [112]
[163]    0.0    0.00    0.00     457         sObject::setParent(sObject*) [163]
-----------------------------------------------
                0.00    0.00       1/380         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/380         sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       3/380         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      23/380         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      41/380         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      46/380         sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00     263/380         sRoutDef::typecheck(SymTable*, SymTable*) [96]
[164]    0.0    0.00    0.00     380         sDef::type() const [164]
                0.00    0.00     380/545         tType::tType(tType const&) [159]
-----------------------------------------------
                0.00    0.00       8/379         sObject::isProcDef() const [317]
                0.00    0.00      10/379         sObject::isQuFunDef() const [265]
                0.00    0.00      11/379         sObject::isQuOpDef() const [277]
                0.00    0.00      19/379         sObject::isInclude() const [244]
                0.00    0.00      23/379         sObject::isValueDef() const [166]
                0.00    0.00      84/379         sObject::isDef() const [168]
                0.00    0.00      94/379         sObject::isRoutDef() const [182]
                0.00    0.00     130/379         sObject::isFunctDef() const [173]
[165]    0.0    0.00    0.00     379         sQuOpDef::object() const [165]
-----------------------------------------------
                0.00    0.00       3/378         SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00       3/378         SymTab::getRef(std::string const&, ObjType*) const [176]
                0.00    0.00      46/378         sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00     326/378         SymTab::put(sDef*, tValue const&) [95]
[166]    0.0    0.00    0.00     378         sObject::isValueDef() const [166]
                0.00    0.00     584/1116        sArgDef::object() const [147]
                0.00    0.00      58/91          sVarDef::object() const [194]
                0.00    0.00      26/48          sConstDef::object() const [221]
                0.00    0.00      23/379         sQuOpDef::object() const [165]
                0.00    0.00      19/369         sQuFunDef::object() const [169]
                0.00    0.00       2/58          sProcDef::object() const [219]
-----------------------------------------------
                                3388             SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00       3/372         SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00     139/372         SymTab::getDef(std::string const&) const [186]
                0.00    0.00     230/372         SymTab::getRef(std::string const&, ObjType*) const [176]
[167]    0.0    0.00    0.00     372+3388    SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00    7519/21585       sDef::id() const [141]
                0.00    0.00    3760/4195        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [143]
                0.00    0.00    3250/6504        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [142]
                0.00    0.00     509/3912        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144]
                                3388             SymTab::getentry(SymTable::entry*, std::string const&) const [167]
-----------------------------------------------
                0.00    0.00      43/369         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     326/369         SymTab::put(sDef*, tValue const&) [95]
[168]    0.0    0.00    0.00     369         sObject::isDef() const [168]
                0.00    0.00     532/1116        sArgDef::object() const [147]
                0.00    0.00      84/379         sQuOpDef::object() const [165]
                0.00    0.00      70/369         sQuFunDef::object() const [169]
                0.00    0.00      24/91          sVarDef::object() const [194]
                0.00    0.00      16/48          sConstDef::object() const [221]
                0.00    0.00       6/58          sProcDef::object() const [219]
                0.00    0.00       3/18          sCall::object() const [306]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [317]
                0.00    0.00      10/369         sObject::isQuOpDef() const [277]
                0.00    0.00      13/369         sObject::isQuFunDef() const [265]
                0.00    0.00      16/369         sObject::isInclude() const [244]
                0.00    0.00      19/369         sObject::isValueDef() const [166]
                0.00    0.00      70/369         sObject::isDef() const [168]
                0.00    0.00      74/369         sObject::isRoutDef() const [182]
                0.00    0.00     162/369         sObject::isFunctDef() const [173]
[169]    0.0    0.00    0.00     369         sQuFunDef::object() const [169]
-----------------------------------------------
                0.00    0.00       2/361         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       2/361         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/361         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [7]
                0.00    0.00       3/361         SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00       3/361         sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       3/361         sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       3/361         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/361         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       6/361         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      21/361         sConst::sConst(tValue const&) [102]
                0.00    0.00      36/361         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
                0.00    0.00     275/361         sRoutDef::typecheck(SymTable*, SymTable*) [96]
[170]    0.0    0.00    0.00     361         tValue::tValue() [170]
                0.00    0.00     361/1498        tType::tType(BaseType) [146]
                0.00    0.00     361/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [357]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [336]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [259]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [177]
[171]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [171]
                0.00    0.00     312/521         sObject::sObject(unsigned int) [160]
                0.00    0.00     312/1498        tType::tType(BaseType) [146]
                0.00    0.00     312/862         tType::operator=(tType const&) [151]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [359]
                0.00    0.00       8/312         sVarDef::~sVarDef() [347]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [260]
                0.00    0.00     263/312         sArgDef::~sArgDef() [179]
[172]    0.0    0.00    0.00     312         sDef::~sDef() [172]
                0.00    0.00     312/521         sObject::~sObject() [161]
-----------------------------------------------
                0.00    0.00      16/296         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      17/296         sObject::inFunctDef() const [287]
                0.00    0.00     263/296         sRoutDef::typecheck(SymTable*, SymTable*) [96]
[173]    0.0    0.00    0.00     296         sObject::isFunctDef() const [173]
                0.00    0.00     162/369         sQuFunDef::object() const [169]
                0.00    0.00     130/379         sQuOpDef::object() const [165]
                0.00    0.00       4/58          sProcDef::object() const [219]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [95]
[174]    0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
                0.00    0.00   13314/21585       sDef::id() const [141]
                0.00    0.00    3403/3912        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144]
                0.00    0.00    3254/6504        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [142]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [174]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [105]
[175]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [175]
-----------------------------------------------
                0.00    0.00       3/266         ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.00    0.00     263/266         sRoutDef::typecheck(SymTable*, SymTable*) [96]
[176]    0.0    0.00    0.00     266         SymTab::getRef(std::string const&, ObjType*) const [176]
                0.00    0.00     230/372         SymTab::getentry(SymTable::entry*, std::string const&) const [167]
                0.00    0.00       3/378         sObject::isValueDef() const [166]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [105]
[177]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [177]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [171]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [235]
[178]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [178]
                0.00    0.00     263/263         sArgDef::~sArgDef() [179]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [178]
[179]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [179]
                0.00    0.00     263/312         sDef::~sDef() [172]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [112]
[180]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [180]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [96]
[181]    0.0    0.00    0.00     263         tType::isQuReg() const [181]
-----------------------------------------------
                0.00    0.00       8/257         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00      16/257         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00     233/257         sObject::def() const [185]
[182]    0.0    0.00    0.00     257         sObject::isRoutDef() const [182]
                0.00    0.00      94/379         sQuOpDef::object() const [165]
                0.00    0.00      78/78          sStmtList::object() const [208]
                0.00    0.00      74/369         sQuFunDef::object() const [169]
                0.00    0.00      34/34          sDefList::object() const [262]
                0.00    0.00      32/58          sProcDef::object() const [219]
                0.00    0.00      21/21          sIf::object() const [285]
                0.00    0.00      15/15          sFor::object() const [320]
                0.00    0.00       6/18          sCall::object() const [306]
                0.00    0.00       3/9           sMult::object() const [334]
-----------------------------------------------
                0.00    0.00       4/178         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       4/178         yyparse() [105]
                0.00    0.00      26/178         sStmt::sStmt(int) [270]
                0.00    0.00     144/178         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [259]
[183]    0.0    0.00    0.00     178         sObject::setFlag(ObjFlag, int) [183]
-----------------------------------------------
                0.00    0.00       3/177         sObject::isBennet() const [409]
                0.00    0.00       3/177         sStmt::isInv() const [402]
                0.00    0.00       5/177         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      34/177         sObject::isCondDef() const [261]
                0.00    0.00      57/177         sObject::isSetRec(ObjFlag) [319]
                0.00    0.00      75/177         sObject::isExtern() const [210]
[184]    0.0    0.00    0.00     177         sObject::isSet(ObjFlag) const [184]
-----------------------------------------------
                                 157             sObject::def() const [185]
                0.00    0.00       1/175         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/175         sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       6/175         sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       7/175         sObject::isGlobal() const [348]
                0.00    0.00      16/175         sObject::inQuFunDef() const [316]
                0.00    0.00      20/175         sObject::inQuDef() const [289]
                0.00    0.00      21/175         sObject::inFunctDef() const [287]
                0.00    0.00      29/175         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      36/175         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00      36/175         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [101]
[185]    0.0    0.00    0.00     175+157     sObject::def() const [185]
                0.00    0.00     798/897         sObject::parent() const [150]
                0.00    0.00     233/257         sObject::isRoutDef() const [182]
                                 157             sObject::def() const [185]
-----------------------------------------------
                0.00    0.00       2/143         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/143         sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       3/143         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00       3/143         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       7/143         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      36/143         sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00      36/143         sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00      53/143         SymTabComb::getDef(std::string const&) const [267]
[186]    0.0    0.00    0.00     143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00     139/372         SymTab::getentry(SymTable::entry*, std::string const&) const [167]
-----------------------------------------------
                0.00    0.00       1/129         sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       2/129         tType::isConv(tType const&) const [280]
                0.00    0.00       3/129         sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       4/129         sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       8/129         sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00      11/129         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      19/129         tValue::isQuExpr() const [297]
                0.00    0.00      23/129         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      26/129         sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      32/129         tType::isQuCond() const [263]
[187]    0.0    0.00    0.00     129         tType::isQuExpr() const [187]
-----------------------------------------------
                0.00    0.00      43/129         std::list<sObject*, std::allocator<sObject*> >::end() [250]
                0.00    0.00      86/129         std::list<sObject*, std::allocator<sObject*> >::begin() [204]
[188]    0.0    0.00    0.00     129         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [188]
-----------------------------------------------
                0.00    0.00       4/113         sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       4/113         sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       4/113         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00      18/113         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      18/113         sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      19/113         sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00      46/113         sVar::typecheck(SymTable*, SymTable*) [222]
[189]    0.0    0.00    0.00     113         sExpr::settype(tType const&) [189]
                0.00    0.00     113/862         tType::operator=(tType const&) [151]
-----------------------------------------------
                0.00    0.00       1/100         sExit::typecheck(SymTable*, SymTable*) [510]
                0.00    0.00       3/100         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       3/100         sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       4/100         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       4/100         sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       5/100         sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       6/100         sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       7/100         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                0.00    0.00       8/100         sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00      23/100         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      36/100         sBinOp::typecheck(SymTable*, SymTable*) [322]
[190]    0.0    0.00    0.00     100         sExpr::type() [190]
                0.00    0.00     100/545         tType::tType(tType const&) [159]
-----------------------------------------------
                0.00    0.00       2/100         QuHeap::QuHeap(int, int) [82]
                0.00    0.00      98/100         operator~(bitvec const&) [122]
[191]    0.0    0.00    0.00     100         bitvec::qnot() [191]
-----------------------------------------------
                0.00    0.00       3/99          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      16/99          sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      36/99          sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00      44/99          sDefList::typecheck(SymTable*, SymTable*) [112]
[192]    0.0    0.00    0.00      99         sList<sDef>::first(void*&) const [192]
-----------------------------------------------
                0.00    0.00       4/97          sSubscript::~sSubscript() <cycle 1> [371]
                0.00    0.00       4/97          sUnOp::~sUnOp() [378]
                0.00    0.00       4/97          sListFunct::~sListFunct() <cycle 1> [367]
                0.00    0.00      18/97          sBinOp::~sBinOp() <cycle 1> [301]
                0.00    0.00      21/97          sConst::~sConst() [284]
                0.00    0.00      46/97          sVar::~sVar() [225]
[193]    0.0    0.00    0.00      97         sExpr::~sExpr() [193]
                0.00    0.00      97/521         sObject::~sObject() [161]
-----------------------------------------------
                0.00    0.00       1/91          sObject::isInclude() const [244]
                0.00    0.00       2/91          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/91          sObject::isConstDef() const [354]
                0.00    0.00       3/91          SymTab::getVal(std::string const&, ObjType*) const [117]
                0.00    0.00      24/91          sObject::isDef() const [168]
                0.00    0.00      58/91          sObject::isValueDef() const [166]
[194]    0.0    0.00    0.00      91         sVarDef::object() const [194]
-----------------------------------------------
                0.00    0.00      45/90          std::list<sObject*, std::allocator<sObject*> >::begin() const [230]
                0.00    0.00      45/90          std::list<sObject*, std::allocator<sObject*> >::end() const [228]
[195]    0.0    0.00    0.00      90         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [195]
-----------------------------------------------
                0.00    0.00      10/89          SymTabComb::SymTabComb(SymTable*, SymTable*) [331]
                0.00    0.00      79/89          SymTab::SymTab(int) [206]
[196]    0.0    0.00    0.00      89         SymTable::SymTable() [196]
-----------------------------------------------
                0.00    0.00      10/89          SymTabComb::~SymTabComb() [333]
                0.00    0.00      79/89          SymTab::~SymTab() [207]
[197]    0.0    0.00    0.00      89         SymTable::~SymTable() [197]
-----------------------------------------------
                0.00    0.00      86/86          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [202]
[198]    0.0    0.00    0.00      86         __gnu_cxx::new_allocator<sObject*>::new_allocator() [198]
-----------------------------------------------
                0.00    0.00      86/86          std::allocator<sObject*>::~allocator() [203]
[199]    0.0    0.00    0.00      86         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [199]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
[200]    0.0    0.00    0.00      86         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [200]
                0.00    0.00      86/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [201]
                0.00    0.00      86/86          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [202]
-----------------------------------------------
                0.00    0.00      86/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [200]
[201]    0.0    0.00    0.00      86         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [201]
-----------------------------------------------
                0.00    0.00      86/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [200]
[202]    0.0    0.00    0.00      86         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [202]
                0.00    0.00      86/86          __gnu_cxx::new_allocator<sObject*>::new_allocator() [198]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
[203]    0.0    0.00    0.00      86         std::allocator<sObject*>::~allocator() [203]
                0.00    0.00      86/86          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [199]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::front() [251]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::pop_front() [254]
[204]    0.0    0.00    0.00      86         std::list<sObject*, std::allocator<sObject*> >::begin() [204]
                0.00    0.00      86/129         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [188]
-----------------------------------------------
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
[205]    0.0    0.00    0.00      86         sObject** std::__addressof<sObject*>(sObject*&) [205]
-----------------------------------------------
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       2/79          main [1]
                0.00    0.00       3/79          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      72/79          sRoutDef::typecheck(SymTable*, SymTable*) [96]
[206]    0.0    0.00    0.00      79         SymTab::SymTab(int) [206]
                0.00    0.00      79/89          SymTable::SymTable() [196]
-----------------------------------------------
                0.00    0.00       2/79          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       2/79          main [1]
                0.00    0.00       3/79          SymTab::~SymTab() [396]
                0.00    0.00      72/79          sRoutDef::typecheck(SymTable*, SymTable*) [96]
[207]    0.0    0.00    0.00      79         SymTab::~SymTab() [207]
                0.00    0.00      79/89          SymTable::~SymTable() [197]
                0.00    0.00      50/50          SymTab::deltree(SymTable::entry*) [220]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [182]
[208]    0.0    0.00    0.00      78         sStmtList::object() const [208]
-----------------------------------------------
                0.00    0.00       4/76          sSubscript::sSubscript(sVar*, sExprList*) [369]
                0.00    0.00       4/76          sUnOp::sUnOp(sExpr*) [377]
                0.00    0.00       4/76          sListFunct::sListFunct(ObjType, sExprList*) [365]
                0.00    0.00      18/76          sBinOp::sBinOp(sExpr*, sExpr*) [300]
                0.00    0.00      46/76          sVar::sVar(std::string*) [223]
[209]    0.0    0.00    0.00      76         sExpr::sExpr() [209]
                0.00    0.00      76/521         sObject::sObject(unsigned int) [160]
                0.00    0.00      76/1498        tType::tType(BaseType) [146]
                0.00    0.00      76/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       3/75          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [7]
                0.00    0.00      36/75          sRoutDef::~sRoutDef() [260]
                0.00    0.00      36/75          sRoutDef::typecheck(SymTable*, SymTable*) [96]
[210]    0.0    0.00    0.00      75         sObject::isExtern() const [210]
                0.00    0.00      75/177         sObject::isSet(ObjFlag) const [184]
-----------------------------------------------
                0.00    0.00       1/66          quBaseState::~quBaseState() [93]
                0.00    0.00      65/66          quSubState::~quSubState() [212]
[211]    0.0    0.00    0.00      66         quState::~quState() [211]
-----------------------------------------------
                0.00    0.00      65/65          quSubString::~quSubString() [215]
[212]    0.0    0.00    0.00      65         quSubState::~quSubState() [212]
                0.00    0.00      65/65          quBaseState::isbasestate() const [216]
                0.00    0.00      65/66          quState::~quState() [211]
-----------------------------------------------
                                  20             quState::newclone() <cycle 5> [125]
                0.00    0.01      45/66          ext_bit(sRoutDef const*, SymTable const*, int) [8]
[213]    0.0    0.00    0.00      65         quSubString::newsubstring(int, int) <cycle 5> [213]
                                  65             quBaseState::newsubstring(int, int) <cycle 5> [124]
-----------------------------------------------
                0.00    0.00      20/65          tValue::delpointer() [154]
                0.00    0.00      45/65          ext_bit(sRoutDef const*, SymTable const*, int) [8]
[214]    0.0    0.00    0.00      65         quSubString::~quSubString() [214]
                0.00    0.00      65/65          quSubString::~quSubString() [215]
-----------------------------------------------
                0.00    0.00      65/65          quSubString::~quSubString() [214]
[215]    0.0    0.00    0.00      65         quSubString::~quSubString() [215]
                0.00    0.00      65/65          quSubState::~quSubState() [212]
-----------------------------------------------
                0.00    0.00      65/65          quSubState::~quSubState() [212]
[216]    0.0    0.00    0.00      65         quBaseState::isbasestate() const [216]
-----------------------------------------------
                0.00    0.00       3/65          sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       3/65          sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00      21/65          sConst::sConst(tValue const&) [102]
                0.00    0.00      38/65          sConst::typecheck(SymTable*, SymTable*) [291]
[217]    0.0    0.00    0.00      65         tValue::type() const [217]
                0.00    0.00      65/545         tType::tType(tType const&) [159]
-----------------------------------------------
                0.00    0.00       2/60          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       6/60          sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00      52/60          sVar::typecheck(SymTable*, SymTable*) [222]
[218]    0.0    0.00    0.00      60         sVar::id() const [218]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [244]
                0.00    0.00       2/58          sObject::isValueDef() const [166]
                0.00    0.00       3/58          sObject::isProcDef() const [317]
                0.00    0.00       3/58          sObject::isQuOpDef() const [277]
                0.00    0.00       4/58          sObject::isFunctDef() const [173]
                0.00    0.00       6/58          sObject::isDef() const [168]
                0.00    0.00       7/58          sObject::isQuFunDef() const [265]
                0.00    0.00      32/58          sObject::isRoutDef() const [182]
[219]    0.0    0.00    0.00      58         sProcDef::object() const [219]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [220]
                0.00    0.00      50/50          SymTab::~SymTab() [207]
[220]    0.0    0.00    0.00      50+276     SymTab::deltree(SymTable::entry*) [220]
                0.00    0.00     282/677         tValue::~tValue() [157]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [293]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [314]
                0.00    0.00       3/5           sConstDef::~sConstDef() [358]
                0.00    0.00       1/1           sProcDef::~sProcDef() [519]
                0.00    0.00       1/7           sVarDef::~sVarDef() [346]
                                 276             SymTab::deltree(SymTable::entry*) [220]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [354]
                0.00    0.00       3/48          sObject::isInclude() const [244]
                0.00    0.00      16/48          sObject::isDef() const [168]
                0.00    0.00      26/48          sObject::isValueDef() const [166]
[221]    0.0    0.00    0.00      48         sConstDef::object() const [221]
-----------------------------------------------
                0.00    0.00       2/46          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       4/46          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       4/46          sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       4/46          sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       6/46          sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00      12/46          sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      14/46          sCall::typecheck(SymTable*, SymTable*) [309]
[222]    0.0    0.00    0.00      46         sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00      52/60          sVar::id() const [218]
                0.00    0.00      46/378         sObject::isValueDef() const [166]
                0.00    0.00      46/380         sDef::type() const [164]
                0.00    0.00      46/113         sExpr::settype(tType const&) [189]
                0.00    0.00      36/143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [267]
                0.00    0.00       6/6           sObject::isConstDef() const [354]
                0.00    0.00       3/7           sObject::isGlobal() const [348]
-----------------------------------------------
                0.00    0.00      46/46          yyparse() [105]
[223]    0.0    0.00    0.00      46         sVar::sVar(std::string*) [223]
                0.00    0.00      46/76          sExpr::sExpr() [209]
-----------------------------------------------
                0.00    0.00       2/46          sFor::~sFor() <cycle 2> [416]
                0.00    0.00       4/46          sSubscript::~sSubscript() <cycle 1> [371]
                0.00    0.00       4/46          sUnOp::~sUnOp() [378]
                0.00    0.00       4/46          sVarDef::~sVarDef() [347]
                0.00    0.00      12/46          sBinOp::~sBinOp() <cycle 1> [301]
                0.00    0.00      20/46          sList<sExpr>::~sList() <cycle 1> [273]
[224]    0.0    0.00    0.00      46         sVar::~sVar() [224]
                0.00    0.00      46/46          sVar::~sVar() [225]
-----------------------------------------------
                0.00    0.00      46/46          sVar::~sVar() [224]
[225]    0.0    0.00    0.00      46         sVar::~sVar() [225]
                0.00    0.00      46/97          sExpr::~sExpr() [193]
-----------------------------------------------
                0.00    0.00       6/45          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      39/45          sCall::typecheck(SymTable*, SymTable*) [309]
[226]    0.0    0.00    0.00      45         sRoutDef::args() [226]
-----------------------------------------------
                0.00    0.00      45/45          quBaseState::baseterms() const [70]
[227]    0.0    0.00    0.00      45         termlist::nterms() const [227]
-----------------------------------------------
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
[228]    0.0    0.00    0.00      45         std::list<sObject*, std::allocator<sObject*> >::end() const [228]
                0.00    0.00      45/90          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [195]
-----------------------------------------------
                0.00    0.00      45/45          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[229]    0.0    0.00    0.00      45         std::list<sObject*, std::allocator<sObject*> >::size() const [229]
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::begin() const [230]
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::end() const [228]
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
-----------------------------------------------
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
[230]    0.0    0.00    0.00      45         std::list<sObject*, std::allocator<sObject*> >::begin() const [230]
                0.00    0.00      45/90          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [195]
-----------------------------------------------
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
[231]    0.0    0.00    0.00      45         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
                0.00    0.00     835/835         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [152]
                0.00    0.00     790/790         std::_List_const_iterator<sObject*>::operator++() [153]
-----------------------------------------------
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
[232]    0.0    0.00    0.00      45         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [232]
-----------------------------------------------
                0.00    0.00      45/45          std::list<sObject*, std::allocator<sObject*> >::size() const [229]
[233]    0.0    0.00    0.00      45         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [233]
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [232]
                0.00    0.00      45/45          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [231]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [236]
[234]    0.0    0.00    0.00      44         sList<sDef>::sList() [234]
                0.00    0.00      44/521         sObject::sObject(unsigned int) [160]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [238]
[235]    0.0    0.00    0.00      44         sList<sDef>::~sList() [235]
                0.00    0.00     263/263         sArgDef::~sArgDef() [178]
                0.00    0.00      44/521         sObject::~sObject() [161]
                0.00    0.00       6/7           sVarDef::~sVarDef() [346]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [105]
[236]    0.0    0.00    0.00      44         sDefList::sDefList() [236]
                0.00    0.00      44/44          sList<sDef>::sList() [234]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [260]
[237]    0.0    0.00    0.00      44         sDefList::~sDefList() [237]
                0.00    0.00      44/44          sDefList::~sDefList() [238]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [237]
[238]    0.0    0.00    0.00      44         sDefList::~sDefList() [238]
                0.00    0.00      44/44          sList<sDef>::~sList() [235]
-----------------------------------------------
                0.00    0.00       1/44          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [119]
                0.00    0.00      43/44          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [241]
[239]    0.0    0.00    0.00      44         operator new(unsigned long, void*) [239]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
[240]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [240]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
[241]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [241]
                0.00    0.00      43/44          operator new(unsigned long, void*) [239]
-----------------------------------------------
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [248]
[242]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [242]
-----------------------------------------------
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [247]
[243]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [243]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [245]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[244]    0.0    0.00    0.00      43         sObject::isInclude() const [244]
                0.00    0.00      19/379         sQuOpDef::object() const [165]
                0.00    0.00      16/369         sQuFunDef::object() const [169]
                0.00    0.00       3/18          sCall::object() const [306]
                0.00    0.00       3/48          sConstDef::object() const [221]
                0.00    0.00       1/91          sVarDef::object() const [194]
                0.00    0.00       1/58          sProcDef::object() const [219]
-----------------------------------------------
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [243]
[245]    0.0    0.00    0.00      43         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [245]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::front() [251]
[246]    0.0    0.00    0.00      43         std::_List_iterator<sObject*>::operator*() const [246]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
[247]    0.0    0.00    0.00      43         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [247]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [243]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
[248]    0.0    0.00    0.00      43         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [248]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [242]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [253]
[249]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [247]
                0.00    0.00      43/86          sObject** std::__addressof<sObject*>(sObject*&) [205]
                0.00    0.00      43/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [200]
                0.00    0.00      43/86          std::allocator<sObject*>::~allocator() [203]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [241]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [255]
[250]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::end() [250]
                0.00    0.00      43/129         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [188]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[251]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::front() [251]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() [204]
                0.00    0.00      43/43          std::_List_iterator<sObject*>::operator*() const [246]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::pop_front() [254]
[252]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
                0.00    0.00      43/86          sObject** std::__addressof<sObject*>(sObject*&) [205]
                0.00    0.00      43/86          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [200]
                0.00    0.00      43/86          std::allocator<sObject*>::~allocator() [203]
                0.00    0.00      43/43          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [240]
                0.00    0.00      43/43          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [248]
-----------------------------------------------
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [255]
[253]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [253]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [249]
-----------------------------------------------
                0.00    0.00      43/43          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[254]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::pop_front() [254]
                0.00    0.00      43/86          std::list<sObject*, std::allocator<sObject*> >::begin() [204]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [252]
-----------------------------------------------
                0.00    0.00      43/43          yyparse() [105]
[255]    0.0    0.00    0.00      43         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [255]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::end() [250]
                0.00    0.00      43/43          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [253]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [322]
[256]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [256]
-----------------------------------------------
                0.00    0.00       3/40          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/40          sListFunct::sListFunct(ObjType, sExprList*) [365]
                0.00    0.00       4/40          sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       6/40          sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00      23/40          sCall::typecheck(SymTable*, SymTable*) [309]
[257]    0.0    0.00    0.00      40         sList<sExpr>::next(void*&) const [257]
-----------------------------------------------
                0.00    0.00       3/39          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/39          sSubscript::sSubscript(sVar*, sExprList*) [369]
                0.00    0.00       4/39          sListFunct::sListFunct(ObjType, sExprList*) [365]
                0.00    0.00       4/39          sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       8/39          sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00      16/39          sCall::typecheck(SymTable*, SymTable*) [309]
[258]    0.0    0.00    0.00      39         sList<sExpr>::first(void*&) const [258]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [518]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [313]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [292]
[259]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [259]
                0.00    0.00     144/178         sObject::setFlag(ObjFlag, int) [183]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [171]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [520]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [315]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [294]
[260]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [260]
                0.00    0.00      44/44          sDefList::~sDefList() [237]
                0.00    0.00      36/75          sObject::isExtern() const [210]
                0.00    0.00      36/312         sDef::~sDef() [172]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [304]
-----------------------------------------------
                0.00    0.00       3/34          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [5]
                0.00    0.00       3/34          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       4/34          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       8/34          sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00      16/34          sCall::typecheck(SymTable*, SymTable*) [309]
[261]    0.0    0.00    0.00      34         sObject::isCondDef() const [261]
                0.00    0.00      34/177         sObject::isSet(ObjFlag) const [184]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [182]
[262]    0.0    0.00    0.00      34         sDefList::object() const [262]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00      14/32          tType::isCond() const [321]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
[263]    0.0    0.00    0.00      32         tType::isQuCond() const [263]
                0.00    0.00      32/129         tType::isQuExpr() const [187]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [322]
[264]    0.0    0.00    0.00      30         tType::isNumber() const [264]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [96]
                0.00    0.00       9/30          sObject::isQuDef() const [290]
                0.00    0.00      13/30          sObject::inQuFunDef() const [316]
[265]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [265]
                0.00    0.00      13/369         sQuFunDef::object() const [169]
                0.00    0.00      10/379         sQuOpDef::object() const [165]
                0.00    0.00       7/58          sProcDef::object() const [219]
-----------------------------------------------
                0.00    0.00      29/29          yyparse() [105]
[266]    0.0    0.00    0.00      29         sList<sExpr>::append(sExpr*) [266]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [222]
[267]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [267]
                0.00    0.00      53/143         SymTab::getDef(std::string const&) const [186]
-----------------------------------------------
                0.00    0.00      27/27          sCall::typecheck(SymTable*, SymTable*) [309]
[268]    0.0    0.00    0.00      27         tType::isQuConst() const [268]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [104]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [330]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [308]
[269]    0.0    0.00    0.00      26         yy_load_buffer_state() [269]
-----------------------------------------------
                0.00    0.00       1/26          sExit::sExit(sExpr*) [511]
                0.00    0.00       2/26          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [414]
                0.00    0.00       7/26          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [343]
                0.00    0.00      16/26          sCall::sCall(std::string*, sExprList*, int) [310]
[270]    0.0    0.00    0.00      26         sStmt::sStmt(int) [270]
                0.00    0.00      26/521         sObject::sObject(unsigned int) [160]
                0.00    0.00      26/178         sObject::setFlag(ObjFlag, int) [183]
-----------------------------------------------
                0.00    0.00       1/26          sExit::~sExit() [513]
                0.00    0.00       2/26          sFor::~sFor() <cycle 2> [416]
                0.00    0.00       7/26          sIf::~sIf() <cycle 2> [345]
                0.00    0.00      16/26          sCall::~sCall() [312]
[271]    0.0    0.00    0.00      26         sStmt::~sStmt() [271]
                0.00    0.00      26/521         sObject::~sObject() [161]
-----------------------------------------------
                0.00    0.00      24/24          sExprList::sExprList() [274]
[272]    0.0    0.00    0.00      24         sList<sExpr>::sList() [272]
                0.00    0.00      24/521         sObject::sObject(unsigned int) [160]
-----------------------------------------------
                                  24             sExprList::~sExprList() <cycle 1> [276]
[273]    0.0    0.00    0.00      24         sList<sExpr>::~sList() <cycle 1> [273]
                0.00    0.00      24/521         sObject::~sObject() [161]
                0.00    0.00      20/46          sVar::~sVar() [224]
                                   4             sSubscript::~sSubscript() <cycle 1> [370]
                                   3             sMult::~sMult() <cycle 1> [351]
                                   2             sConcat::~sConcat() <cycle 1> [425]
-----------------------------------------------
                0.00    0.00      24/24          yyparse() [105]
[274]    0.0    0.00    0.00      24         sExprList::sExprList() [274]
                0.00    0.00      24/24          sList<sExpr>::sList() [272]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [371]
                                   4             sListFunct::~sListFunct() <cycle 1> [367]
                0.00    0.00      16/25          sCall::~sCall() [312]
[275]    0.0    0.00    0.00      24         sExprList::~sExprList() <cycle 1> [275]
                                  24             sExprList::~sExprList() <cycle 1> [276]
-----------------------------------------------
                                  24             sExprList::~sExprList() <cycle 1> [275]
[276]    0.0    0.00    0.00      24         sExprList::~sExprList() <cycle 1> [276]
                                  24             sList<sExpr>::~sList() <cycle 1> [273]
-----------------------------------------------
                0.00    0.00       4/24          sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      20/24          sObject::isQuDef() const [290]
[277]    0.0    0.00    0.00      24         sObject::isQuOpDef() const [277]
                0.00    0.00      11/379         sQuOpDef::object() const [165]
                0.00    0.00      10/369         sQuFunDef::object() const [169]
                0.00    0.00       3/58          sProcDef::object() const [219]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [105]
[278]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [278]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
[279]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [279]
-----------------------------------------------
                0.00    0.00      23/23          sCall::typecheck(SymTable*, SymTable*) [309]
[280]    0.0    0.00    0.00      23         tType::isConv(tType const&) const [280]
                0.00    0.00       2/129         tType::isQuExpr() const [187]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                0.00    0.00      14/23          tType::isCond() const [321]
[281]    0.0    0.00    0.00      23         tType::isBoolean() const [281]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [102]
[282]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [282]
                0.00    0.00      21/521         sObject::sObject(unsigned int) [160]
                0.00    0.00      21/1498        tType::tType(BaseType) [146]
                0.00    0.00      21/862         tType::operator=(tType const&) [151]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [513]
                0.00    0.00       1/21          sVarDef::~sVarDef() [347]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [416]
                0.00    0.00       5/21          sConstDef::~sConstDef() [359]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [301]
[283]    0.0    0.00    0.00      21         sConst::~sConst() [283]
                0.00    0.00      21/21          sConst::~sConst() [284]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [283]
[284]    0.0    0.00    0.00      21         sConst::~sConst() [284]
                0.00    0.00      21/97          sExpr::~sExpr() [193]
                0.00    0.00      21/677         tValue::~tValue() [157]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [182]
[285]    0.0    0.00    0.00      21         sIf::object() const [285]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       2/21          tValue::isInt() const [433]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       8/21          tType::isOrdered() const [340]
[286]    0.0    0.00    0.00      21         tType::isInt() const [286]
-----------------------------------------------
                0.00    0.00       5/21          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      16/21          sCall::typecheck(SymTable*, SymTable*) [309]
[287]    0.0    0.00    0.00      21         sObject::inFunctDef() const [287]
                0.00    0.00      21/175         sObject::def() const [185]
                0.00    0.00      17/296         sObject::isFunctDef() const [173]
-----------------------------------------------
                0.00    0.00      20/20          tValue::delpointer() [154]
[288]    0.0    0.00    0.00      20         quSubState::isbasestate() const [288]
-----------------------------------------------
                0.00    0.00       4/20          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00      16/20          sCall::typecheck(SymTable*, SymTable*) [309]
[289]    0.0    0.00    0.00      20         sObject::inQuDef() const [289]
                0.00    0.00      20/175         sObject::def() const [185]
                0.00    0.00      17/20          sObject::isQuDef() const [290]
-----------------------------------------------
                0.00    0.00       3/20          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/20          sObject::inQuDef() const [289]
[290]    0.0    0.00    0.00      20         sObject::isQuDef() const [290]
                0.00    0.00      20/24          sObject::isQuOpDef() const [277]
                0.00    0.00       9/30          sObject::isQuFunDef() const [265]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [111]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [510]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [322]
[291]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00      38/65          tValue::type() const [217]
                0.00    0.00      19/19          tType::isDefined() const [296]
                0.00    0.00      19/113         sExpr::settype(tType const&) [189]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [105]
[292]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [292]
                0.00    0.00      19/1498        tType::tType(BaseType) [146]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [259]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [220]
[293]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [293]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [294]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [293]
[294]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [294]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [260]
-----------------------------------------------
                0.00    0.00       3/19          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      16/19          sCall::typecheck(SymTable*, SymTable*) [309]
[295]    0.0    0.00    0.00      19         sCall::id() const [295]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [291]
[296]    0.0    0.00    0.00      19         tType::isDefined() const [296]
-----------------------------------------------
                0.00    0.00       3/19          ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.00    0.00       3/19          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      13/19          tValue::qustate() const [323]
[297]    0.0    0.00    0.00      19         tValue::isQuExpr() const [297]
                0.00    0.00      19/129         tType::isQuExpr() const [187]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [303]
[298]    0.0    0.00    0.00      18         sList<sStmt>::sList() [298]
                0.00    0.00      18/521         sObject::sObject(unsigned int) [160]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [305]
[299]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [299]
                0.00    0.00      18/521         sObject::~sObject() [161]
                0.00    0.00      13/16          sCall::~sCall() [311]
                0.00    0.00       1/1           sExit::~sExit() [512]
                                   7             sIf::~sIf() <cycle 2> [344]
                                   2             sFor::~sFor() <cycle 2> [415]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [506]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [417]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [424]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [397]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [373]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [350]
[300]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [300]
                0.00    0.00      18/76          sExpr::sExpr() [209]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [426]
                                   4             sLess::~sLess() <cycle 1> [375]
                                   6             sMult::~sMult() <cycle 1> [352]
                0.00    0.00       1/25          sOr::~sOr() [508]
                0.00    0.00       2/25          sSub::~sSub() [419]
                0.00    0.00       3/25          sEqual::~sEqual() [399]
[301]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [301]
                0.00    0.00      18/97          sExpr::~sExpr() [193]
                0.00    0.00      12/21          sConst::~sConst() [283]
                0.00    0.00      12/46          sVar::~sVar() [224]
                0.00    0.00       4/4           sLength::~sLength() [380]
                                   3             sMult::~sMult() <cycle 1> [351]
                                   3             sListFunct::~sListFunct() <cycle 1> [366]
                                   2             sLess::~sLess() <cycle 1> [374]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [96]
[302]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
                0.00    0.00      23/457         sObject::setParent(sObject*) [163]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [279]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [307]
                0.00    0.00      13/16          sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [510]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [105]
[303]    0.0    0.00    0.00      18         sStmtList::sStmtList() [303]
                0.00    0.00      18/18          sList<sStmt>::sList() [298]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [416]
                                   8             sIf::~sIf() <cycle 2> [345]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [260]
[304]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [304]
                                  18             sStmtList::~sStmtList() <cycle 2> [305]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [304]
[305]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [305]
                                  18             sList<sStmt>::~sList() <cycle 2> [299]
-----------------------------------------------
                0.00    0.00       3/18          sObject::isDef() const [168]
                0.00    0.00       3/18          sObject::isInclude() const [244]
                0.00    0.00       6/18          sObject::isRoutDef() const [182]
                0.00    0.00       6/18          sObject::isStmt() const [407]
[306]    0.0    0.00    0.00      18         sCall::object() const [306]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
[307]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [307]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [413]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [362]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [327]
[308]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [308]
                0.00    0.00      15/26          yy_load_buffer_state() [269]
-----------------------------------------------
                0.00    0.00       3/16          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/16          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
[309]    0.0    0.00    0.00      16         sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00      46/862         tType::operator=(tType const&) [151]
                0.00    0.00      41/380         sDef::type() const [164]
                0.00    0.00      39/45          sRoutDef::args() [226]
                0.00    0.00      32/1498        tType::tType(BaseType) [146]
                0.00    0.00      27/27          tType::isQuConst() const [268]
                0.00    0.00      23/457         sObject::setParent(sObject*) [163]
                0.00    0.00      23/100         sExpr::type() [190]
                0.00    0.00      23/23          tType::isConv(tType const&) const [280]
                0.00    0.00      23/129         tType::isQuExpr() const [187]
                0.00    0.00      23/40          sList<sExpr>::next(void*&) const [257]
                0.00    0.00      23/558         sList<sDef>::next(void*&) const [158]
                0.00    0.00      18/113         sExpr::settype(tType const&) [189]
                0.00    0.00      16/19          sCall::id() const [295]
                0.00    0.00      16/257         sObject::isRoutDef() const [182]
                0.00    0.00      16/296         sObject::isFunctDef() const [173]
                0.00    0.00      16/21          sObject::inFunctDef() const [287]
                0.00    0.00      16/20          sObject::inQuDef() const [289]
                0.00    0.00      16/34          sObject::isCondDef() const [261]
                0.00    0.00      16/16          sObject::inQuFunDef() const [316]
                0.00    0.00      16/39          sList<sExpr>::first(void*&) const [258]
                0.00    0.00      16/99          sList<sDef>::first(void*&) const [192]
                0.00    0.00      15/15          sObject::isSetRec(ObjFlag) [319]
                0.00    0.00      14/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [267]
                0.00    0.00      10/16          sObject::isProcDef() const [317]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00       4/24          sObject::isQuOpDef() const [277]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       3/143         SymTab::getDef(std::string const&) const [186]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [105]
[310]    0.0    0.00    0.00      16         sCall::sCall(std::string*, sExprList*, int) [310]
                0.00    0.00      16/26          sStmt::sStmt(int) [270]
-----------------------------------------------
                0.00    0.00       3/16          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/16          sList<sStmt>::~sList() <cycle 2> [299]
[311]    0.0    0.00    0.00      16         sCall::~sCall() [311]
                0.00    0.00      16/16          sCall::~sCall() [312]
-----------------------------------------------
                0.00    0.00      16/16          sCall::~sCall() [311]
[312]    0.0    0.00    0.00      16         sCall::~sCall() [312]
                0.00    0.00      16/25          sExprList::~sExprList() <cycle 1> [275]
                0.00    0.00      16/26          sStmt::~sStmt() [271]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [105]
[313]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [313]
                0.00    0.00      16/1498        tType::tType(BaseType) [146]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [259]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [220]
[314]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [314]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [315]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [314]
[315]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [315]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [260]
-----------------------------------------------
                0.00    0.00      16/16          sCall::typecheck(SymTable*, SymTable*) [309]
[316]    0.0    0.00    0.00      16         sObject::inQuFunDef() const [316]
                0.00    0.00      16/175         sObject::def() const [185]
                0.00    0.00      13/30          sObject::isQuFunDef() const [265]
-----------------------------------------------
                0.00    0.00       3/16          sObject::isGlobal() const [348]
                0.00    0.00       3/16          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      10/16          sCall::typecheck(SymTable*, SymTable*) [309]
[317]    0.0    0.00    0.00      16         sObject::isProcDef() const [317]
                0.00    0.00       8/379         sQuOpDef::object() const [165]
                0.00    0.00       5/369         sQuFunDef::object() const [169]
                0.00    0.00       3/58          sProcDef::object() const [219]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [104]
[318]    0.0    0.00    0.00      15         tValue::tValue(long) [318]
                0.00    0.00      15/1498        tType::tType(BaseType) [146]
                0.00    0.00      15/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [319]
                0.00    0.00      15/15          sCall::typecheck(SymTable*, SymTable*) [309]
[319]    0.0    0.00    0.00      15+42      sObject::isSetRec(ObjFlag) [319]
                0.00    0.00      99/897         sObject::parent() const [150]
                0.00    0.00      57/177         sObject::isSet(ObjFlag) const [184]
                                  42             sObject::isSetRec(ObjFlag) [319]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [182]
[320]    0.0    0.00    0.00      15         sFor::object() const [320]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [322]
[321]    0.0    0.00    0.00      14         tType::isCond() const [321]
                0.00    0.00      14/32          tType::isQuCond() const [263]
                0.00    0.00      14/23          tType::isBoolean() const [281]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [309]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
[322]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00      52/1498        tType::tType(BaseType) [146]
                0.00    0.00      36/457         sObject::setParent(sObject*) [163]
                0.00    0.00      36/100         sExpr::type() [190]
                0.00    0.00      36/862         tType::operator=(tType const&) [151]
                0.00    0.00      36/1084        tType::ord() const [148]
                0.00    0.00      30/30          tType::isNumber() const [264]
                0.00    0.00      26/129         tType::isQuExpr() const [187]
                0.00    0.00      25/41          tType::operator==(BaseType) const [256]
                0.00    0.00      18/113         sExpr::settype(tType const&) [189]
                0.00    0.00      14/14          tType::isCond() const [321]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00      12/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00       8/8           tType::isOrdered() const [340]
                0.00    0.00       6/9           sMult::object() const [334]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       4/4           sLess::object() const [385]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       3/3           sEqual::object() const [405]
                0.00    0.00       2/2           sSub::object() const [432]
                0.00    0.00       2/2           sConcat::object() const [435]
                0.00    0.00       2/23          tType::isBoolean() const [281]
                0.00    0.00       2/11          tType::operator==(tType const&) const [328]
                0.00    0.00       1/1           sOr::object() const [533]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [322]
-----------------------------------------------
                0.00    0.00       1/13          sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/13          ext_bit(sRoutDef const*, SymTable const*, int) [8]
                0.00    0.00       9/13          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[323]    0.0    0.00    0.00      13         tValue::qustate() const [323]
                0.00    0.00      13/19          tValue::isQuExpr() const [297]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [104]
[324]    0.0    0.00    0.00      12         yy_get_next_buffer() [324]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [330]
-----------------------------------------------
                0.00    0.00      12/12          std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [326]
[325]    0.0    0.00    0.00      12         std::complex<double>::operator*=(double) [325]
-----------------------------------------------
                0.00    0.00      12/12          opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
[326]    0.0    0.00    0.00      12         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [326]
                0.00    0.00      12/12          std::complex<double>::operator*=(double) [325]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [478]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [330]
[327]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [327]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [308]
-----------------------------------------------
                0.00    0.00       2/11          sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00       3/11          tValue::conv(tType const&) const [118]
                0.00    0.00       3/11          sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
                0.00    0.00       3/11          sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
[328]    0.0    0.00    0.00      11         tType::operator==(tType const&) const [328]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [503]
                0.00    0.00      10/11          openqclfile(std::string) [363]
[329]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [413]
                0.00    0.00       4/10          yy_get_next_buffer() [324]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [362]
[330]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [330]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [327]
                0.00    0.00      10/26          yy_load_buffer_state() [269]
                0.00    0.00       1/1           yyensure_buffer_stack() [505]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [478]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [96]
[331]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [331]
                0.00    0.00      10/89          SymTable::SymTable() [196]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [96]
[332]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [332]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [333]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [332]
[333]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [333]
                0.00    0.00      10/89          SymTable::~SymTable() [197]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [182]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [322]
[334]    0.0    0.00    0.00       9         sMult::object() const [334]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [104]
[335]    0.0    0.00    0.00       8         yy_get_previous_state() [335]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [481]
                0.00    0.00       7/8           yyparse() [105]
[336]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [336]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [171]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [364]
[337]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00       8/39          sList<sExpr>::first(void*&) const [258]
                0.00    0.00       6/457         sObject::setParent(sObject*) [163]
                0.00    0.00       6/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00       6/40          sList<sExpr>::next(void*&) const [257]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [384]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [364]
[338]    0.0    0.00    0.00       8         sList<sExpr>::n() const [338]
-----------------------------------------------
                0.00    0.00       8/8           tValue::isError() const [341]
[339]    0.0    0.00    0.00       8         tType::isError() const [339]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [322]
[340]    0.0    0.00    0.00       8         tType::isOrdered() const [340]
                0.00    0.00       8/21          tType::isInt() const [286]
-----------------------------------------------
                0.00    0.00       2/8           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/8           sConstDef::define(SymTable*, SymTable*, QuHeap*) [110]
                0.00    0.00       3/8           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[341]    0.0    0.00    0.00       8         tValue::isError() const [341]
                0.00    0.00       8/8           tType::isError() const [339]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
[342]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                0.00    0.00      15/457         sObject::setParent(sObject*) [163]
                0.00    0.00      14/32          tType::isQuCond() const [263]
                0.00    0.00       7/23          tType::isBoolean() const [281]
                0.00    0.00       7/100         sExpr::type() [190]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [322]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [364]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [105]
[343]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [343]
                0.00    0.00       7/26          sStmt::sStmt(int) [270]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [299]
[344]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [344]
                                   7             sIf::~sIf() <cycle 2> [345]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [344]
[345]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [345]
                0.00    0.00       7/26          sStmt::~sStmt() [271]
                0.00    0.00       3/3           sEqual::~sEqual() [398]
                0.00    0.00       2/25          sLess::~sLess() <cycle 1> [374]
                0.00    0.00       1/25          sListFunct::~sListFunct() <cycle 1> [366]
                0.00    0.00       1/1           sOr::~sOr() [507]
                                   8             sStmtList::~sStmtList() <cycle 2> [304]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [220]
                0.00    0.00       6/7           sList<sDef>::~sList() [235]
[346]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [346]
                0.00    0.00       7/7           sVarDef::~sVarDef() [347]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [346]
[347]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [347]
                0.00    0.00       8/312         sDef::~sDef() [172]
                0.00    0.00       4/46          sVar::~sVar() [224]
                0.00    0.00       1/21          sConst::~sConst() [283]
-----------------------------------------------
                0.00    0.00       1/7           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
                0.00    0.00       3/7           sObject::isLocal() const [408]
                0.00    0.00       3/7           sVar::typecheck(SymTable*, SymTable*) [222]
[348]    0.0    0.00    0.00       7         sObject::isGlobal() const [348]
                0.00    0.00       7/175         sObject::def() const [185]
                0.00    0.00       3/16          sObject::isProcDef() const [317]
-----------------------------------------------
                0.00    0.00       6/6           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[349]    0.0    0.00    0.00       6         zero(bitvec const&) [349]
                0.00    0.00       6/6           bitvec::testzero() const [353]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [105]
[350]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [350]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [300]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [301]
                                   3             sList<sExpr>::~sList() <cycle 1> [273]
[351]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [351]
                                   6             sMult::~sMult() <cycle 1> [352]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [351]
[352]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [352]
                                   6             sBinOp::~sBinOp() <cycle 1> [301]
-----------------------------------------------
                0.00    0.00       6/6           zero(bitvec const&) [349]
[353]    0.0    0.00    0.00       6         bitvec::testzero() const [353]
-----------------------------------------------
                0.00    0.00       6/6           sVar::typecheck(SymTable*, SymTable*) [222]
[354]    0.0    0.00    0.00       6         sObject::isConstDef() const [354]
                0.00    0.00       3/91          sVarDef::object() const [194]
                0.00    0.00       3/48          sConstDef::object() const [221]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [363]
[355]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [355]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [401]
[356]    0.0    0.00    0.00       5         sDef::settype(tType const&) [356]
                0.00    0.00       5/862         tType::operator=(tType const&) [151]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/5           yyparse() [105]
[357]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [357]
                0.00    0.00       5/1498        tType::tType(BaseType) [146]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [171]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [220]
[358]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [358]
                0.00    0.00       5/5           sConstDef::~sConstDef() [359]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [358]
[359]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [359]
                0.00    0.00       5/21          sConst::~sConst() [283]
                0.00    0.00       5/312         sDef::~sDef() [172]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [361]
[360]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [360]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [363]
[361]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [361]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [360]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [108]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[362]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [362]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [308]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [330]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[363]    0.0    0.00    0.00       4         openqclfile(std::string) [363]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [355]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [361]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [342]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [322]
[364]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [364]
                0.00    0.00       8/1498        tType::tType(BaseType) [146]
                0.00    0.00       4/361         tValue::tValue() [170]
                0.00    0.00       4/457         sObject::setParent(sObject*) [163]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00       4/8           sList<sExpr>::n() const [338]
                0.00    0.00       4/4           sListFunct::object() const [383]
                0.00    0.00       4/113         sExpr::settype(tType const&) [189]
                0.00    0.00       4/677         tValue::~tValue() [157]
                0.00    0.00       3/100         sExpr::type() [190]
                0.00    0.00       3/3           sObject::isLocal() const [408]
                0.00    0.00       2/21          tType::isInt() const [286]
                0.00    0.00       1/862         tType::operator=(tType const&) [151]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[365]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [365]
                0.00    0.00       4/76          sExpr::sExpr() [209]
                0.00    0.00       4/39          sList<sExpr>::first(void*&) const [258]
                0.00    0.00       4/40          sList<sExpr>::next(void*&) const [257]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [301]
                0.00    0.00       1/25          sIf::~sIf() <cycle 2> [345]
[366]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [366]
                                   4             sListFunct::~sListFunct() <cycle 1> [367]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [366]
[367]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [367]
                0.00    0.00       4/97          sExpr::~sExpr() [193]
                                   4             sExprList::~sExprList() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [309]
[368]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [368]
                0.00    0.00       8/457         sObject::setParent(sObject*) [163]
                0.00    0.00       8/100         sExpr::type() [190]
                0.00    0.00       8/129         tType::isQuExpr() const [187]
                0.00    0.00       8/1084        tType::ord() const [148]
                0.00    0.00       4/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [337]
                0.00    0.00       4/4           sSubscript::nargs() const [384]
                0.00    0.00       4/39          sList<sExpr>::first(void*&) const [258]
                0.00    0.00       4/21          tType::isInt() const [286]
                0.00    0.00       4/40          sList<sExpr>::next(void*&) const [257]
                0.00    0.00       4/32          tType::isQuCond() const [263]
                0.00    0.00       4/4           sExpr::basetype() [372]
                0.00    0.00       4/1498        tType::tType(BaseType) [146]
                0.00    0.00       4/113         sExpr::settype(tType const&) [189]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[369]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [369]
                0.00    0.00       4/76          sExpr::sExpr() [209]
                0.00    0.00       4/39          sList<sExpr>::first(void*&) const [258]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [273]
[370]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [370]
                                   4             sSubscript::~sSubscript() <cycle 1> [371]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [370]
[371]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [371]
                0.00    0.00       4/46          sVar::~sVar() [224]
                0.00    0.00       4/97          sExpr::~sExpr() [193]
                                   4             sExprList::~sExprList() <cycle 1> [275]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [368]
[372]    0.0    0.00    0.00       4         sExpr::basetype() [372]
                0.00    0.00       4/1045        tType::basetype() const [149]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[373]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [373]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [300]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [301]
                0.00    0.00       2/25          sIf::~sIf() <cycle 2> [345]
[374]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [374]
                                   4             sLess::~sLess() <cycle 1> [375]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [374]
[375]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [375]
                                   4             sBinOp::~sBinOp() <cycle 1> [301]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [322]
[376]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [376]
                0.00    0.00       4/457         sObject::setParent(sObject*) [163]
                0.00    0.00       4/46          sVar::typecheck(SymTable*, SymTable*) [222]
                0.00    0.00       4/100         sExpr::type() [190]
                0.00    0.00       4/4           sLength::object() const [386]
                0.00    0.00       4/129         tType::isQuExpr() const [187]
                0.00    0.00       4/1498        tType::tType(BaseType) [146]
                0.00    0.00       4/113         sExpr::settype(tType const&) [189]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [379]
[377]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [377]
                0.00    0.00       4/76          sExpr::sExpr() [209]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [381]
[378]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [378]
                0.00    0.00       4/46          sVar::~sVar() [224]
                0.00    0.00       4/97          sExpr::~sExpr() [193]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [105]
[379]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [379]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [377]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [301]
[380]    0.0    0.00    0.00       4         sLength::~sLength() [380]
                0.00    0.00       4/4           sLength::~sLength() [381]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [380]
[381]    0.0    0.00    0.00       4         sLength::~sLength() [381]
                0.00    0.00       4/4           sUnOp::~sUnOp() [378]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [440]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [439]
[382]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [382]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [364]
[383]    0.0    0.00    0.00       4         sListFunct::object() const [383]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [368]
[384]    0.0    0.00    0.00       4         sSubscript::nargs() const [384]
                0.00    0.00       4/8           sList<sExpr>::n() const [338]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [322]
[385]    0.0    0.00    0.00       4         sLess::object() const [385]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [376]
[386]    0.0    0.00    0.00       4         sLength::object() const [386]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [532]
[387]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [387]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [431]
[388]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [388]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [535]
[389]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [389]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [571]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[390]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [390]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [505]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [478]
[391]    0.0    0.00    0.00       3         yyalloc(unsigned long) [391]
-----------------------------------------------
                0.00    0.00       3/3           opElementary::opElementary(int) [394]
[392]    0.0    0.00    0.00       3         opOperator::opOperator(int) [392]
-----------------------------------------------
                0.00    0.00       3/3           opElementary::~opElementary() [395]
[393]    0.0    0.00    0.00       3         opOperator::~opOperator() [393]
-----------------------------------------------
                0.00    0.00       3/3           opMatrix::opMatrix(int) [400]
[394]    0.0    0.00    0.00       3         opElementary::opElementary(int) [394]
                0.00    0.00       3/3           opOperator::opOperator(int) [392]
-----------------------------------------------
                0.00    0.00       3/3           opMatrix::~opMatrix() [129]
[395]    0.0    0.00    0.00       3         opElementary::~opElementary() [395]
                0.00    0.00       3/3           opOperator::~opOperator() [393]
-----------------------------------------------
                0.00    0.00       3/3           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [6]
[396]    0.0    0.00    0.00       3         SymTab::~SymTab() [396]
                0.00    0.00       3/79          SymTab::~SymTab() [207]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [105]
[397]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [397]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [300]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [345]
[398]    0.0    0.00    0.00       3         sEqual::~sEqual() [398]
                0.00    0.00       3/3           sEqual::~sEqual() [399]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [398]
[399]    0.0    0.00    0.00       3         sEqual::~sEqual() [399]
                0.00    0.00       3/25          sBinOp::~sBinOp() <cycle 1> [301]
-----------------------------------------------
                0.00    0.00       3/3           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [123]
[400]    0.0    0.00    0.00       3         opMatrix::opMatrix(int) [400]
                0.00    0.00       3/3           opElementary::opElementary(int) [394]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[401]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [401]
                0.00    0.00       6/175         sObject::def() const [185]
                0.00    0.00       6/100         sExpr::type() [190]
                0.00    0.00       3/457         sObject::setParent(sObject*) [163]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00       3/21585       sDef::id() const [141]
                0.00    0.00       3/143         SymTab::getDef(std::string const&) const [186]
                0.00    0.00       3/129         tType::isQuExpr() const [187]
                0.00    0.00       3/5           sDef::settype(tType const&) [356]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[402]    0.0    0.00    0.00       3         sStmt::isInv() const [402]
                0.00    0.00       3/177         sObject::isSet(ObjFlag) const [184]
-----------------------------------------------
                0.00    0.00       3/3           tValue::isExpr() const [406]
[403]    0.0    0.00    0.00       3         tType::isExpr() const [403]
-----------------------------------------------
                0.00    0.00       3/3           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[404]    0.0    0.00    0.00       3         QuHeap::nBits() const [404]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [322]
[405]    0.0    0.00    0.00       3         sEqual::object() const [405]
-----------------------------------------------
                0.00    0.00       3/3           sVar::eval(SymTable*, SymTable*, QuHeap*) [109]
[406]    0.0    0.00    0.00       3         tValue::isExpr() const [406]
                0.00    0.00       3/3           tType::isExpr() const [403]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[407]    0.0    0.00    0.00       3         sObject::isStmt() const [407]
                0.00    0.00       6/18          sCall::object() const [306]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [364]
[408]    0.0    0.00    0.00       3         sObject::isLocal() const [408]
                0.00    0.00       3/7           sObject::isGlobal() const [348]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [96]
[409]    0.0    0.00    0.00       3         sObject::isBennet() const [409]
                0.00    0.00       3/177         sObject::isSet(ObjFlag) const [184]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [523]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [442]
[410]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [410]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [503]
[411]    0.0    0.00    0.00       2         irqOn() [411]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [87]
[412]    0.0    0.00    0.00       2         duallog(int) [412]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [108]
[413]    0.0    0.00    0.00       2         yyCleanUp() [413]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [330]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [308]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[414]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [414]
                0.00    0.00       2/26          sStmt::sStmt(int) [270]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [299]
[415]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [415]
                                   2             sFor::~sFor() <cycle 2> [416]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [415]
[416]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [416]
                0.00    0.00       2/46          sVar::~sVar() [224]
                0.00    0.00       2/21          sConst::~sConst() [283]
                0.00    0.00       2/2           sSub::~sSub() [418]
                0.00    0.00       2/26          sStmt::~sStmt() [271]
                                   2             sStmtList::~sStmtList() <cycle 2> [304]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[417]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [417]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [300]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [416]
[418]    0.0    0.00    0.00       2         sSub::~sSub() [418]
                0.00    0.00       2/2           sSub::~sSub() [419]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [418]
[419]    0.0    0.00    0.00       2         sSub::~sSub() [419]
                0.00    0.00       2/25          sBinOp::~sBinOp() <cycle 1> [301]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[420]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [420]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [104]
[421]    0.0    0.00    0.00       2         tValue::tValue(double) [421]
                0.00    0.00       2/1498        tType::tType(BaseType) [146]
                0.00    0.00       2/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [115]
[422]    0.0    0.00    0.00       2         tValue::tValue(int) [422]
                0.00    0.00       2/1498        tType::tType(BaseType) [146]
                0.00    0.00       2/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[423]    0.0    0.00    0.00       2         objlist::objlist() [423]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [450]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [105]
[424]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [424]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [300]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [273]
[425]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [425]
                                   2             sConcat::~sConcat() <cycle 1> [426]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [425]
[426]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [426]
                                   2             sBinOp::~sBinOp() <cycle 1> [301]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [443]
[427]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [427]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [567]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [568]
[428]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [428]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [536]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [537]
[429]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [429]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [539]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [540]
[430]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [430]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [441]
[431]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [431]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [388]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [322]
[432]    0.0    0.00    0.00       2         sSub::object() const [432]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [434]
[433]    0.0    0.00    0.00       2         tValue::isInt() const [433]
                0.00    0.00       2/21          tType::isInt() const [286]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
[434]    0.0    0.00    0.00       2         tValue::toInt() const [434]
                0.00    0.00       2/2           tValue::isInt() const [433]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [322]
[435]    0.0    0.00    0.00       2         sConcat::object() const [435]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [530]
[436]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [436]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [531]
[437]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [437]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [442]
[438]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [438]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [441]
[439]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [439]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [382]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [441]
[440]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [440]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [382]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [89]
[441]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [441]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [439]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [440]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [431]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [535]
[442]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [442]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [410]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [438]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [444]
[443]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [443]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [427]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [446]
[444]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [444]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [443]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [446]
[445]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [445]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [450]
[446]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [446]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [445]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [444]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [454]
[447]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [447]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [554]
[448]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [448]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [521]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [451]
[449]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [449]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [423]
[450]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [450]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [446]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [452]
[451]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [451]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [449]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [453]
[452]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [452]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [451]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[453]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [453]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [452]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [455]
[454]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [454]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [447]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [571]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[455]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [455]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [454]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[456]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [456]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[457]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [457]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[458]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [458]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[459]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [459]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[462]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [462]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[463]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [463]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[464]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [464]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[465]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [465]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[466]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [466]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[467]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [467]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[468]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [468]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[469]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [469]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [502]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[470]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [470]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [501]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[471]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nterms [471]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [500]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[472]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [472]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[473]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [473]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[474]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [474]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[475]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [475]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[476]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [476]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [59]
[477]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [477]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [330]
[478]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [478]
                0.00    0.00       2/3           yyalloc(unsigned long) [391]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [327]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[479]    0.0    0.00    0.00       1         initialize_readline() [479]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [468]
[480]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [456]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
                0.00    0.00       1/1498        tType::tType(BaseType) [146]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [336]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [462]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [461]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [465]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [477]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [476]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [464]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [466]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [457]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [460]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [459]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [475]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [473]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [474]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [463]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [458]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [472]
[497]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [467]
[498]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [58]
[499]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [471]
[500]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [500]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [470]
[501]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [501]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [469]
[502]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [502]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[503]    0.0    0.00    0.00       1         parseopt(int, char**) [503]
                0.00    0.00       2/2           irqOn() [411]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [329]
                0.00    0.00       1/1           qc_srand(long) [504]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [503]
[504]    0.0    0.00    0.00       1         qc_srand(long) [504]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [330]
[505]    0.0    0.00    0.00       1         yyensure_buffer_stack() [505]
                0.00    0.00       1/3           yyalloc(unsigned long) [391]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [105]
[506]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [506]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [300]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [345]
[507]    0.0    0.00    0.00       1         sOr::~sOr() [507]
                0.00    0.00       1/1           sOr::~sOr() [508]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [507]
[508]    0.0    0.00    0.00       1         sOr::~sOr() [508]
                0.00    0.00       1/25          sBinOp::~sBinOp() <cycle 1> [301]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [62]
[509]    0.0    0.00    0.00       1         sDef::basetype() [509]
                0.00    0.00       1/1045        tType::basetype() const [149]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [302]
[510]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [510]
                0.00    0.00       1/457         sObject::setParent(sObject*) [163]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [291]
                0.00    0.00       1/100         sExpr::type() [190]
                0.00    0.00       1/1           tType::isString() const [534]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [105]
[511]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [511]
                0.00    0.00       1/26          sStmt::sStmt(int) [270]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [299]
[512]    0.0    0.00    0.00       1         sExit::~sExit() [512]
                0.00    0.00       1/1           sExit::~sExit() [513]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [512]
[513]    0.0    0.00    0.00       1         sExit::~sExit() [513]
                0.00    0.00       1/21          sConst::~sConst() [283]
                0.00    0.00       1/26          sStmt::~sStmt() [271]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [82]
[514]    0.0    0.00    0.00       1         QuHeap::init() [514]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [63]
[515]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [515]
                0.00    0.00       1/1498        tType::tType(BaseType) [146]
                0.00    0.00       1/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [104]
[516]    0.0    0.00    0.00       1         tValue::tValue(char const*) [516]
                0.00    0.00       1/1498        tType::tType(BaseType) [146]
                0.00    0.00       1/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [104]
[517]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [517]
                0.00    0.00       1/1498        tType::tType(BaseType) [146]
                0.00    0.00       1/460         tType::operator=(BaseType) [162]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [105]
[518]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [518]
                0.00    0.00       1/1498        tType::tType(BaseType) [146]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [259]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [220]
[519]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [519]
                0.00    0.00       1/1           sProcDef::~sProcDef() [520]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [519]
[520]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [520]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [260]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [448]
[521]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [521]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [569]
[522]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [522]
                0.00    0.00       1/677         tValue::~tValue() [157]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [550]
[523]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [523]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [410]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [542]
[524]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [524]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [543]
[525]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [525]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [544]
[526]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [526]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [545]
[527]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [527]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [546]
[528]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [528]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [547]
[529]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [529]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [538]
[530]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [530]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [436]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [541]
[531]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [531]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [437]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[532]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [532]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [387]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [322]
[533]    0.0    0.00    0.00       1         sOr::object() const [533]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [510]
[534]    0.0    0.00    0.00       1         tType::isString() const [534]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[535]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [535]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [389]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [442]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [576]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [538]
[536]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [536]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [429]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [538]
[537]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [537]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [429]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[538]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [538]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [536]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [537]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [530]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [541]
[539]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [539]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [430]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [541]
[540]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [540]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [430]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[541]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [541]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [539]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [540]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [531]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [551]
[542]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [542]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [524]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [552]
[543]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [543]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [525]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [555]
[544]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [544]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [526]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [556]
[545]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [545]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [527]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [561]
[546]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [546]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [528]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [562]
[547]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [547]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [529]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [577]
[548]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [548]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [579]
[549]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[550]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [550]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [523]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [553]
[551]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [551]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [542]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [554]
[552]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [552]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [543]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [570]
[553]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [553]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [551]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [571]
[554]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [554]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [448]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [552]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [559]
[555]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [555]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [544]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [560]
[556]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [556]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [560]
[557]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [557]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [573]
[558]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [558]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [572]
[559]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [559]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [555]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [573]
[560]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [560]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [557]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [556]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [565]
[561]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [561]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [546]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [566]
[562]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [562]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [547]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [566]
[563]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [563]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [575]
[564]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [564]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [574]
[565]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [565]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [561]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [575]
[566]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [566]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [562]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [121]
[567]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [567]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [428]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [120]
[568]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [568]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [428]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[569]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [569]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [522]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [82]
[570]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [570]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [553]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[571]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [571]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [390]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [554]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [455]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [82]
[572]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [572]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [559]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[573]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [573]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [558]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [560]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [578]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [82]
[574]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [574]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [565]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [89]
[575]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [575]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [564]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [580]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [566]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [535]
[576]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [576]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [578]
[577]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [577]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [548]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [573]
[578]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [578]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [577]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [580]
[579]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [579]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [549]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [575]
[580]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [580]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [579]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [456] _GLOBAL__sub_I_CONDDEF (syntax.cc) [25] bitvec::setlen(int) [167] SymTab::getentry(SymTable::entry*, std::string const&) const
 [457] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [28] bitvec::setbits(int, bitvec const&) [53] bitvec::length() const
 [458] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [31] bitvec::setbits(int, int, unsigned long) [57] bitvec::testeq(bitvec const&) const
 [459] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [24] bitvec::bitvec(int, unsigned long) [42] bitvec::getbits(int, int) const
 [460] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [19] bitvec::bitvec(bitvec const&) [67] bitvec::getword() const
 [461] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [23] bitvec::~bitvec() [75] bitvec::testless(bitvec const&) const
 [462] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [65] bitvec::operator&=(bitvec const&) [353] bitvec::testzero() const
 [463] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [17] bitvec::operator=(bitvec const&) [43] bitvec::hashfunct() const
 [464] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [56] bitvec::operator=(unsigned long) [71] bitvec::operator[](int) const
 [465] _GLOBAL__sub_I_isErrorReported (error.cc) [50] bitvec::operator|=(bitvec const&) [405] sEqual::object() const
 [466] _GLOBAL__sub_I_isStateModified (quheap.cc) [322] sBinOp::typecheck(SymTable*, SymTable*) [155] tValue::ord() const
 [467] _GLOBAL__sub_I_main (qcl.cc) [300] sBinOp::sBinOp(sExpr*, sExpr*) [118] tValue::conv(tType const&) const
 [468] _GLOBAL__sub_I_n_object (types.cc) [301] sBinOp::~sBinOp() [217] tValue::type() const
 [469] _GLOBAL__sub_I_noperators (operator.cc) [113] sConst::eval(SymTable*, SymTable*, QuHeap*) [433] tValue::isInt() const
 [470] _GLOBAL__sub_I_nstates (qustates.cc) [291] sConst::typecheck(SymTable*, SymTable*) [434] tValue::toInt() const
 [471] _GLOBAL__sub_I_nterms (terms.cc) [102] sConst::sConst(tValue const&) [406] tValue::isExpr() const
 [472] _GLOBAL__sub_I_plotfile (plot.cc) [283] sConst::~sConst() [341] tValue::isError() const
  [58] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [284] sConst::~sConst() [323] tValue::qustate() const
 [473] _GLOBAL__sub_I_qcl_options (options.cc) [397] sEqual::sEqual(sExpr*, sExpr*) [156] tValue::basetype() const
 [474] _GLOBAL__sub_I_shell_depth (debug.cc) [398] sEqual::~sEqual() [297] tValue::isQuExpr() const
 [475] _GLOBAL__sub_I_yyObjList (parse.cc) [399] sEqual::~sEqual() [52] quState::mapbits() const
 [476] _GLOBAL__sub_I_yydebug (yacc.cc) [154] tValue::delpointer() [116] quState::mapmask() const
 [477] _GLOBAL__sub_I_yyleng (qcl.lex) [88] tValue::assign(tValue const&) [147] sArgDef::object() const
 [362] yyScanFile(_IO_FILE*) [515] tValue::tValue(quState*, BaseType) [435] sConcat::object() const
 [363] openqclfile(std::string) [516] tValue::tValue(char const*) [386] sLength::object() const
 [308] yy_flush_buffer(yy_buffer_state*) [106] tValue::tValue(quState&, BaseType) [287] sObject::inFunctDef() const
 [478] yy_create_buffer(_IO_FILE*, int) [94] tValue::tValue(tValue const&) [316] sObject::inQuFunDef() const
 [479] initialize_readline() [421] tValue::tValue(double) [354] sObject::isConstDef() const
 [480] __static_initialization_and_destruction_0(int, int) (types.cc) [422] tValue::tValue(int) [173] sObject::isFunctDef() const
 [481] __static_initialization_and_destruction_0(int, int) (syntax.cc) [318] tValue::tValue(long) [265] sObject::isQuFunDef() const
 [482] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [517] tValue::tValue(std::complex<double> const&) [166] sObject::isValueDef() const
 [483] __static_initialization_and_destruction_0(int, int) (symbols.cc) [170] tValue::tValue() [185] sObject::def() const
 [484] __static_initialization_and_destruction_0(int, int) (error.cc) [157] tValue::~tValue() [168] sObject::isDef() const
 [485] __static_initialization_and_destruction_0(int, int) (qcl.lex) [100] tValue::operator=(tValue const&) [184] sObject::isSet(ObjFlag) const
 [486] __static_initialization_and_destruction_0(int, int) (yacc.cc) [423] objlist::objlist() [407] sObject::isStmt() const
 [487] __static_initialization_and_destruction_0(int, int) (print.cc) [125] quState::newclone() [150] sObject::parent() const
 [488] __static_initialization_and_destruction_0(int, int) (quheap.cc) [77] quState::quState(int) [289] sObject::inQuDef() const
 [489] __static_initialization_and_destruction_0(int, int) (extern.cc) [211] quState::~quState() [408] sObject::isLocal() const
 [490] __static_initialization_and_destruction_0(int, int) (eval.cc) [177] sArgDef::sArgDef(tType const&, std::string*) [290] sObject::isQuDef() const
 [491] __static_initialization_and_destruction_0(int, int) (exec.cc) [178] sArgDef::~sArgDef() [409] sObject::isBennet() const
 [492] __static_initialization_and_destruction_0(int, int) (parse.cc) [179] sArgDef::~sArgDef() [210] sObject::isExtern() const
 [493] __static_initialization_and_destruction_0(int, int) (options.cc) [424] sConcat::sConcat(sExpr*, sExpr*) [348] sObject::isGlobal() const
 [494] __static_initialization_and_destruction_0(int, int) (debug.cc) [425] sConcat::~sConcat() [261] sObject::isCondDef() const
 [495] __static_initialization_and_destruction_0(int, int) (cond.cc) [426] sConcat::~sConcat() [244] sObject::isInclude() const
 [496] __static_initialization_and_destruction_0(int, int) (dump.cc) [379] sLength::sLength(sExpr*) [317] sObject::isProcDef() const
 [497] __static_initialization_and_destruction_0(int, int) (plot.cc) [380] sLength::~sLength() [277] sObject::isQuOpDef() const
 [498] __static_initialization_and_destruction_0(int, int) (qcl.cc) [381] sLength::~sLength() [182] sObject::isRoutDef() const
 [499] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [183] sObject::setFlag(ObjFlag, int) [194] sVarDef::object() const
 [500] __static_initialization_and_destruction_0(int, int) (terms.cc) [319] sObject::isSetRec(ObjFlag) [10] opMatrix::addterms(terminfo const&) const
 [501] __static_initialization_and_destruction_0(int, int) (qustates.cc) [163] sObject::setParent(sObject*) [262] sDefList::object() const
 [502] __static_initialization_and_destruction_0(int, int) (operator.cc) [180] sObject::typecheck(SymTable*, SymTable*) [219] sProcDef::object() const
 [349] zero(bitvec const&)   [160] sObject::sObject(unsigned int) [165] sQuOpDef::object() const
 [411] irqOn()               [161] sObject::~sObject()    [32] termlist::hashfunct1(bitvec const&) const
 [104] yylex()                [62] sVarDef::define(SymTable*, SymTable*, QuHeap*) [99] termlist::hashfunct2(bitvec const&) const
 [412] duallog(int)          [111] sVarDef::typecheck(SymTable*, SymTable*) [227] termlist::nterms() const
   [8] ext_bit(sRoutDef const*, SymTable const*, int) [336] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [140] termlist::operator[](int) const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [346] sVarDef::~sVarDef() [410] __gnu_cxx::new_allocator<tValue>::max_size() const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [347] sVarDef::~sVarDef() [245] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [391] yyalloc(unsigned long) [196] SymTable::SymTable() [387] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [105] yyparse()             [197] SymTable::~SymTable() [388] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [107] parseobj()            [400] opMatrix::opMatrix(int) [436] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [503] parseopt(int, char**)  [74] opMatrix::~opMatrix() [437] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [504] qc_srand(long)        [129] opMatrix::~opMatrix() [221] sConstDef::object() const
 [108] chksyntax(_IO_FILE*)  [112] sDefList::typecheck(SymTable*, SymTable*) [169] sQuFunDef::object() const
 [413] yyCleanUp()           [236] sDefList::sDefList()  [208] sStmtList::object() const
 [330] yyrestart(_IO_FILE*)  [237] sDefList::~sDefList() [200] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [327] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [238] sDefList::~sDefList() [201] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [324] yy_get_next_buffer() (lex.cc) [518] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [438] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [269] yy_load_buffer_state() (lex.cc) [519] sProcDef::~sProcDef() [246] std::_List_iterator<sObject*>::operator*() const
 [335] yy_get_previous_state() (lex.cc) [520] sProcDef::~sProcDef() [152] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [505] yyensure_buffer_stack() (lex.cc) [292] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [228] std::list<sObject*, std::allocator<sObject*> >::end() const
 [331] SymTabComb::SymTabComb(SymTable*, SymTable*) [293] sQuOpDef::~sQuOpDef() [229] std::list<sObject*, std::allocator<sObject*> >::size() const
 [332] SymTabComb::~SymTabComb() [294] sQuOpDef::~sQuOpDef() [230] std::list<sObject*, std::allocator<sObject*> >::begin() const
 [333] SymTabComb::~SymTabComb() [226] sRoutDef::args()  [535] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [392] opOperator::opOperator(int) [101] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [439] std::vector<tValue, std::allocator<tValue> >::end() const
 [393] opOperator::~opOperator() [7] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [389] std::vector<tValue, std::allocator<tValue> >::size() const
  [11] quSubState::opadd(bitvec const&, std::complex<double> const&) [96] sRoutDef::typecheck(SymTable*, SymTable*) [440] std::vector<tValue, std::allocator<tValue> >::begin() const
  [81] quSubState::opend()   [259] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [441] std::vector<tValue, std::allocator<tValue> >::empty() const
  [46] quSubState::opbegin() [260] sRoutDef::~sRoutDef() [442] std::vector<tValue, std::allocator<tValue> >::max_size() const
  [79] quSubState::quSubState(int) [18] terminfo::terminfo(terminfo const&) [536] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [212] quSubState::~quSubState() [64] terminfo::terminfo() [537] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [364] sListFunct::typecheck(SymTable*, SymTable*) [45] terminfo::~terminfo() [538] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [365] sListFunct::sListFunct(ObjType, sExprList*) [97] termlist::add(term const&) [539] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [366] sListFunct::~sListFunct() [14] termlist::add(bitvec const&, std::complex<double> const&) [540] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [367] sListFunct::~sListFunct() [44] termlist::clear()  [541] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [368] sSubscript::typecheck(SymTable*, SymTable*) [90] termlist::dellist() [48] std::complex<double>::imag() const
 [369] sSubscript::sSubscript(sVar*, sExprList*) [61] termlist::newlist() [54] std::complex<double>::real() const
 [370] sSubscript::~sSubscript() [87] termlist::termlist(int, int) [542] std::allocator<tValue>::allocator()
 [371] sSubscript::~sSubscript() [91] termlist::~termlist() [543] std::allocator<tValue>::~allocator()
 [124] quBaseState::newsubstring(int, int) [521] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [544] std::allocator<QuHeap::centry>::allocator()
  [12] quBaseState::opadd(bitvec const&, std::complex<double> const&) [522] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [545] std::allocator<QuHeap::centry>::~allocator()
  [68] quBaseState::opend()  [523] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [546] std::allocator<QuHeap::quentry>::allocator()
  [98] quBaseState::reset(bitvec const&) [119] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [547] std::allocator<QuHeap::quentry>::~allocator()
  [49] quBaseState::opbegin() [524] __gnu_cxx::new_allocator<tValue>::new_allocator() [202] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  [83] quBaseState::quBaseState(int, int) [525] __gnu_cxx::new_allocator<tValue>::~new_allocator() [203] std::allocator<sObject*>::~allocator()
  [92] quBaseState::~quBaseState() [526] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [443] std::allocator<std::_List_node<sObject*> >::allocator()
  [93] quBaseState::~quBaseState() [527] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [444] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
 [213] quSubString::newsubstring(int, int) [528] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [247] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  [80] quSubString::quSubString(int, int, quState&) [529] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [248] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [214] quSubString::~quSubString() [240] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [445] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [215] quSubString::~quSubString() [241] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [446] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [394] opElementary::opElementary(int) [198] __gnu_cxx::new_allocator<sObject*>::new_allocator() [145] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [395] opElementary::~opElementary() [199] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [447] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [342] sIf::typecheck(SymTable*, SymTable*) [242] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [548] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [343] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [243] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [549] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [344] sIf::~sIf()           [427] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [550] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [345] sIf::~sIf()           [428] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [551] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [506] sOr::sOr(sExpr*, sExpr*) [382] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [552] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [507] sOr::~sOr()           [429] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [448] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [508] sOr::~sOr()           [430] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [390] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [356] sDef::settype(tType const&) [431] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [553] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [509] sDef::basetype()      [530] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [554] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [171] sDef::sDef(tType const&, std::string*) [531] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [555] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [172] sDef::~sDef()         [532] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [556] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [115] sFor::typecheck(SymTable*, SymTable*) [110] sConstDef::define(SymTable*, SymTable*, QuHeap*) [557] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [414] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [401] sConstDef::typecheck(SymTable*, SymTable*) [558] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [415] sFor::~sFor()         [357] sConstDef::sConstDef(std::string*, sExpr*) [559] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [416] sFor::~sFor()         [358] sConstDef::~sConstDef() [560] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [417] sSub::sSub(sExpr*, sExpr*) [359] sConstDef::~sConstDef() [561] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [418] sSub::~sSub()         [337] sExprList::typecheck(SymTable*, SymTable*) [562] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [419] sSub::~sSub()         [274] sExprList::sExprList() [563] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [109] sVar::eval(SymTable*, SymTable*, QuHeap*) [275] sExprList::~sExprList() [564] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [222] sVar::typecheck(SymTable*, SymTable*) [276] sExprList::~sExprList() [565] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [223] sVar::sVar(std::string*) [313] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [566] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
 [224] sVar::~sVar()         [314] sQuFunDef::~sQuFunDef() [188] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
 [225] sVar::~sVar()         [315] sQuFunDef::~sQuFunDef() [195] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
 [126] term::set(bitvec const&, std::complex<double> const&) [302] sStmtList::typecheck(SymTable*, SymTable*) [153] std::_List_const_iterator<sObject*>::operator++()
  [39] term::setampl(std::complex<double> const&) [303] sStmtList::sStmtList() [449] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [26] term::setvect(bitvec const&) [304] sStmtList::~sStmtList() [249] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [72] term::term(bitvec const&, std::complex<double> const&) [305] sStmtList::~sStmtList() [250] std::list<sObject*, std::allocator<sObject*> >::end()
  [60] term::term()          [267] SymTabComb::getDef(std::string const&) const [204] std::list<sObject*, std::allocator<sObject*> >::begin()
  [21] term::term(term const&) [288] quSubState::isbasestate() const [251] std::list<sObject*, std::allocator<sObject*> >::front()
  [51] term::~term()          [35] quSubState::baseterm(int) const [252] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  [29] term::operator=(term const&) [69] quSubState::baseterms() const [253] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [123] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [383] sListFunct::object() const [254] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [127] opBit::~opBit()       [384] sSubscript::nargs() const [255] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
 [128] opBit::~opBit()       [216] quBaseState::isbasestate() const [450] std::list<sObject*, std::allocator<sObject*> >::list()
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [40] quBaseState::map(bitvec const&) const [120] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [309] sCall::typecheck(SymTable*, SymTable*) [34] quBaseState::unmap(bitvec const&) const [567] std::vector<tValue, std::allocator<tValue> >::end()
 [310] sCall::sCall(std::string*, sExprList*, int) [133] quBaseState::basebits() const [568] std::vector<tValue, std::allocator<tValue> >::begin()
 [311] sCall::~sCall()        [66] quBaseState::baseterm(int) const [569] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [312] sCall::~sCall()        [70] quBaseState::baseterms() const [121] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [510] sExit::typecheck(SymTable*, SymTable*) [22] quSubString::map(bitvec const&) const [570] std::vector<tValue, std::allocator<tValue> >::vector()
 [511] sExit::sExit(sExpr*)   [15] quSubString::unmap(bitvec const&) const [571] std::vector<tValue, std::allocator<tValue> >::~vector()
 [512] sExit::~sExit()        [47] quSubString::mapoffs() const [572] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [513] sExit::~sExit()         [9] opElementary::apply(quState&) const [573] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [190] sExpr::type()         [285] sIf::object() const   [574] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [189] sExpr::settype(tType const&) [533] sOr::object() const [575] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [372] sExpr::basetype()     [141] sDef::id() const       [84] std::complex<double>::imag()
 [282] sExpr::sExpr(tType const&) [164] sDef::type() const [33] std::complex<double>::complex(double, double)
 [209] sExpr::sExpr()        [320] sFor::object() const   [76] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
 [193] sExpr::~sExpr()       [432] sSub::object() const  [325] std::complex<double>::operator*=(double)
 [373] sLess::sLess(sExpr*, sExpr*) [218] sVar::id() const [20] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [374] sLess::~sLess()        [37] term::ampl() const     [38] std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
 [375] sLess::~sLess()        [41] term::vect() const    [231] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [175] sList<sDef>::append(sDef*) [295] sCall::id() const [205] sObject** std::__addressof<sObject*>(sObject*&)
 [234] sList<sDef>::sList()  [306] sCall::object() const [451] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [235] sList<sDef>::~sList() [385] sLess::object() const [232] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [266] sList<sExpr>::append(sExpr*) [158] sList<sDef>::next(void*&) const [452] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [272] sList<sExpr>::sList() [192] sList<sDef>::first(void*&) const [453] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [273] sList<sExpr>::~sList() [338] sList<sExpr>::n() const [576] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [278] sList<sStmt>::append(sStmt*) [257] sList<sExpr>::next(void*&) const [85] std::pow(double, int)
 [298] sList<sStmt>::sList() [258] sList<sExpr>::first(void*&) const [454] void std::_Destroy<tValue*>(tValue*, tValue*)
 [299] sList<sStmt>::~sList() [279] sList<sStmt>::next(void*&) const [455] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [350] sMult::sMult(sExpr*, sExpr*) [307] sList<sStmt>::first(void*&) const [577] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [351] sMult::~sMult()       [334] sMult::object() const [578] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [352] sMult::~sMult()       [402] sStmt::isInv() const  [579] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [270] sStmt::sStmt(int)     [148] tType::ord() const    [580] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [271] sStmt::~sStmt()       [286] tType::isInt() const  [233] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [376] sUnOp::typecheck(SymTable*, SymTable*) [321] tType::isCond() const [143] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [377] sUnOp::sUnOp(sExpr*)  [280] tType::isConv(tType const&) const [360] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [378] sUnOp::~sUnOp()       [403] tType::isExpr() const  [86] bool std::operator==<double>(std::complex<double> const&, std::complex<double> const&)
 [146] tType::tType(BaseType) [339] tType::isError() const [142] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [420] tType::tType(BaseType, int) [181] tType::isQuReg() const [144] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [159] tType::tType(tType const&) [149] tType::basetype() const [326] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
 [162] tType::operator=(BaseType) [264] tType::isNumber() const [16] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [151] tType::operator=(tType const&) [263] tType::isQuCond() const [361] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
   [5] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [187] tType::isQuExpr() const [329] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [514] QuHeap::init()        [534] tType::isString() const [355] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [103] QuHeap::addReg(quState*) [281] tType::isBoolean() const [30] std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
  [63] QuHeap::qualloc(int, BaseType) [296] tType::isDefined() const [36] operator&(bitvec const&, bitvec const&)
   [6] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [340] tType::isOrdered() const [122] operator~(bitvec const&)
  [82] QuHeap::QuHeap(int, int) [268] tType::isQuConst() const [55] operator==(bitvec const&, bitvec const&)
  [89] QuHeap::~QuHeap()     [256] tType::operator==(BaseType) const [239] operator new(unsigned long, void*)
  [95] SymTab::put(sDef*, tValue const&) [328] tType::operator==(tType const&) const [27] operator|(bitvec const&, bitvec const&)
 [220] SymTab::deltree(SymTable::entry*) [131] QuHeap::cond() const [134] <cycle 1>
 [174] SymTab::putentry(SymTable::entry*, SymTable::entry*) [130] QuHeap::cmask() const [135] <cycle 2>
 [206] SymTab::SymTab(int)   [404] QuHeap::nBits() const [114] <cycle 3>
 [396] SymTab::~SymTab()     [132] QuHeap::ncond() const  [13] <cycle 4>
 [207] SymTab::~SymTab()     [186] SymTab::getDef(std::string const&) const [78] <cycle 5>
 [191] bitvec::qnot()        [176] SymTab::getRef(std::string const&, ObjType*) const
  [73] bitvec::setbit(int, int) [117] SymTab::getVal(std::string const&, ObjType*) const
