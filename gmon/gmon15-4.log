Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  7.82      0.62     0.62  3079679     0.00     0.00  termlist::add(bitvec const&, std::complex<double> const&)
  7.69      1.23     0.61  1507327     0.00     0.00  opMatrix::addterms(terminfo const&) const
  7.44      1.82     0.59 16711736     0.00     0.00  bitvec::~bitvec()
  6.94      2.37     0.55 10551492     0.00     0.00  bitvec::bitvec(bitvec const&)
  5.17      2.78     0.41  7634506     0.00     0.00  bitvec::operator=(bitvec const&)
  4.16      3.11     0.33  6160244     0.00     0.00  bitvec::bitvec(int, unsigned long)
  3.78      3.41     0.30  3014654     0.00     0.00  operator|(bitvec const&, bitvec const&)
  3.15      3.66     0.25  3014723     0.00     0.00  bitvec::setbits(int, int, unsigned long)
  3.03      3.90     0.24  7634506     0.00     0.00  bitvec::setlen(int)
  3.03      4.14     0.24  3014654     0.00     0.00  quSubState::opadd(bitvec const&, std::complex<double> const&)
  3.03      4.38     0.24  3014654     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  2.90      4.61     0.23  3014723     0.00     0.00  quSubString::unmap(bitvec const&) const
  2.52      4.81     0.20       60     0.00     0.13  opElementary::apply(quState&) const
  2.27      4.99     0.18 16628677     0.00     0.00  term::vect() const
  2.14      5.16     0.17  3079679     0.00     0.00  term::setampl(std::complex<double> const&)
  1.77      5.30     0.14  3014723     0.00     0.00  bitvec::setbits(int, bitvec const&)
  1.77      5.44     0.14  3014658     0.00     0.00  bitvec::operator|=(bitvec const&)
  1.77      5.58     0.14  1507327     0.00     0.00  quSubState::baseterm(int) const
  1.77      5.72     0.14  3095516     0.00     0.00  bitvec::hashfunct() const
  1.58      5.85     0.13  4489214     0.00     0.00  std::complex<double>::imag() const
  1.58      5.97     0.13  1474560     0.00     0.00  std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
  1.51      6.09     0.12  3014654     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  1.26      6.19     0.10  1507327     0.00     0.00  quBaseState::map(bitvec const&) const
  1.20      6.29     0.10  4489214     0.00     0.00  std::complex<double>::real() const
  1.13      6.38     0.09  4522050     0.00     0.00  quSubString::mapoffs() const
  1.13      6.47     0.09  1507327     0.00     0.00  quSubString::map(bitvec const&) const
  1.01      6.55     0.08  3079693     0.00     0.00  termlist::hashfunct1(bitvec const&) const
  1.01      6.63     0.08  1507327     0.00     0.00  term::operator=(term const&)
  0.88      6.70     0.07  1507327     0.00     0.00  terminfo::terminfo(terminfo const&)
  0.76      6.76     0.06  9076219     0.00     0.00  term::ampl() const
  0.76      6.82     0.06  3014655     0.00     0.00  quBaseState::opadd(bitvec const&, std::complex<double> const&)
  0.76      6.88     0.06  1507327     0.00     0.00  term::term(term const&)
  0.76      6.94     0.06       77     0.00     0.00  termlist::clear()
  0.76      7.00     0.06  4522617     0.00     0.00  quState::mapbits() const
  0.69      7.05     0.06  3145324     0.00     0.00  std::complex<double>::complex(double, double)
  0.63      7.10     0.05  3112446     0.00     0.00  term::setvect(bitvec const&)
  0.63      7.15     0.05  1474560     0.00     0.00  std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
  0.50      7.19     0.04  1507332     0.00     0.00  bitvec::operator&=(bitvec const&)
  0.50      7.23     0.04  1507331     0.00     0.00  operator&(bitvec const&, bitvec const&)
  0.50      7.27     0.04  1490383     0.00     0.00  bitvec::testeq(bitvec const&) const
  0.50      7.31     0.04       87     0.00     0.00  quState::quState(int)
  0.50      7.35     0.04       86     0.00     0.00  quSubString::quSubString(int, int, quState&)
  0.50      7.39     0.04        2     0.02     0.02  termlist::dellist()
  0.50      7.43     0.04        1     0.04     0.04  _GLOBAL__sub_I_qc_check_txt
  0.38      7.46     0.03  4521990     0.00     0.00  bitvec::length() const
  0.38      7.49     0.03  1637971     0.00     0.00  term::~term()
  0.38      7.52     0.03  1507327     0.00     0.00  bitvec::getbits(int, int) const
  0.38      7.55     0.03  1507327     0.00     0.00  termlist::operator[](int) const
  0.38      7.58     0.03                             termlist::operator=(termlist const&)
  0.38      7.61     0.03                             term::nbits() const
  0.38      7.64     0.03                             bitvec::testless(bitvec const&) const
  0.25      7.66     0.02  3014723     0.00     0.00  quBaseState::unmap(bitvec const&) const
  0.25      7.68     0.02  1507387     0.00     0.00  terminfo::~terminfo()
  0.25      7.70     0.02  1507327     0.00     0.00  quBaseState::baseterm(int) const
  0.25      7.72     0.02  1507327     0.00     0.00  bitvec::getword() const
  0.25      7.74     0.02       60     0.00     0.00  terminfo::terminfo()
  0.25      7.76     0.02       60     0.00     0.00  quSubState::baseterms() const
  0.25      7.78     0.02       15     0.00     0.00  bitvec::operator[](int) const
  0.19      7.80     0.02                             std::complex<double>::imag()
  0.19      7.81     0.02                             std::complex<double>::real()
  0.13      7.82     0.01  1490383     0.00     0.00  operator==(bitvec const&, bitvec const&)
  0.13      7.83     0.01      130     0.00     0.00  operator~(bitvec const&)
  0.13      7.84     0.01       85     0.00     0.00  quSubString::newsubstring(int, int)
  0.13      7.85     0.01       61     0.00     0.00  quBaseState::opbegin()
  0.13      7.86     0.01       60     0.00     0.00  quSubState::opbegin()
  0.13      7.87     0.01        1     0.01     0.01  _GLOBAL__sub_I_nterms
  0.13      7.88     0.01                             bitvec::setbit(int, int)
  0.13      7.89     0.01                             bitvec::operator=(unsigned long)
  0.13      7.90     0.01                             bitvec::nset() const
  0.13      7.91     0.01                             bitvec::getword(int, int) const
  0.13      7.92     0.01                             std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.06      7.93     0.01                             std::_Rb_tree<bitvec, bitvec, std::_Identity<bitvec>, std::less<bitvec>, std::allocator<bitvec> >::_Rb_tree(std::_Rb_tree<bitvec, bitvec, std::_Identity<bitvec>, std::less<bitvec>, std::allocator<bitvec> > const&)
  0.06      7.93     0.01                             std::pow(double, int)
  0.00      7.93     0.00   130644     0.00     0.00  term::term()
  0.00      7.93     0.00    65024     0.00     0.00  termlist::add(term const&)
  0.00      7.93     0.00    21664     0.00     0.00  sDef::id() const
  0.00      7.93     0.00    15823     0.00     0.00  termlist::hashfunct2(bitvec const&) const
  0.00      7.93     0.00     6528     0.00     0.00  bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.93     0.00     4230     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.93     0.00     3930     0.00     0.00  bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.93     0.00     2939     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      7.93     0.00     2362     0.00     0.00  yylex()
  0.00      7.93     0.00     1508     0.00     0.00  tType::tType(BaseType)
  0.00      7.93     0.00     1122     0.00     0.00  sArgDef::object() const
  0.00      7.93     0.00     1100     0.00     0.00  tType::ord() const
  0.00      7.93     0.00     1061     0.00     0.00  tType::basetype() const
  0.00      7.93     0.00      905     0.00     0.00  sObject::parent() const
  0.00      7.93     0.00      872     0.00     0.00  tType::operator=(tType const&)
  0.00      7.93     0.00      841     0.00     0.00  std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
  0.00      7.93     0.00      795     0.00     0.00  std::_List_const_iterator<sObject*>::operator++()
  0.00      7.93     0.00      722     0.00     0.00  tValue::delpointer()
  0.00      7.93     0.00      722     0.00     0.00  tValue::ord() const
  0.00      7.93     0.00      722     0.00     0.00  tValue::basetype() const
  0.00      7.93     0.00      684     0.00     0.00  tValue::~tValue()
  0.00      7.93     0.00      560     0.00     0.00  sList<sDef>::next(void*&) const
  0.00      7.93     0.00      552     0.00     0.00  tType::tType(tType const&)
  0.00      7.93     0.00      524     0.00     0.00  sObject::sObject(unsigned int)
  0.00      7.93     0.00      524     0.00     0.00  sObject::~sObject()
  0.00      7.93     0.00      465     0.00     0.00  tType::operator=(BaseType)
  0.00      7.93     0.00      458     0.00     0.00  sObject::setParent(sObject*)
  0.00      7.93     0.00      384     0.00     0.00  sDef::type() const
  0.00      7.93     0.00      384     0.00     0.00  sQuOpDef::object() const
  0.00      7.93     0.00      382     0.00     0.00  sObject::isValueDef() const
  0.00      7.93     0.00      377     0.00     0.00  SymTab::getentry(SymTable::entry*, std::string const&) const
  0.00      7.93     0.00      371     0.00     0.00  sObject::isDef() const
  0.00      7.93     0.00      369     0.00     0.00  sQuFunDef::object() const
  0.00      7.93     0.00      365     0.00     0.00  tValue::tValue()
  0.00      7.93     0.00      334     0.00     0.00  tValue::assign(tValue const&)
  0.00      7.93     0.00      327     0.00     0.00  SymTab::put(sDef*, tValue const&)
  0.00      7.93     0.00      312     0.00     0.00  sDef::sDef(tType const&, std::string*)
  0.00      7.93     0.00      312     0.00     0.00  sDef::~sDef()
  0.00      7.93     0.00      297     0.00     0.00  sObject::isFunctDef() const
  0.00      7.93     0.00      296     0.00     0.00  tValue::tValue(tValue const&)
  0.00      7.93     0.00      276     0.00     0.00  SymTab::putentry(SymTable::entry*, SymTable::entry*)
  0.00      7.93     0.00      269     0.00     0.00  sList<sDef>::append(sDef*)
  0.00      7.93     0.00      267     0.00     0.00  SymTab::getRef(std::string const&, ObjType*) const
  0.00      7.93     0.00      263     0.00     0.00  sArgDef::sArgDef(tType const&, std::string*)
  0.00      7.93     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      7.93     0.00      263     0.00     0.00  sArgDef::~sArgDef()
  0.00      7.93     0.00      263     0.00     0.00  sObject::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00      263     0.00     0.00  tType::isQuReg() const
  0.00      7.93     0.00      259     0.00     0.00  sObject::isRoutDef() const
  0.00      7.93     0.00      183     0.00     0.00  sObject::isSet(ObjFlag) const
  0.00      7.93     0.00      179     0.00     0.00  sObject::setFlag(ObjFlag, int)
  0.00      7.93     0.00      179     0.00     0.00  sObject::def() const
  0.00      7.93     0.00      172     0.00     0.00  quBaseState::newsubstring(int, int)
  0.00      7.93     0.00      147     0.00     0.00  SymTab::getDef(std::string const&) const
  0.00      7.93     0.00      136     0.00     0.00  tType::isQuExpr() const
  0.00      7.93     0.00      132     0.00     0.00  bitvec::qnot()
  0.00      7.93     0.00      132     0.00     0.00  std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
  0.00      7.93     0.00      115     0.00     0.00  sExpr::settype(tType const&)
  0.00      7.93     0.00      111     0.00     0.00  quState::newclone()
  0.00      7.93     0.00      102     0.00     0.00  sExpr::type()
  0.00      7.93     0.00      101     0.00     0.00  sList<sDef>::first(void*&) const
  0.00      7.93     0.00       98     0.00     0.00  sExpr::~sExpr()
  0.00      7.93     0.00       97     0.00     0.00  sVarDef::object() const
  0.00      7.93     0.00       92     0.00     0.00  std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      7.93     0.00       90     0.00     0.00  SymTable::SymTable()
  0.00      7.93     0.00       90     0.00     0.00  SymTable::~SymTable()
  0.00      7.93     0.00       88     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::new_allocator()
  0.00      7.93     0.00       88     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::~new_allocator()
  0.00      7.93     0.00       88     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
  0.00      7.93     0.00       88     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
  0.00      7.93     0.00       88     0.00     0.00  std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
  0.00      7.93     0.00       88     0.00     0.00  std::allocator<sObject*>::~allocator()
  0.00      7.93     0.00       88     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin()
  0.00      7.93     0.00       88     0.00     0.00  sObject** std::__addressof<sObject*>(sObject*&)
  0.00      7.93     0.00       86     0.00     0.00  quSubState::quSubState(int)
  0.00      7.93     0.00       86     0.00     0.00  quState::~quState()
  0.00      7.93     0.00       85     0.00     0.00  quSubState::~quSubState()
  0.00      7.93     0.00       85     0.00     0.00  quSubString::~quSubString()
  0.00      7.93     0.00       85     0.00     0.00  quSubString::~quSubString()
  0.00      7.93     0.00       85     0.00     0.00  quBaseState::isbasestate() const
  0.00      7.93     0.00       80     0.00     0.00  SymTab::SymTab(int)
  0.00      7.93     0.00       80     0.00     0.00  SymTab::~SymTab()
  0.00      7.93     0.00       78     0.00     0.00  sStmtList::object() const
  0.00      7.93     0.00       77     0.00     0.00  sExpr::sExpr()
  0.00      7.93     0.00       76     0.00     0.00  sObject::isExtern() const
  0.00      7.93     0.00       69     0.00     0.00  quState::mapmask() const
  0.00      7.93     0.00       66     0.00     0.00  tValue::type() const
  0.00      7.93     0.00       64     0.00     0.00  sVar::id() const
  0.00      7.93     0.00       61     0.00     0.00  quBaseState::opend()
  0.00      7.93     0.00       60     0.00     0.00  quSubState::opend()
  0.00      7.93     0.00       60     0.00     0.00  quBaseState::baseterms() const
  0.00      7.93     0.00       60     0.00     0.00  termlist::nterms() const
  0.00      7.93     0.00       58     0.00     0.00  sProcDef::object() const
  0.00      7.93     0.00       51     0.00     0.00  SymTab::deltree(SymTable::entry*)
  0.00      7.93     0.00       49     0.00     0.00  sRoutDef::args()
  0.00      7.93     0.00       48     0.00     0.00  sConstDef::object() const
  0.00      7.93     0.00       47     0.00     0.00  sVar::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       47     0.00     0.00  sVar::sVar(std::string*)
  0.00      7.93     0.00       47     0.00     0.00  sVar::~sVar()
  0.00      7.93     0.00       47     0.00     0.00  sVar::~sVar()
  0.00      7.93     0.00       46     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end() const
  0.00      7.93     0.00       46     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::size() const
  0.00      7.93     0.00       46     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::begin() const
  0.00      7.93     0.00       46     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
  0.00      7.93     0.00       46     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
  0.00      7.93     0.00       46     0.00     0.00  std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
  0.00      7.93     0.00       45     0.00     0.00  operator new(unsigned long, void*)
  0.00      7.93     0.00       44     0.00     0.00  sList<sDef>::sList()
  0.00      7.93     0.00       44     0.00     0.00  sList<sDef>::~sList()
  0.00      7.93     0.00       44     0.00     0.00  sDefList::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       44     0.00     0.00  sDefList::sDefList()
  0.00      7.93     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      7.93     0.00       44     0.00     0.00  sDefList::~sDefList()
  0.00      7.93     0.00       44     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::destroy(sObject**)
  0.00      7.93     0.00       44     0.00     0.00  __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&)
  0.00      7.93     0.00       44     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long)
  0.00      7.93     0.00       44     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*)
  0.00      7.93     0.00       44     0.00     0.00  sObject::isInclude() const
  0.00      7.93     0.00       44     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
  0.00      7.93     0.00       44     0.00     0.00  std::_List_iterator<sObject*>::operator*() const
  0.00      7.93     0.00       44     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  0.00      7.93     0.00       44     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::end()
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::front()
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::pop_front()
  0.00      7.93     0.00       44     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
  0.00      7.93     0.00       42     0.00     0.00  sList<sExpr>::next(void*&) const
  0.00      7.93     0.00       41     0.00     0.00  sList<sExpr>::first(void*&) const
  0.00      7.93     0.00       41     0.00     0.00  tType::operator==(BaseType) const
  0.00      7.93     0.00       38     0.00     0.00  tValue::operator=(tValue const&)
  0.00      7.93     0.00       37     0.00     0.00  sObject::isCondDef() const
  0.00      7.93     0.00       36     0.00     0.00  sRoutDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      7.93     0.00       36     0.00     0.00  sRoutDef::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       36     0.00     0.00  sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      7.93     0.00       36     0.00     0.00  sRoutDef::~sRoutDef()
  0.00      7.93     0.00       34     0.00     0.00  sDefList::object() const
  0.00      7.93     0.00       32     0.00     0.00  tType::isQuCond() const
  0.00      7.93     0.00       30     0.00     0.00  sList<sExpr>::append(sExpr*)
  0.00      7.93     0.00       30     0.00     0.00  tType::isNumber() const
  0.00      7.93     0.00       30     0.00     0.00  sObject::isQuFunDef() const
  0.00      7.93     0.00       29     0.00     0.00  SymTabComb::getDef(std::string const&) const
  0.00      7.93     0.00       28     0.00     0.00  tType::isQuConst() const
  0.00      7.93     0.00       27     0.00     0.00  sStmt::sStmt(int)
  0.00      7.93     0.00       27     0.00     0.00  sStmt::~sStmt()
  0.00      7.93     0.00       26     0.00     0.00  yy_load_buffer_state()
  0.00      7.93     0.00       25     0.00     0.00  sList<sExpr>::sList()
  0.00      7.93     0.00       25     0.00     0.00  sList<sExpr>::~sList()
  0.00      7.93     0.00       25     0.00     0.00  sExprList::sExprList()
  0.00      7.93     0.00       25     0.00     0.00  sExprList::~sExprList()
  0.00      7.93     0.00       25     0.00     0.00  sExprList::~sExprList()
  0.00      7.93     0.00       25     0.00     0.00  quSubState::isbasestate() const
  0.00      7.93     0.00       25     0.00     0.00  tValue::isQuExpr() const
  0.00      7.93     0.00       25     0.00     0.00  sObject::isQuOpDef() const
  0.00      7.93     0.00       24     0.00     0.00  tType::isConv(tType const&) const
  0.00      7.93     0.00       23     0.00     0.00  sList<sStmt>::append(sStmt*)
  0.00      7.93     0.00       23     0.00     0.00  sCall::object() const
  0.00      7.93     0.00       23     0.00     0.00  sList<sStmt>::next(void*&) const
  0.00      7.93     0.00       23     0.00     0.00  tType::isBoolean() const
  0.00      7.93     0.00       22     0.00     0.00  sObject::inFunctDef() const
  0.00      7.93     0.00       21     0.00     0.00  sExpr::sExpr(tType const&)
  0.00      7.93     0.00       21     0.00     0.00  sConst::sConst(tValue const&)
  0.00      7.93     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      7.93     0.00       21     0.00     0.00  sConst::~sConst()
  0.00      7.93     0.00       21     0.00     0.00  sIf::object() const
  0.00      7.93     0.00       21     0.00     0.00  sCall::id() const
  0.00      7.93     0.00       21     0.00     0.00  tType::isInt() const
  0.00      7.93     0.00       21     0.00     0.00  sObject::inQuDef() const
  0.00      7.93     0.00       21     0.00     0.00  sObject::isQuDef() const
  0.00      7.93     0.00       19     0.00     0.00  sConst::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       19     0.00     0.00  sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      7.93     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      7.93     0.00       19     0.00     0.00  sQuOpDef::~sQuOpDef()
  0.00      7.93     0.00       19     0.00     0.00  tType::isDefined() const
  0.00      7.93     0.00       18     0.00     0.00  sList<sStmt>::sList()
  0.00      7.93     0.00       18     0.00     0.00  sList<sStmt>::~sList()
  0.00      7.93     0.00       18     0.00     0.00  sBinOp::sBinOp(sExpr*, sExpr*)
  0.00      7.93     0.00       18     0.00     0.00  sBinOp::~sBinOp()
  0.00      7.93     0.00       18     0.00     0.00  sStmtList::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       18     0.00     0.00  sStmtList::sStmtList()
  0.00      7.93     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      7.93     0.00       18     0.00     0.00  sStmtList::~sStmtList()
  0.00      7.93     0.00       18     0.00     0.00  sList<sStmt>::first(void*&) const
  0.00      7.93     0.00       17     0.00     0.00  yy_flush_buffer(yy_buffer_state*)
  0.00      7.93     0.00       17     0.00     0.00  sCall::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       17     0.00     0.00  sCall::sCall(std::string*, sExprList*, int)
  0.00      7.93     0.00       17     0.00     0.00  sCall::~sCall()
  0.00      7.93     0.00       17     0.00     0.00  sCall::~sCall()
  0.00      7.93     0.00       17     0.00     0.00  tValue::qustate() const
  0.00      7.93     0.00       17     0.00     0.00  sObject::inQuFunDef() const
  0.00      7.93     0.00       17     0.00     0.00  sObject::isProcDef() const
  0.00      7.93     0.00       16     0.00     0.00  term::set(bitvec const&, std::complex<double> const&)
  0.00      7.93     0.00       16     0.00     0.00  sObject::isSetRec(ObjFlag)
  0.00      7.93     0.00       16     0.00     0.00  termlist::newlist()
  0.00      7.93     0.00       16     0.00     0.00  sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int)
  0.00      7.93     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      7.93     0.00       16     0.00     0.00  sQuFunDef::~sQuFunDef()
  0.00      7.93     0.00       16     0.00     0.00  std::complex<double>::operator*=(double)
  0.00      7.93     0.00       16     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
  0.00      7.93     0.00       15     0.00     0.00  tValue::tValue(long)
  0.00      7.93     0.00       15     0.00     0.00  sFor::object() const
  0.00      7.93     0.00       14     0.00     0.00  tType::isCond() const
  0.00      7.93     0.00       13     0.00     0.00  sBinOp::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00       13     0.00     0.00  tType::operator==(tType const&) const
  0.00      7.93     0.00       12     0.00     0.00  yy_get_next_buffer()
  0.00      7.93     0.00       11     0.00     0.00  yy_init_buffer(yy_buffer_state*, _IO_FILE*)
  0.00      7.93     0.00       11     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      7.93     0.00       10     0.00     0.00  yyrestart(_IO_FILE*)
  0.00      7.93     0.00       10     0.00     0.00  SymTabComb::SymTabComb(SymTable*, SymTable*)
  0.00      7.93     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      7.93     0.00       10     0.00     0.00  SymTabComb::~SymTabComb()
  0.00      7.93     0.00        9     0.00     0.00  sMult::object() const
  0.00      7.93     0.00        9     0.00     0.00  tType::isError() const
  0.00      7.93     0.00        9     0.00     0.00  tValue::isError() const
  0.00      7.93     0.00        8     0.00     0.00  zero(bitvec const&)
  0.00      7.93     0.00        8     0.00     0.00  yy_get_previous_state()
  0.00      7.93     0.00        8     0.00     0.00  sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*)
  0.00      7.93     0.00        8     0.00     0.00  sExprList::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        8     0.00     0.00  sList<sExpr>::n() const
  0.00      7.93     0.00        8     0.00     0.00  tType::isOrdered() const
  0.00      7.93     0.00        8     0.00     0.00  SymTab::getVal(std::string const&, ObjType*) const
  0.00      7.93     0.00        8     0.00     0.00  bitvec::testzero() const
  0.00      7.93     0.00        8     0.00     0.00  sObject::isGlobal() const
  0.00      7.93     0.00        7     0.00     0.00  sIf::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        7     0.00     0.00  sIf::sIf(sExpr*, sStmtList*, sStmtList*)
  0.00      7.93     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      7.93     0.00        7     0.00     0.00  sIf::~sIf()
  0.00      7.93     0.00        7     0.00     0.00  sVarDef::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      7.93     0.00        7     0.00     0.00  sVarDef::~sVarDef()
  0.00      7.93     0.00        7     0.00     0.00  sObject::isConstDef() const
  0.00      7.93     0.00        6     0.00     0.00  sMult::sMult(sExpr*, sExpr*)
  0.00      7.93     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      7.93     0.00        6     0.00     0.00  sMult::~sMult()
  0.00      7.93     0.00        6     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      7.93     0.00        5     0.00     0.00  sDef::settype(tType const&)
  0.00      7.93     0.00        5     0.00     0.00  sConstDef::sConstDef(std::string*, sExpr*)
  0.00      7.93     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      7.93     0.00        5     0.00     0.00  sConstDef::~sConstDef()
  0.00      7.93     0.00        5     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      7.93     0.00        5     0.00     0.00  bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      7.93     0.00        4     0.00     0.00  yyScanFile(_IO_FILE*)
  0.00      7.93     0.00        4     0.00     0.00  openqclfile(std::string)
  0.00      7.93     0.00        4     0.00     1.90  ext_bit(sRoutDef const*, SymTable const*, int)
  0.00      7.93     0.00        4     0.00     0.00  yyparse()
  0.00      7.93     0.00        4     0.00     0.00  opOperator::opOperator(int)
  0.00      7.93     0.00        4     0.00     0.00  opOperator::~opOperator()
  0.00      7.93     0.00        4     0.00     0.00  sListFunct::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        4     0.00     0.00  sListFunct::sListFunct(ObjType, sExprList*)
  0.00      7.93     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      7.93     0.00        4     0.00     0.00  sListFunct::~sListFunct()
  0.00      7.93     0.00        4     0.00     0.00  sSubscript::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        4     0.00     0.00  sSubscript::sSubscript(sVar*, sExprList*)
  0.00      7.93     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      7.93     0.00        4     0.00     0.00  sSubscript::~sSubscript()
  0.00      7.93     0.00        4     0.00     0.00  opElementary::opElementary(int)
  0.00      7.93     0.00        4     0.00     0.00  opElementary::~opElementary()
  0.00      7.93     0.00        4     0.00     0.00  sVar::eval(SymTable*, SymTable*, QuHeap*)
  0.00      7.93     0.00        4     0.00     0.00  opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double)
  0.00      7.93     0.00        4     0.00     0.00  opBit::~opBit()
  0.00      7.93     0.00        4     0.00     0.00  opBit::~opBit()
  0.00      7.93     0.00        4     0.00     1.90  sCall::exec(SymTable*, SymTable*, QuHeap*)
  0.00      7.93     0.00        4     0.00     0.00  sExpr::basetype()
  0.00      7.93     0.00        4     0.00     0.00  sLess::sLess(sExpr*, sExpr*)
  0.00      7.93     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      7.93     0.00        4     0.00     0.00  sLess::~sLess()
  0.00      7.93     0.00        4     0.00     0.00  sUnOp::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        4     0.00     0.00  sUnOp::sUnOp(sExpr*)
  0.00      7.93     0.00        4     0.00     0.00  sUnOp::~sUnOp()
  0.00      7.93     0.00        4     0.00     1.90  QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int)
  0.00      7.93     0.00        4     0.00     1.90  QuHeap::callentry(QuHeap::quentry const&, SymTable*)
  0.00      7.93     0.00        4     0.00     0.00  SymTab::~SymTab()
  0.00      7.93     0.00        4     0.00     0.00  sConst::eval(SymTable*, SymTable*, QuHeap*)
  0.00      7.93     0.00        4     0.00     0.00  sLength::sLength(sExpr*)
  0.00      7.93     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      7.93     0.00        4     0.00     0.00  sLength::~sLength()
  0.00      7.93     0.00        4     0.00     0.00  opMatrix::opMatrix(int)
  0.00      7.93     0.00        4     0.00     0.00  opMatrix::~opMatrix()
  0.00      7.93     0.00        4     0.00     1.90  sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int)
  0.00      7.93     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&)
  0.00      7.93     0.00        4     0.00     0.00  sListFunct::object() const
  0.00      7.93     0.00        4     0.00     0.00  sSubscript::nargs() const
  0.00      7.93     0.00        4     0.00     0.00  sLess::object() const
  0.00      7.93     0.00        4     0.00     0.00  sStmt::isInv() const
  0.00      7.93     0.00        4     0.00     0.00  tType::isExpr() const
  0.00      7.93     0.00        4     0.00     0.00  QuHeap::cond() const
  0.00      7.93     0.00        4     0.00     0.00  QuHeap::cmask() const
  0.00      7.93     0.00        4     0.00     0.00  QuHeap::nBits() const
  0.00      7.93     0.00        4     0.00     0.00  QuHeap::ncond() const
  0.00      7.93     0.00        4     0.00     0.00  tValue::conv(tType const&) const
  0.00      7.93     0.00        4     0.00     0.00  tValue::isExpr() const
  0.00      7.93     0.00        4     0.00     0.00  sLength::object() const
  0.00      7.93     0.00        4     0.00     0.00  sObject::isStmt() const
  0.00      7.93     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      7.93     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
  0.00      7.93     0.00        4     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::size() const
  0.00      7.93     0.00        4     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
  0.00      7.93     0.00        3     0.00     0.00  yyalloc(unsigned long)
  0.00      7.93     0.00        3     0.00     0.00  sEqual::sEqual(sExpr*, sExpr*)
  0.00      7.93     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      7.93     0.00        3     0.00     0.00  sEqual::~sEqual()
  0.00      7.93     0.00        3     0.00     0.00  sConstDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      7.93     0.00        3     0.00     0.00  sConstDef::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        3     0.00     0.00  sEqual::object() const
  0.00      7.93     0.00        3     0.00     0.00  sObject::isLocal() const
  0.00      7.93     0.00        3     0.00     0.00  sObject::isBennet() const
  0.00      7.93     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<tValue>::max_size() const
  0.00      7.93     0.00        2     0.00     0.00  irqOn()
  0.00      7.93     0.00        2     0.00     0.00  duallog(int)
  0.00      7.93     0.00        2     0.00     3.83  qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      7.93     0.00        2     0.00     3.83  qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int)
  0.00      7.93     0.00        2     0.00     0.00  parseobj()
  0.00      7.93     0.00        2     0.00     0.00  chksyntax(_IO_FILE*)
  0.00      7.93     0.00        2     0.00     0.00  yyCleanUp()
  0.00      7.93     0.00        2     0.00     0.00  sFor::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        2     0.00     0.00  sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*)
  0.00      7.93     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      7.93     0.00        2     0.00     0.00  sFor::~sFor()
  0.00      7.93     0.00        2     0.00     0.00  sSub::sSub(sExpr*, sExpr*)
  0.00      7.93     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      7.93     0.00        2     0.00     0.00  sSub::~sSub()
  0.00      7.93     0.00        2     0.00     0.00  tType::tType(BaseType, int)
  0.00      7.93     0.00        2     0.00     0.00  tValue::tValue(double)
  0.00      7.93     0.00        2     0.00     0.00  tValue::tValue(int)
  0.00      7.93     0.00        2     0.00     0.00  objlist::objlist()
  0.00      7.93     0.00        2     0.00     0.00  sConcat::sConcat(sExpr*, sExpr*)
  0.00      7.93     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      7.93     0.00        2     0.00     0.00  sConcat::~sConcat()
  0.00      7.93     0.00        2     0.00     0.00  termlist::termlist(int, int)
  0.00      7.93     0.00        2     0.00     0.02  termlist::~termlist()
  0.00      7.93     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator()
  0.00      7.93     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&)
  0.00      7.93     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&)
  0.00      7.93     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&)
  0.00      7.93     0.00        2     0.00     0.00  bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      7.93     0.00        2     0.00     0.00  sSub::object() const
  0.00      7.93     0.00        2     0.00     0.00  tValue::isInt() const
  0.00      7.93     0.00        2     0.00     0.00  tValue::toInt() const
  0.00      7.93     0.00        2     0.00     0.00  sConcat::object() const
  0.00      7.93     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
  0.00      7.93     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
  0.00      7.93     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
  0.00      7.93     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end() const
  0.00      7.93     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin() const
  0.00      7.93     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::empty() const
  0.00      7.93     0.00        2     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::max_size() const
  0.00      7.93     0.00        2     0.00     0.00  std::allocator<std::_List_node<sObject*> >::allocator()
  0.00      7.93     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  0.00      7.93     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
  0.00      7.93     0.00        2     0.00     0.00  std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
  0.00      7.93     0.00        2     0.00     0.00  void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
  0.00      7.93     0.00        2     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
  0.00      7.93     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      7.93     0.00        2     0.00     0.00  std::list<sObject*, std::allocator<sObject*> >::list()
  0.00      7.93     0.00        2     0.00     0.00  tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  0.00      7.93     0.00        2     0.00     0.00  tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      7.93     0.00        2     0.00     0.00  tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
  0.00      7.93     0.00        2     0.00     0.00  void std::_Destroy<tValue*>(tValue*, tValue*)
  0.00      7.93     0.00        2     0.00     0.00  void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_CONDDEF
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z6regstrRK6bitveci
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK6QuCond3strEv
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZNK7sObject6prtstrEi
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_isErrorReported
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_isStateModified
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_n_object
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_noperators
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_nstates
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_plotfile
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_qcl_options
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_shell_depth
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyObjList
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_yydebug
  0.00      7.93     0.00        1     0.00     0.00  _GLOBAL__sub_I_yyleng
  0.00      7.93     0.00        1     0.00     0.00  yy_create_buffer(_IO_FILE*, int)
  0.00      7.93     0.00        1     0.00     0.00  initialize_readline()
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      7.93     0.00        1     0.00     0.00  parseopt(int, char**)
  0.00      7.93     0.00        1     0.00     0.00  qc_srand(long)
  0.00      7.93     0.00        1     0.00     0.00  yyensure_buffer_stack()
  0.00      7.93     0.00        1     0.00     0.00  quBaseState::reset(bitvec const&)
  0.00      7.93     0.00        1     0.00     0.00  quBaseState::quBaseState(int, int)
  0.00      7.93     0.00        1     0.00     0.04  quBaseState::~quBaseState()
  0.00      7.93     0.00        1     0.00     0.04  quBaseState::~quBaseState()
  0.00      7.93     0.00        1     0.00     0.00  sOr::sOr(sExpr*, sExpr*)
  0.00      7.93     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      7.93     0.00        1     0.00     0.00  sOr::~sOr()
  0.00      7.93     0.00        1     0.00     0.00  sDef::basetype()
  0.00      7.93     0.00        1     0.00     0.00  sExit::typecheck(SymTable*, SymTable*)
  0.00      7.93     0.00        1     0.00     0.00  sExit::sExit(sExpr*)
  0.00      7.93     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      7.93     0.00        1     0.00     0.00  sExit::~sExit()
  0.00      7.93     0.00        1     0.00     0.00  QuHeap::init()
  0.00      7.93     0.00        1     0.00     0.00  QuHeap::addReg(quState*)
  0.00      7.93     0.00        1     0.00     0.02  QuHeap::qualloc(int, BaseType)
  0.00      7.93     0.00        1     0.00     0.00  QuHeap::QuHeap(int, int)
  0.00      7.93     0.00        1     0.00     0.04  QuHeap::~QuHeap()
  0.00      7.93     0.00        1     0.00     0.00  tValue::tValue(quState*, BaseType)
  0.00      7.93     0.00        1     0.00     0.00  tValue::tValue(char const*)
  0.00      7.93     0.00        1     0.00     0.00  tValue::tValue(quState&, BaseType)
  0.00      7.93     0.00        1     0.00     0.00  tValue::tValue(std::complex<double> const&)
  0.00      7.93     0.00        1     0.00     0.02  sVarDef::define(SymTable*, SymTable*, QuHeap*)
  0.00      7.93     0.00        1     0.00     0.00  sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int)
  0.00      7.93     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      7.93     0.00        1     0.00     0.00  sProcDef::~sProcDef()
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long)
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::destroy(tValue*)
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*)
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&)
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::new_allocator()
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<tValue>::~new_allocator()
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator()
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator()
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator()
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator()
  0.00      7.93     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&)
  0.00      7.93     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&)
  0.00      7.93     0.00        1     0.00     0.00  __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&)
  0.00      7.93     0.00        1     0.00     0.00  quBaseState::basebits() const
  0.00      7.93     0.00        1     0.00     0.00  sOr::object() const
  0.00      7.93     0.00        1     0.00     0.00  tType::isString() const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
  0.00      7.93     0.00        1     0.00     0.00  std::allocator<tValue>::allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::allocator<tValue>::~allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::allocator<QuHeap::centry>::~allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::allocator<QuHeap::quentry>::~allocator()
  0.00      7.93     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      7.93     0.00        1     0.00     0.00  void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
  0.00      7.93     0.00        1     0.00     0.00  std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::end()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::begin()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::pop_back()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::vector()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<tValue, std::allocator<tValue> >::~vector()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
  0.00      7.93     0.00        1     0.00     0.00  std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
  0.00      7.93     0.00        1     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      7.93     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
  0.00      7.93     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
  0.00      7.93     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
  0.00      7.93     0.00        1     0.00     0.00  void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.13% of 7.93 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     97.1    0.00    7.70                 main [1]
                0.00    7.65       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    0.04       1/1           QuHeap::~QuHeap() [59]
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [99]
                0.00    0.00       2/80          SymTab::SymTab(int) [213]
                0.00    0.00       2/80          SymTab::~SymTab() [214]
                0.00    0.00       1/1           initialize_readline() [482]
                0.00    0.00       1/1           parseopt(int, char**) [506]
                0.00    0.00       1/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [365]
-----------------------------------------------
                0.00    7.65       2/2           main [1]
[2]     96.5    0.00    7.65       2         qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
                0.00    7.65       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [114]
                0.00    0.00       4/4           openqclfile(std::string) [367]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [366]
-----------------------------------------------
                0.00    7.65       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[3]     96.5    0.00    7.65       2         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    7.61       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.02       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.02      36/36          sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00      36/36          sRoutDef::define(SymTable*, SymTable*, QuHeap*) [103]
                0.00    0.00       2/2           parseobj() [113]
                0.00    0.00       3/3           sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       1/7           sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      46/46          std::list<sObject*, std::allocator<sObject*> >::size() const [233]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::front() [255]
                0.00    0.00      44/44          sObject::isInclude() const [248]
                0.00    0.00      44/371         sObject::isDef() const [170]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::pop_front() [258]
                0.00    0.00       4/17          sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00       4/4           sObject::isStmt() const [401]
                0.00    0.00       4/17          sCall::~sCall() [315]
                0.00    0.00       3/3           sConstDef::typecheck(SymTable*, SymTable*) [410]
-----------------------------------------------
                0.00    7.61       4/4           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[4]     95.9    0.00    7.61       4         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    7.60       4/4           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       4/4           sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       8/69          quState::mapmask() const [96]
                0.00    0.00       4/4           tValue::conv(tType const&) const [120]
                0.00    0.00       4/38          tValue::operator=(tValue const&) [101]
                0.00    0.00       4/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00      20/16711736     bitvec::~bitvec() [18]
                0.00    0.00       4/1507331     operator&(bitvec const&, bitvec const&) [39]
                0.00    0.00       4/4           QuHeap::cmask() const [133]
                0.00    0.00       4/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00       4/3014658     bitvec::operator|=(bitvec const&) [41]
                0.00    0.00       4/4522617     quState::mapbits() const [51]
                0.00    0.00       4/4           QuHeap::cond() const [134]
                0.00    0.00      12/684         tValue::~tValue() [159]
                0.00    0.00      12/17          tValue::qustate() const [317]
                0.00    0.00       8/49          sRoutDef::args() [226]
                0.00    0.00       8/8           zero(bitvec const&) [341]
                0.00    0.00       4/4           QuHeap::nBits() const [398]
                0.00    0.00       4/365         tValue::tValue() [172]
                0.00    0.00       4/21          sCall::id() const [294]
                0.00    0.00       4/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00       4/17          sObject::isProcDef() const [319]
                0.00    0.00       4/21          sObject::isQuDef() const [297]
                0.00    0.00       4/80          SymTab::SymTab(int) [213]
                0.00    0.00       4/41          sList<sExpr>::first(void*&) const [261]
                0.00    0.00       4/101         sList<sDef>::first(void*&) const [194]
                0.00    0.00       4/384         sDef::type() const [166]
                0.00    0.00       4/9           tValue::isError() const [340]
                0.00    0.00       4/25          tValue::isQuExpr() const [282]
                0.00    0.00       4/42          sList<sExpr>::next(void*&) const [260]
                0.00    0.00       4/560         sList<sDef>::next(void*&) const [160]
                0.00    0.00       4/37          sObject::isCondDef() const [263]
                0.00    0.00       4/4           sStmt::isInv() const [396]
-----------------------------------------------
                0.00    7.60       4/4           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
[5]     95.9    0.00    7.60       4         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.20    7.34      60/60          opElementary::apply(quState&) const [9]
                0.03    0.03      60/86          quSubString::newsubstring(int, int) <cycle 5> [87]
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
                0.00    0.00       4/4           opBit::~opBit() [130]
                0.00    0.00      64/4522617     quState::mapbits() const [51]
                0.00    0.00      24/3145324     std::complex<double>::complex(double, double) [55]
                0.00    0.00      60/85          quSubString::~quSubString() [210]
                0.00    0.00       8/21664       sDef::id() const [143]
                0.00    0.00       4/267         SymTab::getRef(std::string const&, ObjType*) const [178]
                0.00    0.00       4/25          tValue::isQuExpr() const [282]
                0.00    0.00       4/17          tValue::qustate() const [317]
-----------------------------------------------
                0.00    7.60       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[6]     95.9    0.00    7.60       4         QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    7.60       4/4           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    0.00       4/37          sObject::isCondDef() const [263]
-----------------------------------------------
                0.00    7.60       4/4           QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
[7]     95.9    0.00    7.60       4         QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
                0.00    7.60       4/4           sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       4/4           SymTab::~SymTab() [387]
-----------------------------------------------
                0.00    7.60       4/4           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[8]     95.9    0.00    7.60       4         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    7.60       4/4           ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       4/365         tValue::tValue() [172]
                0.00    0.00       4/76          sObject::isExtern() const [217]
                0.00    0.00       4/684         tValue::~tValue() [159]
-----------------------------------------------
                0.20    7.34      60/60          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[9]     95.1    0.20    7.34      60         opElementary::apply(quState&) const [9]
                0.61    4.51 1507327/1507327     opMatrix::addterms(terminfo const&) const [10]
                0.09    0.39 1507327/1507327     quSubString::map(bitvec const&) const [21]
                0.07    0.40 1507327/1507327     terminfo::terminfo(terminfo const&) [22]
                0.08    0.15 1507327/1507327     term::operator=(term const&) [31]
                0.14    0.05 1507327/1507327     quSubState::baseterm(int) const [34]
                0.04    0.12 1507327/1507331     operator&(bitvec const&, bitvec const&) [39]
                0.02    0.13 1507387/1507387     terminfo::~terminfo() [40]
                0.02    0.13 1507327/3112446     term::setvect(bitvec const&) [27]
                0.08    0.05 1507387/7634506     bitvec::operator=(bitvec const&) [16]
                0.11    0.00 3014834/16711736     bitvec::~bitvec() [18]
                0.01    0.06      60/60          quSubState::opbegin() [50]
                0.03    0.00 3014654/16628677     term::vect() const [35]
                0.02    0.00      60/60          terminfo::terminfo() [79]
                0.02    0.00      60/60          quSubState::baseterms() const [81]
                0.00    0.00      60/69          quState::mapmask() const [96]
                0.00    0.00      60/130         operator~(bitvec const&) [86]
                0.00    0.00      60/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00      60/4522617     quState::mapbits() const [51]
                0.00    0.00      60/60          quSubState::opend() [221]
-----------------------------------------------
                0.61    4.51 1507327/1507327     opElementary::apply(quState&) const [9]
[10]    64.5    0.61    4.51 1507327         opMatrix::addterms(terminfo const&) const [10]
                0.24    1.58 3014654/3014654     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.23    0.94 3014654/3014723     quSubString::unmap(bitvec const&) const [15]
                0.30    0.30 3014654/3014654     operator|(bitvec const&, bitvec const&) [17]
                0.12    0.39 3014654/3014654     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
                0.21    0.00 6029308/16711736     bitvec::~bitvec() [18]
                0.10    0.00 9043962/16628677     term::vect() const [35]
                0.03    0.00 4521981/4521990     bitvec::length() const [69]
                0.03    0.00 4521981/9076219     term::ampl() const [52]
                0.03    0.00 1507327/3145324     std::complex<double>::complex(double, double) [55]
                0.02    0.00 1507327/1507327     bitvec::getword() const [80]
-----------------------------------------------
                0.24    1.58 3014654/3014654     opMatrix::addterms(terminfo const&) const [10]
[11]    22.9    0.24    1.58 3014654         quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
                0.06    1.52 3014654/3014655     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
-----------------------------------------------
                0.00    0.00       1/3014655     quBaseState::reset(bitvec const&) [110]
                0.06    1.52 3014654/3014655     quSubState::opadd(bitvec const&, std::complex<double> const&) [11]
[12]    19.9    0.06    1.52 3014655         quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.62    0.90 3014655/3014655     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
[13]    19.2    0.62    0.90 3014655+130048  <cycle 4 as a whole> [13]
                0.62    0.90 3079679+14          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   65024             termlist::add(term const&) <cycle 4> [107]
-----------------------------------------------
                                  14             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                               65024             termlist::add(term const&) <cycle 4> [107]
                0.62    0.90 3014655/3014655     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
[14]    19.1    0.62    0.90 3079679+14      termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.05    0.20 1474560/1474560     std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [29]
                0.08    0.14 3079693/3079693     termlist::hashfunct1(bitvec const&) const [32]
                0.17    0.00 3079679/3079679     term::setampl(std::complex<double> const&) [38]
                0.03    0.14 1605119/3112446     term::setvect(bitvec const&) [27]
                0.01    0.04 1490383/1490383     operator==(bitvec const&, bitvec const&) [57]
                0.02    0.00 1490383/16628677     term::vect() const [35]
                0.01    0.00      14/77          termlist::clear() [53]
                0.01    0.00 1474560/9076219     term::ampl() const [52]
                0.00    0.01      14/16          termlist::newlist() [95]
                0.00    0.00   65024/1637971     term::~term() [48]
                0.00    0.00   15823/15823       termlist::hashfunct2(bitvec const&) const [112]
                               65024             termlist::add(term const&) <cycle 4> [107]
                                  14             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00      69/3014723     quState::mapmask() const [96]
                0.23    0.94 3014654/3014723     opMatrix::addterms(terminfo const&) const [10]
[15]    14.7    0.23    0.94 3014723         quSubString::unmap(bitvec const&) const [15]
                0.14    0.25 3014723/3014723     bitvec::setbits(int, bitvec const&) [23]
                0.02    0.16 3014723/3014723     quBaseState::unmap(bitvec const&) const [37]
                0.16    0.00 3014723/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.11    0.00 3014723/16711736     bitvec::~bitvec() [18]
                0.06    0.00 3014723/4522050     quSubString::mapoffs() const [46]
                0.04    0.00 3014723/4522617     quState::mapbits() const [51]
-----------------------------------------------
                0.00    0.00       3/7634506     QuHeap::QuHeap(int, int) [99]
                0.00    0.00      16/7634506     term::set(bitvec const&, std::complex<double> const&) [129]
                0.08    0.05 1507327/7634506     term::term(term const&) [26]
                0.08    0.05 1507327/7634506     term::operator=(term const&) [31]
                0.08    0.05 1507387/7634506     opElementary::apply(quState&) const [9]
                0.17    0.10 3112446/7634506     term::setvect(bitvec const&) [27]
[16]     8.2    0.41    0.24 7634506         bitvec::operator=(bitvec const&) [16]
                0.24    0.00 7634506/7634506     bitvec::setlen(int) [30]
-----------------------------------------------
                0.30    0.30 3014654/3014654     opMatrix::addterms(terminfo const&) const [10]
[17]     7.5    0.30    0.30 3014654         operator|(bitvec const&, bitvec const&) [17]
                0.16    0.00 3014654/10551492     bitvec::bitvec(bitvec const&) [19]
                0.14    0.00 3014654/3014658     bitvec::operator|=(bitvec const&) [41]
-----------------------------------------------
                0.00    0.00       1/16711736     quBaseState::reset(bitvec const&) [110]
                0.00    0.00       1/16711736     quBaseState::quBaseState(int, int) [100]
                0.00    0.00       2/16711736     QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00       3/16711736     QuHeap::QuHeap(int, int) [99]
                0.00    0.00       5/16711736     QuHeap::~QuHeap() [59]
                0.00    0.00      16/16711736     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
                0.00    0.00      20/16711736     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00     138/16711736     quState::mapmask() const [96]
                0.05    0.00 1507327/16711736     quSubString::map(bitvec const&) const [21]
                0.05    0.00 1507387/16711736     terminfo::~terminfo() [40]
                0.06    0.00 1637971/16711736     term::~term() [48]
                0.11    0.00 3014723/16711736     quSubString::unmap(bitvec const&) const [15]
                0.11    0.00 3014834/16711736     opElementary::apply(quState&) const [9]
                0.21    0.00 6029308/16711736     opMatrix::addterms(terminfo const&) const [10]
[18]     7.4    0.59    0.00 16711736         bitvec::~bitvec() [18]
-----------------------------------------------
                0.00    0.00     130/10551492     operator~(bitvec const&) [86]
                0.08    0.00 1507327/10551492     quBaseState::map(bitvec const&) const [36]
                0.08    0.00 1507327/10551492     terminfo::terminfo(terminfo const&) [22]
                0.08    0.00 1507331/10551492     operator&(bitvec const&, bitvec const&) [39]
                0.16    0.00 3014654/10551492     operator|(bitvec const&, bitvec const&) [17]
                0.16    0.00 3014723/10551492     quBaseState::unmap(bitvec const&) const [37]
[19]     6.9    0.55    0.00 10551492         bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.12    0.39 3014654/3014654     opMatrix::addterms(terminfo const&) const [10]
[20]     6.4    0.12    0.39 3014654         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
                0.24    0.15 3014654/3014654     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
-----------------------------------------------
                0.09    0.39 1507327/1507327     opElementary::apply(quState&) const [9]
[21]     6.1    0.09    0.39 1507327         quSubString::map(bitvec const&) const [21]
                0.10    0.08 1507327/1507327     quBaseState::map(bitvec const&) const [36]
                0.03    0.08 1507327/1507327     bitvec::getbits(int, int) const [44]
                0.05    0.00 1507327/16711736     bitvec::~bitvec() [18]
                0.03    0.00 1507327/4522050     quSubString::mapoffs() const [46]
                0.02    0.00 1507327/4522617     quState::mapbits() const [51]
-----------------------------------------------
                0.07    0.40 1507327/1507327     opElementary::apply(quState&) const [9]
[22]     5.9    0.07    0.40 1507327         terminfo::terminfo(terminfo const&) [22]
                0.06    0.26 1507327/1507327     term::term(term const&) [26]
                0.08    0.00 1507327/10551492     bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.14    0.25 3014723/3014723     quSubString::unmap(bitvec const&) const [15]
[23]     4.9    0.14    0.25 3014723         bitvec::setbits(int, bitvec const&) [23]
                0.25    0.00 3014723/3014723     bitvec::setbits(int, int, unsigned long) [28]
-----------------------------------------------
                0.24    0.15 3014654/3014654     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [20]
[24]     4.9    0.24    0.15 3014654         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
                0.08    0.00 3014654/4489214     std::complex<double>::imag() const [43]
                0.06    0.00 3014654/4489214     std::complex<double>::real() const [45]
-----------------------------------------------
                0.00    0.00       1/6160244     quBaseState::reset(bitvec const&) [110]
                0.00    0.00       1/6160244     quBaseState::quBaseState(int, int) [100]
                0.00    0.00       4/6160244     QuHeap::cmask() const [133]
                0.00    0.00       4/6160244     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/6160244     QuHeap::QuHeap(int, int) [99]
                0.00    0.00      16/6160244     opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
                0.00    0.00      60/6160244     opElementary::apply(quState&) const [9]
                0.00    0.00      60/6160244     terminfo::terminfo() [79]
                0.00    0.00      69/6160244     quState::mapmask() const [96]
                0.01    0.00  130644/6160244     term::term() [94]
                0.08    0.00 1507327/6160244     bitvec::getbits(int, int) const [44]
                0.08    0.00 1507327/6160244     term::term(term const&) [26]
                0.16    0.00 3014723/6160244     quSubString::unmap(bitvec const&) const [15]
[25]     4.2    0.33    0.00 6160244         bitvec::bitvec(int, unsigned long) [25]
-----------------------------------------------
                0.06    0.26 1507327/1507327     terminfo::terminfo(terminfo const&) [22]
[26]     4.1    0.06    0.26 1507327         term::term(term const&) [26]
                0.08    0.05 1507327/7634506     bitvec::operator=(bitvec const&) [16]
                0.08    0.00 1507327/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.03    0.00 1507327/3145324     std::complex<double>::complex(double, double) [55]
                0.02    0.00 1507327/16628677     term::vect() const [35]
                0.01    0.00 1507327/9076219     term::ampl() const [52]
-----------------------------------------------
                0.02    0.13 1507327/3112446     opElementary::apply(quState&) const [9]
                0.03    0.14 1605119/3112446     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[27]     4.0    0.05    0.26 3112446         term::setvect(bitvec const&) [27]
                0.17    0.10 3112446/7634506     bitvec::operator=(bitvec const&) [16]
-----------------------------------------------
                0.25    0.00 3014723/3014723     bitvec::setbits(int, bitvec const&) [23]
[28]     3.2    0.25    0.00 3014723         bitvec::setbits(int, int, unsigned long) [28]
-----------------------------------------------
                0.05    0.20 1474560/1474560     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[29]     3.1    0.05    0.20 1474560         std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [29]
                0.13    0.07 1474560/1474560     std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [33]
-----------------------------------------------
                0.24    0.00 7634506/7634506     bitvec::operator=(bitvec const&) [16]
[30]     3.0    0.24    0.00 7634506         bitvec::setlen(int) [30]
-----------------------------------------------
                0.08    0.15 1507327/1507327     opElementary::apply(quState&) const [9]
[31]     3.0    0.08    0.15 1507327         term::operator=(term const&) [31]
                0.08    0.05 1507327/7634506     bitvec::operator=(bitvec const&) [16]
                0.02    0.00 1507327/16628677     term::vect() const [35]
                0.01    0.00 1507327/9076219     term::ampl() const [52]
-----------------------------------------------
                0.08    0.14 3079693/3079693     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[32]     2.8    0.08    0.14 3079693         termlist::hashfunct1(bitvec const&) const [32]
                0.14    0.00 3079693/3095516     bitvec::hashfunct() const [42]
-----------------------------------------------
                0.13    0.07 1474560/1474560     std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&) [29]
[33]     2.5    0.13    0.07 1474560         std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [33]
                0.04    0.00 1474560/4489214     std::complex<double>::imag() const [43]
                0.03    0.00 1474560/4489214     std::complex<double>::real() const [45]
-----------------------------------------------
                0.14    0.05 1507327/1507327     opElementary::apply(quState&) const [9]
[34]     2.4    0.14    0.05 1507327         quSubState::baseterm(int) const [34]
                0.02    0.03 1507327/1507327     quBaseState::baseterm(int) const [56]
-----------------------------------------------
                0.00    0.00   65024/16628677     termlist::add(term const&) <cycle 4> [107]
                0.02    0.00 1490383/16628677     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.02    0.00 1507327/16628677     term::term(term const&) [26]
                0.02    0.00 1507327/16628677     term::operator=(term const&) [31]
                0.03    0.00 3014654/16628677     opElementary::apply(quState&) const [9]
                0.10    0.00 9043962/16628677     opMatrix::addterms(terminfo const&) const [10]
[35]     2.3    0.18    0.00 16628677         term::vect() const [35]
-----------------------------------------------
                0.10    0.08 1507327/1507327     quSubString::map(bitvec const&) const [21]
[36]     2.3    0.10    0.08 1507327         quBaseState::map(bitvec const&) const [36]
                0.08    0.00 1507327/10551492     bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.02    0.16 3014723/3014723     quSubString::unmap(bitvec const&) const [15]
[37]     2.2    0.02    0.16 3014723         quBaseState::unmap(bitvec const&) const [37]
                0.16    0.00 3014723/10551492     bitvec::bitvec(bitvec const&) [19]
-----------------------------------------------
                0.17    0.00 3079679/3079679     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[38]     2.1    0.17    0.00 3079679         term::setampl(std::complex<double> const&) [38]
-----------------------------------------------
                0.00    0.00       4/1507331     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.04    0.12 1507327/1507331     opElementary::apply(quState&) const [9]
[39]     2.0    0.04    0.12 1507331         operator&(bitvec const&, bitvec const&) [39]
                0.08    0.00 1507331/10551492     bitvec::bitvec(bitvec const&) [19]
                0.04    0.00 1507331/1507332     bitvec::operator&=(bitvec const&) [64]
-----------------------------------------------
                0.02    0.13 1507387/1507387     opElementary::apply(quState&) const [9]
[40]     1.9    0.02    0.13 1507387         terminfo::~terminfo() [40]
                0.03    0.05 1507387/1637971     term::~term() [48]
                0.05    0.00 1507387/16711736     bitvec::~bitvec() [18]
-----------------------------------------------
                0.00    0.00       4/3014658     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.14    0.00 3014654/3014658     operator|(bitvec const&, bitvec const&) [17]
[41]     1.8    0.14    0.00 3014658         bitvec::operator|=(bitvec const&) [41]
-----------------------------------------------
                0.00    0.00   15823/3095516     termlist::hashfunct2(bitvec const&) const [112]
                0.14    0.00 3079693/3095516     termlist::hashfunct1(bitvec const&) const [32]
[42]     1.8    0.14    0.00 3095516         bitvec::hashfunct() const [42]
-----------------------------------------------
                0.04    0.00 1474560/4489214     std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [33]
                0.08    0.00 3014654/4489214     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[43]     1.6    0.13    0.00 4489214         std::complex<double>::imag() const [43]
-----------------------------------------------
                0.03    0.08 1507327/1507327     quSubString::map(bitvec const&) const [21]
[44]     1.4    0.03    0.08 1507327         bitvec::getbits(int, int) const [44]
                0.08    0.00 1507327/6160244     bitvec::bitvec(int, unsigned long) [25]
-----------------------------------------------
                0.03    0.00 1474560/4489214     std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&) [33]
                0.06    0.00 3014654/4489214     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[45]     1.2    0.10    0.00 4489214         std::complex<double>::real() const [45]
-----------------------------------------------
                0.03    0.00 1507327/4522050     quSubString::map(bitvec const&) const [21]
                0.06    0.00 3014723/4522050     quSubString::unmap(bitvec const&) const [15]
[46]     1.1    0.09    0.00 4522050         quSubString::mapoffs() const [46]
-----------------------------------------------
[47]     1.1    0.05    0.04      86+368     <cycle 5 as a whole> [47]
                0.04    0.04      86             quSubString::quSubString(int, int, quState&) <cycle 5> [49]
                0.01    0.00      85             quSubString::newsubstring(int, int) <cycle 5> [87]
                0.00    0.00     172             quBaseState::newsubstring(int, int) <cycle 5> [127]
                0.00    0.00     111             quState::newclone() <cycle 5> [128]
-----------------------------------------------
                0.00    0.00      24/1637971     opMatrix::~opMatrix() [132]
                0.00    0.00   65024/1637971     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.00    0.00   65536/1637971     termlist::dellist() [60]
                0.03    0.05 1507387/1637971     terminfo::~terminfo() [40]
[48]     1.1    0.03    0.06 1637971         term::~term() [48]
                0.06    0.00 1637971/16711736     bitvec::~bitvec() [18]
-----------------------------------------------
                                  86             quBaseState::newsubstring(int, int) <cycle 5> [127]
[49]     1.0    0.04    0.04      86         quSubString::quSubString(int, int, quState&) <cycle 5> [49]
                0.00    0.04      86/86          quSubState::quSubState(int) [68]
                                  86             quState::newclone() <cycle 5> [128]
-----------------------------------------------
                0.01    0.06      60/60          opElementary::apply(quState&) const [9]
[50]     0.8    0.01    0.06      60         quSubState::opbegin() [50]
                0.01    0.05      60/61          quBaseState::opbegin() [54]
-----------------------------------------------
                0.00    0.00       1/4522617     quBaseState::basebits() const [136]
                0.00    0.00       4/4522617     sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      60/4522617     opElementary::apply(quState&) const [9]
                0.00    0.00      64/4522617     ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      69/4522617     quState::mapmask() const [96]
                0.00    0.00     111/4522617     quState::newclone() <cycle 5> [128]
                0.00    0.00     258/4522617     quBaseState::newsubstring(int, int) <cycle 5> [127]
                0.02    0.00 1507327/4522617     quSubString::map(bitvec const&) const [21]
                0.04    0.00 3014723/4522617     quSubString::unmap(bitvec const&) const [15]
[51]     0.8    0.06    0.00 4522617         quState::mapbits() const [51]
-----------------------------------------------
                0.00    0.00   65024/9076219     termlist::add(term const&) <cycle 4> [107]
                0.01    0.00 1474560/9076219     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.01    0.00 1507327/9076219     term::term(term const&) [26]
                0.01    0.00 1507327/9076219     term::operator=(term const&) [31]
                0.03    0.00 4521981/9076219     opMatrix::addterms(terminfo const&) const [10]
[52]     0.8    0.06    0.00 9076219         term::ampl() const [52]
-----------------------------------------------
                0.00    0.00       2/77          termlist::termlist(int, int) [102]
                0.01    0.00      14/77          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
                0.05    0.00      61/77          quBaseState::opbegin() [54]
[53]     0.8    0.06    0.00      77         termlist::clear() [53]
-----------------------------------------------
                0.00    0.00       1/61          quBaseState::reset(bitvec const&) [110]
                0.01    0.05      60/61          quSubState::opbegin() [50]
[54]     0.7    0.01    0.05      61         quBaseState::opbegin() [54]
                0.05    0.00      61/77          termlist::clear() [53]
-----------------------------------------------
                0.00    0.00       1/3145324     yylex() [105]
                0.00    0.00       1/3145324     quBaseState::reset(bitvec const&) [110]
                0.00    0.00      24/3145324     ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00  130644/3145324     term::term() [94]
                0.03    0.00 1507327/3145324     term::term(term const&) [26]
                0.03    0.00 1507327/3145324     opMatrix::addterms(terminfo const&) const [10]
[55]     0.7    0.06    0.00 3145324         std::complex<double>::complex(double, double) [55]
-----------------------------------------------
                0.02    0.03 1507327/1507327     quSubState::baseterm(int) const [34]
[56]     0.6    0.02    0.03 1507327         quBaseState::baseterm(int) const [56]
                0.03    0.00 1507327/1507327     termlist::operator[](int) const [70]
-----------------------------------------------
                0.01    0.04 1490383/1490383     termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[57]     0.6    0.01    0.04 1490383         operator==(bitvec const&, bitvec const&) [57]
                0.04    0.00 1490383/1490383     bitvec::testeq(bitvec const&) const [65]
-----------------------------------------------
                                                 <spontaneous>
[58]     0.6    0.00    0.05                 __libc_csu_init [58]
                0.04    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [67]
                0.01    0.00       1/1           _GLOBAL__sub_I_nterms [88]
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [473]
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [474]
                0.00    0.00       1/1           _GLOBAL__sub_I_main [471]
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [475]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [462]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [467]
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [477]
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [476]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [478]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [463]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [464]
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [461]
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [470]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [468]
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [479]
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [480]
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [469]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [465]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [466]
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [460]
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [472]
-----------------------------------------------
                0.00    0.04       1/1           main [1]
[59]     0.5    0.00    0.04       1         QuHeap::~QuHeap() [59]
                0.00    0.04       1/1           quBaseState::~quBaseState() [62]
                0.00    0.00       5/16711736     bitvec::~bitvec() [18]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [445]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [544]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [541]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [572]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [574]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [578]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [576]
-----------------------------------------------
                0.04    0.00       2/2           termlist::~termlist() [61]
[60]     0.5    0.04    0.00       2         termlist::dellist() [60]
                0.00    0.00   65536/1637971     term::~term() [48]
-----------------------------------------------
                0.00    0.04       2/2           quBaseState::~quBaseState() [63]
[61]     0.5    0.00    0.04       2         termlist::~termlist() [61]
                0.04    0.00       2/2           termlist::dellist() [60]
-----------------------------------------------
                0.00    0.04       1/1           QuHeap::~QuHeap() [59]
[62]     0.5    0.00    0.04       1         quBaseState::~quBaseState() [62]
                0.00    0.04       1/1           quBaseState::~quBaseState() [63]
-----------------------------------------------
                0.00    0.04       1/1           quBaseState::~quBaseState() [62]
[63]     0.5    0.00    0.04       1         quBaseState::~quBaseState() [63]
                0.00    0.04       2/2           termlist::~termlist() [61]
                0.00    0.00       1/86          quState::~quState() [208]
-----------------------------------------------
                0.00    0.00       1/1507332     QuHeap::qualloc(int, BaseType) [77]
                0.04    0.00 1507331/1507332     operator&(bitvec const&, bitvec const&) [39]
[64]     0.5    0.04    0.00 1507332         bitvec::operator&=(bitvec const&) [64]
-----------------------------------------------
                0.04    0.00 1490383/1490383     operator==(bitvec const&, bitvec const&) [57]
[65]     0.5    0.04    0.00 1490383         bitvec::testeq(bitvec const&) const [65]
-----------------------------------------------
                0.00    0.00       1/87          quBaseState::quBaseState(int, int) [100]
                0.04    0.00      86/87          quSubState::quSubState(int) [68]
[66]     0.5    0.04    0.00      87         quState::quState(int) [66]
-----------------------------------------------
                0.04    0.00       1/1           __libc_csu_init [58]
[67]     0.5    0.04    0.00       1         _GLOBAL__sub_I_qc_check_txt [67]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [502]
-----------------------------------------------
                0.00    0.04      86/86          quSubString::quSubString(int, int, quState&) <cycle 5> [49]
[68]     0.5    0.00    0.04      86         quSubState::quSubState(int) [68]
                0.04    0.00      86/87          quState::quState(int) [66]
-----------------------------------------------
                0.00    0.00       1/4521990     quBaseState::reset(bitvec const&) [110]
                0.00    0.00       4/4521990     QuHeap::ncond() const [135]
                0.00    0.00       4/4521990     QuHeap::cmask() const [133]
                0.03    0.00 4521981/4521990     opMatrix::addterms(terminfo const&) const [10]
[69]     0.4    0.03    0.00 4521990         bitvec::length() const [69]
-----------------------------------------------
                0.03    0.00 1507327/1507327     quBaseState::baseterm(int) const [56]
[70]     0.4    0.03    0.00 1507327         termlist::operator[](int) const [70]
-----------------------------------------------
                                                 <spontaneous>
[71]     0.4    0.03    0.00                 termlist::operator=(termlist const&) [71]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.4    0.03    0.00                 term::nbits() const [72]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.4    0.03    0.00                 bitvec::testless(bitvec const&) const [73]
-----------------------------------------------
                0.00    0.00      38/334         tValue::operator=(tValue const&) [101]
                0.00    0.02     296/334         tValue::tValue(tValue const&) [76]
[74]     0.3    0.00    0.02     334         tValue::assign(tValue const&) [74]
                0.01    0.01      23/86          quState::newclone() <cycle 5> [128]
                0.00    0.00     334/872         tType::operator=(tType const&) [153]
                0.00    0.00     334/1100        tType::ord() const [150]
                0.00    0.00     334/1061        tType::basetype() const [151]
-----------------------------------------------
                0.00    0.02       1/1           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[75]     0.3    0.00    0.02       1         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.02       1/1           QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00       1/1           QuHeap::addReg(quState*) [108]
                0.00    0.00       1/86          quState::newclone() <cycle 5> [128]
                0.00    0.00       2/38          tValue::operator=(tValue const&) [101]
                0.00    0.00       1/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [119]
                0.00    0.00       1/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00       4/684         tValue::~tValue() [159]
                0.00    0.00       2/365         tValue::tValue() [172]
                0.00    0.00       2/9           tValue::isError() const [340]
                0.00    0.00       2/2           tValue::toInt() const [438]
                0.00    0.00       1/136         tType::isQuExpr() const [189]
                0.00    0.00       1/384         sDef::type() const [166]
                0.00    0.00       1/1           sDef::basetype() [512]
                0.00    0.00       1/8           sObject::isGlobal() const [348]
                0.00    0.00       1/17          tValue::qustate() const [317]
                0.00    0.00       1/179         sObject::def() const [187]
-----------------------------------------------
                0.00    0.00       1/296         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [123]
                0.00    0.00       4/296         tValue::conv(tType const&) const [120]
                0.00    0.00       4/296         SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00       4/296         sConst::eval(SymTable*, SymTable*, QuHeap*) [119]
                0.00    0.02     283/296         SymTab::put(sDef*, tValue const&) [78]
[76]     0.3    0.00    0.02     296         tValue::tValue(tValue const&) [76]
                0.00    0.02     296/334         tValue::assign(tValue const&) [74]
                0.00    0.00     296/1508        tType::tType(BaseType) [148]
-----------------------------------------------
                0.00    0.02       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
[77]     0.3    0.00    0.02       1         QuHeap::qualloc(int, BaseType) [77]
                0.02    0.00      15/15          bitvec::operator[](int) const [82]
                0.00    0.00       1/86          quBaseState::newsubstring(int, int) <cycle 5> [127]
                0.00    0.00       1/69          quState::mapmask() const [96]
                0.00    0.00       1/130         operator~(bitvec const&) [86]
                0.00    0.00       2/16711736     bitvec::~bitvec() [18]
                0.00    0.00       1/1507332     bitvec::operator&=(bitvec const&) [64]
                0.00    0.00       1/1           tValue::tValue(quState*, BaseType) [518]
-----------------------------------------------
                0.00    0.00       1/327         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       2/327         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/327         sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/327         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/327         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      36/327         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [103]
                0.00    0.02     275/327         sRoutDef::typecheck(SymTable*, SymTable*) [83]
[78]     0.3    0.00    0.02     327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.02     283/296         tValue::tValue(tValue const&) [76]
                0.00    0.00     327/371         sObject::isDef() const [170]
                0.00    0.00     327/382         sObject::isValueDef() const [168]
                0.00    0.00     276/276         SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
-----------------------------------------------
                0.02    0.00      60/60          opElementary::apply(quState&) const [9]
[79]     0.3    0.02    0.00      60         terminfo::terminfo() [79]
                0.00    0.00      60/130644      term::term() [94]
                0.00    0.00      60/6160244     bitvec::bitvec(int, unsigned long) [25]
-----------------------------------------------
                0.02    0.00 1507327/1507327     opMatrix::addterms(terminfo const&) const [10]
[80]     0.3    0.02    0.00 1507327         bitvec::getword() const [80]
-----------------------------------------------
                0.02    0.00      60/60          opElementary::apply(quState&) const [9]
[81]     0.3    0.02    0.00      60         quSubState::baseterms() const [81]
                0.00    0.00      60/60          quBaseState::baseterms() const [222]
-----------------------------------------------
                0.02    0.00      15/15          QuHeap::qualloc(int, BaseType) [77]
[82]     0.3    0.02    0.00      15         bitvec::operator[](int) const [82]
-----------------------------------------------
                0.00    0.02      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[83]     0.2    0.00    0.02      36         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.02     275/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00      44/44          sDefList::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       8/8           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
                0.00    0.00     734/21664       sDef::id() const [143]
                0.00    0.00     435/4230        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [145]
                0.00    0.00     275/365         tValue::tValue() [172]
                0.00    0.00     275/684         tValue::~tValue() [159]
                0.00    0.00     263/267         SymTab::getRef(std::string const&, ObjType*) const [178]
                0.00    0.00     263/297         sObject::isFunctDef() const [175]
                0.00    0.00     263/384         sDef::type() const [166]
                0.00    0.00     263/263         tType::isQuReg() const [183]
                0.00    0.00     263/560         sList<sDef>::next(void*&) const [160]
                0.00    0.00      72/80          SymTab::SymTab(int) [213]
                0.00    0.00      72/80          SymTab::~SymTab() [214]
                0.00    0.00      52/458         sObject::setParent(sObject*) [165]
                0.00    0.00      36/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00      36/179         sObject::def() const [187]
                0.00    0.00      36/101         sList<sDef>::first(void*&) const [194]
                0.00    0.00      36/76          sObject::isExtern() const [217]
                0.00    0.00       8/259         sObject::isRoutDef() const [184]
                0.00    0.00       8/37          sObject::isCondDef() const [263]
                0.00    0.00       8/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [335]
                0.00    0.00       8/30          sObject::isQuFunDef() const [270]
                0.00    0.00       8/10          SymTabComb::~SymTabComb() [336]
                0.00    0.00       3/3           sObject::isBennet() const [413]
-----------------------------------------------
                                                 <spontaneous>
[84]     0.2    0.02    0.00                 std::complex<double>::imag() [84]
-----------------------------------------------
                                                 <spontaneous>
[85]     0.2    0.02    0.00                 std::complex<double>::real() [85]
-----------------------------------------------
                0.00    0.00       1/130         QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00      60/130         opElementary::apply(quState&) const [9]
                0.01    0.00      69/130         quState::mapmask() const [96]
[86]     0.1    0.01    0.00     130         operator~(bitvec const&) [86]
                0.00    0.00     130/10551492     bitvec::bitvec(bitvec const&) [19]
                0.00    0.00     130/132         bitvec::qnot() [190]
-----------------------------------------------
                                  25             quState::newclone() <cycle 5> [128]
                0.03    0.03      60/86          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[87]     0.1    0.01    0.00      85         quSubString::newsubstring(int, int) <cycle 5> [87]
                                  85             quBaseState::newsubstring(int, int) <cycle 5> [127]
-----------------------------------------------
                0.01    0.00       1/1           __libc_csu_init [58]
[88]     0.1    0.01    0.00       1         _GLOBAL__sub_I_nterms [88]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [503]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.1    0.01    0.00                 bitvec::setbit(int, int) [89]
-----------------------------------------------
                                                 <spontaneous>
[90]     0.1    0.01    0.00                 bitvec::operator=(unsigned long) [90]
-----------------------------------------------
                                                 <spontaneous>
[91]     0.1    0.01    0.00                 bitvec::nset() const [91]
-----------------------------------------------
                                                 <spontaneous>
[92]     0.1    0.01    0.00                 bitvec::getword(int, int) const [92]
-----------------------------------------------
                                                 <spontaneous>
[93]     0.1    0.01    0.00                 std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [93]
-----------------------------------------------
                0.00    0.00      24/130644      opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
                0.00    0.00      60/130644      terminfo::terminfo() [79]
                0.00    0.01  130560/130644      termlist::newlist() [95]
[94]     0.1    0.00    0.01  130644         term::term() [94]
                0.01    0.00  130644/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00  130644/3145324     std::complex<double>::complex(double, double) [55]
-----------------------------------------------
                0.00    0.00       2/16          termlist::termlist(int, int) [102]
                0.00    0.01      14/16          termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[95]     0.1    0.00    0.01      16         termlist::newlist() [95]
                0.00    0.01  130560/130644      term::term() [94]
-----------------------------------------------
                0.00    0.00       1/69          QuHeap::qualloc(int, BaseType) [77]
                0.00    0.00       8/69          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      60/69          opElementary::apply(quState&) const [9]
[96]     0.1    0.00    0.01      69         quState::mapmask() const [96]
                0.01    0.00      69/130         operator~(bitvec const&) [86]
                0.00    0.00      69/3014723     quSubString::unmap(bitvec const&) const [15]
                0.00    0.00     138/16711736     bitvec::~bitvec() [18]
                0.00    0.00      69/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00      69/4522617     quState::mapbits() const [51]
-----------------------------------------------
                                                 <spontaneous>
[97]     0.1    0.01    0.00                 std::_Rb_tree<bitvec, bitvec, std::_Identity<bitvec>, std::less<bitvec>, std::allocator<bitvec> >::_Rb_tree(std::_Rb_tree<bitvec, bitvec, std::_Identity<bitvec>, std::less<bitvec>, std::allocator<bitvec> > const&) [97]
-----------------------------------------------
                                                 <spontaneous>
[98]     0.1    0.01    0.00                 std::pow(double, int) [98]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[99]     0.1    0.00    0.00       1         QuHeap::QuHeap(int, int) [99]
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [100]
                0.00    0.00       8/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00       3/7634506     bitvec::operator=(bitvec const&) [16]
                0.00    0.00       3/16711736     bitvec::~bitvec() [18]
                0.00    0.00       2/132         bitvec::qnot() [190]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [575]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [577]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [573]
                0.00    0.00       1/1           QuHeap::init() [517]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [99]
[100]    0.1    0.00    0.00       1         quBaseState::quBaseState(int, int) [100]
                0.00    0.00       2/2           termlist::termlist(int, int) [102]
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [110]
                0.00    0.00       1/87          quState::quState(int) [66]
                0.00    0.00       1/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00       1/16711736     bitvec::~bitvec() [18]
-----------------------------------------------
                0.00    0.00       2/38          sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/38          sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/38          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/38          sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00      21/38          sConst::sConst(tValue const&) [104]
[101]    0.0    0.00    0.00      38         tValue::operator=(tValue const&) [101]
                0.00    0.00      38/334         tValue::assign(tValue const&) [74]
                0.00    0.00      38/722         tValue::delpointer() [156]
-----------------------------------------------
                0.00    0.00       2/2           quBaseState::quBaseState(int, int) [100]
[102]    0.0    0.00    0.00       2         termlist::termlist(int, int) [102]
                0.00    0.00       2/77          termlist::clear() [53]
                0.00    0.00       2/16          termlist::newlist() [95]
                0.00    0.00       2/2           duallog(int) [416]
-----------------------------------------------
                0.00    0.00      36/36          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[103]    0.0    0.00    0.00      36         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [103]
                0.00    0.00      36/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00      36/179         sObject::def() const [187]
                0.00    0.00      36/365         tValue::tValue() [172]
                0.00    0.00      36/684         tValue::~tValue() [159]
-----------------------------------------------
                0.00    0.00       2/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00      19/21          yylex() [105]
[104]    0.0    0.00    0.00      21         sConst::sConst(tValue const&) [104]
                0.00    0.00      21/38          tValue::operator=(tValue const&) [101]
                0.00    0.00      21/66          tValue::type() const [218]
                0.00    0.00      21/21          sExpr::sExpr(tType const&) [290]
                0.00    0.00      21/365         tValue::tValue() [172]
-----------------------------------------------
                0.00    0.00    2362/2362        yyparse() [106]
[105]    0.0    0.00    0.00    2362         yylex() [105]
                0.00    0.00      19/21          sConst::sConst(tValue const&) [104]
                0.00    0.00       1/3145324     std::complex<double>::complex(double, double) [55]
                0.00    0.00      19/684         tValue::~tValue() [159]
                0.00    0.00      15/15          tValue::tValue(long) [326]
                0.00    0.00      12/12          yy_get_next_buffer() [331]
                0.00    0.00       8/8           yy_get_previous_state() [342]
                0.00    0.00       2/2           tValue::tValue(double) [425]
                0.00    0.00       1/26          yy_load_buffer_state() [275]
                0.00    0.00       1/1           tValue::tValue(std::complex<double> const&) [520]
                0.00    0.00       1/1           tValue::tValue(char const*) [519]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [114]
                0.00    0.00       2/4           parseobj() [113]
[106]    0.0    0.00    0.00       4         yyparse() [106]
                0.00    0.00    2362/2362        yylex() [105]
                0.00    0.00     269/269         sList<sDef>::append(sDef*) [177]
                0.00    0.00     268/1508        tType::tType(BaseType) [148]
                0.00    0.00     263/263         sArgDef::sArgDef(tType const&, std::string*) [179]
                0.00    0.00      47/47          sVar::sVar(std::string*) [229]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [259]
                0.00    0.00      44/44          sDefList::sDefList() [241]
                0.00    0.00      30/30          sList<sExpr>::append(sExpr*) [268]
                0.00    0.00      25/25          sExprList::sExprList() [278]
                0.00    0.00      23/23          sList<sStmt>::append(sStmt*) [285]
                0.00    0.00      19/19          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [299]
                0.00    0.00      18/18          sStmtList::sStmtList() [308]
                0.00    0.00      17/17          sCall::sCall(std::string*, sExprList*, int) [314]
                0.00    0.00      16/16          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [321]
                0.00    0.00       7/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [343]
                0.00    0.00       7/7           sIf::sIf(sExpr*, sStmtList*, sStmtList*) [350]
                0.00    0.00       6/6           sMult::sMult(sExpr*, sExpr*) [356]
                0.00    0.00       4/179         sObject::setFlag(ObjFlag, int) [186]
                0.00    0.00       4/4           sSubscript::sSubscript(sVar*, sExprList*) [375]
                0.00    0.00       4/4           sLength::sLength(sExpr*) [388]
                0.00    0.00       4/4           sLess::sLess(sExpr*, sExpr*) [381]
                0.00    0.00       4/4           sListFunct::sListFunct(ObjType, sExprList*) [371]
                0.00    0.00       3/5           sConstDef::sConstDef(std::string*, sExpr*) [361]
                0.00    0.00       3/3           sEqual::sEqual(sExpr*, sExpr*) [407]
                0.00    0.00       2/2           objlist::objlist() [427]
                0.00    0.00       2/2           tType::tType(BaseType, int) [424]
                0.00    0.00       2/2           sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [418]
                0.00    0.00       2/2           sSub::sSub(sExpr*, sExpr*) [421]
                0.00    0.00       2/2           sConcat::sConcat(sExpr*, sExpr*) [428]
                0.00    0.00       1/1           sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [521]
                0.00    0.00       1/1           sExit::sExit(sExpr*) [514]
                0.00    0.00       1/1           sOr::sOr(sExpr*, sExpr*) [509]
-----------------------------------------------
                               65024             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[107]    0.0    0.00    0.00   65024         termlist::add(term const&) <cycle 4> [107]
                0.00    0.00   65024/16628677     term::vect() const [35]
                0.00    0.00   65024/9076219     term::ampl() const [52]
                               65024             termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
[108]    0.0    0.00    0.00       1         QuHeap::addReg(quState*) [108]
                0.00    0.00       1/1           tValue::tValue(quState&, BaseType) [109]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [125]
                0.00    0.00       1/684         tValue::~tValue() [159]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [108]
[109]    0.0    0.00    0.00       1         tValue::tValue(quState&, BaseType) [109]
                0.00    0.00       1/86          quState::newclone() <cycle 5> [128]
                0.00    0.00       1/1508        tType::tType(BaseType) [148]
                0.00    0.00       1/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::quBaseState(int, int) [100]
[110]    0.0    0.00    0.00       1         quBaseState::reset(bitvec const&) [110]
                0.00    0.00       1/61          quBaseState::opbegin() [54]
                0.00    0.00       1/3014655     quBaseState::opadd(bitvec const&, std::complex<double> const&) [12]
                0.00    0.00       1/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00       1/16711736     bitvec::~bitvec() [18]
                0.00    0.00       1/3145324     std::complex<double>::complex(double, double) [55]
                0.00    0.00       1/1           quBaseState::basebits() const [136]
                0.00    0.00       1/4521990     bitvec::length() const [69]
                0.00    0.00       1/61          quBaseState::opend() [220]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[111]    0.0    0.00    0.00       4         sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       8/38          tValue::operator=(tValue const&) [101]
                0.00    0.00       8/8           SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00       8/64          sVar::id() const [219]
                0.00    0.00       8/684         tValue::~tValue() [159]
                0.00    0.00       4/365         tValue::tValue() [172]
                0.00    0.00       4/4           tValue::isExpr() const [399]
                0.00    0.00       4/102         sExpr::type() [193]
                0.00    0.00       4/66          tValue::type() const [218]
                0.00    0.00       4/13          tType::operator==(tType const&) const [330]
-----------------------------------------------
                0.00    0.00   15823/15823       termlist::add(bitvec const&, std::complex<double> const&) <cycle 4> [14]
[112]    0.0    0.00    0.00   15823         termlist::hashfunct2(bitvec const&) const [112]
                0.00    0.00   15823/3095516     bitvec::hashfunct() const [42]
-----------------------------------------------
                0.00    0.00       2/2           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[113]    0.0    0.00    0.00       2         parseobj() [113]
                0.00    0.00       2/4           yyparse() [106]
-----------------------------------------------
                0.00    0.00       2/2           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[114]    0.0    0.00    0.00       2         chksyntax(_IO_FILE*) [114]
                0.00    0.00       2/4           yyparse() [106]
                0.00    0.00       2/4           yyScanFile(_IO_FILE*) [366]
                0.00    0.00       2/2           yyCleanUp() [417]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[115]    0.0    0.00    0.00       3         sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       3/4           sConst::eval(SymTable*, SymTable*, QuHeap*) [119]
                0.00    0.00       3/38          tValue::operator=(tValue const&) [101]
                0.00    0.00       3/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00       6/684         tValue::~tValue() [159]
                0.00    0.00       3/365         tValue::tValue() [172]
                0.00    0.00       3/9           tValue::isError() const [340]
                0.00    0.00       3/66          tValue::type() const [218]
                0.00    0.00       3/384         sDef::type() const [166]
                0.00    0.00       3/13          tType::operator==(tType const&) const [330]
                0.00    0.00       3/179         sObject::def() const [187]
-----------------------------------------------
                0.00    0.00       1/7           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00       6/7           sDefList::typecheck(SymTable*, SymTable*) [117]
[116]    0.0    0.00    0.00       7         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       6/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00      29/179         sObject::def() const [187]
                0.00    0.00      23/384         sDef::type() const [166]
                0.00    0.00      16/41          tType::operator==(BaseType) const [262]
                0.00    0.00      11/136         tType::isQuExpr() const [189]
                0.00    0.00       7/21664       sDef::id() const [143]
                0.00    0.00       7/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00       6/365         tValue::tValue() [172]
                0.00    0.00       6/684         tValue::~tValue() [159]
                0.00    0.00       5/458         sObject::setParent(sObject*) [165]
                0.00    0.00       5/22          sObject::inFunctDef() const [289]
                0.00    0.00       5/102         sExpr::type() [193]
                0.00    0.00       5/183         sObject::isSet(ObjFlag) const [185]
                0.00    0.00       4/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00       4/21          sObject::inQuDef() const [296]
                0.00    0.00       4/37          sObject::isCondDef() const [263]
                0.00    0.00       4/179         sObject::setFlag(ObjFlag, int) [186]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       1/21          tType::isInt() const [295]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::typecheck(SymTable*, SymTable*) [83]
[117]    0.0    0.00    0.00      44         sDefList::typecheck(SymTable*, SymTable*) [117]
                0.00    0.00       6/7           sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00     269/458         sObject::setParent(sObject*) [165]
                0.00    0.00     269/560         sList<sDef>::next(void*&) const [160]
                0.00    0.00     263/263         sObject::typecheck(SymTable*, SymTable*) [182]
                0.00    0.00      44/101         sList<sDef>::first(void*&) const [194]
-----------------------------------------------
                0.00    0.00       8/8           sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
[118]    0.0    0.00    0.00       8         SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00       4/296         tValue::tValue(tValue const&) [76]
                0.00    0.00       4/365         tValue::tValue() [172]
                0.00    0.00       4/377         SymTab::getentry(SymTable::entry*, std::string const&) const [169]
                0.00    0.00       4/382         sObject::isValueDef() const [168]
                0.00    0.00       4/97          sVarDef::object() const [196]
-----------------------------------------------
                0.00    0.00       1/4           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/4           sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
[119]    0.0    0.00    0.00       4         sConst::eval(SymTable*, SymTable*, QuHeap*) [119]
                0.00    0.00       4/296         tValue::tValue(tValue const&) [76]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[120]    0.0    0.00    0.00       4         tValue::conv(tType const&) const [120]
                0.00    0.00       4/296         tValue::tValue(tValue const&) [76]
                0.00    0.00       4/13          tType::operator==(tType const&) const [330]
-----------------------------------------------
[121]    0.0    0.00    0.00       8+19      <cycle 3 as a whole> [121]
                0.00    0.00       2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00      18             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
                0.00    0.00       7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
-----------------------------------------------
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
[122]    0.0    0.00    0.00       2         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       2/21          sConst::sConst(tValue const&) [104]
                0.00    0.00       2/327         SymTab::put(sDef*, tValue const&) [78]
                0.00    0.00       8/458         sObject::setParent(sObject*) [165]
                0.00    0.00       4/102         sExpr::type() [193]
                0.00    0.00       4/21          tType::isInt() const [295]
                0.00    0.00       4/684         tValue::~tValue() [159]
                0.00    0.00       2/80          SymTab::SymTab(int) [213]
                0.00    0.00       2/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00       2/64          sVar::id() const [219]
                0.00    0.00       2/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00       2/97          sVarDef::object() const [196]
                0.00    0.00       2/19          sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00       2/21664       sDef::id() const [143]
                0.00    0.00       2/2           tValue::tValue(int) [426]
                0.00    0.00       2/5           sConstDef::sConstDef(std::string*, sExpr*) [361]
                0.00    0.00       2/1508        tType::tType(BaseType) [148]
                0.00    0.00       2/365         tValue::tValue() [172]
                0.00    0.00       2/5           sDef::settype(tType const&) [360]
                0.00    0.00       2/10          SymTabComb::SymTabComb(SymTable*, SymTable*) [335]
                0.00    0.00       2/10          SymTabComb::~SymTabComb() [336]
                0.00    0.00       2/5           sConstDef::~sConstDef() [362]
                0.00    0.00       2/80          SymTab::~SymTab() [214]
                                   2             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[123]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [123]
                0.00    0.00       1/296         tValue::tValue(tValue const&) [76]
                0.00    0.00       1/45          operator new(unsigned long, void*) [238]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [125]
[124]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [123]
                0.00    0.00       3/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [405]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [402]
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [457]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [538]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::begin() [571]
                0.00    0.00       1/1           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [535]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [553]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [459]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [452]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::addReg(quState*) [108]
[125]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [125]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::end() [570]
-----------------------------------------------
                0.00    0.00       4/4           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[126]    0.0    0.00    0.00       4         opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
                0.00    0.00      24/130644      term::term() [94]
                0.00    0.00      16/16          term::set(bitvec const&, std::complex<double> const&) [129]
                0.00    0.00      16/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00      16/16711736     bitvec::~bitvec() [18]
                0.00    0.00      16/16          std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [325]
                0.00    0.00       4/4           opMatrix::opMatrix(int) [391]
-----------------------------------------------
                                  85             quSubString::newsubstring(int, int) <cycle 5> [87]
                                  86             quState::newclone() <cycle 5> [128]
                0.00    0.00       1/86          QuHeap::qualloc(int, BaseType) [77]
[127]    0.0    0.00    0.00     172         quBaseState::newsubstring(int, int) <cycle 5> [127]
                0.00    0.00     258/4522617     quState::mapbits() const [51]
                                  86             quSubString::quSubString(int, int, quState&) <cycle 5> [49]
-----------------------------------------------
                                  86             quSubString::quSubString(int, int, quState&) <cycle 5> [49]
                0.00    0.00       1/86          tValue::tValue(quState&, BaseType) [109]
                0.00    0.00       1/86          sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.01    0.01      23/86          tValue::assign(tValue const&) [74]
[128]    0.0    0.00    0.00     111         quState::newclone() <cycle 5> [128]
                0.00    0.00     111/4522617     quState::mapbits() const [51]
                                  86             quBaseState::newsubstring(int, int) <cycle 5> [127]
                                  25             quSubString::newsubstring(int, int) <cycle 5> [87]
-----------------------------------------------
                0.00    0.00      16/16          opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
[129]    0.0    0.00    0.00      16         term::set(bitvec const&, std::complex<double> const&) [129]
                0.00    0.00      16/7634506     bitvec::operator=(bitvec const&) [16]
-----------------------------------------------
                0.00    0.00       4/4           ext_bit(sRoutDef const*, SymTable const*, int) [5]
[130]    0.0    0.00    0.00       4         opBit::~opBit() [130]
                0.00    0.00       4/4           opBit::~opBit() [131]
-----------------------------------------------
                0.00    0.00       4/4           opBit::~opBit() [130]
[131]    0.0    0.00    0.00       4         opBit::~opBit() [131]
                0.00    0.00       4/4           opMatrix::~opMatrix() [132]
-----------------------------------------------
                0.00    0.00       4/4           opBit::~opBit() [131]
[132]    0.0    0.00    0.00       4         opMatrix::~opMatrix() [132]
                0.00    0.00      24/1637971     term::~term() [48]
                0.00    0.00       4/4           opElementary::~opElementary() [379]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[133]    0.0    0.00    0.00       4         QuHeap::cmask() const [133]
                0.00    0.00       4/6160244     bitvec::bitvec(int, unsigned long) [25]
                0.00    0.00       4/4521990     bitvec::length() const [69]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[134]    0.0    0.00    0.00       4         QuHeap::cond() const [134]
                0.00    0.00       4/4           QuHeap::ncond() const [135]
-----------------------------------------------
                0.00    0.00       4/4           QuHeap::cond() const [134]
[135]    0.0    0.00    0.00       4         QuHeap::ncond() const [135]
                0.00    0.00       4/4521990     bitvec::length() const [69]
-----------------------------------------------
                0.00    0.00       1/1           quBaseState::reset(bitvec const&) [110]
[136]    0.0    0.00    0.00       1         quBaseState::basebits() const [136]
                0.00    0.00       1/4522617     quState::mapbits() const [51]
-----------------------------------------------
[137]    0.0    0.00    0.00      26+107     <cycle 1 as a whole> [137]
                0.00    0.00      25             sExprList::~sExprList() <cycle 1> [280]
                0.00    0.00      25             sList<sExpr>::~sList() <cycle 1> [277]
                0.00    0.00      25             sExprList::~sExprList() <cycle 1> [279]
                0.00    0.00      18             sBinOp::~sBinOp() <cycle 1> [306]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [357]
                0.00    0.00       6             sMult::~sMult() <cycle 1> [358]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [372]
                0.00    0.00       4             sListFunct::~sListFunct() <cycle 1> [373]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [382]
                0.00    0.00       4             sLess::~sLess() <cycle 1> [383]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [376]
                0.00    0.00       4             sSubscript::~sSubscript() <cycle 1> [377]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [429]
                0.00    0.00       2             sConcat::~sConcat() <cycle 1> [430]
-----------------------------------------------
[138]    0.0    0.00    0.00       8+64      <cycle 2 as a whole> [138]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [310]
                0.00    0.00      18             sList<sStmt>::~sList() <cycle 2> [304]
                0.00    0.00      18             sStmtList::~sStmtList() <cycle 2> [309]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [351]
                0.00    0.00       7             sIf::~sIf() <cycle 2> [352]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [419]
                0.00    0.00       2             sFor::~sFor() <cycle 2> [420]
-----------------------------------------------
                0.00    0.00       2/21664       sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/21664       sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       7/21664       sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       8/21664       ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00     734/21664       sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00    7596/21664       SymTab::getentry(SymTable::entry*, std::string const&) const [169]
                0.00    0.00   13314/21664       SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
[143]    0.0    0.00    0.00   21664         sDef::id() const [143]
-----------------------------------------------
                0.00    0.00    3254/6528        SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
                0.00    0.00    3274/6528        SymTab::getentry(SymTable::entry*, std::string const&) const [169]
[144]    0.0    0.00    0.00    6528         bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144]
-----------------------------------------------
                0.00    0.00     435/4230        sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00    3795/4230        SymTab::getentry(SymTable::entry*, std::string const&) const [169]
[145]    0.0    0.00    0.00    4230         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [145]
                0.00    0.00    2939/2939        std::char_traits<char>::compare(char const*, char const*, unsigned long) [147]
-----------------------------------------------
                0.00    0.00     527/3930        SymTab::getentry(SymTable::entry*, std::string const&) const [169]
                0.00    0.00    3403/3930        SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
[146]    0.0    0.00    0.00    3930         bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [146]
-----------------------------------------------
                0.00    0.00    2939/2939        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [145]
[147]    0.0    0.00    0.00    2939         std::char_traits<char>::compare(char const*, char const*, unsigned long) [147]
-----------------------------------------------
                0.00    0.00       1/1508        tValue::tValue(std::complex<double> const&) [520]
                0.00    0.00       1/1508        tValue::tValue(char const*) [519]
                0.00    0.00       1/1508        tValue::tValue(quState&, BaseType) [109]
                0.00    0.00       1/1508        tValue::tValue(quState*, BaseType) [518]
                0.00    0.00       1/1508        __static_initialization_and_destruction_0(int, int) [484]
                0.00    0.00       1/1508        sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [521]
                0.00    0.00       2/1508        tValue::tValue(int) [426]
                0.00    0.00       2/1508        tValue::tValue(double) [425]
                0.00    0.00       2/1508        sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       4/1508        sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/1508        sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       5/1508        sConstDef::sConstDef(std::string*, sExpr*) [361]
                0.00    0.00       8/1508        sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00      15/1508        tValue::tValue(long) [326]
                0.00    0.00      16/1508        sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [321]
                0.00    0.00      19/1508        sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [299]
                0.00    0.00      21/1508        sExpr::sExpr(tType const&) [290]
                0.00    0.00      34/1508        sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      52/1508        sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      77/1508        sExpr::sExpr() [216]
                0.00    0.00     268/1508        yyparse() [106]
                0.00    0.00     296/1508        tValue::tValue(tValue const&) [76]
                0.00    0.00     312/1508        sDef::sDef(tType const&, std::string*) [173]
                0.00    0.00     365/1508        tValue::tValue() [172]
[148]    0.0    0.00    0.00    1508         tType::tType(BaseType) [148]
-----------------------------------------------
                0.00    0.00     534/1122        sObject::isDef() const [170]
                0.00    0.00     588/1122        sObject::isValueDef() const [168]
[149]    0.0    0.00    0.00    1122         sArgDef::object() const [149]
-----------------------------------------------
                0.00    0.00       8/1100        sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00      36/1100        sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00     334/1100        tValue::assign(tValue const&) [74]
                0.00    0.00     722/1100        tValue::ord() const [157]
[150]    0.0    0.00    0.00    1100         tType::ord() const [150]
-----------------------------------------------
                0.00    0.00       1/1061        sDef::basetype() [512]
                0.00    0.00       4/1061        sExpr::basetype() [380]
                0.00    0.00     334/1061        tValue::assign(tValue const&) [74]
                0.00    0.00     722/1061        tValue::basetype() const [158]
[151]    0.0    0.00    0.00    1061         tType::basetype() const [151]
-----------------------------------------------
                0.00    0.00     100/905         sObject::isSetRec(ObjFlag) [320]
                0.00    0.00     805/905         sObject::def() const [187]
[152]    0.0    0.00    0.00     905         sObject::parent() const [152]
-----------------------------------------------
                0.00    0.00       1/872         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       5/872         sDef::settype(tType const&) [360]
                0.00    0.00      21/872         sExpr::sExpr(tType const&) [290]
                0.00    0.00      36/872         sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      48/872         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00     115/872         sExpr::settype(tType const&) [192]
                0.00    0.00     312/872         sDef::sDef(tType const&, std::string*) [173]
                0.00    0.00     334/872         tValue::assign(tValue const&) [74]
[153]    0.0    0.00    0.00     872         tType::operator=(tType const&) [153]
-----------------------------------------------
                0.00    0.00     841/841         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [235]
[154]    0.0    0.00    0.00     841         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [154]
-----------------------------------------------
                0.00    0.00     795/795         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [235]
[155]    0.0    0.00    0.00     795         std::_List_const_iterator<sObject*>::operator++() [155]
-----------------------------------------------
                0.00    0.00      38/722         tValue::operator=(tValue const&) [101]
                0.00    0.00     684/722         tValue::~tValue() [159]
[156]    0.0    0.00    0.00     722         tValue::delpointer() [156]
                0.00    0.00     722/722         tValue::ord() const [157]
                0.00    0.00     722/722         tValue::basetype() const [158]
                0.00    0.00      25/25          quSubState::isbasestate() const [281]
                0.00    0.00      25/85          quSubString::~quSubString() [210]
-----------------------------------------------
                0.00    0.00     722/722         tValue::delpointer() [156]
[157]    0.0    0.00    0.00     722         tValue::ord() const [157]
                0.00    0.00     722/1100        tType::ord() const [150]
-----------------------------------------------
                0.00    0.00     722/722         tValue::delpointer() [156]
[158]    0.0    0.00    0.00     722         tValue::basetype() const [158]
                0.00    0.00     722/1061        tType::basetype() const [151]
-----------------------------------------------
                0.00    0.00       1/684         QuHeap::addReg(quState*) [108]
                0.00    0.00       1/684         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [525]
                0.00    0.00       4/684         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       4/684         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       4/684         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       4/684         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       6/684         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       6/684         sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       8/684         sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00      12/684         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      19/684         yylex() [105]
                0.00    0.00      21/684         sConst::~sConst() [292]
                0.00    0.00      36/684         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [103]
                0.00    0.00     275/684         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00     283/684         SymTab::deltree(SymTable::entry*) [225]
[159]    0.0    0.00    0.00     684         tValue::~tValue() [159]
                0.00    0.00     684/722         tValue::delpointer() [156]
-----------------------------------------------
                0.00    0.00       4/560         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      24/560         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00     263/560         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00     269/560         sDefList::typecheck(SymTable*, SymTable*) [117]
[160]    0.0    0.00    0.00     560         sList<sDef>::next(void*&) const [160]
-----------------------------------------------
                0.00    0.00      66/552         tValue::type() const [218]
                0.00    0.00     102/552         sExpr::type() [193]
                0.00    0.00     384/552         sDef::type() const [166]
[161]    0.0    0.00    0.00     552         tType::tType(tType const&) [161]
-----------------------------------------------
                0.00    0.00      18/524         sList<sStmt>::sList() [303]
                0.00    0.00      21/524         sExpr::sExpr(tType const&) [290]
                0.00    0.00      25/524         sList<sExpr>::sList() [276]
                0.00    0.00      27/524         sStmt::sStmt(int) [273]
                0.00    0.00      44/524         sList<sDef>::sList() [239]
                0.00    0.00      77/524         sExpr::sExpr() [216]
                0.00    0.00     312/524         sDef::sDef(tType const&, std::string*) [173]
[162]    0.0    0.00    0.00     524         sObject::sObject(unsigned int) [162]
-----------------------------------------------
                0.00    0.00      18/524         sList<sStmt>::~sList() <cycle 2> [304]
                0.00    0.00      25/524         sList<sExpr>::~sList() <cycle 1> [277]
                0.00    0.00      27/524         sStmt::~sStmt() [274]
                0.00    0.00      44/524         sList<sDef>::~sList() [240]
                0.00    0.00      98/524         sExpr::~sExpr() [195]
                0.00    0.00     312/524         sDef::~sDef() [174]
[163]    0.0    0.00    0.00     524         sObject::~sObject() [163]
-----------------------------------------------
                0.00    0.00       1/465         tValue::tValue(std::complex<double> const&) [520]
                0.00    0.00       1/465         tValue::tValue(char const*) [519]
                0.00    0.00       1/465         tValue::tValue(quState&, BaseType) [109]
                0.00    0.00       1/465         tValue::tValue(quState*, BaseType) [518]
                0.00    0.00       2/465         tValue::tValue(int) [426]
                0.00    0.00       2/465         tValue::tValue(double) [425]
                0.00    0.00      15/465         tValue::tValue(long) [326]
                0.00    0.00      77/465         sExpr::sExpr() [216]
                0.00    0.00     365/465         tValue::tValue() [172]
[164]    0.0    0.00    0.00     465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       1/458         sExit::typecheck(SymTable*, SymTable*) [513]
                0.00    0.00       3/458         sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       4/458         sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       4/458         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       5/458         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       6/458         sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00       8/458         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       8/458         sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00      15/458         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                0.00    0.00      23/458         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
                0.00    0.00      24/458         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      36/458         sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      52/458         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00     269/458         sDefList::typecheck(SymTable*, SymTable*) [117]
[165]    0.0    0.00    0.00     458         sObject::setParent(sObject*) [165]
-----------------------------------------------
                0.00    0.00       1/384         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/384         sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/384         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      23/384         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      43/384         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      47/384         sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00     263/384         sRoutDef::typecheck(SymTable*, SymTable*) [83]
[166]    0.0    0.00    0.00     384         sDef::type() const [166]
                0.00    0.00     384/552         tType::tType(tType const&) [161]
-----------------------------------------------
                0.00    0.00       9/384         sObject::isProcDef() const [319]
                0.00    0.00      10/384         sObject::isQuFunDef() const [270]
                0.00    0.00      12/384         sObject::isQuOpDef() const [283]
                0.00    0.00      19/384         sObject::isInclude() const [248]
                0.00    0.00      23/384         sObject::isValueDef() const [168]
                0.00    0.00      84/384         sObject::isDef() const [170]
                0.00    0.00      96/384         sObject::isRoutDef() const [184]
                0.00    0.00     131/384         sObject::isFunctDef() const [175]
[167]    0.0    0.00    0.00     384         sQuOpDef::object() const [167]
-----------------------------------------------
                0.00    0.00       4/382         SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00       4/382         SymTab::getRef(std::string const&, ObjType*) const [178]
                0.00    0.00      47/382         sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00     327/382         SymTab::put(sDef*, tValue const&) [78]
[168]    0.0    0.00    0.00     382         sObject::isValueDef() const [168]
                0.00    0.00     588/1122        sArgDef::object() const [149]
                0.00    0.00      62/97          sVarDef::object() const [196]
                0.00    0.00      26/48          sConstDef::object() const [227]
                0.00    0.00      23/384         sQuOpDef::object() const [167]
                0.00    0.00      19/369         sQuFunDef::object() const [171]
                0.00    0.00       2/58          sProcDef::object() const [224]
-----------------------------------------------
                                3418             SymTab::getentry(SymTable::entry*, std::string const&) const [169]
                0.00    0.00       4/377         SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00     142/377         SymTab::getDef(std::string const&) const [188]
                0.00    0.00     231/377         SymTab::getRef(std::string const&, ObjType*) const [178]
[169]    0.0    0.00    0.00     377+3418    SymTab::getentry(SymTable::entry*, std::string const&) const [169]
                0.00    0.00    7596/21664       sDef::id() const [143]
                0.00    0.00    3795/4230        __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [145]
                0.00    0.00    3274/6528        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144]
                0.00    0.00     527/3930        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [146]
                                3418             SymTab::getentry(SymTable::entry*, std::string const&) const [169]
-----------------------------------------------
                0.00    0.00      44/371         qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00     327/371         SymTab::put(sDef*, tValue const&) [78]
[170]    0.0    0.00    0.00     371         sObject::isDef() const [170]
                0.00    0.00     534/1122        sArgDef::object() const [149]
                0.00    0.00      84/384         sQuOpDef::object() const [167]
                0.00    0.00      70/369         sQuFunDef::object() const [171]
                0.00    0.00      24/97          sVarDef::object() const [196]
                0.00    0.00      16/48          sConstDef::object() const [227]
                0.00    0.00       6/58          sProcDef::object() const [224]
                0.00    0.00       4/23          sCall::object() const [286]
-----------------------------------------------
                0.00    0.00       5/369         sObject::isProcDef() const [319]
                0.00    0.00      10/369         sObject::isQuOpDef() const [283]
                0.00    0.00      13/369         sObject::isQuFunDef() const [270]
                0.00    0.00      16/369         sObject::isInclude() const [248]
                0.00    0.00      19/369         sObject::isValueDef() const [168]
                0.00    0.00      70/369         sObject::isDef() const [170]
                0.00    0.00      74/369         sObject::isRoutDef() const [184]
                0.00    0.00     162/369         sObject::isFunctDef() const [175]
[171]    0.0    0.00    0.00     369         sQuFunDef::object() const [171]
-----------------------------------------------
                0.00    0.00       2/365         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       2/365         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/365         sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/365         sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00       4/365         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       4/365         SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00       4/365         sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       4/365         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/365         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      21/365         sConst::sConst(tValue const&) [104]
                0.00    0.00      36/365         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [103]
                0.00    0.00     275/365         sRoutDef::typecheck(SymTable*, SymTable*) [83]
[172]    0.0    0.00    0.00     365         tValue::tValue() [172]
                0.00    0.00     365/1508        tType::tType(BaseType) [148]
                0.00    0.00     365/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::sConstDef(std::string*, sExpr*) [361]
                0.00    0.00       8/312         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [343]
                0.00    0.00      36/312         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [264]
                0.00    0.00     263/312         sArgDef::sArgDef(tType const&, std::string*) [179]
[173]    0.0    0.00    0.00     312         sDef::sDef(tType const&, std::string*) [173]
                0.00    0.00     312/524         sObject::sObject(unsigned int) [162]
                0.00    0.00     312/1508        tType::tType(BaseType) [148]
                0.00    0.00     312/872         tType::operator=(tType const&) [153]
-----------------------------------------------
                0.00    0.00       5/312         sConstDef::~sConstDef() [363]
                0.00    0.00       8/312         sVarDef::~sVarDef() [354]
                0.00    0.00      36/312         sRoutDef::~sRoutDef() [265]
                0.00    0.00     263/312         sArgDef::~sArgDef() [181]
[174]    0.0    0.00    0.00     312         sDef::~sDef() [174]
                0.00    0.00     312/524         sObject::~sObject() [163]
-----------------------------------------------
                0.00    0.00      17/297         sObject::inFunctDef() const [289]
                0.00    0.00      17/297         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00     263/297         sRoutDef::typecheck(SymTable*, SymTable*) [83]
[175]    0.0    0.00    0.00     297         sObject::isFunctDef() const [175]
                0.00    0.00     162/369         sQuFunDef::object() const [171]
                0.00    0.00     131/384         sQuOpDef::object() const [167]
                0.00    0.00       4/58          sProcDef::object() const [224]
-----------------------------------------------
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
                0.00    0.00     276/276         SymTab::put(sDef*, tValue const&) [78]
[176]    0.0    0.00    0.00     276+3127    SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
                0.00    0.00   13314/21664       sDef::id() const [143]
                0.00    0.00    3403/3930        bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [146]
                0.00    0.00    3254/6528        bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [144]
                                3127             SymTab::putentry(SymTable::entry*, SymTable::entry*) [176]
-----------------------------------------------
                0.00    0.00     269/269         yyparse() [106]
[177]    0.0    0.00    0.00     269         sList<sDef>::append(sDef*) [177]
-----------------------------------------------
                0.00    0.00       4/267         ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00     263/267         sRoutDef::typecheck(SymTable*, SymTable*) [83]
[178]    0.0    0.00    0.00     267         SymTab::getRef(std::string const&, ObjType*) const [178]
                0.00    0.00     231/377         SymTab::getentry(SymTable::entry*, std::string const&) const [169]
                0.00    0.00       4/382         sObject::isValueDef() const [168]
-----------------------------------------------
                0.00    0.00     263/263         yyparse() [106]
[179]    0.0    0.00    0.00     263         sArgDef::sArgDef(tType const&, std::string*) [179]
                0.00    0.00     263/312         sDef::sDef(tType const&, std::string*) [173]
-----------------------------------------------
                0.00    0.00     263/263         sList<sDef>::~sList() [240]
[180]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [180]
                0.00    0.00     263/263         sArgDef::~sArgDef() [181]
-----------------------------------------------
                0.00    0.00     263/263         sArgDef::~sArgDef() [180]
[181]    0.0    0.00    0.00     263         sArgDef::~sArgDef() [181]
                0.00    0.00     263/312         sDef::~sDef() [174]
-----------------------------------------------
                0.00    0.00     263/263         sDefList::typecheck(SymTable*, SymTable*) [117]
[182]    0.0    0.00    0.00     263         sObject::typecheck(SymTable*, SymTable*) [182]
-----------------------------------------------
                0.00    0.00     263/263         sRoutDef::typecheck(SymTable*, SymTable*) [83]
[183]    0.0    0.00    0.00     263         tType::isQuReg() const [183]
-----------------------------------------------
                0.00    0.00       8/259         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00      17/259         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00     234/259         sObject::def() const [187]
[184]    0.0    0.00    0.00     259         sObject::isRoutDef() const [184]
                0.00    0.00      96/384         sQuOpDef::object() const [167]
                0.00    0.00      78/78          sStmtList::object() const [215]
                0.00    0.00      74/369         sQuFunDef::object() const [171]
                0.00    0.00      34/34          sDefList::object() const [266]
                0.00    0.00      32/58          sProcDef::object() const [224]
                0.00    0.00      21/21          sIf::object() const [293]
                0.00    0.00      15/15          sFor::object() const [327]
                0.00    0.00       7/23          sCall::object() const [286]
                0.00    0.00       3/9           sMult::object() const [338]
-----------------------------------------------
                0.00    0.00       3/183         sObject::isBennet() const [413]
                0.00    0.00       4/183         sStmt::isInv() const [396]
                0.00    0.00       5/183         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      37/183         sObject::isCondDef() const [263]
                0.00    0.00      58/183         sObject::isSetRec(ObjFlag) [320]
                0.00    0.00      76/183         sObject::isExtern() const [217]
[185]    0.0    0.00    0.00     183         sObject::isSet(ObjFlag) const [185]
-----------------------------------------------
                0.00    0.00       4/179         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       4/179         yyparse() [106]
                0.00    0.00      27/179         sStmt::sStmt(int) [273]
                0.00    0.00     144/179         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [264]
[186]    0.0    0.00    0.00     179         sObject::setFlag(ObjFlag, int) [186]
-----------------------------------------------
                                 158             sObject::def() const [187]
                0.00    0.00       1/179         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/179         sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       6/179         sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       8/179         sObject::isGlobal() const [348]
                0.00    0.00      17/179         sObject::inQuFunDef() const [318]
                0.00    0.00      21/179         sObject::inQuDef() const [296]
                0.00    0.00      22/179         sObject::inFunctDef() const [289]
                0.00    0.00      29/179         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      36/179         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00      36/179         sRoutDef::define(SymTable*, SymTable*, QuHeap*) [103]
[187]    0.0    0.00    0.00     179+158     sObject::def() const [187]
                0.00    0.00     805/905         sObject::parent() const [152]
                0.00    0.00     234/259         sObject::isRoutDef() const [184]
                                 158             sObject::def() const [187]
-----------------------------------------------
                0.00    0.00       2/147         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/147         sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       4/147         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00       4/147         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       7/147         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      36/147         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00      38/147         sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00      53/147         SymTabComb::getDef(std::string const&) const [271]
[188]    0.0    0.00    0.00     147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00     142/377         SymTab::getentry(SymTable::entry*, std::string const&) const [169]
-----------------------------------------------
                0.00    0.00       1/136         sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       2/136         tType::isConv(tType const&) const [284]
                0.00    0.00       3/136         sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       4/136         sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       8/136         sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00      11/136         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      24/136         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      25/136         tValue::isQuExpr() const [282]
                0.00    0.00      26/136         sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      32/136         tType::isQuCond() const [267]
[189]    0.0    0.00    0.00     136         tType::isQuExpr() const [189]
-----------------------------------------------
                0.00    0.00       2/132         QuHeap::QuHeap(int, int) [99]
                0.00    0.00     130/132         operator~(bitvec const&) [86]
[190]    0.0    0.00    0.00     132         bitvec::qnot() [190]
-----------------------------------------------
                0.00    0.00      44/132         std::list<sObject*, std::allocator<sObject*> >::end() [254]
                0.00    0.00      88/132         std::list<sObject*, std::allocator<sObject*> >::begin() [206]
[191]    0.0    0.00    0.00     132         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00       4/115         sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/115         sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       4/115         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00      18/115         sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      19/115         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      19/115         sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      47/115         sVar::typecheck(SymTable*, SymTable*) [228]
[192]    0.0    0.00    0.00     115         sExpr::settype(tType const&) [192]
                0.00    0.00     115/872         tType::operator=(tType const&) [153]
-----------------------------------------------
                0.00    0.00       1/102         sExit::typecheck(SymTable*, SymTable*) [513]
                0.00    0.00       3/102         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       4/102         sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       4/102         sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       4/102         sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00       5/102         sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       6/102         sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       7/102         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                0.00    0.00       8/102         sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00      24/102         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      36/102         sBinOp::typecheck(SymTable*, SymTable*) [329]
[193]    0.0    0.00    0.00     102         sExpr::type() [193]
                0.00    0.00     102/552         tType::tType(tType const&) [161]
-----------------------------------------------
                0.00    0.00       4/101         sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/101         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      36/101         sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00      44/101         sDefList::typecheck(SymTable*, SymTable*) [117]
[194]    0.0    0.00    0.00     101         sList<sDef>::first(void*&) const [194]
-----------------------------------------------
                0.00    0.00       4/98          sSubscript::~sSubscript() <cycle 1> [377]
                0.00    0.00       4/98          sUnOp::~sUnOp() [386]
                0.00    0.00       4/98          sListFunct::~sListFunct() <cycle 1> [373]
                0.00    0.00      18/98          sBinOp::~sBinOp() <cycle 1> [306]
                0.00    0.00      21/98          sConst::~sConst() [292]
                0.00    0.00      47/98          sVar::~sVar() [231]
[195]    0.0    0.00    0.00      98         sExpr::~sExpr() [195]
                0.00    0.00      98/524         sObject::~sObject() [163]
-----------------------------------------------
                0.00    0.00       1/97          sObject::isInclude() const [248]
                0.00    0.00       2/97          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       4/97          sObject::isConstDef() const [355]
                0.00    0.00       4/97          SymTab::getVal(std::string const&, ObjType*) const [118]
                0.00    0.00      24/97          sObject::isDef() const [170]
                0.00    0.00      62/97          sObject::isValueDef() const [168]
[196]    0.0    0.00    0.00      97         sVarDef::object() const [196]
-----------------------------------------------
                0.00    0.00      46/92          std::list<sObject*, std::allocator<sObject*> >::begin() const [234]
                0.00    0.00      46/92          std::list<sObject*, std::allocator<sObject*> >::end() const [232]
[197]    0.0    0.00    0.00      92         std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [197]
-----------------------------------------------
                0.00    0.00      10/90          SymTabComb::SymTabComb(SymTable*, SymTable*) [335]
                0.00    0.00      80/90          SymTab::SymTab(int) [213]
[198]    0.0    0.00    0.00      90         SymTable::SymTable() [198]
-----------------------------------------------
                0.00    0.00      10/90          SymTabComb::~SymTabComb() [337]
                0.00    0.00      80/90          SymTab::~SymTab() [214]
[199]    0.0    0.00    0.00      90         SymTable::~SymTable() [199]
-----------------------------------------------
                0.00    0.00      88/88          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
[200]    0.0    0.00    0.00      88         __gnu_cxx::new_allocator<sObject*>::new_allocator() [200]
-----------------------------------------------
                0.00    0.00      88/88          std::allocator<sObject*>::~allocator() [205]
[201]    0.0    0.00    0.00      88         __gnu_cxx::new_allocator<sObject*>::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
[202]    0.0    0.00    0.00      88         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      88/88          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [203]
                0.00    0.00      88/88          std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
-----------------------------------------------
                0.00    0.00      88/88          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
[203]    0.0    0.00    0.00      88         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const [203]
-----------------------------------------------
                0.00    0.00      88/88          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
[204]    0.0    0.00    0.00      88         std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&) [204]
                0.00    0.00      88/88          __gnu_cxx::new_allocator<sObject*>::new_allocator() [200]
-----------------------------------------------
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
[205]    0.0    0.00    0.00      88         std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      88/88          __gnu_cxx::new_allocator<sObject*>::~new_allocator() [201]
-----------------------------------------------
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::front() [255]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::pop_front() [258]
[206]    0.0    0.00    0.00      88         std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      88/132         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
[207]    0.0    0.00    0.00      88         sObject** std::__addressof<sObject*>(sObject*&) [207]
-----------------------------------------------
                0.00    0.00       1/86          quBaseState::~quBaseState() [63]
                0.00    0.00      85/86          quSubState::~quSubState() [209]
[208]    0.0    0.00    0.00      86         quState::~quState() [208]
-----------------------------------------------
                0.00    0.00      85/85          quSubString::~quSubString() [211]
[209]    0.0    0.00    0.00      85         quSubState::~quSubState() [209]
                0.00    0.00      85/85          quBaseState::isbasestate() const [212]
                0.00    0.00      85/86          quState::~quState() [208]
-----------------------------------------------
                0.00    0.00      25/85          tValue::delpointer() [156]
                0.00    0.00      60/85          ext_bit(sRoutDef const*, SymTable const*, int) [5]
[210]    0.0    0.00    0.00      85         quSubString::~quSubString() [210]
                0.00    0.00      85/85          quSubString::~quSubString() [211]
-----------------------------------------------
                0.00    0.00      85/85          quSubString::~quSubString() [210]
[211]    0.0    0.00    0.00      85         quSubString::~quSubString() [211]
                0.00    0.00      85/85          quSubState::~quSubState() [209]
-----------------------------------------------
                0.00    0.00      85/85          quSubState::~quSubState() [209]
[212]    0.0    0.00    0.00      85         quBaseState::isbasestate() const [212]
-----------------------------------------------
                0.00    0.00       2/80          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       2/80          main [1]
                0.00    0.00       4/80          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      72/80          sRoutDef::typecheck(SymTable*, SymTable*) [83]
[213]    0.0    0.00    0.00      80         SymTab::SymTab(int) [213]
                0.00    0.00      80/90          SymTable::SymTable() [198]
-----------------------------------------------
                0.00    0.00       2/80          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       2/80          main [1]
                0.00    0.00       4/80          SymTab::~SymTab() [387]
                0.00    0.00      72/80          sRoutDef::typecheck(SymTable*, SymTable*) [83]
[214]    0.0    0.00    0.00      80         SymTab::~SymTab() [214]
                0.00    0.00      80/90          SymTable::~SymTable() [199]
                0.00    0.00      51/51          SymTab::deltree(SymTable::entry*) [225]
-----------------------------------------------
                0.00    0.00      78/78          sObject::isRoutDef() const [184]
[215]    0.0    0.00    0.00      78         sStmtList::object() const [215]
-----------------------------------------------
                0.00    0.00       4/77          sSubscript::sSubscript(sVar*, sExprList*) [375]
                0.00    0.00       4/77          sUnOp::sUnOp(sExpr*) [385]
                0.00    0.00       4/77          sListFunct::sListFunct(ObjType, sExprList*) [371]
                0.00    0.00      18/77          sBinOp::sBinOp(sExpr*, sExpr*) [305]
                0.00    0.00      47/77          sVar::sVar(std::string*) [229]
[216]    0.0    0.00    0.00      77         sExpr::sExpr() [216]
                0.00    0.00      77/524         sObject::sObject(unsigned int) [162]
                0.00    0.00      77/1508        tType::tType(BaseType) [148]
                0.00    0.00      77/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       4/76          sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [8]
                0.00    0.00      36/76          sRoutDef::~sRoutDef() [265]
                0.00    0.00      36/76          sRoutDef::typecheck(SymTable*, SymTable*) [83]
[217]    0.0    0.00    0.00      76         sObject::isExtern() const [217]
                0.00    0.00      76/183         sObject::isSet(ObjFlag) const [185]
-----------------------------------------------
                0.00    0.00       3/66          sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/66          sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00      21/66          sConst::sConst(tValue const&) [104]
                0.00    0.00      38/66          sConst::typecheck(SymTable*, SymTable*) [298]
[218]    0.0    0.00    0.00      66         tValue::type() const [218]
                0.00    0.00      66/552         tType::tType(tType const&) [161]
-----------------------------------------------
                0.00    0.00       2/64          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       8/64          sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
                0.00    0.00      54/64          sVar::typecheck(SymTable*, SymTable*) [228]
[219]    0.0    0.00    0.00      64         sVar::id() const [219]
-----------------------------------------------
                0.00    0.00       1/61          quBaseState::reset(bitvec const&) [110]
                0.00    0.00      60/61          quSubState::opend() [221]
[220]    0.0    0.00    0.00      61         quBaseState::opend() [220]
-----------------------------------------------
                0.00    0.00      60/60          opElementary::apply(quState&) const [9]
[221]    0.0    0.00    0.00      60         quSubState::opend() [221]
                0.00    0.00      60/61          quBaseState::opend() [220]
-----------------------------------------------
                0.00    0.00      60/60          quSubState::baseterms() const [81]
[222]    0.0    0.00    0.00      60         quBaseState::baseterms() const [222]
                0.00    0.00      60/60          termlist::nterms() const [223]
-----------------------------------------------
                0.00    0.00      60/60          quBaseState::baseterms() const [222]
[223]    0.0    0.00    0.00      60         termlist::nterms() const [223]
-----------------------------------------------
                0.00    0.00       1/58          sObject::isInclude() const [248]
                0.00    0.00       2/58          sObject::isValueDef() const [168]
                0.00    0.00       3/58          sObject::isProcDef() const [319]
                0.00    0.00       3/58          sObject::isQuOpDef() const [283]
                0.00    0.00       4/58          sObject::isFunctDef() const [175]
                0.00    0.00       6/58          sObject::isDef() const [170]
                0.00    0.00       7/58          sObject::isQuFunDef() const [270]
                0.00    0.00      32/58          sObject::isRoutDef() const [184]
[224]    0.0    0.00    0.00      58         sProcDef::object() const [224]
-----------------------------------------------
                                 276             SymTab::deltree(SymTable::entry*) [225]
                0.00    0.00      51/51          SymTab::~SymTab() [214]
[225]    0.0    0.00    0.00      51+276     SymTab::deltree(SymTable::entry*) [225]
                0.00    0.00     283/684         tValue::~tValue() [159]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [300]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [322]
                0.00    0.00       3/5           sConstDef::~sConstDef() [362]
                0.00    0.00       1/1           sProcDef::~sProcDef() [522]
                0.00    0.00       1/7           sVarDef::~sVarDef() [353]
                                 276             SymTab::deltree(SymTable::entry*) [225]
-----------------------------------------------
                0.00    0.00       8/49          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      41/49          sCall::typecheck(SymTable*, SymTable*) [313]
[226]    0.0    0.00    0.00      49         sRoutDef::args() [226]
-----------------------------------------------
                0.00    0.00       3/48          sObject::isConstDef() const [355]
                0.00    0.00       3/48          sObject::isInclude() const [248]
                0.00    0.00      16/48          sObject::isDef() const [170]
                0.00    0.00      26/48          sObject::isValueDef() const [168]
[227]    0.0    0.00    0.00      48         sConstDef::object() const [227]
-----------------------------------------------
                0.00    0.00       2/47          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       4/47          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       4/47          sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/47          sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       6/47          sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00      12/47          sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      15/47          sCall::typecheck(SymTable*, SymTable*) [313]
[228]    0.0    0.00    0.00      47         sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00      54/64          sVar::id() const [219]
                0.00    0.00      47/382         sObject::isValueDef() const [168]
                0.00    0.00      47/384         sDef::type() const [166]
                0.00    0.00      47/115         sExpr::settype(tType const&) [192]
                0.00    0.00      38/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00      16/29          SymTabComb::getDef(std::string const&) const [271]
                0.00    0.00       7/7           sObject::isConstDef() const [355]
                0.00    0.00       4/8           sObject::isGlobal() const [348]
-----------------------------------------------
                0.00    0.00      47/47          yyparse() [106]
[229]    0.0    0.00    0.00      47         sVar::sVar(std::string*) [229]
                0.00    0.00      47/77          sExpr::sExpr() [216]
-----------------------------------------------
                0.00    0.00       2/47          sFor::~sFor() <cycle 2> [420]
                0.00    0.00       4/47          sSubscript::~sSubscript() <cycle 1> [377]
                0.00    0.00       4/47          sUnOp::~sUnOp() [386]
                0.00    0.00       4/47          sVarDef::~sVarDef() [354]
                0.00    0.00      12/47          sBinOp::~sBinOp() <cycle 1> [306]
                0.00    0.00      21/47          sList<sExpr>::~sList() <cycle 1> [277]
[230]    0.0    0.00    0.00      47         sVar::~sVar() [230]
                0.00    0.00      47/47          sVar::~sVar() [231]
-----------------------------------------------
                0.00    0.00      47/47          sVar::~sVar() [230]
[231]    0.0    0.00    0.00      47         sVar::~sVar() [231]
                0.00    0.00      47/98          sExpr::~sExpr() [195]
-----------------------------------------------
                0.00    0.00      46/46          std::list<sObject*, std::allocator<sObject*> >::size() const [233]
[232]    0.0    0.00    0.00      46         std::list<sObject*, std::allocator<sObject*> >::end() const [232]
                0.00    0.00      46/92          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [197]
-----------------------------------------------
                0.00    0.00      46/46          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[233]    0.0    0.00    0.00      46         std::list<sObject*, std::allocator<sObject*> >::size() const [233]
                0.00    0.00      46/46          std::list<sObject*, std::allocator<sObject*> >::begin() const [234]
                0.00    0.00      46/46          std::list<sObject*, std::allocator<sObject*> >::end() const [232]
                0.00    0.00      46/46          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [237]
-----------------------------------------------
                0.00    0.00      46/46          std::list<sObject*, std::allocator<sObject*> >::size() const [233]
[234]    0.0    0.00    0.00      46         std::list<sObject*, std::allocator<sObject*> >::begin() const [234]
                0.00    0.00      46/92          std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*) [197]
-----------------------------------------------
                0.00    0.00      46/46          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [237]
[235]    0.0    0.00    0.00      46         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [235]
                0.00    0.00     841/841         std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const [154]
                0.00    0.00     795/795         std::_List_const_iterator<sObject*>::operator++() [155]
-----------------------------------------------
                0.00    0.00      46/46          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [237]
[236]    0.0    0.00    0.00      46         std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [236]
-----------------------------------------------
                0.00    0.00      46/46          std::list<sObject*, std::allocator<sObject*> >::size() const [233]
[237]    0.0    0.00    0.00      46         std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>) [237]
                0.00    0.00      46/46          std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&) [236]
                0.00    0.00      46/46          std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag) [235]
-----------------------------------------------
                0.00    0.00       1/45          __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [123]
                0.00    0.00      44/45          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [245]
[238]    0.0    0.00    0.00      45         operator new(unsigned long, void*) [238]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::sDefList() [241]
[239]    0.0    0.00    0.00      44         sList<sDef>::sList() [239]
                0.00    0.00      44/524         sObject::sObject(unsigned int) [162]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [243]
[240]    0.0    0.00    0.00      44         sList<sDef>::~sList() [240]
                0.00    0.00     263/263         sArgDef::~sArgDef() [180]
                0.00    0.00      44/524         sObject::~sObject() [163]
                0.00    0.00       6/7           sVarDef::~sVarDef() [353]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [106]
[241]    0.0    0.00    0.00      44         sDefList::sDefList() [241]
                0.00    0.00      44/44          sList<sDef>::sList() [239]
-----------------------------------------------
                0.00    0.00      44/44          sRoutDef::~sRoutDef() [265]
[242]    0.0    0.00    0.00      44         sDefList::~sDefList() [242]
                0.00    0.00      44/44          sDefList::~sDefList() [243]
-----------------------------------------------
                0.00    0.00      44/44          sDefList::~sDefList() [242]
[243]    0.0    0.00    0.00      44         sDefList::~sDefList() [243]
                0.00    0.00      44/44          sList<sDef>::~sList() [240]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
[244]    0.0    0.00    0.00      44         __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [244]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
[245]    0.0    0.00    0.00      44         __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [245]
                0.00    0.00      44/45          operator new(unsigned long, void*) [238]
-----------------------------------------------
                0.00    0.00      44/44          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [252]
[246]    0.0    0.00    0.00      44         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [246]
-----------------------------------------------
                0.00    0.00      44/44          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [251]
[247]    0.0    0.00    0.00      44         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [247]
                0.00    0.00      44/44          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [249]
-----------------------------------------------
                0.00    0.00      44/44          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[248]    0.0    0.00    0.00      44         sObject::isInclude() const [248]
                0.00    0.00      19/384         sQuOpDef::object() const [167]
                0.00    0.00      16/369         sQuFunDef::object() const [171]
                0.00    0.00       4/23          sCall::object() const [286]
                0.00    0.00       3/48          sConstDef::object() const [227]
                0.00    0.00       1/97          sVarDef::object() const [196]
                0.00    0.00       1/58          sProcDef::object() const [224]
-----------------------------------------------
                0.00    0.00      44/44          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [247]
[249]    0.0    0.00    0.00      44         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const [249]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::front() [255]
[250]    0.0    0.00    0.00      44         std::_List_iterator<sObject*>::operator*() const [250]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
[251]    0.0    0.00    0.00      44         std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [251]
                0.00    0.00      44/44          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [247]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
[252]    0.0    0.00    0.00      44         std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [252]
                0.00    0.00      44/44          __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [246]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [257]
[253]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
                0.00    0.00      44/44          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node() [251]
                0.00    0.00      44/88          sObject** std::__addressof<sObject*>(sObject*&) [207]
                0.00    0.00      44/88          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      44/88          std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      44/44          __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [245]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [259]
[254]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::end() [254]
                0.00    0.00      44/132         std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*) [191]
-----------------------------------------------
                0.00    0.00      44/44          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[255]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::front() [255]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      44/44          std::_List_iterator<sObject*>::operator*() const [250]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::pop_front() [258]
[256]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
                0.00    0.00      44/88          sObject** std::__addressof<sObject*>(sObject*&) [207]
                0.00    0.00      44/88          std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const [202]
                0.00    0.00      44/88          std::allocator<sObject*>::~allocator() [205]
                0.00    0.00      44/44          __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [244]
                0.00    0.00      44/44          std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*) [252]
-----------------------------------------------
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [259]
[257]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [257]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&) [253]
-----------------------------------------------
                0.00    0.00      44/44          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[258]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::pop_front() [258]
                0.00    0.00      44/88          std::list<sObject*, std::allocator<sObject*> >::begin() [206]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>) [256]
-----------------------------------------------
                0.00    0.00      44/44          yyparse() [106]
[259]    0.0    0.00    0.00      44         std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&) [259]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::end() [254]
                0.00    0.00      44/44          std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&) [257]
-----------------------------------------------
                0.00    0.00       4/42          sListFunct::sListFunct(ObjType, sExprList*) [371]
                0.00    0.00       4/42          sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/42          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       6/42          sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00      24/42          sCall::typecheck(SymTable*, SymTable*) [313]
[260]    0.0    0.00    0.00      42         sList<sExpr>::next(void*&) const [260]
-----------------------------------------------
                0.00    0.00       4/41          sSubscript::sSubscript(sVar*, sExprList*) [375]
                0.00    0.00       4/41          sListFunct::sListFunct(ObjType, sExprList*) [371]
                0.00    0.00       4/41          sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/41          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/41          sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00      17/41          sCall::typecheck(SymTable*, SymTable*) [313]
[261]    0.0    0.00    0.00      41         sList<sExpr>::first(void*&) const [261]
-----------------------------------------------
                0.00    0.00      16/41          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      25/41          sBinOp::typecheck(SymTable*, SymTable*) [329]
[262]    0.0    0.00    0.00      41         tType::operator==(BaseType) const [262]
-----------------------------------------------
                0.00    0.00       4/37          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       4/37          QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [6]
                0.00    0.00       4/37          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00       8/37          sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00      17/37          sCall::typecheck(SymTable*, SymTable*) [313]
[263]    0.0    0.00    0.00      37         sObject::isCondDef() const [263]
                0.00    0.00      37/183         sObject::isSet(ObjFlag) const [185]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [521]
                0.00    0.00      16/36          sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [321]
                0.00    0.00      19/36          sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [299]
[264]    0.0    0.00    0.00      36         sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [264]
                0.00    0.00     144/179         sObject::setFlag(ObjFlag, int) [186]
                0.00    0.00      36/312         sDef::sDef(tType const&, std::string*) [173]
-----------------------------------------------
                0.00    0.00       1/36          sProcDef::~sProcDef() [523]
                0.00    0.00      16/36          sQuFunDef::~sQuFunDef() [323]
                0.00    0.00      19/36          sQuOpDef::~sQuOpDef() [301]
[265]    0.0    0.00    0.00      36         sRoutDef::~sRoutDef() [265]
                0.00    0.00      44/44          sDefList::~sDefList() [242]
                0.00    0.00      36/76          sObject::isExtern() const [217]
                0.00    0.00      36/312         sDef::~sDef() [174]
                0.00    0.00       8/8           sStmtList::~sStmtList() <cycle 2> [309]
-----------------------------------------------
                0.00    0.00      34/34          sObject::isRoutDef() const [184]
[266]    0.0    0.00    0.00      34         sDefList::object() const [266]
-----------------------------------------------
                0.00    0.00       4/32          sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00      14/32          tType::isCond() const [328]
                0.00    0.00      14/32          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
[267]    0.0    0.00    0.00      32         tType::isQuCond() const [267]
                0.00    0.00      32/136         tType::isQuExpr() const [189]
-----------------------------------------------
                0.00    0.00      30/30          yyparse() [106]
[268]    0.0    0.00    0.00      30         sList<sExpr>::append(sExpr*) [268]
-----------------------------------------------
                0.00    0.00      30/30          sBinOp::typecheck(SymTable*, SymTable*) [329]
[269]    0.0    0.00    0.00      30         tType::isNumber() const [269]
-----------------------------------------------
                0.00    0.00       8/30          sRoutDef::typecheck(SymTable*, SymTable*) [83]
                0.00    0.00       9/30          sObject::isQuDef() const [297]
                0.00    0.00      13/30          sObject::inQuFunDef() const [318]
[270]    0.0    0.00    0.00      30         sObject::isQuFunDef() const [270]
                0.00    0.00      13/369         sQuFunDef::object() const [171]
                0.00    0.00      10/384         sQuOpDef::object() const [167]
                0.00    0.00       7/58          sProcDef::object() const [224]
-----------------------------------------------
                0.00    0.00      13/29          sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      16/29          sVar::typecheck(SymTable*, SymTable*) [228]
[271]    0.0    0.00    0.00      29         SymTabComb::getDef(std::string const&) const [271]
                0.00    0.00      53/147         SymTab::getDef(std::string const&) const [188]
-----------------------------------------------
                0.00    0.00      28/28          sCall::typecheck(SymTable*, SymTable*) [313]
[272]    0.0    0.00    0.00      28         tType::isQuConst() const [272]
-----------------------------------------------
                0.00    0.00       1/27          sExit::sExit(sExpr*) [514]
                0.00    0.00       2/27          sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [418]
                0.00    0.00       7/27          sIf::sIf(sExpr*, sStmtList*, sStmtList*) [350]
                0.00    0.00      17/27          sCall::sCall(std::string*, sExprList*, int) [314]
[273]    0.0    0.00    0.00      27         sStmt::sStmt(int) [273]
                0.00    0.00      27/524         sObject::sObject(unsigned int) [162]
                0.00    0.00      27/179         sObject::setFlag(ObjFlag, int) [186]
-----------------------------------------------
                0.00    0.00       1/27          sExit::~sExit() [516]
                0.00    0.00       2/27          sFor::~sFor() <cycle 2> [420]
                0.00    0.00       7/27          sIf::~sIf() <cycle 2> [352]
                0.00    0.00      17/27          sCall::~sCall() [316]
[274]    0.0    0.00    0.00      27         sStmt::~sStmt() [274]
                0.00    0.00      27/524         sObject::~sObject() [163]
-----------------------------------------------
                0.00    0.00       1/26          yylex() [105]
                0.00    0.00      10/26          yyrestart(_IO_FILE*) [334]
                0.00    0.00      15/26          yy_flush_buffer(yy_buffer_state*) [312]
[275]    0.0    0.00    0.00      26         yy_load_buffer_state() [275]
-----------------------------------------------
                0.00    0.00      25/25          sExprList::sExprList() [278]
[276]    0.0    0.00    0.00      25         sList<sExpr>::sList() [276]
                0.00    0.00      25/524         sObject::sObject(unsigned int) [162]
-----------------------------------------------
                                  25             sExprList::~sExprList() <cycle 1> [280]
[277]    0.0    0.00    0.00      25         sList<sExpr>::~sList() <cycle 1> [277]
                0.00    0.00      25/524         sObject::~sObject() [163]
                0.00    0.00      21/47          sVar::~sVar() [230]
                                   4             sSubscript::~sSubscript() <cycle 1> [376]
                                   3             sMult::~sMult() <cycle 1> [357]
                                   2             sConcat::~sConcat() <cycle 1> [429]
-----------------------------------------------
                0.00    0.00      25/25          yyparse() [106]
[278]    0.0    0.00    0.00      25         sExprList::sExprList() [278]
                0.00    0.00      25/25          sList<sExpr>::sList() [276]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [377]
                                   4             sListFunct::~sListFunct() <cycle 1> [373]
                0.00    0.00      17/26          sCall::~sCall() [316]
[279]    0.0    0.00    0.00      25         sExprList::~sExprList() <cycle 1> [279]
                                  25             sExprList::~sExprList() <cycle 1> [280]
-----------------------------------------------
                                  25             sExprList::~sExprList() <cycle 1> [279]
[280]    0.0    0.00    0.00      25         sExprList::~sExprList() <cycle 1> [280]
                                  25             sList<sExpr>::~sList() <cycle 1> [277]
-----------------------------------------------
                0.00    0.00      25/25          tValue::delpointer() [156]
[281]    0.0    0.00    0.00      25         quSubState::isbasestate() const [281]
-----------------------------------------------
                0.00    0.00       4/25          ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00       4/25          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/25          tValue::qustate() const [317]
[282]    0.0    0.00    0.00      25         tValue::isQuExpr() const [282]
                0.00    0.00      25/136         tType::isQuExpr() const [189]
-----------------------------------------------
                0.00    0.00       4/25          sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      21/25          sObject::isQuDef() const [297]
[283]    0.0    0.00    0.00      25         sObject::isQuOpDef() const [283]
                0.00    0.00      12/384         sQuOpDef::object() const [167]
                0.00    0.00      10/369         sQuFunDef::object() const [171]
                0.00    0.00       3/58          sProcDef::object() const [224]
-----------------------------------------------
                0.00    0.00      24/24          sCall::typecheck(SymTable*, SymTable*) [313]
[284]    0.0    0.00    0.00      24         tType::isConv(tType const&) const [284]
                0.00    0.00       2/136         tType::isQuExpr() const [189]
-----------------------------------------------
                0.00    0.00      23/23          yyparse() [106]
[285]    0.0    0.00    0.00      23         sList<sStmt>::append(sStmt*) [285]
-----------------------------------------------
                0.00    0.00       4/23          sObject::isDef() const [170]
                0.00    0.00       4/23          sObject::isInclude() const [248]
                0.00    0.00       7/23          sObject::isRoutDef() const [184]
                0.00    0.00       8/23          sObject::isStmt() const [401]
[286]    0.0    0.00    0.00      23         sCall::object() const [286]
-----------------------------------------------
                0.00    0.00      23/23          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
[287]    0.0    0.00    0.00      23         sList<sStmt>::next(void*&) const [287]
-----------------------------------------------
                0.00    0.00       2/23          sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00       7/23          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                0.00    0.00      14/23          tType::isCond() const [328]
[288]    0.0    0.00    0.00      23         tType::isBoolean() const [288]
-----------------------------------------------
                0.00    0.00       5/22          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      17/22          sCall::typecheck(SymTable*, SymTable*) [313]
[289]    0.0    0.00    0.00      22         sObject::inFunctDef() const [289]
                0.00    0.00      22/179         sObject::def() const [187]
                0.00    0.00      17/297         sObject::isFunctDef() const [175]
-----------------------------------------------
                0.00    0.00      21/21          sConst::sConst(tValue const&) [104]
[290]    0.0    0.00    0.00      21         sExpr::sExpr(tType const&) [290]
                0.00    0.00      21/524         sObject::sObject(unsigned int) [162]
                0.00    0.00      21/1508        tType::tType(BaseType) [148]
                0.00    0.00      21/872         tType::operator=(tType const&) [153]
-----------------------------------------------
                0.00    0.00       1/21          sExit::~sExit() [516]
                0.00    0.00       1/21          sVarDef::~sVarDef() [354]
                0.00    0.00       2/21          sFor::~sFor() <cycle 2> [420]
                0.00    0.00       5/21          sConstDef::~sConstDef() [363]
                0.00    0.00      12/21          sBinOp::~sBinOp() <cycle 1> [306]
[291]    0.0    0.00    0.00      21         sConst::~sConst() [291]
                0.00    0.00      21/21          sConst::~sConst() [292]
-----------------------------------------------
                0.00    0.00      21/21          sConst::~sConst() [291]
[292]    0.0    0.00    0.00      21         sConst::~sConst() [292]
                0.00    0.00      21/98          sExpr::~sExpr() [195]
                0.00    0.00      21/684         tValue::~tValue() [159]
-----------------------------------------------
                0.00    0.00      21/21          sObject::isRoutDef() const [184]
[293]    0.0    0.00    0.00      21         sIf::object() const [293]
-----------------------------------------------
                0.00    0.00       4/21          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/21          sCall::typecheck(SymTable*, SymTable*) [313]
[294]    0.0    0.00    0.00      21         sCall::id() const [294]
-----------------------------------------------
                0.00    0.00       1/21          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       2/21          tValue::isInt() const [437]
                0.00    0.00       2/21          sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       4/21          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       4/21          sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       8/21          tType::isOrdered() const [346]
[295]    0.0    0.00    0.00      21         tType::isInt() const [295]
-----------------------------------------------
                0.00    0.00       4/21          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00      17/21          sCall::typecheck(SymTable*, SymTable*) [313]
[296]    0.0    0.00    0.00      21         sObject::inQuDef() const [296]
                0.00    0.00      21/179         sObject::def() const [187]
                0.00    0.00      17/21          sObject::isQuDef() const [297]
-----------------------------------------------
                0.00    0.00       4/21          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      17/21          sObject::inQuDef() const [296]
[297]    0.0    0.00    0.00      21         sObject::isQuDef() const [297]
                0.00    0.00      21/25          sObject::isQuOpDef() const [283]
                0.00    0.00       9/30          sObject::isQuFunDef() const [270]
-----------------------------------------------
                0.00    0.00       1/19          sVarDef::typecheck(SymTable*, SymTable*) [116]
                0.00    0.00       1/19          sExit::typecheck(SymTable*, SymTable*) [513]
                0.00    0.00       2/19          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/19          sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00      12/19          sBinOp::typecheck(SymTable*, SymTable*) [329]
[298]    0.0    0.00    0.00      19         sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      38/66          tValue::type() const [218]
                0.00    0.00      19/19          tType::isDefined() const [302]
                0.00    0.00      19/115         sExpr::settype(tType const&) [192]
-----------------------------------------------
                0.00    0.00      19/19          yyparse() [106]
[299]    0.0    0.00    0.00      19         sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [299]
                0.00    0.00      19/1508        tType::tType(BaseType) [148]
                0.00    0.00      19/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [264]
-----------------------------------------------
                0.00    0.00      19/19          SymTab::deltree(SymTable::entry*) [225]
[300]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [300]
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [301]
-----------------------------------------------
                0.00    0.00      19/19          sQuOpDef::~sQuOpDef() [300]
[301]    0.0    0.00    0.00      19         sQuOpDef::~sQuOpDef() [301]
                0.00    0.00      19/36          sRoutDef::~sRoutDef() [265]
-----------------------------------------------
                0.00    0.00      19/19          sConst::typecheck(SymTable*, SymTable*) [298]
[302]    0.0    0.00    0.00      19         tType::isDefined() const [302]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::sStmtList() [308]
[303]    0.0    0.00    0.00      18         sList<sStmt>::sList() [303]
                0.00    0.00      18/524         sObject::sObject(unsigned int) [162]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [310]
[304]    0.0    0.00    0.00      18         sList<sStmt>::~sList() <cycle 2> [304]
                0.00    0.00      18/524         sObject::~sObject() [163]
                0.00    0.00      13/17          sCall::~sCall() [315]
                0.00    0.00       1/1           sExit::~sExit() [515]
                                   7             sIf::~sIf() <cycle 2> [351]
                                   2             sFor::~sFor() <cycle 2> [419]
-----------------------------------------------
                0.00    0.00       1/18          sOr::sOr(sExpr*, sExpr*) [509]
                0.00    0.00       2/18          sSub::sSub(sExpr*, sExpr*) [421]
                0.00    0.00       2/18          sConcat::sConcat(sExpr*, sExpr*) [428]
                0.00    0.00       3/18          sEqual::sEqual(sExpr*, sExpr*) [407]
                0.00    0.00       4/18          sLess::sLess(sExpr*, sExpr*) [381]
                0.00    0.00       6/18          sMult::sMult(sExpr*, sExpr*) [356]
[305]    0.0    0.00    0.00      18         sBinOp::sBinOp(sExpr*, sExpr*) [305]
                0.00    0.00      18/77          sExpr::sExpr() [216]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [430]
                                   4             sLess::~sLess() <cycle 1> [383]
                                   6             sMult::~sMult() <cycle 1> [358]
                0.00    0.00       1/26          sOr::~sOr() [511]
                0.00    0.00       2/26          sSub::~sSub() [423]
                0.00    0.00       3/26          sEqual::~sEqual() [409]
[306]    0.0    0.00    0.00      18         sBinOp::~sBinOp() <cycle 1> [306]
                0.00    0.00      18/98          sExpr::~sExpr() [195]
                0.00    0.00      12/21          sConst::~sConst() [291]
                0.00    0.00      12/47          sVar::~sVar() [230]
                0.00    0.00       4/4           sLength::~sLength() [389]
                                   3             sMult::~sMult() <cycle 1> [357]
                                   3             sListFunct::~sListFunct() <cycle 1> [372]
                                   2             sLess::~sLess() <cycle 1> [382]
-----------------------------------------------
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                                   8             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                0.00    0.00       8/8           sRoutDef::typecheck(SymTable*, SymTable*) [83]
[307]    0.0    0.00    0.00      18         sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
                0.00    0.00      23/458         sObject::setParent(sObject*) [165]
                0.00    0.00      23/23          sList<sStmt>::next(void*&) const [287]
                0.00    0.00      18/18          sList<sStmt>::first(void*&) const [311]
                0.00    0.00      13/17          sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [513]
                                   7             sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                                   2             sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
-----------------------------------------------
                0.00    0.00      18/18          yyparse() [106]
[308]    0.0    0.00    0.00      18         sStmtList::sStmtList() [308]
                0.00    0.00      18/18          sList<sStmt>::sList() [303]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [420]
                                   8             sIf::~sIf() <cycle 2> [352]
                0.00    0.00       8/8           sRoutDef::~sRoutDef() [265]
[309]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [309]
                                  18             sStmtList::~sStmtList() <cycle 2> [310]
-----------------------------------------------
                                  18             sStmtList::~sStmtList() <cycle 2> [309]
[310]    0.0    0.00    0.00      18         sStmtList::~sStmtList() <cycle 2> [310]
                                  18             sList<sStmt>::~sList() <cycle 2> [304]
-----------------------------------------------
                0.00    0.00      18/18          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
[311]    0.0    0.00    0.00      18         sList<sStmt>::first(void*&) const [311]
-----------------------------------------------
                0.00    0.00       2/17          yyCleanUp() [417]
                0.00    0.00       4/17          yyScanFile(_IO_FILE*) [366]
                0.00    0.00      11/17          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [332]
[312]    0.0    0.00    0.00      17         yy_flush_buffer(yy_buffer_state*) [312]
                0.00    0.00      15/26          yy_load_buffer_state() [275]
-----------------------------------------------
                0.00    0.00       4/17          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/17          sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
[313]    0.0    0.00    0.00      17         sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00      48/872         tType::operator=(tType const&) [153]
                0.00    0.00      43/384         sDef::type() const [166]
                0.00    0.00      41/49          sRoutDef::args() [226]
                0.00    0.00      34/1508        tType::tType(BaseType) [148]
                0.00    0.00      28/28          tType::isQuConst() const [272]
                0.00    0.00      24/458         sObject::setParent(sObject*) [165]
                0.00    0.00      24/102         sExpr::type() [193]
                0.00    0.00      24/24          tType::isConv(tType const&) const [284]
                0.00    0.00      24/136         tType::isQuExpr() const [189]
                0.00    0.00      24/42          sList<sExpr>::next(void*&) const [260]
                0.00    0.00      24/560         sList<sDef>::next(void*&) const [160]
                0.00    0.00      19/115         sExpr::settype(tType const&) [192]
                0.00    0.00      17/21          sCall::id() const [294]
                0.00    0.00      17/259         sObject::isRoutDef() const [184]
                0.00    0.00      17/297         sObject::isFunctDef() const [175]
                0.00    0.00      17/22          sObject::inFunctDef() const [289]
                0.00    0.00      17/21          sObject::inQuDef() const [296]
                0.00    0.00      17/37          sObject::isCondDef() const [263]
                0.00    0.00      17/17          sObject::inQuFunDef() const [318]
                0.00    0.00      17/41          sList<sExpr>::first(void*&) const [261]
                0.00    0.00      17/101         sList<sDef>::first(void*&) const [194]
                0.00    0.00      16/16          sObject::isSetRec(ObjFlag) [320]
                0.00    0.00      15/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00      13/29          SymTabComb::getDef(std::string const&) const [271]
                0.00    0.00      10/17          sObject::isProcDef() const [319]
                0.00    0.00       5/13          sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00       4/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00       4/25          sObject::isQuOpDef() const [283]
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [374]
-----------------------------------------------
                0.00    0.00      17/17          yyparse() [106]
[314]    0.0    0.00    0.00      17         sCall::sCall(std::string*, sExprList*, int) [314]
                0.00    0.00      17/27          sStmt::sStmt(int) [273]
-----------------------------------------------
                0.00    0.00       4/17          qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
                0.00    0.00      13/17          sList<sStmt>::~sList() <cycle 2> [304]
[315]    0.0    0.00    0.00      17         sCall::~sCall() [315]
                0.00    0.00      17/17          sCall::~sCall() [316]
-----------------------------------------------
                0.00    0.00      17/17          sCall::~sCall() [315]
[316]    0.0    0.00    0.00      17         sCall::~sCall() [316]
                0.00    0.00      17/26          sExprList::~sExprList() <cycle 1> [279]
                0.00    0.00      17/27          sStmt::~sStmt() [274]
-----------------------------------------------
                0.00    0.00       1/17          sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       4/17          ext_bit(sRoutDef const*, SymTable const*, int) [5]
                0.00    0.00      12/17          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[317]    0.0    0.00    0.00      17         tValue::qustate() const [317]
                0.00    0.00      17/25          tValue::isQuExpr() const [282]
-----------------------------------------------
                0.00    0.00      17/17          sCall::typecheck(SymTable*, SymTable*) [313]
[318]    0.0    0.00    0.00      17         sObject::inQuFunDef() const [318]
                0.00    0.00      17/179         sObject::def() const [187]
                0.00    0.00      13/30          sObject::isQuFunDef() const [270]
-----------------------------------------------
                0.00    0.00       3/17          sObject::isGlobal() const [348]
                0.00    0.00       4/17          sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
                0.00    0.00      10/17          sCall::typecheck(SymTable*, SymTable*) [313]
[319]    0.0    0.00    0.00      17         sObject::isProcDef() const [319]
                0.00    0.00       9/384         sQuOpDef::object() const [167]
                0.00    0.00       5/369         sQuFunDef::object() const [171]
                0.00    0.00       3/58          sProcDef::object() const [224]
-----------------------------------------------
                                  42             sObject::isSetRec(ObjFlag) [320]
                0.00    0.00      16/16          sCall::typecheck(SymTable*, SymTable*) [313]
[320]    0.0    0.00    0.00      16+42      sObject::isSetRec(ObjFlag) [320]
                0.00    0.00     100/905         sObject::parent() const [152]
                0.00    0.00      58/183         sObject::isSet(ObjFlag) const [185]
                                  42             sObject::isSetRec(ObjFlag) [320]
-----------------------------------------------
                0.00    0.00      16/16          yyparse() [106]
[321]    0.0    0.00    0.00      16         sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [321]
                0.00    0.00      16/1508        tType::tType(BaseType) [148]
                0.00    0.00      16/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [264]
-----------------------------------------------
                0.00    0.00      16/16          SymTab::deltree(SymTable::entry*) [225]
[322]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [322]
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [323]
-----------------------------------------------
                0.00    0.00      16/16          sQuFunDef::~sQuFunDef() [322]
[323]    0.0    0.00    0.00      16         sQuFunDef::~sQuFunDef() [323]
                0.00    0.00      16/36          sRoutDef::~sRoutDef() [265]
-----------------------------------------------
                0.00    0.00      16/16          std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [325]
[324]    0.0    0.00    0.00      16         std::complex<double>::operator*=(double) [324]
-----------------------------------------------
                0.00    0.00      16/16          opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
[325]    0.0    0.00    0.00      16         std::complex<double> std::operator*<double>(std::complex<double> const&, double const&) [325]
                0.00    0.00      16/16          std::complex<double>::operator*=(double) [324]
-----------------------------------------------
                0.00    0.00      15/15          yylex() [105]
[326]    0.0    0.00    0.00      15         tValue::tValue(long) [326]
                0.00    0.00      15/1508        tType::tType(BaseType) [148]
                0.00    0.00      15/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00      15/15          sObject::isRoutDef() const [184]
[327]    0.0    0.00    0.00      15         sFor::object() const [327]
-----------------------------------------------
                0.00    0.00      14/14          sBinOp::typecheck(SymTable*, SymTable*) [329]
[328]    0.0    0.00    0.00      14         tType::isCond() const [328]
                0.00    0.00      14/32          tType::isQuCond() const [267]
                0.00    0.00      14/23          tType::isBoolean() const [288]
-----------------------------------------------
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00       2/13          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       5/13          sCall::typecheck(SymTable*, SymTable*) [313]
                0.00    0.00       6/13          sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
[329]    0.0    0.00    0.00      13+5       sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00      52/1508        tType::tType(BaseType) [148]
                0.00    0.00      36/458         sObject::setParent(sObject*) [165]
                0.00    0.00      36/102         sExpr::type() [193]
                0.00    0.00      36/872         tType::operator=(tType const&) [153]
                0.00    0.00      36/1100        tType::ord() const [150]
                0.00    0.00      30/30          tType::isNumber() const [269]
                0.00    0.00      26/136         tType::isQuExpr() const [189]
                0.00    0.00      25/41          tType::operator==(BaseType) const [262]
                0.00    0.00      18/115         sExpr::settype(tType const&) [192]
                0.00    0.00      14/14          tType::isCond() const [328]
                0.00    0.00      12/19          sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00      12/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00       8/8           tType::isOrdered() const [346]
                0.00    0.00       6/9           sMult::object() const [338]
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       4/4           sLess::object() const [395]
                0.00    0.00       3/4           sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       3/3           sEqual::object() const [411]
                0.00    0.00       2/2           sSub::object() const [436]
                0.00    0.00       2/2           sConcat::object() const [439]
                0.00    0.00       2/23          tType::isBoolean() const [288]
                0.00    0.00       2/13          tType::operator==(tType const&) const [330]
                0.00    0.00       1/1           sOr::object() const [536]
                                   5             sBinOp::typecheck(SymTable*, SymTable*) [329]
-----------------------------------------------
                0.00    0.00       2/13          sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00       3/13          sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/13          tValue::conv(tType const&) const [120]
                0.00    0.00       4/13          sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
[330]    0.0    0.00    0.00      13         tType::operator==(tType const&) const [330]
-----------------------------------------------
                0.00    0.00      12/12          yylex() [105]
[331]    0.0    0.00    0.00      12         yy_get_next_buffer() [331]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [334]
-----------------------------------------------
                0.00    0.00       1/11          yy_create_buffer(_IO_FILE*, int) [481]
                0.00    0.00      10/11          yyrestart(_IO_FILE*) [334]
[332]    0.0    0.00    0.00      11         yy_init_buffer(yy_buffer_state*, _IO_FILE*) [332]
                0.00    0.00      11/17          yy_flush_buffer(yy_buffer_state*) [312]
-----------------------------------------------
                0.00    0.00       1/11          parseopt(int, char**) [506]
                0.00    0.00      10/11          openqclfile(std::string) [367]
[333]    0.0    0.00    0.00      11         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [333]
-----------------------------------------------
                0.00    0.00       2/10          yyCleanUp() [417]
                0.00    0.00       4/10          yy_get_next_buffer() [331]
                0.00    0.00       4/10          yyScanFile(_IO_FILE*) [366]
[334]    0.0    0.00    0.00      10         yyrestart(_IO_FILE*) [334]
                0.00    0.00      10/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [332]
                0.00    0.00      10/26          yy_load_buffer_state() [275]
                0.00    0.00       1/1           yyensure_buffer_stack() [508]
                0.00    0.00       1/1           yy_create_buffer(_IO_FILE*, int) [481]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [83]
[335]    0.0    0.00    0.00      10         SymTabComb::SymTabComb(SymTable*, SymTable*) [335]
                0.00    0.00      10/90          SymTable::SymTable() [198]
-----------------------------------------------
                0.00    0.00       2/10          sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       8/10          sRoutDef::typecheck(SymTable*, SymTable*) [83]
[336]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [336]
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [337]
-----------------------------------------------
                0.00    0.00      10/10          SymTabComb::~SymTabComb() [336]
[337]    0.0    0.00    0.00      10         SymTabComb::~SymTabComb() [337]
                0.00    0.00      10/90          SymTable::~SymTable() [199]
-----------------------------------------------
                0.00    0.00       3/9           sObject::isRoutDef() const [184]
                0.00    0.00       6/9           sBinOp::typecheck(SymTable*, SymTable*) [329]
[338]    0.0    0.00    0.00       9         sMult::object() const [338]
-----------------------------------------------
                0.00    0.00       9/9           tValue::isError() const [340]
[339]    0.0    0.00    0.00       9         tType::isError() const [339]
-----------------------------------------------
                0.00    0.00       2/9           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/9           sConstDef::define(SymTable*, SymTable*, QuHeap*) [115]
                0.00    0.00       4/9           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[340]    0.0    0.00    0.00       9         tValue::isError() const [340]
                0.00    0.00       9/9           tType::isError() const [339]
-----------------------------------------------
                0.00    0.00       8/8           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[341]    0.0    0.00    0.00       8         zero(bitvec const&) [341]
                0.00    0.00       8/8           bitvec::testzero() const [347]
-----------------------------------------------
                0.00    0.00       8/8           yylex() [105]
[342]    0.0    0.00    0.00       8         yy_get_previous_state() [342]
-----------------------------------------------
                0.00    0.00       1/8           __static_initialization_and_destruction_0(int, int) [484]
                0.00    0.00       7/8           yyparse() [106]
[343]    0.0    0.00    0.00       8         sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [343]
                0.00    0.00       8/312         sDef::sDef(tType const&, std::string*) [173]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [370]
[344]    0.0    0.00    0.00       8         sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00       8/41          sList<sExpr>::first(void*&) const [261]
                0.00    0.00       6/458         sObject::setParent(sObject*) [165]
                0.00    0.00       6/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00       6/42          sList<sExpr>::next(void*&) const [260]
-----------------------------------------------
                0.00    0.00       4/8           sSubscript::nargs() const [394]
                0.00    0.00       4/8           sListFunct::typecheck(SymTable*, SymTable*) [370]
[345]    0.0    0.00    0.00       8         sList<sExpr>::n() const [345]
-----------------------------------------------
                0.00    0.00       8/8           sBinOp::typecheck(SymTable*, SymTable*) [329]
[346]    0.0    0.00    0.00       8         tType::isOrdered() const [346]
                0.00    0.00       8/21          tType::isInt() const [295]
-----------------------------------------------
                0.00    0.00       8/8           zero(bitvec const&) [341]
[347]    0.0    0.00    0.00       8         bitvec::testzero() const [347]
-----------------------------------------------
                0.00    0.00       1/8           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
                0.00    0.00       3/8           sObject::isLocal() const [412]
                0.00    0.00       4/8           sVar::typecheck(SymTable*, SymTable*) [228]
[348]    0.0    0.00    0.00       8         sObject::isGlobal() const [348]
                0.00    0.00       8/179         sObject::def() const [187]
                0.00    0.00       3/17          sObject::isProcDef() const [319]
-----------------------------------------------
                                   7             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
[349]    0.0    0.00    0.00       7         sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                0.00    0.00      15/458         sObject::setParent(sObject*) [165]
                0.00    0.00      14/32          tType::isQuCond() const [267]
                0.00    0.00       7/23          tType::isBoolean() const [288]
                0.00    0.00       7/102         sExpr::type() [193]
                0.00    0.00       6/13          sBinOp::typecheck(SymTable*, SymTable*) [329]
                0.00    0.00       1/4           sListFunct::typecheck(SymTable*, SymTable*) [370]
                                   8             sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
-----------------------------------------------
                0.00    0.00       7/7           yyparse() [106]
[350]    0.0    0.00    0.00       7         sIf::sIf(sExpr*, sStmtList*, sStmtList*) [350]
                0.00    0.00       7/27          sStmt::sStmt(int) [273]
-----------------------------------------------
                                   7             sList<sStmt>::~sList() <cycle 2> [304]
[351]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [351]
                                   7             sIf::~sIf() <cycle 2> [352]
-----------------------------------------------
                                   7             sIf::~sIf() <cycle 2> [351]
[352]    0.0    0.00    0.00       7         sIf::~sIf() <cycle 2> [352]
                0.00    0.00       7/27          sStmt::~sStmt() [274]
                0.00    0.00       3/3           sEqual::~sEqual() [408]
                0.00    0.00       2/26          sLess::~sLess() <cycle 1> [382]
                0.00    0.00       1/26          sListFunct::~sListFunct() <cycle 1> [372]
                0.00    0.00       1/1           sOr::~sOr() [510]
                                   8             sStmtList::~sStmtList() <cycle 2> [309]
-----------------------------------------------
                0.00    0.00       1/7           SymTab::deltree(SymTable::entry*) [225]
                0.00    0.00       6/7           sList<sDef>::~sList() [240]
[353]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [353]
                0.00    0.00       7/7           sVarDef::~sVarDef() [354]
-----------------------------------------------
                0.00    0.00       7/7           sVarDef::~sVarDef() [353]
[354]    0.0    0.00    0.00       7         sVarDef::~sVarDef() [354]
                0.00    0.00       8/312         sDef::~sDef() [174]
                0.00    0.00       4/47          sVar::~sVar() [230]
                0.00    0.00       1/21          sConst::~sConst() [291]
-----------------------------------------------
                0.00    0.00       7/7           sVar::typecheck(SymTable*, SymTable*) [228]
[355]    0.0    0.00    0.00       7         sObject::isConstDef() const [355]
                0.00    0.00       4/97          sVarDef::object() const [196]
                0.00    0.00       3/48          sConstDef::object() const [227]
-----------------------------------------------
                0.00    0.00       6/6           yyparse() [106]
[356]    0.0    0.00    0.00       6         sMult::sMult(sExpr*, sExpr*) [356]
                0.00    0.00       6/18          sBinOp::sBinOp(sExpr*, sExpr*) [305]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [306]
                                   3             sList<sExpr>::~sList() <cycle 1> [277]
[357]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [357]
                                   6             sMult::~sMult() <cycle 1> [358]
-----------------------------------------------
                                   6             sMult::~sMult() <cycle 1> [357]
[358]    0.0    0.00    0.00       6         sMult::~sMult() <cycle 1> [358]
                                   6             sBinOp::~sBinOp() <cycle 1> [306]
-----------------------------------------------
                0.00    0.00       6/6           openqclfile(std::string) [367]
[359]    0.0    0.00    0.00       6         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [359]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/5           sConstDef::typecheck(SymTable*, SymTable*) [410]
[360]    0.0    0.00    0.00       5         sDef::settype(tType const&) [360]
                0.00    0.00       5/872         tType::operator=(tType const&) [153]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/5           yyparse() [106]
[361]    0.0    0.00    0.00       5         sConstDef::sConstDef(std::string*, sExpr*) [361]
                0.00    0.00       5/1508        tType::tType(BaseType) [148]
                0.00    0.00       5/312         sDef::sDef(tType const&, std::string*) [173]
-----------------------------------------------
                0.00    0.00       2/5           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
                0.00    0.00       3/5           SymTab::deltree(SymTable::entry*) [225]
[362]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [362]
                0.00    0.00       5/5           sConstDef::~sConstDef() [363]
-----------------------------------------------
                0.00    0.00       5/5           sConstDef::~sConstDef() [362]
[363]    0.0    0.00    0.00       5         sConstDef::~sConstDef() [363]
                0.00    0.00       5/21          sConst::~sConst() [291]
                0.00    0.00       5/312         sDef::~sDef() [174]
-----------------------------------------------
                0.00    0.00       5/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [365]
[364]    0.0    0.00    0.00       5         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [364]
-----------------------------------------------
                0.00    0.00       1/5           main [1]
                0.00    0.00       4/5           openqclfile(std::string) [367]
[365]    0.0    0.00    0.00       5         bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [365]
                0.00    0.00       5/5           bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [364]
-----------------------------------------------
                0.00    0.00       2/4           chksyntax(_IO_FILE*) [114]
                0.00    0.00       2/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[366]    0.0    0.00    0.00       4         yyScanFile(_IO_FILE*) [366]
                0.00    0.00       4/17          yy_flush_buffer(yy_buffer_state*) [312]
                0.00    0.00       4/10          yyrestart(_IO_FILE*) [334]
-----------------------------------------------
                0.00    0.00       4/4           qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [2]
[367]    0.0    0.00    0.00       4         openqclfile(std::string) [367]
                0.00    0.00      10/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [333]
                0.00    0.00       6/6           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [359]
                0.00    0.00       4/5           bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [365]
-----------------------------------------------
                0.00    0.00       4/4           opElementary::opElementary(int) [378]
[368]    0.0    0.00    0.00       4         opOperator::opOperator(int) [368]
-----------------------------------------------
                0.00    0.00       4/4           opElementary::~opElementary() [379]
[369]    0.0    0.00    0.00       4         opOperator::~opOperator() [369]
-----------------------------------------------
                0.00    0.00       1/4           sIf::typecheck(SymTable*, SymTable*) <cycle 3> [349]
                0.00    0.00       3/4           sBinOp::typecheck(SymTable*, SymTable*) [329]
[370]    0.0    0.00    0.00       4         sListFunct::typecheck(SymTable*, SymTable*) [370]
                0.00    0.00       8/1508        tType::tType(BaseType) [148]
                0.00    0.00       4/365         tValue::tValue() [172]
                0.00    0.00       4/458         sObject::setParent(sObject*) [165]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00       4/8           sList<sExpr>::n() const [345]
                0.00    0.00       4/4           sListFunct::object() const [393]
                0.00    0.00       4/115         sExpr::settype(tType const&) [192]
                0.00    0.00       4/684         tValue::~tValue() [159]
                0.00    0.00       3/102         sExpr::type() [193]
                0.00    0.00       3/3           sObject::isLocal() const [412]
                0.00    0.00       2/21          tType::isInt() const [295]
                0.00    0.00       1/872         tType::operator=(tType const&) [153]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [106]
[371]    0.0    0.00    0.00       4         sListFunct::sListFunct(ObjType, sExprList*) [371]
                0.00    0.00       4/77          sExpr::sExpr() [216]
                0.00    0.00       4/41          sList<sExpr>::first(void*&) const [261]
                0.00    0.00       4/42          sList<sExpr>::next(void*&) const [260]
-----------------------------------------------
                                   3             sBinOp::~sBinOp() <cycle 1> [306]
                0.00    0.00       1/26          sIf::~sIf() <cycle 2> [352]
[372]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [372]
                                   4             sListFunct::~sListFunct() <cycle 1> [373]
-----------------------------------------------
                                   4             sListFunct::~sListFunct() <cycle 1> [372]
[373]    0.0    0.00    0.00       4         sListFunct::~sListFunct() <cycle 1> [373]
                0.00    0.00       4/98          sExpr::~sExpr() [195]
                                   4             sExprList::~sExprList() <cycle 1> [279]
-----------------------------------------------
                0.00    0.00       4/4           sCall::typecheck(SymTable*, SymTable*) [313]
[374]    0.0    0.00    0.00       4         sSubscript::typecheck(SymTable*, SymTable*) [374]
                0.00    0.00       8/458         sObject::setParent(sObject*) [165]
                0.00    0.00       8/102         sExpr::type() [193]
                0.00    0.00       8/136         tType::isQuExpr() const [189]
                0.00    0.00       8/1100        tType::ord() const [150]
                0.00    0.00       4/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00       4/8           sExprList::typecheck(SymTable*, SymTable*) [344]
                0.00    0.00       4/4           sSubscript::nargs() const [394]
                0.00    0.00       4/41          sList<sExpr>::first(void*&) const [261]
                0.00    0.00       4/21          tType::isInt() const [295]
                0.00    0.00       4/42          sList<sExpr>::next(void*&) const [260]
                0.00    0.00       4/32          tType::isQuCond() const [267]
                0.00    0.00       4/4           sExpr::basetype() [380]
                0.00    0.00       4/1508        tType::tType(BaseType) [148]
                0.00    0.00       4/115         sExpr::settype(tType const&) [192]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [106]
[375]    0.0    0.00    0.00       4         sSubscript::sSubscript(sVar*, sExprList*) [375]
                0.00    0.00       4/77          sExpr::sExpr() [216]
                0.00    0.00       4/41          sList<sExpr>::first(void*&) const [261]
-----------------------------------------------
                                   4             sList<sExpr>::~sList() <cycle 1> [277]
[376]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [376]
                                   4             sSubscript::~sSubscript() <cycle 1> [377]
-----------------------------------------------
                                   4             sSubscript::~sSubscript() <cycle 1> [376]
[377]    0.0    0.00    0.00       4         sSubscript::~sSubscript() <cycle 1> [377]
                0.00    0.00       4/47          sVar::~sVar() [230]
                0.00    0.00       4/98          sExpr::~sExpr() [195]
                                   4             sExprList::~sExprList() <cycle 1> [279]
-----------------------------------------------
                0.00    0.00       4/4           opMatrix::opMatrix(int) [391]
[378]    0.0    0.00    0.00       4         opElementary::opElementary(int) [378]
                0.00    0.00       4/4           opOperator::opOperator(int) [368]
-----------------------------------------------
                0.00    0.00       4/4           opMatrix::~opMatrix() [132]
[379]    0.0    0.00    0.00       4         opElementary::~opElementary() [379]
                0.00    0.00       4/4           opOperator::~opOperator() [369]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [374]
[380]    0.0    0.00    0.00       4         sExpr::basetype() [380]
                0.00    0.00       4/1061        tType::basetype() const [151]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [106]
[381]    0.0    0.00    0.00       4         sLess::sLess(sExpr*, sExpr*) [381]
                0.00    0.00       4/18          sBinOp::sBinOp(sExpr*, sExpr*) [305]
-----------------------------------------------
                                   2             sBinOp::~sBinOp() <cycle 1> [306]
                0.00    0.00       2/26          sIf::~sIf() <cycle 2> [352]
[382]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [382]
                                   4             sLess::~sLess() <cycle 1> [383]
-----------------------------------------------
                                   4             sLess::~sLess() <cycle 1> [382]
[383]    0.0    0.00    0.00       4         sLess::~sLess() <cycle 1> [383]
                                   4             sBinOp::~sBinOp() <cycle 1> [306]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [329]
[384]    0.0    0.00    0.00       4         sUnOp::typecheck(SymTable*, SymTable*) [384]
                0.00    0.00       4/458         sObject::setParent(sObject*) [165]
                0.00    0.00       4/47          sVar::typecheck(SymTable*, SymTable*) [228]
                0.00    0.00       4/102         sExpr::type() [193]
                0.00    0.00       4/4           sLength::object() const [400]
                0.00    0.00       4/136         tType::isQuExpr() const [189]
                0.00    0.00       4/1508        tType::tType(BaseType) [148]
                0.00    0.00       4/115         sExpr::settype(tType const&) [192]
-----------------------------------------------
                0.00    0.00       4/4           sLength::sLength(sExpr*) [388]
[385]    0.0    0.00    0.00       4         sUnOp::sUnOp(sExpr*) [385]
                0.00    0.00       4/77          sExpr::sExpr() [216]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [390]
[386]    0.0    0.00    0.00       4         sUnOp::~sUnOp() [386]
                0.00    0.00       4/47          sVar::~sVar() [230]
                0.00    0.00       4/98          sExpr::~sExpr() [195]
-----------------------------------------------
                0.00    0.00       4/4           QuHeap::callentry(QuHeap::quentry const&, SymTable*) [7]
[387]    0.0    0.00    0.00       4         SymTab::~SymTab() [387]
                0.00    0.00       4/80          SymTab::~SymTab() [214]
-----------------------------------------------
                0.00    0.00       4/4           yyparse() [106]
[388]    0.0    0.00    0.00       4         sLength::sLength(sExpr*) [388]
                0.00    0.00       4/4           sUnOp::sUnOp(sExpr*) [385]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::~sBinOp() <cycle 1> [306]
[389]    0.0    0.00    0.00       4         sLength::~sLength() [389]
                0.00    0.00       4/4           sLength::~sLength() [390]
-----------------------------------------------
                0.00    0.00       4/4           sLength::~sLength() [389]
[390]    0.0    0.00    0.00       4         sLength::~sLength() [390]
                0.00    0.00       4/4           sUnOp::~sUnOp() [386]
-----------------------------------------------
                0.00    0.00       4/4           opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [126]
[391]    0.0    0.00    0.00       4         opMatrix::opMatrix(int) [391]
                0.00    0.00       4/4           opElementary::opElementary(int) [378]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::begin() const [444]
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::end() const [443]
[392]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [392]
-----------------------------------------------
                0.00    0.00       4/4           sListFunct::typecheck(SymTable*, SymTable*) [370]
[393]    0.0    0.00    0.00       4         sListFunct::object() const [393]
-----------------------------------------------
                0.00    0.00       4/4           sSubscript::typecheck(SymTable*, SymTable*) [374]
[394]    0.0    0.00    0.00       4         sSubscript::nargs() const [394]
                0.00    0.00       4/8           sList<sExpr>::n() const [345]
-----------------------------------------------
                0.00    0.00       4/4           sBinOp::typecheck(SymTable*, SymTable*) [329]
[395]    0.0    0.00    0.00       4         sLess::object() const [395]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[396]    0.0    0.00    0.00       4         sStmt::isInv() const [396]
                0.00    0.00       4/183         sObject::isSet(ObjFlag) const [185]
-----------------------------------------------
                0.00    0.00       4/4           tValue::isExpr() const [399]
[397]    0.0    0.00    0.00       4         tType::isExpr() const [397]
-----------------------------------------------
                0.00    0.00       4/4           sCall::exec(SymTable*, SymTable*, QuHeap*) [4]
[398]    0.0    0.00    0.00       4         QuHeap::nBits() const [398]
-----------------------------------------------
                0.00    0.00       4/4           sVar::eval(SymTable*, SymTable*, QuHeap*) [111]
[399]    0.0    0.00    0.00       4         tValue::isExpr() const [399]
                0.00    0.00       4/4           tType::isExpr() const [397]
-----------------------------------------------
                0.00    0.00       4/4           sUnOp::typecheck(SymTable*, SymTable*) [384]
[400]    0.0    0.00    0.00       4         sLength::object() const [400]
-----------------------------------------------
                0.00    0.00       4/4           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[401]    0.0    0.00    0.00       4         sObject::isStmt() const [401]
                0.00    0.00       8/23          sCall::object() const [286]
-----------------------------------------------
                0.00    0.00       2/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [535]
[402]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [402]
-----------------------------------------------
                0.00    0.00       4/4           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [435]
[403]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [403]
-----------------------------------------------
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [538]
[404]    0.0    0.00    0.00       4         std::vector<tValue, std::allocator<tValue> >::size() const [404]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<tValue, std::allocator<tValue> >::~vector() [574]
                0.00    0.00       3/4           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[405]    0.0    0.00    0.00       4         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [405]
-----------------------------------------------
                0.00    0.00       1/3           yyensure_buffer_stack() [508]
                0.00    0.00       2/3           yy_create_buffer(_IO_FILE*, int) [481]
[406]    0.0    0.00    0.00       3         yyalloc(unsigned long) [406]
-----------------------------------------------
                0.00    0.00       3/3           yyparse() [106]
[407]    0.0    0.00    0.00       3         sEqual::sEqual(sExpr*, sExpr*) [407]
                0.00    0.00       3/18          sBinOp::sBinOp(sExpr*, sExpr*) [305]
-----------------------------------------------
                0.00    0.00       3/3           sIf::~sIf() <cycle 2> [352]
[408]    0.0    0.00    0.00       3         sEqual::~sEqual() [408]
                0.00    0.00       3/3           sEqual::~sEqual() [409]
-----------------------------------------------
                0.00    0.00       3/3           sEqual::~sEqual() [408]
[409]    0.0    0.00    0.00       3         sEqual::~sEqual() [409]
                0.00    0.00       3/26          sBinOp::~sBinOp() <cycle 1> [306]
-----------------------------------------------
                0.00    0.00       3/3           qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [3]
[410]    0.0    0.00    0.00       3         sConstDef::typecheck(SymTable*, SymTable*) [410]
                0.00    0.00       6/179         sObject::def() const [187]
                0.00    0.00       6/102         sExpr::type() [193]
                0.00    0.00       3/458         sObject::setParent(sObject*) [165]
                0.00    0.00       3/19          sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       3/21664       sDef::id() const [143]
                0.00    0.00       3/147         SymTab::getDef(std::string const&) const [188]
                0.00    0.00       3/136         tType::isQuExpr() const [189]
                0.00    0.00       3/5           sDef::settype(tType const&) [360]
-----------------------------------------------
                0.00    0.00       3/3           sBinOp::typecheck(SymTable*, SymTable*) [329]
[411]    0.0    0.00    0.00       3         sEqual::object() const [411]
-----------------------------------------------
                0.00    0.00       3/3           sListFunct::typecheck(SymTable*, SymTable*) [370]
[412]    0.0    0.00    0.00       3         sObject::isLocal() const [412]
                0.00    0.00       3/8           sObject::isGlobal() const [348]
-----------------------------------------------
                0.00    0.00       3/3           sRoutDef::typecheck(SymTable*, SymTable*) [83]
[413]    0.0    0.00    0.00       3         sObject::isBennet() const [413]
                0.00    0.00       3/183         sObject::isSet(ObjFlag) const [185]
-----------------------------------------------
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [526]
                0.00    0.00       2/3           std::vector<tValue, std::allocator<tValue> >::max_size() const [446]
[414]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<tValue>::max_size() const [414]
-----------------------------------------------
                0.00    0.00       2/2           parseopt(int, char**) [506]
[415]    0.0    0.00    0.00       2         irqOn() [415]
-----------------------------------------------
                0.00    0.00       2/2           termlist::termlist(int, int) [102]
[416]    0.0    0.00    0.00       2         duallog(int) [416]
-----------------------------------------------
                0.00    0.00       2/2           chksyntax(_IO_FILE*) [114]
[417]    0.0    0.00    0.00       2         yyCleanUp() [417]
                0.00    0.00       2/10          yyrestart(_IO_FILE*) [334]
                0.00    0.00       2/17          yy_flush_buffer(yy_buffer_state*) [312]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [106]
[418]    0.0    0.00    0.00       2         sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [418]
                0.00    0.00       2/27          sStmt::sStmt(int) [273]
-----------------------------------------------
                                   2             sList<sStmt>::~sList() <cycle 2> [304]
[419]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [419]
                                   2             sFor::~sFor() <cycle 2> [420]
-----------------------------------------------
                                   2             sFor::~sFor() <cycle 2> [419]
[420]    0.0    0.00    0.00       2         sFor::~sFor() <cycle 2> [420]
                0.00    0.00       2/47          sVar::~sVar() [230]
                0.00    0.00       2/21          sConst::~sConst() [291]
                0.00    0.00       2/2           sSub::~sSub() [422]
                0.00    0.00       2/27          sStmt::~sStmt() [274]
                                   2             sStmtList::~sStmtList() <cycle 2> [309]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [106]
[421]    0.0    0.00    0.00       2         sSub::sSub(sExpr*, sExpr*) [421]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [305]
-----------------------------------------------
                0.00    0.00       2/2           sFor::~sFor() <cycle 2> [420]
[422]    0.0    0.00    0.00       2         sSub::~sSub() [422]
                0.00    0.00       2/2           sSub::~sSub() [423]
-----------------------------------------------
                0.00    0.00       2/2           sSub::~sSub() [422]
[423]    0.0    0.00    0.00       2         sSub::~sSub() [423]
                0.00    0.00       2/26          sBinOp::~sBinOp() <cycle 1> [306]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [106]
[424]    0.0    0.00    0.00       2         tType::tType(BaseType, int) [424]
-----------------------------------------------
                0.00    0.00       2/2           yylex() [105]
[425]    0.0    0.00    0.00       2         tValue::tValue(double) [425]
                0.00    0.00       2/1508        tType::tType(BaseType) [148]
                0.00    0.00       2/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       2/2           sFor::typecheck(SymTable*, SymTable*) <cycle 3> [122]
[426]    0.0    0.00    0.00       2         tValue::tValue(int) [426]
                0.00    0.00       2/1508        tType::tType(BaseType) [148]
                0.00    0.00       2/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [106]
[427]    0.0    0.00    0.00       2         objlist::objlist() [427]
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [454]
-----------------------------------------------
                0.00    0.00       2/2           yyparse() [106]
[428]    0.0    0.00    0.00       2         sConcat::sConcat(sExpr*, sExpr*) [428]
                0.00    0.00       2/18          sBinOp::sBinOp(sExpr*, sExpr*) [305]
-----------------------------------------------
                                   2             sList<sExpr>::~sList() <cycle 1> [277]
[429]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [429]
                                   2             sConcat::~sConcat() <cycle 1> [430]
-----------------------------------------------
                                   2             sConcat::~sConcat() <cycle 1> [429]
[430]    0.0    0.00    0.00       2         sConcat::~sConcat() <cycle 1> [430]
                                   2             sBinOp::~sBinOp() <cycle 1> [306]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [447]
[431]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [431]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::end() [570]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::begin() [571]
[432]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [432]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [539]
                0.00    0.00       1/2           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [540]
[433]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [433]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [542]
                0.00    0.00       1/2           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [543]
[434]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [434]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [445]
[435]    0.0    0.00    0.00       2         bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [435]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const [403]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [329]
[436]    0.0    0.00    0.00       2         sSub::object() const [436]
-----------------------------------------------
                0.00    0.00       2/2           tValue::toInt() const [438]
[437]    0.0    0.00    0.00       2         tValue::isInt() const [437]
                0.00    0.00       2/21          tType::isInt() const [295]
-----------------------------------------------
                0.00    0.00       2/2           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
[438]    0.0    0.00    0.00       2         tValue::toInt() const [438]
                0.00    0.00       2/2           tValue::isInt() const [437]
-----------------------------------------------
                0.00    0.00       2/2           sBinOp::typecheck(SymTable*, SymTable*) [329]
[439]    0.0    0.00    0.00       2         sConcat::object() const [439]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [533]
[440]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [440]
-----------------------------------------------
                0.00    0.00       2/2           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [534]
[441]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [441]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [446]
[442]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [442]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [445]
[443]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::end() const [443]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [392]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::empty() const [445]
[444]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::begin() const [444]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [392]
-----------------------------------------------
                0.00    0.00       2/2           QuHeap::~QuHeap() [59]
[445]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::empty() const [445]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::end() const [443]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::begin() const [444]
                0.00    0.00       2/2           bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [435]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [538]
[446]    0.0    0.00    0.00       2         std::vector<tValue, std::allocator<tValue> >::max_size() const [446]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<tValue>::max_size() const [414]
                0.00    0.00       2/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const [442]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [448]
[447]    0.0    0.00    0.00       2         std::allocator<std::_List_node<sObject*> >::allocator() [447]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [431]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [450]
[448]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [448]
                0.00    0.00       2/2           std::allocator<std::_List_node<sObject*> >::allocator() [447]
-----------------------------------------------
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [450]
[449]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [449]
-----------------------------------------------
                0.00    0.00       2/2           std::list<sObject*, std::allocator<sObject*> >::list() [454]
[450]    0.0    0.00    0.00       2         std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [450]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_M_init() [449]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl() [448]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [458]
[451]    0.0    0.00    0.00       2         void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [451]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [557]
[452]    0.0    0.00    0.00       2         std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [452]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [524]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [455]
[453]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [453]
-----------------------------------------------
                0.00    0.00       2/2           objlist::objlist() [427]
[454]    0.0    0.00    0.00       2         std::list<sObject*, std::allocator<sObject*> >::list() [454]
                0.00    0.00       2/2           std::_List_base<sObject*, std::allocator<sObject*> >::_List_base() [450]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [456]
[455]    0.0    0.00    0.00       2         tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [455]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [453]
-----------------------------------------------
                0.00    0.00       2/2           tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [457]
[456]    0.0    0.00    0.00       2         tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [456]
                0.00    0.00       2/2           tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*) [455]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[457]    0.0    0.00    0.00       2         tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&) [457]
                0.00    0.00       2/2           tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&) [456]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [459]
[458]    0.0    0.00    0.00       2         void std::_Destroy<tValue*>(tValue*, tValue*) [458]
                0.00    0.00       2/2           void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*) [451]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::~vector() [574]
                0.00    0.00       1/2           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[459]    0.0    0.00    0.00       2         void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [459]
                0.00    0.00       2/2           void std::_Destroy<tValue*>(tValue*, tValue*) [458]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[460]    0.0    0.00    0.00       1         _GLOBAL__sub_I_CONDDEF [460]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[461]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [461]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[462]    0.0    0.00    0.00       1         _GLOBAL__sub_I__Z6regstrRK6bitveci [462]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[463]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [463]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[464]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [464]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[465]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [465]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[466]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [466]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[467]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK6QuCond3strEv [467]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[468]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZNK7sObject6prtstrEi [468]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[469]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isErrorReported [469]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[470]    0.0    0.00    0.00       1         _GLOBAL__sub_I_isStateModified [470]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[471]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [471]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [501]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[472]    0.0    0.00    0.00       1         _GLOBAL__sub_I_n_object [472]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[473]    0.0    0.00    0.00       1         _GLOBAL__sub_I_noperators [473]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [505]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[474]    0.0    0.00    0.00       1         _GLOBAL__sub_I_nstates [474]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [504]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[475]    0.0    0.00    0.00       1         _GLOBAL__sub_I_plotfile [475]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [500]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[476]    0.0    0.00    0.00       1         _GLOBAL__sub_I_qcl_options [476]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[477]    0.0    0.00    0.00       1         _GLOBAL__sub_I_shell_depth [477]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[478]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyObjList [478]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[479]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yydebug [479]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [58]
[480]    0.0    0.00    0.00       1         _GLOBAL__sub_I_yyleng [480]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [334]
[481]    0.0    0.00    0.00       1         yy_create_buffer(_IO_FILE*, int) [481]
                0.00    0.00       2/3           yyalloc(unsigned long) [406]
                0.00    0.00       1/11          yy_init_buffer(yy_buffer_state*, _IO_FILE*) [332]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[482]    0.0    0.00    0.00       1         initialize_readline() [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_n_object [472]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_CONDDEF [460]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
                0.00    0.00       1/1508        tType::tType(BaseType) [148]
                0.00    0.00       1/8           sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [343]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ [466]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE [465]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isErrorReported [469]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyleng [480]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yydebug [479]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK7sObject6prtstrEi [468]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_isStateModified [470]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei [461]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap [464]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap [463]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_yyObjList [478]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qcl_options [476]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_shell_depth [477]
[497]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK6QuCond3strEv [467]
[498]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z6regstrRK6bitveci [462]
[499]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_plotfile [475]
[500]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [500]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [471]
[501]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [501]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_qc_check_txt [67]
[502]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [502]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nterms [88]
[503]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [503]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_nstates [474]
[504]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [504]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_noperators [473]
[505]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [505]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[506]    0.0    0.00    0.00       1         parseopt(int, char**) [506]
                0.00    0.00       2/2           irqOn() [415]
                0.00    0.00       1/11          std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [333]
                0.00    0.00       1/1           qc_srand(long) [507]
-----------------------------------------------
                0.00    0.00       1/1           parseopt(int, char**) [506]
[507]    0.0    0.00    0.00       1         qc_srand(long) [507]
-----------------------------------------------
                0.00    0.00       1/1           yyrestart(_IO_FILE*) [334]
[508]    0.0    0.00    0.00       1         yyensure_buffer_stack() [508]
                0.00    0.00       1/3           yyalloc(unsigned long) [406]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [106]
[509]    0.0    0.00    0.00       1         sOr::sOr(sExpr*, sExpr*) [509]
                0.00    0.00       1/18          sBinOp::sBinOp(sExpr*, sExpr*) [305]
-----------------------------------------------
                0.00    0.00       1/1           sIf::~sIf() <cycle 2> [352]
[510]    0.0    0.00    0.00       1         sOr::~sOr() [510]
                0.00    0.00       1/1           sOr::~sOr() [511]
-----------------------------------------------
                0.00    0.00       1/1           sOr::~sOr() [510]
[511]    0.0    0.00    0.00       1         sOr::~sOr() [511]
                0.00    0.00       1/26          sBinOp::~sBinOp() <cycle 1> [306]
-----------------------------------------------
                0.00    0.00       1/1           sVarDef::define(SymTable*, SymTable*, QuHeap*) [75]
[512]    0.0    0.00    0.00       1         sDef::basetype() [512]
                0.00    0.00       1/1061        tType::basetype() const [151]
-----------------------------------------------
                0.00    0.00       1/1           sStmtList::typecheck(SymTable*, SymTable*) <cycle 3> [307]
[513]    0.0    0.00    0.00       1         sExit::typecheck(SymTable*, SymTable*) [513]
                0.00    0.00       1/458         sObject::setParent(sObject*) [165]
                0.00    0.00       1/19          sConst::typecheck(SymTable*, SymTable*) [298]
                0.00    0.00       1/102         sExpr::type() [193]
                0.00    0.00       1/1           tType::isString() const [537]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [106]
[514]    0.0    0.00    0.00       1         sExit::sExit(sExpr*) [514]
                0.00    0.00       1/27          sStmt::sStmt(int) [273]
-----------------------------------------------
                0.00    0.00       1/1           sList<sStmt>::~sList() <cycle 2> [304]
[515]    0.0    0.00    0.00       1         sExit::~sExit() [515]
                0.00    0.00       1/1           sExit::~sExit() [516]
-----------------------------------------------
                0.00    0.00       1/1           sExit::~sExit() [515]
[516]    0.0    0.00    0.00       1         sExit::~sExit() [516]
                0.00    0.00       1/21          sConst::~sConst() [291]
                0.00    0.00       1/27          sStmt::~sStmt() [274]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [99]
[517]    0.0    0.00    0.00       1         QuHeap::init() [517]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::qualloc(int, BaseType) [77]
[518]    0.0    0.00    0.00       1         tValue::tValue(quState*, BaseType) [518]
                0.00    0.00       1/1508        tType::tType(BaseType) [148]
                0.00    0.00       1/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [105]
[519]    0.0    0.00    0.00       1         tValue::tValue(char const*) [519]
                0.00    0.00       1/1508        tType::tType(BaseType) [148]
                0.00    0.00       1/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       1/1           yylex() [105]
[520]    0.0    0.00    0.00       1         tValue::tValue(std::complex<double> const&) [520]
                0.00    0.00       1/1508        tType::tType(BaseType) [148]
                0.00    0.00       1/465         tType::operator=(BaseType) [164]
-----------------------------------------------
                0.00    0.00       1/1           yyparse() [106]
[521]    0.0    0.00    0.00       1         sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [521]
                0.00    0.00       1/1508        tType::tType(BaseType) [148]
                0.00    0.00       1/36          sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [264]
-----------------------------------------------
                0.00    0.00       1/1           SymTab::deltree(SymTable::entry*) [225]
[522]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [522]
                0.00    0.00       1/1           sProcDef::~sProcDef() [523]
-----------------------------------------------
                0.00    0.00       1/1           sProcDef::~sProcDef() [522]
[523]    0.0    0.00    0.00       1         sProcDef::~sProcDef() [523]
                0.00    0.00       1/36          sRoutDef::~sRoutDef() [265]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [452]
[524]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [524]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::pop_back() [572]
[525]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [525]
                0.00    0.00       1/684         tValue::~tValue() [159]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [553]
[526]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [526]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<tValue>::max_size() const [414]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [545]
[527]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::new_allocator() [527]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [546]
[528]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<tValue>::~new_allocator() [528]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [547]
[529]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [529]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [548]
[530]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [530]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [549]
[531]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [531]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [550]
[532]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [532]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [541]
[533]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [533]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const [440]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [544]
[534]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [534]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const [441]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[535]    0.0    0.00    0.00       1         __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [535]
                0.00    0.00       2/4           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const [402]
-----------------------------------------------
                0.00    0.00       1/1           sBinOp::typecheck(SymTable*, SymTable*) [329]
[536]    0.0    0.00    0.00       1         sOr::object() const [536]
-----------------------------------------------
                0.00    0.00       1/1           sExit::typecheck(SymTable*, SymTable*) [513]
[537]    0.0    0.00    0.00       1         tType::isString() const [537]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[538]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [538]
                0.00    0.00       4/4           std::vector<tValue, std::allocator<tValue> >::size() const [404]
                0.00    0.00       2/2           std::vector<tValue, std::allocator<tValue> >::max_size() const [446]
                0.00    0.00       1/1           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [579]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [541]
[539]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [539]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [433]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [541]
[540]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [540]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [433]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [59]
[541]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const [541]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const [539]
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const [540]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [533]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [544]
[542]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [542]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [434]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [544]
[543]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [543]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [434]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [59]
[544]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const [544]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const [542]
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const [543]
                0.00    0.00       1/1           bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [534]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [554]
[545]    0.0    0.00    0.00       1         std::allocator<tValue>::allocator() [545]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::new_allocator() [527]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [555]
[546]    0.0    0.00    0.00       1         std::allocator<tValue>::~allocator() [546]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::~new_allocator() [528]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [558]
[547]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::allocator() [547]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [529]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [559]
[548]    0.0    0.00    0.00       1         std::allocator<QuHeap::centry>::~allocator() [548]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [530]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [564]
[549]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::allocator() [549]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [531]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [565]
[550]    0.0    0.00    0.00       1         std::allocator<QuHeap::quentry>::~allocator() [550]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [532]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [580]
[551]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [551]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [582]
[552]    0.0    0.00    0.00       1         void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [552]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[553]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long) [553]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [526]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [556]
[554]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [554]
                0.00    0.00       1/1           std::allocator<tValue>::allocator() [545]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [557]
[555]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [555]
                0.00    0.00       1/1           std::allocator<tValue>::~allocator() [546]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::vector() [573]
[556]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [556]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl() [554]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::~vector() [574]
[557]    0.0    0.00    0.00       1         std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [557]
                0.00    0.00       1/2           std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long) [452]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl() [555]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [562]
[558]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [558]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::allocator() [547]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [563]
[559]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [559]
                0.00    0.00       1/1           std::allocator<QuHeap::centry>::~allocator() [548]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [563]
[560]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [560]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [576]
[561]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [561]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [575]
[562]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [562]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl() [558]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [576]
[563]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [563]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long) [560]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl() [559]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [568]
[564]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [564]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::allocator() [549]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [569]
[565]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [565]
                0.00    0.00       1/1           std::allocator<QuHeap::quentry>::~allocator() [550]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [569]
[566]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [566]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [578]
[567]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [567]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [577]
[568]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [568]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl() [564]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [578]
[569]    0.0    0.00    0.00       1         std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [569]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long) [566]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl() [565]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&) [125]
[570]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::end() [570]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [432]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&) [124]
[571]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::begin() [571]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [432]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [59]
[572]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::pop_back() [572]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [525]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [99]
[573]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::vector() [573]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base() [556]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [59]
[574]    0.0    0.00    0.00       1         std::vector<tValue, std::allocator<tValue> >::~vector() [574]
                0.00    0.00       1/4           std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() [405]
                0.00    0.00       1/1           std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base() [557]
                0.00    0.00       1/2           void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&) [459]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [99]
[575]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector() [575]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base() [562]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [59]
[576]    0.0    0.00    0.00       1         std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [576]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator() [561]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base() [563]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [581]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::QuHeap(int, int) [99]
[577]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector() [577]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base() [568]
-----------------------------------------------
                0.00    0.00       1/1           QuHeap::~QuHeap() [59]
[578]    0.0    0.00    0.00       1         std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [578]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator() [567]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [583]
                0.00    0.00       1/1           std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base() [569]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const [538]
[579]    0.0    0.00    0.00       1         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [579]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [581]
[580]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [580]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [551]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector() [576]
[581]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&) [581]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*) [580]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [583]
[582]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [582]
                0.00    0.00       1/1           void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [552]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector() [578]
[583]    0.0    0.00    0.00       1         void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&) [583]
                0.00    0.00       1/1           void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*) [582]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

 [460] _GLOBAL__sub_I_CONDDEF (syntax.cc) [28] bitvec::setbits(int, int, unsigned long) [69] bitvec::length() const
 [461] _GLOBAL__sub_I__Z10ext_matrixPK8sRoutDefPK8SymTablei (extern.cc) [25] bitvec::bitvec(int, unsigned long) [65] bitvec::testeq(bitvec const&) const
 [462] _GLOBAL__sub_I__Z6regstrRK6bitveci (dump.cc) [19] bitvec::bitvec(bitvec const&) [44] bitvec::getbits(int, int) const
 [463] _GLOBAL__sub_I__ZN4sDef6defineEP8SymTableS1_P6QuHeap (exec.cc) [18] bitvec::~bitvec() [92] bitvec::getword(int, int) const
 [464] _GLOBAL__sub_I__ZN5sExpr4evalEP8SymTableS1_P6QuHeap (eval.cc) [64] bitvec::operator&=(bitvec const&) [80] bitvec::getword() const
 [465] _GLOBAL__sub_I__ZN6SymTab7deltreeEPN8SymTable5entryE (symbols.cc) [16] bitvec::operator=(bitvec const&) [73] bitvec::testless(bitvec const&) const
 [466] _GLOBAL__sub_I__ZN7sVarDef9typecheckEP8SymTableS1_ (typcheck.cc) [90] bitvec::operator=(unsigned long) [347] bitvec::testzero() const
 [467] _GLOBAL__sub_I__ZNK6QuCond3strEv (cond.cc) [41] bitvec::operator|=(bitvec const&) [42] bitvec::hashfunct() const
 [468] _GLOBAL__sub_I__ZNK7sObject6prtstrEi (print.cc) [329] sBinOp::typecheck(SymTable*, SymTable*) [82] bitvec::operator[](int) const
 [469] _GLOBAL__sub_I_isErrorReported (error.cc) [305] sBinOp::sBinOp(sExpr*, sExpr*) [411] sEqual::object() const
 [470] _GLOBAL__sub_I_isStateModified (quheap.cc) [306] sBinOp::~sBinOp() [157] tValue::ord() const
 [471] _GLOBAL__sub_I_main (qcl.cc) [119] sConst::eval(SymTable*, SymTable*, QuHeap*) [120] tValue::conv(tType const&) const
 [472] _GLOBAL__sub_I_n_object (types.cc) [298] sConst::typecheck(SymTable*, SymTable*) [218] tValue::type() const
 [473] _GLOBAL__sub_I_noperators (operator.cc) [104] sConst::sConst(tValue const&) [437] tValue::isInt() const
 [474] _GLOBAL__sub_I_nstates (qustates.cc) [291] sConst::~sConst() [438] tValue::toInt() const
  [88] _GLOBAL__sub_I_nterms (terms.cc) [292] sConst::~sConst() [399] tValue::isExpr() const
 [475] _GLOBAL__sub_I_plotfile (plot.cc) [407] sEqual::sEqual(sExpr*, sExpr*) [340] tValue::isError() const
  [67] _GLOBAL__sub_I_qc_check_txt (bitvec.cc) [408] sEqual::~sEqual() [317] tValue::qustate() const
 [476] _GLOBAL__sub_I_qcl_options (options.cc) [409] sEqual::~sEqual() [158] tValue::basetype() const
 [477] _GLOBAL__sub_I_shell_depth (debug.cc) [156] tValue::delpointer() [282] tValue::isQuExpr() const
 [478] _GLOBAL__sub_I_yyObjList (parse.cc) [74] tValue::assign(tValue const&) [51] quState::mapbits() const
 [479] _GLOBAL__sub_I_yydebug (yacc.cc) [518] tValue::tValue(quState*, BaseType) [96] quState::mapmask() const
 [480] _GLOBAL__sub_I_yyleng (qcl.lex) [519] tValue::tValue(char const*) [149] sArgDef::object() const
 [366] yyScanFile(_IO_FILE*) [109] tValue::tValue(quState&, BaseType) [439] sConcat::object() const
 [367] openqclfile(std::string) [76] tValue::tValue(tValue const&) [400] sLength::object() const
 [312] yy_flush_buffer(yy_buffer_state*) [425] tValue::tValue(double) [289] sObject::inFunctDef() const
 [481] yy_create_buffer(_IO_FILE*, int) [426] tValue::tValue(int) [318] sObject::inQuFunDef() const
 [482] initialize_readline() [326] tValue::tValue(long)  [355] sObject::isConstDef() const
 [483] __static_initialization_and_destruction_0(int, int) (types.cc) [520] tValue::tValue(std::complex<double> const&) [175] sObject::isFunctDef() const
 [484] __static_initialization_and_destruction_0(int, int) (syntax.cc) [172] tValue::tValue() [270] sObject::isQuFunDef() const
 [485] __static_initialization_and_destruction_0(int, int) (typcheck.cc) [159] tValue::~tValue() [168] sObject::isValueDef() const
 [486] __static_initialization_and_destruction_0(int, int) (symbols.cc) [101] tValue::operator=(tValue const&) [187] sObject::def() const
 [487] __static_initialization_and_destruction_0(int, int) (error.cc) [427] objlist::objlist() [170] sObject::isDef() const
 [488] __static_initialization_and_destruction_0(int, int) (qcl.lex) [128] quState::newclone() [185] sObject::isSet(ObjFlag) const
 [489] __static_initialization_and_destruction_0(int, int) (yacc.cc) [66] quState::quState(int) [401] sObject::isStmt() const
 [490] __static_initialization_and_destruction_0(int, int) (print.cc) [208] quState::~quState() [152] sObject::parent() const
 [491] __static_initialization_and_destruction_0(int, int) (quheap.cc) [179] sArgDef::sArgDef(tType const&, std::string*) [296] sObject::inQuDef() const
 [492] __static_initialization_and_destruction_0(int, int) (extern.cc) [180] sArgDef::~sArgDef() [412] sObject::isLocal() const
 [493] __static_initialization_and_destruction_0(int, int) (eval.cc) [181] sArgDef::~sArgDef() [297] sObject::isQuDef() const
 [494] __static_initialization_and_destruction_0(int, int) (exec.cc) [428] sConcat::sConcat(sExpr*, sExpr*) [413] sObject::isBennet() const
 [495] __static_initialization_and_destruction_0(int, int) (parse.cc) [429] sConcat::~sConcat() [217] sObject::isExtern() const
 [496] __static_initialization_and_destruction_0(int, int) (options.cc) [430] sConcat::~sConcat() [348] sObject::isGlobal() const
 [497] __static_initialization_and_destruction_0(int, int) (debug.cc) [388] sLength::sLength(sExpr*) [263] sObject::isCondDef() const
 [498] __static_initialization_and_destruction_0(int, int) (cond.cc) [389] sLength::~sLength() [248] sObject::isInclude() const
 [499] __static_initialization_and_destruction_0(int, int) (dump.cc) [390] sLength::~sLength() [319] sObject::isProcDef() const
 [500] __static_initialization_and_destruction_0(int, int) (plot.cc) [186] sObject::setFlag(ObjFlag, int) [283] sObject::isQuOpDef() const
 [501] __static_initialization_and_destruction_0(int, int) (qcl.cc) [320] sObject::isSetRec(ObjFlag) [184] sObject::isRoutDef() const
 [502] __static_initialization_and_destruction_0(int, int) (bitvec.cc) [165] sObject::setParent(sObject*) [196] sVarDef::object() const
 [503] __static_initialization_and_destruction_0(int, int) (terms.cc) [182] sObject::typecheck(SymTable*, SymTable*) [10] opMatrix::addterms(terminfo const&) const
 [504] __static_initialization_and_destruction_0(int, int) (qustates.cc) [162] sObject::sObject(unsigned int) [266] sDefList::object() const
 [505] __static_initialization_and_destruction_0(int, int) (operator.cc) [163] sObject::~sObject() [224] sProcDef::object() const
 [341] zero(bitvec const&)    [75] sVarDef::define(SymTable*, SymTable*, QuHeap*) [167] sQuOpDef::object() const
 [415] irqOn()               [116] sVarDef::typecheck(SymTable*, SymTable*) [32] termlist::hashfunct1(bitvec const&) const
 [105] yylex()               [343] sVarDef::sVarDef(tType const&, std::string*, sExpr*, sExpr*) [112] termlist::hashfunct2(bitvec const&) const
 [416] duallog(int)          [353] sVarDef::~sVarDef()   [223] termlist::nterms() const
   [5] ext_bit(sRoutDef const*, SymTable const*, int) [354] sVarDef::~sVarDef() [70] termlist::operator[](int) const
   [2] qclfile(std::string, SymTable*, SymTable*, QuHeap*, sObject*, int) [198] SymTable::SymTable() [414] __gnu_cxx::new_allocator<tValue>::max_size() const
   [3] qcllist(SymTable*, SymTable*, QuHeap*, sObject*, int) [199] SymTable::~SymTable() [249] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::max_size() const
 [406] yyalloc(unsigned long) [391] opMatrix::opMatrix(int) [402] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [106] yyparse()             [132] opMatrix::~opMatrix() [403] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::base() const
 [113] parseobj()            [117] sDefList::typecheck(SymTable*, SymTable*) [440] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::base() const
 [506] parseopt(int, char**) [241] sDefList::sDefList()  [441] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::base() const
 [507] qc_srand(long)        [242] sDefList::~sDefList() [227] sConstDef::object() const
 [114] chksyntax(_IO_FILE*)  [243] sDefList::~sDefList() [171] sQuFunDef::object() const
 [417] yyCleanUp()           [521] sProcDef::sProcDef(std::string*, sDefList*, sDefList*, sStmtList*, int) [215] sStmtList::object() const
 [334] yyrestart(_IO_FILE*)  [522] sProcDef::~sProcDef() [202] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Tp_allocator() const
 [332] yy_init_buffer(yy_buffer_state*, _IO_FILE*) (lex.cc) [523] sProcDef::~sProcDef() [203] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_Node_allocator() const
 [331] yy_get_next_buffer() (lex.cc) [299] sQuOpDef::sQuOpDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [442] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator() const
 [275] yy_load_buffer_state() (lex.cc) [300] sQuOpDef::~sQuOpDef() [250] std::_List_iterator<sObject*>::operator*() const
 [342] yy_get_previous_state() (lex.cc) [301] sQuOpDef::~sQuOpDef() [154] std::_List_const_iterator<sObject*>::operator!=(std::_List_const_iterator<sObject*> const&) const
 [508] yyensure_buffer_stack() (lex.cc) [226] sRoutDef::args() [232] std::list<sObject*, std::allocator<sObject*> >::end() const
 [335] SymTabComb::SymTabComb(SymTable*, SymTable*) [103] sRoutDef::define(SymTable*, SymTable*, QuHeap*) [233] std::list<sObject*, std::allocator<sObject*> >::size() const
 [336] SymTabComb::~SymTabComb() [8] sRoutDef::invoke(SymTable*, SymTable*, QuHeap*, int) [234] std::list<sObject*, std::allocator<sObject*> >::begin() const
 [337] SymTabComb::~SymTabComb() [83] sRoutDef::typecheck(SymTable*, SymTable*) [538] std::vector<tValue, std::allocator<tValue> >::_M_check_len(unsigned long, char const*) const
 [368] opOperator::opOperator(int) [264] sRoutDef::sRoutDef(tType const&, std::string*, sDefList*, sDefList*, sStmtList*, int, int) [443] std::vector<tValue, std::allocator<tValue> >::end() const
 [369] opOperator::~opOperator() [265] sRoutDef::~sRoutDef() [404] std::vector<tValue, std::allocator<tValue> >::size() const
  [11] quSubState::opadd(bitvec const&, std::complex<double> const&) [22] terminfo::terminfo(terminfo const&) [444] std::vector<tValue, std::allocator<tValue> >::begin() const
 [221] quSubState::opend()    [79] terminfo::terminfo()  [445] std::vector<tValue, std::allocator<tValue> >::empty() const
  [50] quSubState::opbegin()  [40] terminfo::~terminfo() [446] std::vector<tValue, std::allocator<tValue> >::max_size() const
  [68] quSubState::quSubState(int) [107] termlist::add(term const&) [539] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::end() const
 [209] quSubState::~quSubState() [14] termlist::add(bitvec const&, std::complex<double> const&) [540] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::begin() const
 [370] sListFunct::typecheck(SymTable*, SymTable*) [53] termlist::clear() [541] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::empty() const
 [371] sListFunct::sListFunct(ObjType, sExprList*) [60] termlist::dellist() [542] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::end() const
 [372] sListFunct::~sListFunct() [95] termlist::newlist() [543] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::begin() const
 [373] sListFunct::~sListFunct() [102] termlist::termlist(int, int) [544] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::empty() const
 [374] sSubscript::typecheck(SymTable*, SymTable*) [61] termlist::~termlist() [43] std::complex<double>::imag() const
 [375] sSubscript::sSubscript(sVar*, sExprList*) [71] termlist::operator=(termlist const&) [45] std::complex<double>::real() const
 [376] sSubscript::~sSubscript() [524] __gnu_cxx::new_allocator<tValue>::deallocate(tValue*, unsigned long) [545] std::allocator<tValue>::allocator()
 [377] sSubscript::~sSubscript() [525] __gnu_cxx::new_allocator<tValue>::destroy(tValue*) [546] std::allocator<tValue>::~allocator()
 [127] quBaseState::newsubstring(int, int) [526] __gnu_cxx::new_allocator<tValue>::allocate(unsigned long, void const*) [547] std::allocator<QuHeap::centry>::allocator()
  [12] quBaseState::opadd(bitvec const&, std::complex<double> const&) [123] __gnu_cxx::new_allocator<tValue>::construct(tValue*, tValue const&) [548] std::allocator<QuHeap::centry>::~allocator()
 [220] quBaseState::opend()  [527] __gnu_cxx::new_allocator<tValue>::new_allocator() [549] std::allocator<QuHeap::quentry>::allocator()
 [110] quBaseState::reset(bitvec const&) [528] __gnu_cxx::new_allocator<tValue>::~new_allocator() [550] std::allocator<QuHeap::quentry>::~allocator()
  [54] quBaseState::opbegin() [529] __gnu_cxx::new_allocator<QuHeap::centry>::new_allocator() [204] std::allocator<sObject*>::allocator<std::_List_node<sObject*> >(std::allocator<std::_List_node<sObject*> > const&)
 [100] quBaseState::quBaseState(int, int) [530] __gnu_cxx::new_allocator<QuHeap::centry>::~new_allocator() [205] std::allocator<sObject*>::~allocator()
  [62] quBaseState::~quBaseState() [531] __gnu_cxx::new_allocator<QuHeap::quentry>::new_allocator() [447] std::allocator<std::_List_node<sObject*> >::allocator()
  [63] quBaseState::~quBaseState() [532] __gnu_cxx::new_allocator<QuHeap::quentry>::~new_allocator() [448] std::_List_base<sObject*, std::allocator<sObject*> >::_List_impl::_List_impl()
  [87] quSubString::newsubstring(int, int) [244] __gnu_cxx::new_allocator<sObject*>::destroy(sObject**) [251] std::_List_base<sObject*, std::allocator<sObject*> >::_M_get_node()
  [49] quSubString::quSubString(int, int, quState&) [245] __gnu_cxx::new_allocator<sObject*>::construct(sObject**, sObject* const&) [252] std::_List_base<sObject*, std::allocator<sObject*> >::_M_put_node(std::_List_node<sObject*>*)
 [210] quSubString::~quSubString() [200] __gnu_cxx::new_allocator<sObject*>::new_allocator() [449] std::_List_base<sObject*, std::allocator<sObject*> >::_M_init()
 [211] quSubString::~quSubString() [201] __gnu_cxx::new_allocator<sObject*>::~new_allocator() [450] std::_List_base<sObject*, std::allocator<sObject*> >::_List_base()
 [378] opElementary::opElementary(int) [246] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::deallocate(std::_List_node<sObject*>*, unsigned long) [147] std::char_traits<char>::compare(char const*, char const*, unsigned long)
 [379] opElementary::~opElementary() [247] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::allocate(unsigned long, void const*) [451] void std::_Destroy_aux<false>::__destroy<tValue*>(tValue*, tValue*)
 [349] sIf::typecheck(SymTable*, SymTable*) [431] __gnu_cxx::new_allocator<std::_List_node<sObject*> >::new_allocator() [551] void std::_Destroy_aux<false>::__destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [350] sIf::sIf(sExpr*, sStmtList*, sStmtList*) [432] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue* const&) [552] void std::_Destroy_aux<true>::__destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [351] sIf::~sIf()           [392] __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > >::__normal_iterator(tValue const* const&) [553] std::_Vector_base<tValue, std::allocator<tValue> >::_M_allocate(unsigned long)
 [352] sIf::~sIf()           [433] __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >::__normal_iterator(QuHeap::centry const* const&) [554] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::_Vector_impl()
 [509] sOr::sOr(sExpr*, sExpr*) [434] __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >::__normal_iterator(QuHeap::quentry const* const&) [555] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_impl::~_Vector_impl()
 [510] sOr::~sOr()           [435] bool __gnu_cxx::operator==<tValue const*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue const*, std::vector<tValue, std::allocator<tValue> > > const&) [452] std::_Vector_base<tValue, std::allocator<tValue> >::_M_deallocate(tValue*, unsigned long)
 [511] sOr::~sOr()           [533] bool __gnu_cxx::operator==<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > >(__gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::centry const*, std::vector<QuHeap::centry, std::allocator<QuHeap::centry> > > const&) [405] std::_Vector_base<tValue, std::allocator<tValue> >::_M_get_Tp_allocator()
 [360] sDef::settype(tType const&) [534] bool __gnu_cxx::operator==<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > >(__gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&, __gnu_cxx::__normal_iterator<QuHeap::quentry const*, std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> > > const&) [556] std::_Vector_base<tValue, std::allocator<tValue> >::_Vector_base()
 [512] sDef::basetype()      [535] __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >::difference_type __gnu_cxx::operator-<tValue*, std::vector<tValue, std::allocator<tValue> > >(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&, __gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > > const&) [557] std::_Vector_base<tValue, std::allocator<tValue> >::~_Vector_base()
 [173] sDef::sDef(tType const&, std::string*) [115] sConstDef::define(SymTable*, SymTable*, QuHeap*) [558] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::_Vector_impl()
 [174] sDef::~sDef()         [410] sConstDef::typecheck(SymTable*, SymTable*) [559] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_impl::~_Vector_impl()
 [122] sFor::typecheck(SymTable*, SymTable*) [361] sConstDef::sConstDef(std::string*, sExpr*) [560] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_deallocate(QuHeap::centry*, unsigned long)
 [418] sFor::sFor(sVar*, sExpr*, sExpr*, sStmtList*, sExpr*) [362] sConstDef::~sConstDef() [561] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_M_get_Tp_allocator()
 [419] sFor::~sFor()         [363] sConstDef::~sConstDef() [562] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::_Vector_base()
 [420] sFor::~sFor()         [344] sExprList::typecheck(SymTable*, SymTable*) [563] std::_Vector_base<QuHeap::centry, std::allocator<QuHeap::centry> >::~_Vector_base()
 [421] sSub::sSub(sExpr*, sExpr*) [278] sExprList::sExprList() [564] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::_Vector_impl()
 [422] sSub::~sSub()         [279] sExprList::~sExprList() [565] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_impl::~_Vector_impl()
 [423] sSub::~sSub()         [280] sExprList::~sExprList() [566] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_deallocate(QuHeap::quentry*, unsigned long)
 [111] sVar::eval(SymTable*, SymTable*, QuHeap*) [321] sQuFunDef::sQuFunDef(std::string*, sDefList*, sDefList*, sStmtList*, int, int) [567] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_M_get_Tp_allocator()
 [228] sVar::typecheck(SymTable*, SymTable*) [322] sQuFunDef::~sQuFunDef() [568] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::_Vector_base()
 [229] sVar::sVar(std::string*) [323] sQuFunDef::~sQuFunDef() [569] std::_Vector_base<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~_Vector_base()
 [230] sVar::~sVar()         [307] sStmtList::typecheck(SymTable*, SymTable*) [191] std::_List_iterator<sObject*>::_List_iterator(std::__detail::_List_node_base*)
 [231] sVar::~sVar()         [308] sStmtList::sStmtList() [197] std::_List_const_iterator<sObject*>::_List_const_iterator(std::__detail::_List_node_base const*)
 [129] term::set(bitvec const&, std::complex<double> const&) [309] sStmtList::~sStmtList() [155] std::_List_const_iterator<sObject*>::operator++()
  [38] term::setampl(std::complex<double> const&) [310] sStmtList::~sStmtList() [453] tValue* std::__uninitialized_copy<false>::__uninit_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
  [27] term::setvect(bitvec const&) [271] SymTabComb::getDef(std::string const&) const [253] std::list<sObject*, std::allocator<sObject*> >::_M_create_node(sObject* const&)
  [94] term::term()          [281] quSubState::isbasestate() const [254] std::list<sObject*, std::allocator<sObject*> >::end()
  [26] term::term(term const&) [34] quSubState::baseterm(int) const [206] std::list<sObject*, std::allocator<sObject*> >::begin()
  [48] term::~term()          [81] quSubState::baseterms() const [255] std::list<sObject*, std::allocator<sObject*> >::front()
  [31] term::operator=(term const&) [393] sListFunct::object() const [256] std::list<sObject*, std::allocator<sObject*> >::_M_erase(std::_List_iterator<sObject*>)
 [126] opBit::opBit(std::complex<double>, std::complex<double>, std::complex<double>, std::complex<double>, double) [394] sSubscript::nargs() const [257] std::list<sObject*, std::allocator<sObject*> >::_M_insert(std::_List_iterator<sObject*>, sObject* const&)
 [130] opBit::~opBit()       [212] quBaseState::isbasestate() const [258] std::list<sObject*, std::allocator<sObject*> >::pop_front()
 [131] opBit::~opBit()        [36] quBaseState::map(bitvec const&) const [259] std::list<sObject*, std::allocator<sObject*> >::push_back(sObject* const&)
   [4] sCall::exec(SymTable*, SymTable*, QuHeap*) [37] quBaseState::unmap(bitvec const&) const [454] std::list<sObject*, std::allocator<sObject*> >::list()
 [313] sCall::typecheck(SymTable*, SymTable*) [136] quBaseState::basebits() const [124] std::vector<tValue, std::allocator<tValue> >::_M_insert_aux(__gnu_cxx::__normal_iterator<tValue*, std::vector<tValue, std::allocator<tValue> > >, tValue const&)
 [314] sCall::sCall(std::string*, sExprList*, int) [56] quBaseState::baseterm(int) const [570] std::vector<tValue, std::allocator<tValue> >::end()
 [315] sCall::~sCall()       [222] quBaseState::baseterms() const [571] std::vector<tValue, std::allocator<tValue> >::begin()
 [316] sCall::~sCall()        [21] quSubString::map(bitvec const&) const [572] std::vector<tValue, std::allocator<tValue> >::pop_back()
 [513] sExit::typecheck(SymTable*, SymTable*) [15] quSubString::unmap(bitvec const&) const [125] std::vector<tValue, std::allocator<tValue> >::push_back(tValue const&)
 [514] sExit::sExit(sExpr*)   [46] quSubString::mapoffs() const [573] std::vector<tValue, std::allocator<tValue> >::vector()
 [515] sExit::~sExit()         [9] opElementary::apply(quState&) const [574] std::vector<tValue, std::allocator<tValue> >::~vector()
 [516] sExit::~sExit()       [293] sIf::object() const   [575] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::vector()
 [193] sExpr::type()         [536] sOr::object() const   [576] std::vector<QuHeap::centry, std::allocator<QuHeap::centry> >::~vector()
 [192] sExpr::settype(tType const&) [143] sDef::id() const [577] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::vector()
 [380] sExpr::basetype()     [166] sDef::type() const    [578] std::vector<QuHeap::quentry, std::allocator<QuHeap::quentry> >::~vector()
 [290] sExpr::sExpr(tType const&) [327] sFor::object() const [84] std::complex<double>::imag()
 [216] sExpr::sExpr()        [436] sSub::object() const   [85] std::complex<double>::real()
 [195] sExpr::~sExpr()       [219] sVar::id() const       [55] std::complex<double>::complex(double, double)
 [381] sLess::sLess(sExpr*, sExpr*) [52] term::ampl() const [93] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
 [382] sLess::~sLess()        [35] term::vect() const    [324] std::complex<double>::operator*=(double)
 [383] sLess::~sLess()        [72] term::nbits() const    [24] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
 [177] sList<sDef>::append(sDef*) [294] sCall::id() const [33] std::complex<double>& std::complex<double>::operator+=<double>(std::complex<double> const&)
 [239] sList<sDef>::sList()  [286] sCall::object() const  [97] std::_Rb_tree<bitvec, bitvec, std::_Identity<bitvec>, std::less<bitvec>, std::allocator<bitvec> >::_Rb_tree(std::_Rb_tree<bitvec, bitvec, std::_Identity<bitvec>, std::less<bitvec>, std::allocator<bitvec> > const&)
 [240] sList<sDef>::~sList() [395] sLess::object() const [235] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::__distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>, std::input_iterator_tag)
 [268] sList<sExpr>::append(sExpr*) [160] sList<sDef>::next(void*&) const [207] sObject** std::__addressof<sObject*>(sObject*&)
 [276] sList<sExpr>::sList() [194] sList<sDef>::first(void*&) const [455] tValue* std::uninitialized_copy<tValue*, tValue*>(tValue*, tValue*, tValue*)
 [277] sList<sExpr>::~sList() [345] sList<sExpr>::n() const [236] std::iterator_traits<std::_List_const_iterator<sObject*> >::iterator_category std::__iterator_category<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*> const&)
 [285] sList<sStmt>::append(sStmt*) [260] sList<sExpr>::next(void*&) const [456] tValue* std::__uninitialized_copy_a<tValue*, tValue*, tValue>(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [303] sList<sStmt>::sList() [261] sList<sExpr>::first(void*&) const [457] tValue* std::__uninitialized_move_a<tValue*, tValue*, std::allocator<tValue> >(tValue*, tValue*, tValue*, std::allocator<tValue>&)
 [304] sList<sStmt>::~sList() [287] sList<sStmt>::next(void*&) const [579] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [356] sMult::sMult(sExpr*, sExpr*) [311] sList<sStmt>::first(void*&) const [98] std::pow(double, int)
 [357] sMult::~sMult()       [338] sMult::object() const [458] void std::_Destroy<tValue*>(tValue*, tValue*)
 [358] sMult::~sMult()       [396] sStmt::isInv() const  [459] void std::_Destroy<tValue*, tValue>(tValue*, tValue*, std::allocator<tValue>&)
 [273] sStmt::sStmt(int)     [150] tType::ord() const    [580] void std::_Destroy<QuHeap::centry*>(QuHeap::centry*, QuHeap::centry*)
 [274] sStmt::~sStmt()       [295] tType::isInt() const  [581] void std::_Destroy<QuHeap::centry*, QuHeap::centry>(QuHeap::centry*, QuHeap::centry*, std::allocator<QuHeap::centry>&)
 [384] sUnOp::typecheck(SymTable*, SymTable*) [328] tType::isCond() const [582] void std::_Destroy<QuHeap::quentry*>(QuHeap::quentry*, QuHeap::quentry*)
 [385] sUnOp::sUnOp(sExpr*)  [284] tType::isConv(tType const&) const [583] void std::_Destroy<QuHeap::quentry*, QuHeap::quentry>(QuHeap::quentry*, QuHeap::quentry*, std::allocator<QuHeap::quentry>&)
 [386] sUnOp::~sUnOp()       [397] tType::isExpr() const [237] std::iterator_traits<std::_List_const_iterator<sObject*> >::difference_type std::distance<std::_List_const_iterator<sObject*> >(std::_List_const_iterator<sObject*>, std::_List_const_iterator<sObject*>)
 [148] tType::tType(BaseType) [339] tType::isError() const [145] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [424] tType::tType(BaseType, int) [183] tType::isQuReg() const [364] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [161] tType::tType(tType const&) [151] tType::basetype() const [144] bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [164] tType::operator=(BaseType) [269] tType::isNumber() const [146] bool std::operator< <char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [153] tType::operator=(tType const&) [267] tType::isQuCond() const [325] std::complex<double> std::operator*<double>(std::complex<double> const&, double const&)
   [6] QuHeap::call(sRoutDef*, SymTable*, SymTable*, int, int) [189] tType::isQuExpr() const [20] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
 [517] QuHeap::init()        [537] tType::isString() const [365] bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [108] QuHeap::addReg(quState*) [288] tType::isBoolean() const [333] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  [77] QuHeap::qualloc(int, BaseType) [302] tType::isDefined() const [359] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
   [7] QuHeap::callentry(QuHeap::quentry const&, SymTable*) [346] tType::isOrdered() const [29] std::complex<double> std::operator+<double>(std::complex<double> const&, std::complex<double> const&)
  [99] QuHeap::QuHeap(int, int) [272] tType::isQuConst() const [39] operator&(bitvec const&, bitvec const&)
  [59] QuHeap::~QuHeap()     [262] tType::operator==(BaseType) const [86] operator~(bitvec const&)
  [78] SymTab::put(sDef*, tValue const&) [330] tType::operator==(tType const&) const [57] operator==(bitvec const&, bitvec const&)
 [225] SymTab::deltree(SymTable::entry*) [134] QuHeap::cond() const [238] operator new(unsigned long, void*)
 [176] SymTab::putentry(SymTable::entry*, SymTable::entry*) [133] QuHeap::cmask() const [17] operator|(bitvec const&, bitvec const&)
 [213] SymTab::SymTab(int)   [398] QuHeap::nBits() const [137] <cycle 1>
 [387] SymTab::~SymTab()     [135] QuHeap::ncond() const [138] <cycle 2>
 [214] SymTab::~SymTab()     [188] SymTab::getDef(std::string const&) const [121] <cycle 3>
 [190] bitvec::qnot()        [178] SymTab::getRef(std::string const&, ObjType*) const [13] <cycle 4>
  [89] bitvec::setbit(int, int) [118] SymTab::getVal(std::string const&, ObjType*) const [47] <cycle 5>
  [30] bitvec::setlen(int)   [169] SymTab::getentry(SymTable::entry*, std::string const&) const
  [23] bitvec::setbits(int, bitvec const&) [91] bitvec::nset() const
